{"id": "CVE-2000-1199", "sourceIdentifier": "cve@mitre.org", "published": "2001-08-31T04:00:00.000", "lastModified": "2017-12-19T02:29:14.723", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "PostgreSQL stores usernames and passwords in plaintext in (1) pg_shadow and (2) pg_pwd, which allows attackers with sufficient privileges to gain access to databases."}], "vendorComments": [{"organization": "Red Hat", "comment": "Red Hat Enterprise Linux 5 is not vulnerable to this issue as it contains a backported patch.", "lastModified": "2007-03-14T00:00:00"}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.6}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.9, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-Other"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:postgresql:postgresql:6.3.2:*:*:*:*:*:*:*", "matchCriteriaId": "FF7D1F6F-044C-478D-991D-D70281FD7C87"}, {"vulnerable": true, "criteria": "cpe:2.3:a:postgresql:postgresql:6.5.3:*:*:*:*:*:*:*", "matchCriteriaId": "6EB98484-1234-4BA2-ACB0-28F4BE684D92"}]}]}], "references": [{"url": "http://marc.info/?l=bugtraq&m=95659987018649&w=2", "source": "cve@mitre.org"}, {"url": "http://www.securityfocus.com/bid/1139", "source": "cve@mitre.org", "tags": ["Exploit", "Vendor Advisory"]}, {"url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/4364", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1068", "comment": "CVE-2000-1199 - The vulnerability allows attackers with sufficient privileges to gain access to databases, potentially leading to unauthorized access. This is related to the 'Unix Privesc' technique, where an attacker exploits a vulnerability in a system to gain elevated privileges."}, {"techniqueID": "T1078", "comment": "CVE-2000-1199 - The vulnerability also allows unauthorized users to access sensitive data, such as usernames and passwords. This is related to the 'Exploitation of Public-Facing Apps' technique, where an attacker exploits a vulnerable application to gain access to sensitive data."}, {"techniqueID": "T1562", "comment": "CVE-2000-1199 - The vulnerability can also be used to gain persistence on the system, potentially allowing an attacker to maintain access over time. This is related to the 'Remote System Discovery' technique, where an attacker uses a vulnerability to discover and access remote systems."}], "stix_bundle": {"objects": [{"type": "attack-pattern", "id": "attack-pattern--1", "name": "CVE-2000-1199 Postgres SQL Injection", "description": "An attacker uses CVE-2000-1199 Postgres SQL Injection to gain unauthorized access to databases", "data_marking": "public", "tooling": "MITRE ATT&CK"}, {"type": "vulnerability", "id": "vulnerability--1", "name": "PostgreSQL Unvalidated User Input", "description": "PostgreSQL Unvalidated User Input", "data_marking": "public"}, {"type": "indicator", "id": "indicator--1", "name": "PostgreSQL Unvalidated User Input", "description": "SMTP Server Configuration should allow for unvalidated user input", "data_marking": "public"}, {"type": "course-of-action", "id": "course-of-action--1", "name": "PostgreSQL Unvalidated User Input Mitigated", "description": "PostgreSQL Unvalidated User Input Mitigated", "data_marking": "public"}], "relationships": [{"id": "r1", "type": "caused-by", "source_ref": "attack-pattern--1", "target_ref": "vulnerability--1"}, {"id": "r2", "type": "indicated-by", "source_ref": "indicator--1", "target_ref": "vulnerability--1"}, {"id": "r3", "type": "mitigated-by", "source_ref": "course-of-action--1", "target_ref": "attack-pattern--1"}]}, "technical_analysis": {"Introduction": "PostgreSQL Unvalidated User Input allows attackers to gain unauthorized access to databases by injecting malicious SQL code.", "Impact and Scope": "The vulnerability allows complete read and write access to the PostgreSQL database, enabling an attacker to extract sensitive data or make unauthorized changes.", "Related MITRE ATT&CK Techniques": "T1068, T1078, T1562", "Technical Details": "The vulnerability exists due to unvalidated user input, allowing attackers to inject malicious SQL code and gain access to sensitive data.", "Detection": "Detection can be done by monitoring PostgreSQL database logs for unusual activity or by using vulnerability scanning tools.", "Mitigation": "Mitigation strategies include disabling unvalidated user input, using proper input validation and sanitization, and implementing access controls.", "Conclusion": "The PostgreSQL Unvalidated User Input vulnerability is a critical threat to database security and requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "The PostgreSQL Unvalidated User Input vulnerability is a significant threat to database security and can have severe business consequences.", "Business Impact": "The vulnerability can result in unauthorized data theft, modification, or destruction, leading to financial losses and reputational damage.", "Technical Impact": "The vulnerability allows attackers to access sensitive data and gain elevated privileges, enabling them to make unauthorized changes to the database or access other parts of the system.", "Mitigation Strategies": "Disabling unvalidated user input, implementing proper input validation and sanitization, and using access controls can mitigate the vulnerability.", "Recommendations": "Immediate action should be taken to mitigate the vulnerability, including updating PostgreSQL to the latest version and implementing secure coding practices.", "Conclusions": "The PostgreSQL Unvalidated User Input vulnerability is a serious threat that requires immediate attention and mitigation to protect sensitive data and prevent business disruptions."}}