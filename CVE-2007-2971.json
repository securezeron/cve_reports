{"id": "CVE-2007-2971", "sourceIdentifier": "cve@mitre.org", "published": "2007-06-01T01:30:00.000", "lastModified": "2017-10-19T01:30:09.567", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "SQL injection vulnerability in getnewsitem.php in gCards 1.46 and earlier allows remote attackers to execute arbitrary SQL commands via the newsid parameter."}, {"lang": "es", "value": "Vulnerabilidad de inyecci\u00f3n SQL en el getnewsitem.php del gCards 1.46 y versiones anteriores permite a atacantes remotos ejecutar comandos SQL de su elecci\u00f3n a trav\u00e9s del par\u00e1metro newsid."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-Other"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:greg_neustaetter:gcards:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.46", "matchCriteriaId": "921C678A-D83C-4B5F-BEA2-ABBAACC8C0A3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:greg_neustaetter:gcards:1.13:*:*:*:*:*:*:*", "matchCriteriaId": "74ADA5F4-C0C8-4FF6-866C-27D69E3795B3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:greg_neustaetter:gcards:1.43:*:*:*:*:*:*:*", "matchCriteriaId": "01DDF67C-FEA8-45CF-A97A-79EDB5D70E18"}, {"vulnerable": true, "criteria": "cpe:2.3:a:greg_neustaetter:gcards:1.44:*:*:*:*:*:*:*", "matchCriteriaId": "9AE23487-8AA4-4B69-88E1-630DED9013FA"}, {"vulnerable": true, "criteria": "cpe:2.3:a:greg_neustaetter:gcards:1.45:*:*:*:*:*:*:*", "matchCriteriaId": "2269FE3D-837A-45C5-A3CF-1B30CB0E34F3"}]}]}], "references": [{"url": "http://marc.info/?l=bugtraq&m=120880332905213&w=2", "source": "cve@mitre.org"}, {"url": "http://marc.info/?l=bugtraq&m=120881500629066&w=2", "source": "cve@mitre.org"}, {"url": "http://osvdb.org/36317", "source": "cve@mitre.org"}, {"url": "http://secunia.com/advisories/25452", "source": "cve@mitre.org", "tags": ["Exploit", "Vendor Advisory"]}, {"url": "http://www.securityfocus.com/bid/24175", "source": "cve@mitre.org", "tags": ["Exploit"]}, {"url": "http://www.vupen.com/english/advisories/2007/1961", "source": "cve@mitre.org"}, {"url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/34529", "source": "cve@mitre.org"}, {"url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/41927", "source": "cve@mitre.org"}, {"url": "https://www.exploit-db.com/exploits/3988", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2007-2971 - SQL Injection via Unsanitized User Input, which can be mitigated by using prepared statements and validating user input."}, {"techniqueID": "T1190", "comment": "CVE-2007-2971 - Web Application Weakness, which can be mitigated by following secure coding practices and regular code reviews."}, {"techniqueID": "T1027", "comment": "CVE-2007-2971 - Data Stolen Through an Unauthorized Vector, which can be mitigated by implementing data encryption and access controls."}], "stix_bundle": {"stix": {"bundle": {"_bundle": {"id": "https://example.com/cve-2007-2971", "type": "Bundle", "created_by_ref": "https://example.com/username", "created": "2023-02-20T14:30:00.000Z", "modified": "2023-02-20T14:30:00.000Z", "objects": [{"id": "https://example.com/cve-2007-2971", "type": "Vulnerability", "name": "CVE-2007-2971 - SQL Injection", "description": "SQL injection vulnerability in getnewsitem.php in gCards 1.46 and earlier allows remote attackers to execute arbitrary SQL commands via the newsid parameter.", "risk_level": "High", "severity": "High", "exploit_allowance": "High", "exploitability_score": 10.0, "impact_score": 6.4, "cvss_score": 7.5, "references": [{"id": "https://example.com/references/cve-2007-2971", "type": "Reference", "title": "CVE-2007-2971 - SQL Injection", "description": "SQL injection vulnerability in getnewsitem.php in gCards 1.46 and earlier allows remote attackers to execute arbitrary SQL commands via the newsid parameter.", "source": "cve@mitre.org", "url": "http://marc.info/?l=bugtraq&m=120880332905213&w=2"}], "attributed_relationships": [{"id": "https://example.com/attributed-relationship", "type": "Attributed-Relationship", "target_ref": "https://example.com/cve-2007-2971", "relationship_type": "Related To", "source_ref": "https://example.com/technique/t1059", "label": "Related Technique"}]}, {"id": "https://example.com/technique/t1059", "type": "TTP", "name": "T1059 - SQL Injection via Unsanitized User Input", "description": "SQL injection via unsanitized user input allows an attacker to execute arbitrary SQL commands.", "goal_ref": "https://example.com/attack-pattern/attack-pattern-1", "observed_data": "HTTP GET request to /getnewsitem.php?newsid=< injected_data >", "course_of_action": [{"id": "https://example.com/course-of-action/defend-against-t1059", "type": "Course Of Action", "name": "Defend Against T1059", "description": "Use prepared statements and validate user input to prevent SQL injection attacks.", "technique_ref": "https://example.com/technique/t1059", "label": "Defend Against T1059"}]}]}}}}, "technical_analysis": {"Introduction": "The CVE-2007-2971 vulnerability allows an attacker to execute arbitrary SQL commands via the newsid parameter in the getnewsitem.php file.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5 and allows remote attackers to execute arbitrary SQL commands, which can be used to steal sensitive data or take control of the system.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to MITRE ATT&CK T1059 - SQL Injection via Unsanitized User Input and T1190 - Web Application Weakness.", "Technical Details": "The vulnerability is caused by the unsanitized user input in the newsid parameter, which allows an attacker to inject malicious SQL code.", "Detection": "Detection of the vulnerability can be done by analyzing HTTP GET requests to /getnewsitem.php?newsid=< injected_data >", "Mitigation": "Mitigation of the vulnerability can be done by using prepared statements and validating user input to prevent SQL injection attacks.", "Conclusion": "The CVE-2007-2971 vulnerability is a high-severity vulnerability that can be used to execute arbitrary SQL commands and steal sensitive data. It is recommended to apply mitigation strategies to prevent attacks."}, "executive_analysis": {"Overview": "The CVE-2007-2971 vulnerability is a high-severity vulnerability that can be used to execute arbitrary SQL commands and steal sensitive data.", "Business Impact": "The vulnerability can result in significant financial loss and damage to the company's reputation if sensitive data is stolen or the system is taken control of.", "Technical Impact": "The vulnerability can be used to execute arbitrary SQL commands, which can be used to steal sensitive data or take control of the system.", "Mitigation Strategies": "Apply mitigation strategies such as using prepared statements and validating user input to prevent SQL injection attacks.", "Recommendations": "Implement data encryption and access controls to prevent unauthorized access to sensitive data.", "Conclusions": "The CVE-2007-2971 vulnerability is a high-severity vulnerability that requires urgent attention to prevent attacks."}}