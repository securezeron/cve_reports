{"id": "CVE-2007-3247", "sourceIdentifier": "cve@mitre.org", "published": "2007-06-18T10:30:00.000", "lastModified": "2017-07-29T01:32:05.660", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "SQL injection vulnerability in VirtueMart before 1.0.11 allows remote attackers to execute arbitrary SQL commands via unspecified parameters, possibly related to improper input validation of the PATH_INFO (PHP_SELF) by virtuemart_parser.php."}, {"lang": "es", "value": "Vulnerabilidad de inyecci\u00f3n SQL en VirtueMart anterior a 1.0.11 permite a atacantes remotos ejecutar comandos SQL de su elecci\u00f3n a trav\u00e9s de par\u00e1metros no especificados, posiblemente relacionados con una validaci\u00f3n de entrada indebida del PATH_INFO (PHP_SELF) a trav\u00e9s de virtuemart_parser.php."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-Other"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:virtuemart:virtuemart:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.0.9", "matchCriteriaId": "832B4463-D10B-4A09-9B53-6D03DAB9075E"}]}]}], "references": [{"url": "http://osvdb.org/36889", "source": "cve@mitre.org"}, {"url": "http://secunia.com/advisories/25698", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "http://sourceforge.net/project/shownotes.php?release_id=516206", "source": "cve@mitre.org"}, {"url": "http://virtuemart.net/index.php?option=com_content&task=view&id=250&Itemid=57", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "http://www.securityfocus.com/bid/24485", "source": "cve@mitre.org"}, {"url": "http://www.vupen.com/english/advisories/2007/2217", "source": "cve@mitre.org"}, {"url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/34879", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059.007", "comment": "CVE-2007-3247 - SQL injection attack exploiting improper input validation of PATH_INFO (PHP_SELF) in VirtueMart, allowing remote attackers to execute arbitrary SQL commands."}, {"techniqueID": "T1547.002", "comment": "CVE-2007-3247 - Exploitation of vulnerability in VirtueMart leading to arbitrary SQL command execution, demonstrating a potential web shell deployment."}, {"techniqueID": "T1190", "comment": "CVE-2007-3247 - Man-in-the-middle attack leveraging SQL injection to manipulate data, potentially leading to unauthorized access or data exfiltration."}, {"techniqueID": "T1055", "comment": "CVE-2007-3247 - Command and control channel exploitation using SQL injection vulnerability in VirtueMart, enabling remote control over the affected system."}, {"techniqueID": "T1065", "comment": "CVE-2007-3247 - Code injection attack exploiting SQL injection vulnerability in VirtueMart, potentially leading to code execution or data manipulation."}], "technical_analysis": {"Introduction": "VirtueMart's SQL injection vulnerability (CVE-2007-3247) originates from improper input validation of PATH_INFO (PHP_SELF), allowing remote attackers to execute arbitrary SQL commands.", "Impact and Scope": "The vulnerability holds a CVSS score of 6.8, with a medium severity rating. It is exploitable over the network, and the attack complexity is medium.Attackers can leverage this vulnerability to execute arbitrary SQL commands, potentially leading to unauthorized access, data manipulation, or remote control.", "Related MITRE ATT&CK Techniques": ["T1059.007", "T1547.002", "T1190", "T1055", "T1065"], "Technical Details": "The vulnerability resides in VirtueMart's virtuemart_parser.php, which fails to validate the PATH_INFO (PHP_SELF) parameter, allowing remote attackers to inject malicious SQL queries.", "Detection": "Detection involves monitoring network traffic for suspicious SQL queries, analyzing system logs for unexplained SQL command execution, and implementing Web Application Firewalls to filter out malicious requests.", "Mitigation": "Mitigating measures include updating VirtueMart to a patched version, implementing robust input validation and sanitation, and regular security testing to identify and remediate vulnerabilities.", "Conclusion": "The CVE-2007-3247 vulnerability in VirtueMart highlights the importance of proper input validation and scripting languages' handling of user input, emphasizing the need for regular security testing and updates to prevent exploitation."}, "executive_analysis": {"Overview": "The VirtueMart SQL injection vulnerability (CVE-2007-3247) poses a medium severity risk to web applications, emphasizing the need for swift mitigation and regular security testing.", "Business Impact": "The vulnerability can lead to unauthorized access, data manipulation, or remote control, potentially causing significant data breaches, financial losses, or reputational damage.", "Technical Impact": "The vulnerability's exploitation can result in data manipulation, code injection, or command injection attacks, compromising the confidentiality, integrity, and availability of the affected system.", "Mitigation Strategies": "Timely patching, regular security testing, and implementing robust input validation and sanitation can effectively mitigate the vulnerability.", "Recommendations": "Recommendations include patching vulnerable versions, implementing robust input validation, and conducting regular security testing to identify and remediate vulnerabilities.", "Conclusions": "The CVE-2007-3247 vulnerability serves as a reminder of the importance of adhering to secure coding practices, implementing robust input validation, and regular security testing to prevent exploitation."}}