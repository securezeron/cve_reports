{"id": "CVE-2007-2345", "sourceIdentifier": "cve@mitre.org", "published": "2007-04-27T17:19:00.000", "lastModified": "2017-10-11T01:32:11.550", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "PHP remote file inclusion vulnerability in include/include_stream.inc.php in CodeWand phpBrowse allows remote attackers to execute arbitrary PHP code via a URL in the include_path parameter."}, {"lang": "es", "value": "Vulnerabilidad de inclusi\u00f3n remota de archivo en PHP en include/include_stream.inc.php en CodeWand phpBrowse permite a atacantes remotos ejecutar c\u00f3digo PHP de su elecci\u00f3n a trav\u00e9s de una URL en el par\u00e1metro include_path."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-Other"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:codewand:phpbrowse:*:*:*:*:*:*:*:*", "matchCriteriaId": "7B911B7F-D809-4D0B-8F74-6539BAB0AAC3"}]}]}], "references": [{"url": "http://www.securityfocus.com/bid/23329", "source": "cve@mitre.org", "tags": ["Exploit"]}, {"url": "http://www.vupen.com/english/advisories/2007/1273", "source": "cve@mitre.org"}, {"url": "https://www.exploit-db.com/exploits/3668", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "TA0010", "comment": "Reference: CWE-89, PHP remote file inclusion vulnerability. Malware can inject malicious PHP code by manipulating the include_path parameter. Defending against this includes validating user input and sanitizing the include_path parameter."}, {"techniqueID": "T1190", "comment": "Reference: CWE-20, Input validation and sanitization failure. Malware can exploit input validation failure to inject malicious PHP code. Defending against this includes implementing proper input validation and sanitization."}, {"techniqueID": "T1005", "comment": "Reference: CWE-92, Code injection. Malware can inject malicious PHP code by manipulating the include_path parameter. Defending against this includes restricting file inclusion and implementing code hardening measures."}], "stix_bundle": {"stix_objects": [{"ID": "vulnerability", "name": "CVE-2007-2345", "description": "PHP remote file inclusion vulnerability in include/include_stream.inc.php in CodeWand phpBrowse allows remote attackers to execute arbitrary PHP code via a URL in the include_path parameter."}, {"ID": " attack-pattern", "name": "Reference: CWE-89", "description": "Malware injects malicious PHP code by manipulating the include_path parameter."}, {"ID": "attack-pattern", "name": "Reference: CWE-20", "description": "Input validation and sanitization failure allows malicious PHP code injection."}, {"ID": "attack-pattern", "name": "Reference: CWE-92", "description": "Code injection allows malicious PHP code injection by manipulating the include_path parameter."}, {"ID": "course-of-action", "name": "Defend against Reference: CWE-89", "description": "Validate user input and sanitize the include_path parameter."}, {"ID": "course-of-action", "name": "Defend against Reference: CWE-20", "description": "Implement proper input validation and sanitization."}, {"ID": "course-of-action", "name": "Defend against Reference: CWE-92", "description": "Restrict file inclusion and implement code hardening measures."}, {"ID": "indicator", "name": "Unvalidated or unsanitized input in include_path parameter", "description": "This could be a sign of a PHP remote file inclusion vulnerability."}], "relationship": {"vulnerability_attack_pattern": {"relationship_name": "related_to", "relationship_type": "instance_of", "collection_attribute_name": "related_attack_patterns"}, "attack_pattern_course_of_action": {"relationship_name": "mitigated_by", "relationship_type": "part_of", "collection_attribute_name": "related_course_of_action"}, "indicator_vulnerability": {"relationship_name": "indicates", "relationship_type": "instance_of", "collection_attribute_name": "related_indicators"}}}, "technical_analysis": {"Introduction": "This CVE is a PHP remote file inclusion vulnerability that allows remote attackers to execute arbitrary PHP code via a URL in the include_path parameter.", "Impact and Scope": "This CVE has a CVSS score of 7.5 and an attack vector of NETWORK. It can lead to partial confidentiality, integrity, and availability impacting parts of the system.", "Related MITRE ATT&CK Techniques": "MITRE Techniques TA0010, T1190, and T1005 are all related to this CVE.", "Technical Details": "The vulnerability occurs due to an unvalidated input in the include_path parameter, allowing an attacker to inject malicious PHP code.", "Detection": "Detecting this CVE involves monitoring for unvalidated or unsanitized input in the include_path parameter.", "Mitigation": "Mitigating this CVE involves validating user input and sanitizing the include_path parameter, implementing proper input validation and sanitization, and restricting file inclusion.", "Conclusion": "This CVE highlights the importance of proper input validation and sanitization, as well as code hardening measures, to prevent PHP remote file inclusion vulnerabilities."}, "executive_analysis": {"Overview": "This CVE is a significant vulnerability that poses a significant risk to PHP-based systems.", "Business Impact": "This CVE has the potential to compromise sensitive data and disrupt business operations.", "Technical Impact": "This CVE poses a significant technical risk, impacting the confidentiality, integrity, and availability of system resources.", "Mitigation Strategies": "Implementing proper input validation and sanitization, restricting file inclusion, and implementing code hardening measures can mitigate this CVE.", "Recommendations": "Recommendations include updating PHP code to the latest version, validating user input, sanitizing the include_path parameter, and implementing code reviews.", "Conclusions": "This CVE highlights the importance of prioritizing security and implementing proper security controls to protect against PHP remote file inclusion vulnerabilities."}}