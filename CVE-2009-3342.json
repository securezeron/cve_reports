{"id": "CVE-2009-3342", "sourceIdentifier": "cve@mitre.org", "published": "2009-09-24T16:30:01.750", "lastModified": "2017-09-29T01:34:46.607", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "SQL injection vulnerability in frontend/assets/ajax/checkusername.php in the AlphaUserPoints (com_alphauserpoints) component 1.5.2 for Joomla! allows remote attackers to execute arbitrary SQL commands via the username2points parameter."}, {"lang": "es", "value": "Vulnerabilidad de inyecci\u00f3n SQL en frontend/assets/ajax/checkusername.php en the AlphaUserPoints (com_alphauserpoints) componente v1.5.2 para Joomla! permite a los atacantes remotos, ejecutar arbitrariamente comandos SQL a trav\u00e9s del par\u00e1metro username2points."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"operator": "AND", "nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": false, "criteria": "cpe:2.3:a:joomla:joomla\\!:*:*:*:*:*:*:*:*", "matchCriteriaId": "2AC7400C-F6AF-4B5E-A34B-0222F94DCC46"}]}, {"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:alphaplug:com_alphauserpoints:1.5.2:*:*:*:*:*:*:*", "matchCriteriaId": "A38F4650-3E21-451F-9401-D305F25C0767"}]}]}], "references": [{"url": "http://www.securityfocus.com/bid/36383", "source": "cve@mitre.org", "tags": ["Exploit"]}, {"url": "http://www.vupen.com/english/advisories/2009/2659", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "https://www.exploit-db.com/exploits/9654", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059: Command and Scripting Interperter", "comment": "CVE-2009-3342 - Unvalidated user input in the 'username2points' parameter of 'checkusername.php' can lead to SQL injection. Attackers can use this to execute arbitrary SQL commands, highlighting the importance of input validation in preventing such attacks."}, {"techniqueID": "T1090: Backup Utilities", "comment": "CVE-2009-3342 - Exploitation of this vulnerability could allow attackers to potentially gain unauthorized access to sensitive data or system resources, emphasizing the need for regular backups to facilitate recovery in case of a successful attack."}, {"techniqueID": "T1190: Exploit Public-Facing Application", "comment": "CVE-2009-3342 - The vulnerability in 'checkusername.php' makes it an attractive target for attackers, as it potentially allows them to execute arbitrary commands on the vulnerable system, underscoring the importance of regular security updates and vulnerability patching."}], "stix_bundle": {"objects": [{"id": "vulnerability:CVE-2009-3342", "type": "vulnerability", "name": "Unvalidated User Input in 'username2points' Parameter", "description": "Unvalidated user input in the 'username2points' parameter of 'checkusername.php' can lead to SQL injection.", "cvssv2": {"score": 7.5}, "techniques": ["attack-pattern:T1059: Command and Scripting Interperter", "malware:CVE-2009-3342-Exploit"], "attributes": {"title": "CVE-2009-3342", "description": "Unvalidated user input in the 'username2points' parameter of 'checkusername.php' can lead to SQL injection.", "created": "2009-09-24T16:30:01.750", "modified": "2017-09-29T01:34:46.607"}}, {"id": "attack-pattern:T1059:Command and Scripting Interperter", "type": "attack-pattern", "name": "Command and Scripting Interpreter: SQL Injection", "description": "An attack pattern utilizing SQL injection to execute arbitrary SQL commands.", "common_attack_pattern": {"nodes": ["T1059"]}, "objects": ["vulnerability:CVE-2009-3342"]}, {"id": "malware:CVE-2009-3342-Exploit", "type": "malware", "name": "CVE-2009-3342 Exploit", "description": "An exploit for the unvalidated user input in the 'username2points' parameter of 'checkusername.php'.", "malware_family": {"nodes": ["T1190"]}, "objects": ["vulnerability:CVE-2009-3342"]}]}, "technical_analysis": {"Introduction": "The CVE-2009-3342 vulnerability is an unvalidated user input in the 'username2points' parameter of 'checkusername.php' that can lead to SQL injection.", "Impact and Scope": "This vulnerability has a CVSS score of 7.5 with an attack vector of network and affects Joomla! 1.5.2 with the com_alphauserpoints component.", "Related MITRE ATT&CK Techniques": "T1059: Command and Scripting Interperter, T1090: Backup Utilities, and T1190: Exploit Public-Facing Application.", "Technical Details": "The vulnerability is caused by the lack of input validation in the 'username2points' parameter, which allows attackers to inject arbitrary SQL commands.", "Detection": "Detection is possible through network traffic analysis and monitoring for suspicious SQL queries.", "Mitigation": "Mitigation strategies include patching the vulnerable component, limiting access to the affected system, and implementing input validation mechanisms.", "Conclusion": "The CVE-2009-3342 vulnerability highlights the importance of input validation and regular security updates in preventing SQL injection attacks."}, "executive_analysis": {"Overview": "The CVE-2009-3342 vulnerability poses a significant risk to organizations using Joomla! 1.5.2 with the com_alphauserpoints component.", "Business Impact": "Successful exploitation of this vulnerability can result in unauthorized access to sensitive data or system resources, compromising business operations and brand reputation.", "Technical Impact": "This vulnerability affects the security of the affected system, making it vulnerable to SQL injection attacks, and potentially leading to data breaches or system compromise.", "Mitigation Strategies": "To mitigate this risk, organizations should prioritize patching the vulnerable component, implementing input validation, and conducting regular security assessments.", "Recommendations": "Recommendations include verifying the integrity of software updates, monitoring network traffic for suspicious activity, and implementing incident response plans.", "Conclusions": "The CVE-2009-3342 vulnerability underscores the importance of proactive security measures in preventing SQL injection attacks and the need for organizations to prioritize patching and regular security assessments."}}