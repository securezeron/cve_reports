{"id": "CVE-2009-3891", "sourceIdentifier": "secalert@redhat.com", "published": "2009-11-17T18:30:00.377", "lastModified": "2017-11-22T17:16:52.317", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Cross-site scripting (XSS) vulnerability in wp-admin/press-this.php in WordPress before 2.8.6 allows remote authenticated users to inject arbitrary web script or HTML via the s parameter (aka the selection variable)."}, {"lang": "es", "value": "Vulnerabilidad de ejecuci\u00f3n de secuencias de comandos en sitios cruzados (XSS) en wp-admin/press-this.php en WordPress anteriores a v2.8.6 permite a usuarios remotos autenticados inyectar secuencias de comandos web o HTML a trav\u00e9s del par\u00e1metro \"s\" (tambi\u00e9n conocido como variable selecci\u00f3n)."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.8.5", "matchCriteriaId": "E33698FD-9A82-413F-BADD-8E0719BB70A9"}]}]}], "references": [{"url": "http://core.trac.wordpress.org/attachment/ticket/11119/press-this-xss-bug-11-10-2009.patch", "source": "secalert@redhat.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "http://core.trac.wordpress.org/attachment/ticket/11119/press-this.002.diff", "source": "secalert@redhat.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "http://core.trac.wordpress.org/ticket/11119", "source": "secalert@redhat.com", "tags": ["Vendor Advisory"]}, {"url": "http://secunia.com/advisories/37332", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://wordpress.org/development/2009/11/wordpress-2-8-6-security-release/", "source": "secalert@redhat.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2009/11/15/2", "source": "secalert@redhat.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2009/11/15/3", "source": "secalert@redhat.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2009/11/16/1", "source": "secalert@redhat.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://www.osvdb.org/59959", "source": "secalert@redhat.com", "tags": ["Broken Link"]}], "techniques": [{"techniqueID": "T1059.004", "comment": "CVE-2009-3891 - Cross-site scripting (XSS) vulnerability in wp-admin/press-this.php in WordPress allows remote authenticated users to inject arbitrary web script or HTML via the 's' parameter. This technique is used to compromise the security of the WordPress installation."}, {"techniqueID": "T1190", "comment": "CVE-2009-3891 - Attackers can use this vulnerability to inject malicious JavaScript code into the user's browser, allowing them to steal sensitive information, hijack sessions, and conduct other malicious activities. Defenses against cross-site scripting attacks include validating and sanitizing user input."}], "stix_bundle": {"Bundle": {"type": "bundle", "id": "https://example.com/CVE-2009-3891", "spec_version": "2.1", "created_by_ref": "https://example.com/user1", "created": "2023-03-15T14:30:00.000Z", "modified": "2023-03-15T14:30:00.000Z", "objects": [{"type": "vulnerability", "id": "https://example.com/CVE-2009-3891", "name": "WordPress Cross-Site Scripting Vulnerability (CVE-2009-3891)", "description": "Cross-site scripting (XSS) vulnerability in wp-admin/press-this.php in WordPress allows remote authenticated users to inject arbitrary web script or HTML via the 's' parameter.", "severity": "Low", "cvss_vector": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "cvss_score": 3.5, "created_by_ref": "https://example.com/user1", "created": "2023-03-15T14:30:00.000Z", "modified": "2023-03-15T14:30:00.000Z", " relationships": [{"relationship": "indicates", "target_ref": "https://example.com/T1059.004"}]}, {"type": "attack_pattern", "id": "https://example.com/T1059.004", "name": "Cross-Site Scripting (XSS)", "description": "Attack pattern that injects malicious JavaScript code into a web application", "created_by_ref": "https://example.com/user1", "created": "2023-03-15T14:30:00.000Z", "modified": "2023-03-15T14:30:00.000Z", "relationships": [{"relationship": "used_by", "target_ref": "https://example.com/CVE-2009-3891"}]}, {"type": "defense_technique", "id": "https://example.com/DEFENSE-123", "name": "Input Validation and Sanitization", "description": " Defense technique that validates and sanitizes user input to prevent cross-site scripting attacks", "created_by_ref": "https://example.com/user1", "created": "2023-03-15T14:30:00.000Z", "modified": "2023-03-15T14:30:00.000Z", "relationships": [{"relationship": "mitigates", "target_ref": "https://example.com/T1059.004"}]}]}}, "technical_analysis": {"Introduction": "The WordPress Cross-Site Scripting Vulnerability (CVE-2009-3891) is a low-severity vulnerability that allows remote authenticated users to inject arbitrary web script or HTML via the 's' parameter.", "Impact and Scope": "The vulnerability has a CVSS score of 3.5, indicating a low severity. However, it can still cause significant damage if exploited, such as stealing sensitive information, hijacking sessions, and conducting other malicious activities.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to several MITRE ATT&CK techniques, including T1059.004, Cross-Site Scripting (XSS).", "Technical Details": "The vulnerability is caused by the lack of proper input validation and sanitization in the wp-admin/press-this.php file in WordPress.", "Detection": "To detect this vulnerability, security experts can use techniques such as network traffic analysis and fuzz testing.", "Mitigation": "The vulnerability can be mitigated by validating and sanitizing user input, as well as using Content Security Policy (CSP) and HTTP Only cookies.", "Conclusion": "The WordPress Cross-Site Scripting Vulnerability (CVE-2009-3891) is a low-severity vulnerability that can still cause significant damage if exploited. Defenses against cross-site scripting attacks include validating and sanitizing user input, using Content Security Policy (CSP) and HTTP Only cookies, and monitoring network traffic."}, "executive_analysis": {"Overview": "The WordPress Cross-Site Scripting Vulnerability (CVE-2009-3891) is a low-severity vulnerability that allows remote authenticated users to inject arbitrary web script or HTML via the 's' parameter.", "Business Impact": "The vulnerability can cause significant damage to an organization's reputation and financial losses if exploited.", "Technical Impact": "The vulnerability can allow attackers to steal sensitive information, hijack sessions, and conduct other malicious activities.", "Mitigation Strategies": "Organizations should implement input validation and sanitization, use Content Security Policy (CSP) and HTTP Only cookies, and monitor network traffic to mitigate this vulnerability.", "Recommendations": "Executives should prioritize patching and upgrading vulnerable systems, as well as implementing additional security controls to prevent exploitation.", "Conclusions": "The WordPress Cross-Site Scripting Vulnerability (CVE-2009-3891) is a low-severity vulnerability that requires immediate attention to prevent exploitation."}}