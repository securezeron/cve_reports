{"id": "CVE-2009-2096", "sourceIdentifier": "cve@mitre.org", "published": "2009-06-17T17:30:00.360", "lastModified": "2017-09-29T01:34:42.903", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "SQL injection vulnerability in house/listing_view.php in phpCollegeExchange 0.1.5c allows remote attackers to execute arbitrary SQL commands via the itemnr parameter."}, {"lang": "es", "value": "Vulnerabilidad de inyecci\u00f3n SQL en house/listing_view.php en phpCollegeExchange v0.1.5c, permite a atacantes remotos ejecutar comandos SQL de su elecci\u00f3n a trav\u00e9s del par\u00e1metro \"itemr\"."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:david_degner:phpcollegeexchange:0.1.5c:*:*:*:*:*:*:*", "matchCriteriaId": "DF73C771-F42D-4226-9FE2-2533CD969AB4"}]}]}], "references": [{"url": "http://secunia.com/advisories/35452", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "https://www.exploit-db.com/exploits/8962", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2009-2096 - This SQL injection vulnerability allows attackers to execute arbitrary SQL commands, compromising database integrity and potentially leading to unauthorized data access. Defend against it using database input validation and parameterization."}, {"techniqueID": "T1190", "comment": "CVE-2009-2096 - An attacker can exploit this SQL injection vulnerability to extract sensitive data or disrupt the application's functionality. Defend against it by implementing secure coding practices and regular vulnerability assessments."}], "stix_bundle": {"bundle": {"type": "bundle", "spec_version": "2.1", "id": "bundle--cve-2009-2096", "created": "2022-01-01T00:00:00.000Z", "modified": "2022-01-01T00:00:00.000Z", "objects": [{"type": "vulnerability", "id": "vulnerability--cve-2009-2096", "created": "2022-01-01T00:00:00.000Z", "modified": "2022-01-01T00:00:00.000Z", "name": "SQL Injection Vulnerability in phpCollegeExchange 0.1.5c", "description": "SQL injection vulnerability in house/listing_view.php in phpCollegeExchange 0.1.5c allows remote attackers to execute arbitrary SQL commands via the itemnr parameter.", "severity": "high", "cvss": {"score": 7.5, "version": "2.0", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"}, "Weaknesses": [{"type": "weakness", "id": "weakness--cwe-89", "created": "2022-01-01T00:00:00.000Z", "modified": "2022-01-01T00:00:00.000Z", "name": "SQL Injection", "description": "CWE-89"}]}, {"type": " course-of-action", "id": "course-of-action--defend-against-sql-injection", "created": "2022-01-01T00:00:00.000Z", "modified": "2022-01-01T00:00:00.000Z", "name": "Defend against SQL Injection", "description": "Implement database input validation and parameterization to prevent SQL injection attacks.", "related-technique": {"id-ref": "T1059"}}, {"type": " course-of-action", "id": "course-of-action--implement-secure-coding-practices", "created": "2022-01-01T00:00:00.000Z", "modified": "2022-01-01T00:00:00.000Z", "name": "Implement Secure Coding Practices", "description": "Implement secure coding practices and regular vulnerability assessments to prevent SQL injection attacks.", "related-technique": {"id-ref": "T1190"}}], "relationships": [{"type": "has-vulnerability", "id-ref": "vulnerability--cve-2009-2096", "description": "The vulnerability is related to SQL injection attacks."}, {"type": "uses-course-of-action", "id-ref": "course-of-action--defend-against-sql-injection", "description": "This course of action is used to defend against SQL injection attacks."}, {"type": "uses-course-of-action", "id-ref": "course-of-action--implement-secure-coding-practices", "description": "This course of action is used to implement secure coding practices and prevent SQL injection attacks."}]}}, "technical_analysis": {"Introduction": "The SQL injection vulnerability in phpCollegeExchange 0.1.5c allows attackers to execute arbitrary SQL commands.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5, indicating a high-level risk. It affects remote attackers, allowing them to compromise database integrity and potentially access unauthorized data.", "Related MITRE ATT&CK Techniques": "T1059, T1190", "Technical Details": "The vulnerability is caused by insufficient input validation in the house/listing_view.php file, allowing attackers to inject malicious SQL code.", "Detection": "Monitor for unusual database queries or access patterns.", "Mitigation": "Implement database input validation and parameterization to prevent SQL injection attacks.", "Conclusion": "The SQL injection vulnerability in phpCollegeExchange 0.1.5c poses a significant risk and requires immediate attention to prevent exploitation."}, "executive_analysis": {"Overview": "sql injection vulnerability in phpCollegeExchange 0.1.5c", "Business Impact": "The vulnerability could lead to unauthorized data access and compromise of database integrity, leading to reputational damage and financial loss.", "Technical Impact": "The vulnerability allows attackers to execute arbitrary SQL commands, compromising database integrity and potentially leading to unauthorized data access.", "Mitigation Strategies": "Implement secure coding practices, regular vulnerability assessments, and database input validation and parameterization.", "Recommendations": "Encourage the development team to prioritize secure coding practices and implement regular vulnerability assessments.", "Conclusions": "The SQL injection vulnerability in phpCollegeExchange 0.1.5c requires immediate attention from the development team and IT personnel to prevent exploitation and mitigate potential risks."}}