{"id": "CVE-2024-27983", "sourceIdentifier": "support@hackerone.com", "published": "2024-04-09T01:15:49.197", "lastModified": "2024-06-10T17:16:24.277", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "An attacker can make the Node.js HTTP/2 server completely unavailable by sending a small amount of HTTP/2 frames packets with a few HTTP/2 frames inside. It is possible to leave some data in nghttp2 memory after reset when headers with HTTP/2 CONTINUATION frame are sent to the server and then a TCP connection is abruptly closed by the client triggering the Http2Session destructor while header frames are still being processed (and stored in memory) causing a race condition."}, {"lang": "es", "value": "Un atacante puede hacer que el servidor HTTP/2 de Node.js no est\u00e9 completamente disponible enviando una peque\u00f1a cantidad de paquetes de tramas HTTP/2 con algunas tramas HTTP/2 en su interior. Es posible dejar algunos datos en la memoria nghttp2 despu\u00e9s del reinicio cuando los encabezados con el frame de CONTINUATION HTTP/2 se env\u00edan al servidor y luego el cliente cierra abruptamente una conexi\u00f3n TCP activando el destructor Http2Session mientras los frames de encabezado a\u00fan se est\u00e1n procesando (y almacenando en la memoria) causando una condici\u00f3n de ejecuci\u00f3n."}], "metrics": {"cvssMetricV30": [{"source": "support@hackerone.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "HIGH", "baseScore": 8.2, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 4.2}]}, "references": [{"url": "http://www.openwall.com/lists/oss-security/2024/04/03/16", "source": "support@hackerone.com"}, {"url": "https://hackerone.com/reports/2319584", "source": "support@hackerone.com"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JDECX4BYZLMM4S4LALN4DPZ2HUTTPLKE/", "source": "support@hackerone.com"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YDVFUH7ACZPYB3BS4SVILNOY7NQU73VW/", "source": "support@hackerone.com"}, {"url": "https://security.netapp.com/advisory/ntap-20240510-0002/", "source": "support@hackerone.com"}], "techniques": [{"techniqueID": "TA0047", "comment": "Resource exhaustion - CVE-2024-27983 is an example of a resource exhaustion vulnerability where an attacker can exploit it to create a denial-of-service condition. To defend against this, implement rate limiting and traffic shaping to prevent overwhelming the server with traffic."}, {"techniqueID": "T1625", "comment": "Network Traffic Analysis - The vulnerability is exploited through network traffic, so monitoring network traffic is crucial in detecting exploitation attempts. Implement network traffic analysis tools to monitor for suspicious traffic patterns."}], "stix_bundle": {"objects": [{"id": "vulnerability:CVE-2024-27983", "type": "vulnerability", "schema": "https://cybox.mitre.org/XMLSchema/vulnerable-software/vulnerability-2.1.xsd", "name": "CVE-2024-27983: Node.js HTTP/2 Server Denial of Service", "description": "An attacker can make the Node.js HTTP/2 server completely unavailable by sending a small amount of HTTP/2 frames packets with a few HTTP/2 frames inside.", "severity": "HIGH", "cve": [{"id": "CVE-2024-27983"}], "references": [{"data_source": "support@hackerone.com", "external_id": "http://www.openwall.com/lists/oss-security/2024/04/03/16", "description": " Official patch announcement"}, {"data_source": "support@hackerone.com", "external_id": "https://hackerone.com/reports/2319584", "description": " HackerOne report"}]}, {"id": "technique:T1625", "type": "technique", "schema": "https://cybox.mitre.org/XMLSchema/maltego/technique-2.1.xsd", "name": "Network Traffic Analysis", "description": "Monitor network traffic for suspicious patterns and anomalies", "MITRE_Data": [{"AttackPatternID": "T1625", "AttackPatternName": "Network Traffic Analysis"}], " Mitigations": [{" Mitigation": "Implement network traffic analysis tools to monitor for suspicious traffic patterns"}]}], "relationships": [{"source": "vulnerability:CVE-2024-27983", "type": "vulnerability-exploited-by", "target": "technique:T1625"}]}, "technical_analysis": {"Introduction": "Node.js HTTP/2 Server Denial of Service", "Impact and Scope": "This vulnerability allows an attacker to make the Node.js HTTP/2 server completely unavailable by sending a small amount of HTTP/2 frames packets with a few HTTP/2 frames inside. The impact is a denial-of-service condition.", "Related MITRE ATT&CK Techniques": "TA0047 - Resource exhaustion, T1625 - Network Traffic Analysis", "Technical Details": "The vulnerability is based on a race condition in the Http2Session destructor when handling HTTP/2 frames. An attacker can exploit this to cause the server to become unavailable.", "Detection": "Monitor network traffic for suspicious patterns and anomalies", "Mitigation": "Implement rate limiting and traffic shaping to prevent overwhelming the server with traffic, and monitor network traffic for suspicious patterns and anomalies.", "Conclusion": "In conclusion, the Node.js HTTP/2 Server Denial of Service vulnerability is a serious issue that requires immediate attention. It is essential to implement mitigation strategies to prevent exploitation."}, "executive_analysis": {"Overview": "The Node.js HTTP/2 Server Denial of Service vulnerability is a critical issue that requires immediate attention", "Business Impact": "This vulnerability can result in significant business disruptions and financial losses", "Technical Impact": "The vulnerability allows an attacker to make the Node.js HTTP/2 server completely unavailable", "Mitigation Strategies": "Implement rate limiting and traffic shaping, monitor network traffic for suspicious patterns and anomalies", "Recommendations": "Implement mitigation strategies to prevent exploitation, and conduct a thorough risk assessment", "Conclusions": "In conclusion, the Node.js HTTP/2 Server Denial of Service vulnerability is a critical issue that requires immediate attention and effective mitigation strategies."}}