{"id": "CVE-2024-32592", "sourceIdentifier": "audit@patchstack.com", "published": "2024-04-18T09:15:13.010", "lastModified": "2024-04-18T13:04:28.900", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in VoidCoders, innovs Void Elementor WHMCS Elements For Elementor Page Builder allows Stored XSS.This issue affects Void Elementor WHMCS Elements For Elementor Page Builder: from n/a through 2.0.\n\n"}, {"lang": "es", "value": "Neutralizaci\u00f3n inadecuada de la entrada durante la vulnerabilidad de generaci\u00f3n de p\u00e1ginas web ('Cross-site Scripting') en VoidCoders, innovs Void Elementor WHMCS Elements para Elementor Page Builder permite almacenar XSS. Este problema afecta a Void Elementor WHMCS Elements para Elementor Page Builder: desde n/a hasta 2.0."}], "metrics": {"cvssMetricV31": [{"source": "audit@patchstack.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 3.7}]}, "weaknesses": [{"source": "audit@patchstack.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://patchstack.com/database/vulnerability/void-elementor-whmcs-elements/wordpress-void-elementor-whmcs-elements-for-elementor-page-builder-plugin-2-0-cross-site-scripting-xss-vulnerability?_s_id=cve", "source": "audit@patchstack.com"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-32592 - This Stored Cross-Site Scripting (XSS) vulnerability allows an attacker to store malicious scripts on the target system, which can be executed when a user views a vulnerable web page. To defend against this, implement input validation and sanitization, use Content Security Policy (CSP), and restrict access to the affected pages."}, {"techniqueID": "T1190", "comment": "CVE-2024-32592 - This vulnerability can be exploited by an attacker to conduct Stored XSS attacks. To mitigate this, implement input validation, use a Web Application Firewall (WAF), and restrict access to the affected pages."}, {"techniqueID": "T1068", "comment": "CVE-2024-32592 - This vulnerability allows an attacker to inject malicious HTML code into a web page. To defend against this, implement input validation, use a Web Application Firewall (WAF), and restrict access to the affected pages."}], "stix_bundle": {"bundle": {"type": "bundle", "id": "https://example.com/cve-2024-32592-stix_bundle", "created_by_ref": "https://example.com/admin", "created": "2024-04-18T09:15:13.010", "modified": "2024-04-18T13:04:28.900", "objects": [{"type": "vulnerability", "id": "https://example.com/cve-2024-32592", "created_by_ref": "https://example.com/admin", "created": "2024-04-18T09:15:13.010", "modified": "2024-04-18T13:04:28.900", "name": "CVE-2024-32592", "description": "Stored Cross-Site Scripting (XSS) vulnerability in VoidCoders, innovs Void Elementor WHMCS Elements For Elementor Page Builder", "severity": "MEDIUM", "score": 6.5, "metric": {"cvss_v3": {"version": "3.1", "vector_string": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:L"}}}, {"type": "attack_pattern", "id": "https://example.com/void-elementor-whmcs-technique", "created_by_ref": "https://example.com/admin", "created": "2024-04-18T09:15:13.010", "modified": "2024-04-18T13:04:28.900", "name": "Void Elementor WHMCS Elements for Elementor Page Builder Stored XSS Attack", "description": "An attacker injects malicious HTML code into a web page, which can be executed when a user views a vulnerable web page", "mitigations": ["Implement input validation", "Restrict access to the affected pages", "Use a Web Application Firewall"]}, {"type": "course_of_action", "id": "https://example.com/void-elementor-whmcs-defense", "created_by_ref": "https://example.com/admin", "created": "2024-04-18T09:15:13.010", "modified": "2024-04-18T13:04:28.900", "name": "Void Elementor WHMCS Defense", "description": "Implement input validation, restrict access to the affected pages and use a Web Application Firewall to prevent Stored XSS attacks", "mitigates": ["https://example.com/void-elementor-whmcs-technique"]}]}}, "technical_analysis": {"Introduction": "The CVE-2024-32592 is a Stored Cross-Site Scripting (XSS) vulnerability in VoidCoders, innovs Void Elementor WHMCS Elements For Elementor Page Builder. An attacker can inject malicious HTML code into a web page, which can be executed when a user views a vulnerable web page.", "Impact and Scope": "The impact of this vulnerability is MEDIUM, with a CVSS score of 6.5. It allows an attacker to inject malicious HTML code into a web page, which can be executed when a user views a vulnerable web page.", "Related MITRE ATT&CK Techniques": "This vulnerability is related to T1059, T1190, and T1068.", "Technical Details": "The vulnerability is stored in the affected plugin, which allows an attacker to inject malicious HTML code into the web page.", "Detection": "Detection of this vulnerability involves monitoring for suspicious HTML code injection and monitoring for abnormal user behavior.", "Mitigation": "Implement input validation, restrict access to the affected pages and use a Web Application Firewall to prevent Stored XSS attacks.", "Conclusion": "In conclusion, CVE-2024-32592 is a high-risk vulnerability that can be exploited by an attacker to inject malicious HTML code into a web page. It is important to implement input validation, restrict access to the affected pages and use a Web Application Firewall to prevent Stored XSS attacks."}, "executive_analysis": {"Overview": "CVE-2024-32592 is a Stored Cross-Site Scripting (XSS) vulnerability in VoidCoders, innovs Void Elementor WHMCS Elements For Elementor Page Builder.", "Business Impact": "This vulnerability can lead to a loss of customer trust and reputational damage.", "Technical Impact": "This vulnerability allows an attacker to inject malicious HTML code into a web page, which can be executed when a user views a vulnerable web page.", "Mitigation Strategies": "Implement input validation, restrict access to the affected pages and use a Web Application Firewall to prevent Stored XSS attacks.", "Recommendations": "It is recommended that the affected plugin be updated, input validation be implemented, and a Web Application Firewall be used to prevent future vulnerabilities.", "Conclusions": "In conclusion, it is important to implement input validation, restrict access to the affected pages and use a Web Application Firewall to prevent Stored XSS attacks. It is also important to keep software up-to-date and to implement security best practices."}}