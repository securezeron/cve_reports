{"id": "CVE-2024-23346", "sourceIdentifier": "security-advisories@github.com", "published": "2024-02-21T17:15:09.377", "lastModified": "2024-02-22T19:07:27.197", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Pymatgen (Python Materials Genomics) is an open-source Python library for materials analysis. A critical security vulnerability exists in the `JonesFaithfulTransformation.from_transformation_str()` method within the `pymatgen` library prior to version 2024.2.20. This method insecurely utilizes `eval()` for processing input, enabling execution of arbitrary code when parsing untrusted input. Version 2024.2.20 fixes this issue."}, {"lang": "es", "value": "Pymatgen (Python Materials Genomics) es una librer\u00eda Python de c\u00f3digo abierto para an\u00e1lisis de materiales. Existe una vulnerabilidad de seguridad cr\u00edtica en el m\u00e9todo `JonesFaithfulTransformation.from_transformation_str()` dentro de la librer\u00eda `pymatgen` antes de la versi\u00f3n 2024.2.20. Este m\u00e9todo utiliza de forma insegura `eval()` para procesar la entrada, lo que permite la ejecuci\u00f3n de c\u00f3digo arbitrario al analizar entradas que no son de confianza. La versi\u00f3n 2024.2.20 soluciona este problema."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.3, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.5, "impactScore": 6.0}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-77"}]}], "references": [{"url": "https://github.com/materialsproject/pymatgen/blob/master/pymatgen/symmetry/settings.py#L97C1-L111C108", "source": "security-advisories@github.com"}, {"url": "https://github.com/materialsproject/pymatgen/commit/c231cbd3d5147ee920a37b6ee9dd236b376bcf5a", "source": "security-advisories@github.com"}, {"url": "https://github.com/materialsproject/pymatgen/security/advisories/GHSA-vgv8-5cpj-qj2f", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "TA0001", "comment": " CVE-2024-23346 - Code injection on multiple platforms, including Linux and Windows. This vulnerability allows an attacker to inject arbitrary code, which can lead to the execution of malware and unauthorized access to the system."}, {"techniqueID": "TA0003", "comment": " CVE-2024-23346 - Command manipulation on multiple platforms, including Linux and Windows. This vulnerability allows an attacker to manipulate commands, which can lead to the execution of unauthorized commands and potentially allow an attacker to take control of the system."}, {"techniqueID": "T1166", "comment": " CVE-2024-23346 - Code loading on multiple platforms, including Linux and Windows. This vulnerability allows an attacker to load arbitrary code, which can lead to the execution of malware and unauthorized access to the system."}, {"techniqueID": "T1211", "comment": " CVE-2024-23346 - Code execution on multiple platforms, including Linux and Windows. This vulnerability allows an attacker to execute arbitrary code, which can lead to the execution of malware and unauthorized access to the system."}], "stix_bundle": "{\"definition\": \"vulnerability: vulnerability_info\",\"name\": \"CVE-2024-23346\",\"published\": \"2024-02-21T17:15:09.377\",\"modified\": \"2024-02-22T19:07:27.197\",\"vulnerability_info\": {\"id\": \"CVE-2024-23346\",\"source\": \"security-advisories@github.com\",\"cwe_ids\": [\"CWE-77\"],\"cvssv3\": {\"base_score\": 9.3,\"impact_score\": 6.0,\"exploitability_score\": 2.5},\"attack_vector\": \"LOCAL\",\"attack_complexity\": \"LOW\",\"privileges_required\": \"NONE\",\"user_interaction\": \"NONE\",\"scope\": \"CHANGED\",\"confidentiality_impact\": \"HIGH\",\"integrity_impact\": \"HIGH\",\"availability_impact\": \"HIGH\"},\"relationships\": [{\"type\": \"has_part\",\"object\": \"mitigation\",\"idref\": \"MITIGATION-12345\"},{\"type\": \"has_part\",\"object\": \"detection\",\"idref\": \"DETECTION-12345\"},{\"type\": \"uses\",\"object\": \"tec0123\",\"idref\": \"T1211\"}]}", "technical_analysis": {"Introduction": "Pymatgen, an open-source Python library for materials analysis, contains a critical security vulnerability (CVE-2024-23346) that allows an attacker to inject arbitrary code, execute commands, and load code.", "Impact and Scope": "This vulnerability has a CVSS score of 9.3 and an attack vector of LOCAL, which means that an attacker must have access to the system locally to exploit it. The impact score is 6.0, indicating a high level of impact.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques for this vulnerability include TA0001, TA0003, T1166, and T1211.", "Technical Details": "The vulnerability occurs in the `JonesFaithfulTransformation.from_transformation_str()` method, which insecurely utilizes `eval()` for processing input.", "Detection": "Detection methods for this vulnerability include monitoring system logs for suspicious activity, running regular security audits, and implementing a vulnerability scanner.", "Mitigation": "Mitigation strategies for this vulnerability include updating to a patched version of Pymatgen, implementing a secure coding practice policy, and running regular security audits.", "Conclusion": "In conclusion, the CVE-2024-23346 is a critical security vulnerability in Pymatgen that allows an attacker to inject arbitrary code, execute commands, and load code. It is important to update to a patched version of Pymatgen, implement secure coding practices, and run regular security audits."}, "executive_analysis": {"Overview": "The CVE-2024-23346 is a critical security vulnerability in the Pymatgen library that can have significant business and technical impacts.", "Business Impact": "This vulnerability can lead to data breaches, unauthorized access, and system compromise, which can result in significant financial losses and reputational damage.", "Technical Impact": "The vulnerability can also lead to the execution of malware, unauthorized access to sensitive data, and system compromise.", "Mitigation Strategies": "Updating to a patched version of Pymatgen, implementing secure coding practices, and running regular security audits are recommended to mitigate this vulnerability.", "Recommendations": "Executives should recommend that developers update to a patched version of Pymatgen and implement secure coding practices. IT staff should run regular security audits to detect any suspicious activity.", "Conclusions": "In conclusion, the CVE-2024-23346 is a critical security vulnerability that requires immediate attention and action to mitigate its impact."}}