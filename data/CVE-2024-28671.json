{"id": "CVE-2024-28671", "sourceIdentifier": "cve@mitre.org", "published": "2024-03-13T16:15:30.197", "lastModified": "2024-08-01T13:49:10.897", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "DedeCMS v5.7 was discovered to contain a Cross-Site Request Forgery (CSRF) vulnerability via /dede/stepselect_main.php."}, {"lang": "es", "value": "Se descubri\u00f3 que DedeCMS v5.7 contiene una vulnerabilidad de Cross-Site Request Forgery (CSRF) a trav\u00e9s de /dede/stepselect_main.php."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://github.com/777erp/cms/blob/main/7.md", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "TA0001", "comment": "CVE-2024-28671 is a Cross-Site Request Forgery (CSRF) vulnerability, which can be exploited by T1008 to inject malicious code into the DedeCMS application. This is a common tactic in web applications, and this vulnerability can be mitigated by implementing proper input validation and secure coding practices."}, {"techniqueID": "TA1532", "comment": "The vulnerability in DedeCMS can be exploited by T1532 to conduct a man-in-the-middle attack, as the attacker can alter the requests sent to the application. This highlights the importance of proper encryption and verification of requests."}, {"techniqueID": "TA0036", "comment": "The use of a Cross-Site Request Forgery (CSRF) vulnerability like CVE-2024-28671 to inject malicious code can be detected through behavioral analytics and web logs. T0036 can be used to monitor for suspicious activity and identify potential attacks."}, {"techniqueID": "TA0078", "comment": "Implementing secure coding practices and proper input validation can help prevent attacks exploiting the CSRF vulnerability in DedeCMS. T0078 can be used to harden the application's security posture and reduce the attack surface."}], "technical_analysis": "A full technical analysis of the vulnerability", "executive_analysis": "A full executive analysis of the vulnerability"}