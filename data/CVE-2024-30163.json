{"id": "CVE-2024-30163", "sourceIdentifier": "cve@mitre.org", "published": "2024-06-07T17:15:50.267", "lastModified": "2024-08-08T21:25:19.010", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Invision Community before 4.7.16 allow SQL injection via the applications/nexus/modules/front/store/store.php IPS\\nexus\\modules\\front\\store\\_store::_categoryView() method, where user input passed through the filter request parameter is not properly sanitized before being used to execute SQL queries. This can be exploited by unauthenticated attackers to carry out Blind SQL Injection attacks."}, {"lang": "es", "value": "Invision Community antes de 4.7.16 permite la inyecci\u00f3n de SQL a trav\u00e9s del m\u00e9todo apps/nexus/modules/front/store/store.php IPS\\nexus\\modules\\front\\store\\_store::_categoryView(), donde la entrada del usuario pasaba a trav\u00e9s de la solicitud de filtro el par\u00e1metro no se sanitiza adecuadamente antes de usarse para ejecutar consultas SQL. Esto puede ser aprovechado por atacantes no autenticados para llevar a cabo ataques de inyecci\u00f3n SQL ciega."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:invisioncommunity:invisioncommunity:*:*:*:*:*:*:*:*", "versionStartIncluding": "4.4.0", "versionEndExcluding": "4.7.16", "matchCriteriaId": "F612BBD3-CA37-4707-B0B0-E25CF25694FE"}]}]}], "references": [{"url": "http://seclists.org/fulldisclosure/2024/Apr/20", "source": "cve@mitre.org", "tags": ["Exploit", "Mailing List", "Third Party Advisory"]}, {"url": "https://invisioncommunity.com/release-notes/4716-r128/", "source": "cve@mitre.org", "tags": ["Release Notes"]}], "techniques": [{"techniqueID": "TA0011", "comment": "Unvalidated Web Input (CVE-2024-30163) - Unvalidated user input allows attackers to inject malicious SQL code, which can be used to exploit the vulnerability. Defend against this by using input validation and sanitization techniques."}, {"techniqueID": "TA0015", "comment": "Attackers can use the exploited vulnerability to inject arbitrary SQL commands, which can lead to sensitive data disclosure and potentially affect data confidentiality. Defend against this by using secure coding practices, such as parameterized queries, and regularly testing for SQL injection vulnerabilities."}, {"techniqueID": "TA0005", "comment": "The vulnerability can be exploited by unauthenticated attackers, allowing them to execute arbitrary SQL commands. Defend against this by implementing proper authentication and access control measures, such as Role-Based Access Control (RBAC), and limiting database privileges to necessary users."}], "technical_analysis": {"Introduction": "The vulnerability CVE-2024-30163 is a SQL injection vulnerability in Invision Community 4.7.16 and earlier, allowing attackers to inject malicious SQL code and potentially affect data confidentiality.", "Impact and Scope": "The vulnerability has a CVSS score of 9.8 (CRITICAL) and an attack vector of NETWORK, with potential impact on confidentiality, integrity, and availability.", "Related MITRE ATT&CK Techniques": "Unvalidated Web Input (TA0011), Attackers can inject arbitrary SQL commands (TA0015), and Exploitation of Authentication Mechanism (TA0005).", "Technical Details": "The vulnerability is due to the lack of input validation and sanitization in the _store::_categoryView() method, allowing attackers to inject malicious SQL code.", "Detection": "Detect this vulnerability using web application scanners, such as Burp Suite or ZAP, and monitoring database logs for suspicious SQL queries.", "Mitigation": "Mitigate this vulnerability by using input validation and sanitization techniques, implementing secure coding practices, and limiting database privileges to necessary users.", "Conclusion": "The CVE-2024-30163 vulnerability is a critical SQL injection vulnerability that can allow attackers to inject malicious SQL code and potentially affect data confidentiality. Defend against this vulnerability by implementing proper input validation, secure coding practices, and limiting database privileges."}, "executive_analysis": {"Overview": "The CVE-2024-30163 vulnerability is a critical SQL injection vulnerability in Invision Community 4.7.16 and earlier, allowing attackers to inject malicious SQL code and potentially affect data confidentiality.", "Business Impact": "The vulnerability can lead to sensitive data disclosure, potentially affecting business operations and reputation.", "Technical Impact": "The vulnerability can be exploited by unauthenticated attackers, allowing them to execute arbitrary SQL commands.", "Mitigation Strategies": "Implement input validation and sanitization techniques, secure coding practices, and regularly testing for SQL injection vulnerabilities.", "Recommendations": "Executives should prioritize addressing this vulnerability and implementing effective mitigation strategies to prevent potential attacks.", "Conclusions": "The CVE-2024-30163 vulnerability is a critical SQL injection vulnerability that requires immediate attention and mitigation strategies to prevent potential attacks and data breaches."}}