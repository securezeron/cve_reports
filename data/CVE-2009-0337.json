{"id": "CVE-2009-0337", "sourceIdentifier": "cve@mitre.org", "published": "2009-01-29T18:30:02.657", "lastModified": "2017-09-29T01:33:45.340", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "SQL injection vulnerability in index.asp in Katy Whitton BlogIt! allows remote attackers to execute arbitrary SQL commands via the (1) month and (2) year parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information."}, {"lang": "es", "value": "Vulnerabilidad de inyeccion SQL en index.asp en Katy Whitton BlogIt! permite a atacantes remotos ejecutar comandos SQL a su eleccion a traves de los parametros (1) \"month\" y (2) \"year\". NOTA: Se desconoce la procedencia de la informacion; los detalles fueron obtenidos unicamente de una tercera parte."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:katywhitton:blogit\\!:_nil_:*:*:*:*:*:*:*", "matchCriteriaId": "6E9F41AB-5E33-4785-8869-0FCF9E991776"}]}]}], "references": [{"url": "http://secunia.com/advisories/33572", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "https://www.exploit-db.com/exploits/7806", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2009-0337 - SQL Injection Attack via Unvalidated User Input, attackers can execute arbitrary SQL commands; defenses include validating and sanitizing user input, and implementing a Web Application Firewall (WAF)"}, {"techniqueID": "T1056", "comment": "CVE-2009-0337 - Web Shelling, attackers can execute system commands with elevated privileges; defenses include restricting permissions and access controls, and implementing a secure remote access solution"}], "stix_bundle": {"$objects": [{"$type": "vulnerability", "id": "CVE-2009-0337", "description": "SQL injection vulnerability in index.asp in Katy Whitton BlogIt! allows remote attackers to execute arbitrary SQL commands via the (1) month and (2) year parameters."}, {"$type": "indicator", "id": " Indicator-1", "description": "Unvalidated user input detected", "pattern": "SQL injection attack"}, {"$type": "indicator", "id": "Indicator-2", "description": "Unusual system command execution", "pattern": "WMI/MSSQL commands"}, {"$type": "course-of-action", "id": "COA-1", "description": "Validate and sanitize user input", "techniques": [{"resource_id": "T1059"}]}, {"$type": "course-of-action", "id": "COA-2", "description": "Implement a Web Application Firewall (WAF)", "techniques": [{"resource_id": "T1059"}]}], "stix2_bundle": {"id": "Vulnerability-CVE-2009-0337", "objects": [{"@stix2_extension": {"$type": "stix_vulnerability"}}, {"@stix2_extension": {"$type": "stix_indicator"}}, {"@stix2_extension": {"$type": "stix_course_of_action"}}]}}, "technical_analysis": {"Introduction": "A SQL injection vulnerability was discovered in Katy Whitton BlogIt!'s index.asp, allowing remote attackers to execute arbitrary SQL commands via unvalidated user input.", "Impact and Scope": "CVSS score: 7.5, attack vector: NETWORK; the vulnerability has a moderate impact on the system and can be exploited with low complexity.", "Related MITRE ATT&CK Techniques": "T1059, T1056", "Technical Details": "SQL injection occurs when an application uses user-supplied input to construct database queries without proper validation and sanitization, allowing attackers to inject malicious SQL code.", "Detection": "Detection involves monitoring for unusual system command execution and patterns of unvalidated user input.", "Mitigation": "Mitigation strategies include validating and sanitizing user input, implementing a WAF, and restricting permissions and access controls.", "Conclusion": "A comprehensive approach to defense involves a combination of detection, mitigation, and remediation to minimize the risk of SQL injection attacks."}, "executive_analysis": {"Overview": "A SQL injection vulnerability in Katy Whitton BlogIt!'s index.asp poses a moderate risk to system security, requiring immediate attention and action.", "Business Impact": "The vulnerability has the potential to compromise sensitive data and disrupt business operations, causing financial and reputational damage.", "Technical Impact": "The vulnerability allows remote attackers to execute arbitrary SQL commands, granting them access to sensitive data and system resources.", "Mitigation Strategies": "Implementing a WAF, validating user input, and restricting permissions and access controls can help mitigate the risk of SQL injection attacks.", "Recommendations": "Recommendations include conducting a thorough vulnerability assessment, implementing a remediation plan, and providing training on secure coding practices.", "Conclusions": "Immediate action is required to address the SQL injection vulnerability; a comprehensive approach to defense is critical to minimize the risk of attack."}}