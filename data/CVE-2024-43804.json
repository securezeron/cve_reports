{"id": "CVE-2024-43804", "sourceIdentifier": "security-advisories@github.com", "published": "2024-08-29T17:15:08.193", "lastModified": "2024-09-06T22:57:01.697", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Roxy-WI is a web interface for managing Haproxy, Nginx, Apache and Keepalived servers. An OS Command Injection vulnerability allows any authenticated user on the application to execute arbitrary code on the web application server via port scanning functionality. User-supplied input is used without validation when constructing and executing an OS command. User supplied JSON POST data is parsed and if \"id\" JSON key does not exist, JSON value supplied via \"ip\" JSON key is assigned to the \"ip\" variable. Later on, \"ip\" variable which can be controlled by the attacker is used when constructing the cmd and cmd1 strings without any extra validation. Then, server_mod.subprocess_execute function is called on both cmd1 and cmd2. When the definition of the server_mod.subprocess_execute() function is analyzed, it can be seen that subprocess.Popen() is called on the input parameter with shell=True which results in OS Command Injection. This issue has not yet been patched. Users are advised to contact the Roxy-WI to coordinate a fix."}, {"lang": "es", "value": "Roxy-WI es una interfaz web para administrar servidores Haproxy, Nginx, Apache y Keepalived. Una vulnerabilidad de inyecci\u00f3n de comandos del sistema operativo permite que cualquier usuario autenticado en la aplicaci\u00f3n ejecute c\u00f3digo arbitrario en el servidor de aplicaciones web a trav\u00e9s de la funcionalidad de escaneo de puertos. La entrada proporcionada por el usuario se utiliza sin validaci\u00f3n al construir y ejecutar un comando del sistema operativo. Los datos POST JSON proporcionados por el usuario se analizan y si la clave JSON \"id\" no existe, el valor JSON proporcionado a trav\u00e9s de la clave JSON \"ip\" se asigna a la variable \"ip\". M\u00e1s adelante, la variable \"ip\" que puede ser controlada por el atacante se utiliza al construir las cadenas cmd y cmd1 sin ninguna validaci\u00f3n adicional. Luego, se llama a la funci\u00f3n server_mod.subprocess_execute tanto en cmd1 como en cmd2. Cuando se analiza la definici\u00f3n de la funci\u00f3n server_mod.subprocess_execute(), se puede ver que se llama a subprocess.Popen() en el par\u00e1metro de entrada con shell=True, lo que da como resultado una inyecci\u00f3n de comandos del sistema operativo. Este problema a\u00fan no se ha solucionado. Se recomienda a los usuarios que se pongan en contacto con Roxy-WI para coordinar una soluci\u00f3n."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-78"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-78"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:roxy-wi:roxy-wi:8.0:*:*:*:*:*:*:*", "matchCriteriaId": "E92EACAF-6384-4331-8F22-5CF3B2EB4B5E"}]}]}], "references": [{"url": "https://github.com/roxy-wi/roxy-wi/security/advisories/GHSA-qc52-vwwj-5585", "source": "security-advisories@github.com", "tags": ["Exploit", "Vendor Advisory"]}], "techniques": [{"techniqueID": "T1210", "comment": "CVE-2024-43804 - OS Command Injection vulnerability, executing arbitrary code on the web application server via port scanning functionality"}, {"techniqueID": "T1047", "comment": "CVE-2024-43804 - User-supplied input is used without validation when constructing and executing an OS command"}, {"techniqueID": "T1078", "comment": "CVE-2024-43804 - Lack of proper input validation allows attackers to inject OS commands"}, {"techniqueID": "T1070", "comment": "CVE-2024-43804 - Web Application Attack via user input allowing for OS command execution"}], "stix_bundle": {"sto:Observable": {"id": "obs-00001", "type": "Observable", "created_by_ref": "user:12345", "modified": "2024-09-06T22:57:01.697", "name": "CVE-2024-43804 - OS Command Injection Vulnerability", "description": "Roxy-WI is a web interface for managing Haproxy, Nginx, Apache and Keepalived servers. An OS Command Injection vulnerability allows any authenticated user on the application to execute arbitrary code on the web application server via port scanning functionality.", "created": "2024-08-29T17:15:08.193", "modified_by_ref": "user:12345", "entities": [{"id": "ent-00001", "type": "Vulnerability", "name": "CVE-2024-43804", "description": "An OS Command Injection vulnerability allows any authenticated user on the application to execute arbitrary code on the web application server via port scanning functionality."}]}, "sto:Observable_relationship": [{"id": "rel-00001", "type": "Observable-observable_relationship", "observable_ref": "obs-00001", "enabled": true, "relationship_type": "related_to", "object_ref": "ent-00001"}], "sto:Course_of_Action": {"id": "ca-00001", "type": "Course_of_Action", "name": "Mitigation Strategy 1", "description": "Update the Roxy-WI application to the latest version", "mitigated_technique": "T1210"}, "sto:Course_of_Action_relationship": [{"id": "rel-00002", "type": "Course_of_Action-course_of_action_relationship", "course_of_action_ref": "ca-00001", "enabled": true, "relationship_type": "mitigates", "mitigated_technique": "T1210"}], "sto:Note": {"id": "note-00001", "type": "Note", "name": "Defense Point 1", "description": "Implement input validation and sanitization for user-supplied data", "defended_technique": "T1210"}, "sto:Note_relationship": [{"id": "rel-00003", "type": "Note-note_relationship", "note_ref": "note-00001", "enabled": true, "relationship_type": "defends", "defended_technique": "T1210"}]}, "technical_analysis": {"Introduction": "Roxy-WI is a web interface for managing Haproxy, Nginx, Apache and Keepalived servers.", "Impact and Scope": "The vulnerability allows any authenticated user on the application to execute arbitrary code on the web application server via port scanning functionality.", "Related MITRE ATT&CK Techniques": "T1210, T1047, T1078, T1070", "Technical Details": "User-supplied input is used without validation when constructing and executing an OS command.", "Detection": "Detect unauthorized OS command injection attempts through monitoring for suspicious system commands", "Mitigation": "Implement input validation and sanitization for user-supplied data, update the Roxy-WI application to the latest version", "Conclusion": "The vulnerability poses a significant risk to the security of the affected systems."}, "executive_analysis": {"Overview": "CVE-2024-43804 is a critical OS Command Injection vulnerability affecting Roxy-WI web interface.", "Business Impact": "Exposure to unauthorized OS command injection attempts could lead to data breaches, unauthorized access, and system compromise.", "Technical Impact": "The vulnerability allows attackers to execute arbitrary code on the web application server, compromising system integrity and availability.", "Mitigation Strategies": "Implement input validation and sanitization for user-supplied data, update the Roxy-WI application to the latest version", "Recommendations": "Coordinate with the Roxy-WI team to patch the vulnerability, conduct regular security audits, and implement incident response plans", "Conclusions": "Immediate action is required to mitigate this critical vulnerability."}}