{"id": "CVE-2020-7241", "sourceIdentifier": "cve@mitre.org", "published": "2020-01-20T20:15:11.457", "lastModified": "2022-04-18T15:49:39.157", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The WP Database Backup plugin through 5.5 for WordPress stores downloads by default locally in the directory wp-content/uploads/db-backup/. This might allow attackers to read ZIP archives by guessing random ID numbers, guessing date strings with a 2020_{0..1}{0..2}_{0..3}{0..9} format, guessing UNIX timestamps, and making HTTPS requests with the complete guessed URL."}, {"lang": "es", "value": "El plugin WP Database Backup versiones hasta 5.5 para WordPress, por defecto almacena descargas localmente en el directorio wp-content/uploads/db-backup/. Esto podr\u00eda permitir a atacantes leer archivos ZIP al adivinar los n\u00fameros de ID aleatorios, adivinando cadenas de fecha con un formato 2020_{0..1}{0..2}_{0..3}{0..9}, adivinando las marcas de tiempo UNIX y realizar peticiones HTTPS con la URL adivinada completa."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-330"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wpseeds:wp_database_backup:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "5.5", "matchCriteriaId": "85CCC3AC-E2AA-4893-81CD-5DFF7B93349B"}]}]}], "references": [{"url": "https://github.com/V1n1v131r4/Exploiting-WP-Database-Backup-WordPress-Plugin/blob/master/README.md", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://wordpress.org/plugins/wp-database-backup/#developers", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://zeroauth.ltd/blog/2020/01/21/analysis-on-cve-2020-7241-misrepresenting-a-security-vulnerability/", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1090", "comment": "CVE-2020-7241 - An attacker could read ZIP archives by guessing random ID numbers, guessing date strings with a 2020_{0..1}{0..2}_{0..3}{0..9} format, guessing UNIX timestamps, and making HTTPS requests with the complete guessed URL."}, {"techniqueID": "T1027", "comment": "CVE-2020-7241 - attackers could make HTTPS requests with the complete guessed URL and potentially download ZIP archives."}, {"techniqueID": "T1043", "comment": "CVE-2020-7241 - attackers could use the downloaded ZIP archives to gain unauthorized access to the WordPress database."}, {"techniqueID": "T1110", "comment": "CVE-2020-7241 - attackers could use the downloaded ZIP archives to launch further attacks or potentially leverage the stored login credentials."}, {"techniqueID": "T1123", "comment": "CVE-2020-7241 - attackers could potentially use the stored login credentials to access other tools or resources within the WordPress environment."}], "technical_analysis": {"Introduction": "The WP Database Backup plugin for WordPress, up to and including version 5.5, stores downloads locally in the directory wp-content/uploads/db-backup/ by default.", "Impact and Scope": "The vulnerability affects the WP Database Backup plugin for WordPress, with a CVSS score of 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N) and a medium severity rating.", "Related MITRE ATT&CK Techniques": "This vulnerability is related to multiple MITRE ATT&CK techniques, including T1090 (Reconnaissance: Information Gathering), T1027 (Command and Control: Web Services), T1043 (Command and Control: Exfiltration Over Command and Control Channel), T1110 (Command and Control: Stolen Data), and T1123 (Command and Control: Post Exploitation).", "Technical Details": "The vulnerability allows attackers to read ZIP archives by making HTTPS requests with a complete guessed URL.", "Detection": "Detection of the vulnerability involves monitoring HTTPS requests and suspicious access to the WordPress database backups.", "Mitigation": "Mitigation strategies include disabling the WP Database Backup plugin, changing the download folder permissions, and monitoring for suspicious activity.", "Conclusion": "This vulnerability demonstrates the importance of securely storing and managing sensitive data, particularly in plugins and applications."}, "executive_analysis": {"Overview": "The WP Database Backup plugin for WordPress, up to and including version 5.5, has a critical vulnerability that enables attackers to read ZIP archives and potentially access the WordPress database.", "Business Impact": "This vulnerability could lead to unauthorized access to sensitive data, potential data breaches, and reputation damage.", "Technical Impact": "The vulnerability enables attackers to exploit the download mechanism of the WP Database Backup plugin and access the WordPress database.", "Mitigation Strategies": "Immediate mitigation strategies include disabling the WP Database Backup plugin, changing the download folder permissions, and monitoring for suspicious activity.", "Recommendations": "Recommendations for executives include addressing the vulnerability by updating the plugin, conducting thorough vulnerability assessments, and maintaining regular backup and patching procedures.", "Conclusions": "This vulnerability highlights the importance of maintaining secure plugins, monitoring for suspicious activity, and adhering to best practices for data management and security."}}