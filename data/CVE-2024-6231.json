{"id": "CVE-2024-6231", "sourceIdentifier": "contact@wpscan.com", "published": "2024-07-23T06:15:11.330", "lastModified": "2024-08-01T14:00:16.470", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Request a Quote WordPress plugin before 2.4.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"}, {"lang": "es", "value": " El complemento de WordPress Request a Quote anterior a 2.4.1 no sanitiza ni escapa a algunas de sus configuraciones, lo que podr\u00eda permitir a usuarios con privilegios elevados, como el administrador, realizar ataques de Cross Site Scripting almacenado incluso cuando la capacidad unfiltered_html no est\u00e1 permitida (por ejemplo, en la configuraci\u00f3n de m\u00faltiples sitios)."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 3.7}]}, "references": [{"url": "https://wpscan.com/vulnerability/75ad1d8f-edc3-4eb3-b4c0-73832c0a4ca0/", "source": "contact@wpscan.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-6231 - This Stored Cross-Site Scripting vulnerability allows high privilege users to perform rogue script injection, which can lead to arbitrary code execution. Defend against this by implementing Content Security Policy (CSP) and keeping software up-to-date."}, {"techniqueID": "T1047", "comment": "CVE-2024-6231 - This vulnerability enables Stored Cross-Site Scripting, which can allow attackers to inject malicious scripts. Implement Web Application Firewall (WAF) rules to detect and block suspicious traffic and sanitize user input."}, {"techniqueID": "T1067", "comment": "CVE-2024-6231 - This Stored Cross-Site Scripting vulnerability can lead to data exfiltration. Implement Anti-CSRF token validation and sanitize user input to prevent this from happening."}], "technical_analysis": {"Introduction": "The CVE-2024-6231 vulnerability is a Stored Cross-Site Scripting issue in the Request a Quote WordPress plugin before 2.4.1, which can allow high privilege users to perform Stored Cross-Site Scripting attacks.", "Impact and Scope": "The vulnerability has a CVSS score of 5.9, with an attack complexity of LOW and a user interaction of REQUIRED. It affects users who have the unfiltered_html capability disabled.", "Related MITRE ATT&CK Techniques": "The techniques related to this vulnerability are T1190, T1047, and T1067.", "Technical Details": "The vulnerability occurs because the plugin does not sanitize and escape some of its settings, making it possible for high privilege users to inject rogue scripts.", "Detection": "Detection methods include monitoring for suspicious JavaScript code in the application's output and looking for unusual behavior such as malformed or unexpected script tags.", "Mitigation": "Mitigation strategies include implementing Content Security Policy (CSP), keeping software up-to-date, and implementing Web Application Firewall (WAF) rules to detect and block suspicious traffic.", "Conclusion": "In conclusion, this Stored Cross-Site Scripting vulnerability can have severe consequences, and it's essential to address it by implementing appropriate security measures."}, "executive_analysis": {"Overview": "The CVE-2024-6231 vulnerability is a Stored Cross-Site Scripting issue in the Request a Quote WordPress plugin, which can allow attackers to inject malicious scripts and perform arbitrary code execution.", "Business Impact": "This vulnerability can lead to data exfiltration, unauthorized code execution, and potentially devastating consequences for the organization.", "Technical Impact": "The technical impact of this vulnerability is significant, as it can compromise the security and integrity of the affected systems.", "Mitigation Strategies": "Mitigation strategies include implementing Content Security Policy (CSP), keeping software up-to-date, and monitoring for suspicious traffic.", "Recommendations": "Recommendations include conducting regular security audits and implementing incident response plans to quickly respond to potential incidents.", "Conclusions": "In conclusion, this vulnerability is a serious concern and requires immediate attention and action to mitigate its impact."}}