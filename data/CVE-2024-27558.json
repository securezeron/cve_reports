{"id": "CVE-2024-27558", "sourceIdentifier": "cve@mitre.org", "published": "2024-03-01T17:15:07.490", "lastModified": "2024-08-01T13:48:30.653", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Stupid Simple CMS 1.2.4 is vulnerable to Cross Site Scripting (XSS) within the blog title of the settings."}, {"lang": "es", "value": "Stupid Simple CMS 1.2.4 es vulnerable a Cross Site Scripting (XSS) dentro del t\u00edtulo del blog de la configuraci\u00f3n."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://github.com/kilooooo/cms/blob/main/2.md", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-27558 - Stupid Simple CMS 1.2.4 is vulnerable to Cross Site Scripting (XSS) within the blog title of the settings. This technique is used to inject malicious JavaScript code into the website, allowing an attacker to steal user data, take control of the session, or perform other malicious activities."}, {"techniqueID": "T1040", "comment": "CVE-2024-27558 - Since the vulnerability is stored in a database, an attacker can potentially use T1040 to inject malicious data into the database and exploit the vulnerability."}], "stix_bundle": {"objects": [{"type": "vulnerability", "id": "CVE-2024-27558", "name": "Stupid Simple CMS 1.2.4 XSS Vulnerability", "description": "Stupid Simple CMS 1.2.4 is vulnerable to Cross Site Scripting (XSS) within the blog title of the settings.", "created": "2024-03-01T17:15:07.490", "modified": "2024-08-01T13:48:30.653", "analysis": {"threats": [{"id": "XSS-Attack", "type": "attack-pattern", "name": "XSS Attack", "description": "An attack that injects malicious JavaScript code into a website, allowing an attacker to steal user data, take control of the session, or perform other malicious activities."}]}}, {"type": "attack-pattern", "id": "XSS-Attack", "name": "XSS Attack", "description": "An attack that injects malicious JavaScript code into a website, allowing an attacker to steal user data, take control of the session, or perform other malicious activities."}]}, "technical_analysis": {"Introduction": "Stupid Simple CMS 1.2.4 is vulnerable to Cross Site Scripting (XSS) within the blog title of the settings. This vulnerability allows an attacker to inject malicious JavaScript code into the website, allowing them to steal user data, take control of the session, or perform other malicious activities.", "Impact and Scope": "The vulnerability has a CVSS score of 6.1 with a version of 3.1, and an attack vector of NETWORK. It also has an exploitability score of 2.8 and an impact score of 2.7.", "Related MITRE ATT&CK Techniques": "T1059 and T1040", "Technical Details": "The vulnerability is a stored XSS vulnerability, which means that the malicious code is stored in the database instead of being executed in real-time. This makes it easier for an attacker to craft a more effective attack.", "Detection": "To detect this vulnerability, security researchers can look for the presence of the vulnerable parameter in the HTTP request, or monitor for suspicious JavaScript code being executed on the website.", "Mitigation": "To mitigate this vulnerability, security researchers can patch the vulnerable parameter in the HTTP request, or monitor for suspicious JavaScript code being executed on the website.", "Conclusion": "The Stupid Simple CMS 1.2.4 XSS vulnerability is a potential entry point for an attacker to inject malicious JavaScript code into the website, allowing them to steal user data, take control of the session, or perform other malicious activities."}, "executive_analysis": {"Overview": "The Stupid Simple CMS 1.2.4 XSS vulnerability is a potential risk to the organization, as it allows an attacker to inject malicious JavaScript code into the website.", "Business Impact": "The business impact of this vulnerability is significant, as it allows an attacker to steal user data, take control of the session, or perform other malicious activities.", "Technical Impact": "The technical impact of this vulnerability is also significant, as it exposes the organization to a potential attack.", "Mitigation Strategies": "To mitigate this vulnerability, the organization should patch the vulnerable parameter in the HTTP request, or monitor for suspicious JavaScript code being executed on the website.", "Recommendations": "The organization should also consider implementing additional security measures, such as a web application firewall (WAF) or an intrusion detection system (IDS).", "Conclusions": "In conclusion, the Stupid Simple CMS 1.2.4 XSS vulnerability is a significant risk to the organization, and should be mitigated as soon as possible."}}