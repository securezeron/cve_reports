{"id": "CVE-2024-33799", "sourceIdentifier": "cve@mitre.org", "published": "2024-05-28T16:15:15.937", "lastModified": "2024-08-22T19:35:28.087", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "A SQL injection vulnerability in /model/get_teacher.php in campcodes Complete Web-Based School Management System 1.0 allows an attacker to execute arbitrary SQL commands via the id parameter."}, {"lang": "es", "value": "Una vulnerabilidad de inyecci\u00f3n SQL en /model/get_teacher.php en campcodes Complete Web-Based School Management System 1.0 permite a un atacante ejecutar comandos SQL arbitrarios a trav\u00e9s del par\u00e1metro id."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-89"}]}], "references": [{"url": "https://github.com/E1CHO/cve_hub/blob/main/Complete%20Web-Based%20School%20Management%20System/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2018.pdf", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "TA0001", "comment": "CVE-2024-33799 - This SQL injection vulnerability can be exploited by an attacker to execute arbitrary SQL commands. Defending against this attack requires proper input validation and sanitization of user input."}, {"techniqueID": "TA0159", "comment": "CVE-2024-33799 - attackers may use this vulnerability to execute system commands. Defending against this attack requires proper configuration of access control lists (ACLs) and input validation."}, {"techniqueID": "TA0014", "comment": "CVE-2024-33799 - This vulnerability can be exploited by an attacker to read or write files on the system. Defending against this attack requires proper file permissions and access control."}], "technical_analysis": {"Introduction": "The CVE-2024-33799 vulnerability is a SQL injection vulnerability in the /model/get_teacher.php file of the Complete Web-Based School Management System 1.0. This vulnerability allows an attacker to execute arbitrary SQL commands.", "Impact and Scope": "The impact of this vulnerability is high, with a CVSS score of 9.8 and an attack vector of network. The scope is limited to the /model/get_teacher.php file.", "Related MITRE ATT&CK Techniques": "Related techniques include TA0001, TA0159, and TA0014.", "Technical Details": "The vulnerability is caused by lack of input validation and sanitization of the 'id' parameter. An attacker can inject malicious SQL code to execute arbitrary commands.", "Detection": "Detection of this vulnerability can be done by monitoring for unusual database access patterns and analyzing web application logs for suspicious activity.", "Mitigation": "Mitigating this vulnerability requires proper input validation and sanitization of user input, as well as proper configuration of access control lists (ACLs) and file permissions.", "Conclusion": "This vulnerability is a significant risk to the system and should be addressed promptly."}, "executive_analysis": {"Overview": "The CVE-2024-33799 vulnerability is a critical issue that needs to be addressed promptly.", "Business Impact": "This vulnerability could result in unauthorized access to sensitive data and systems, potentially leading to financial loss and reputational damage.", "Technical Impact": "The technical impact of this vulnerability is the potential for unauthorized access to sensitive data and systems.", "Mitigation Strategies": "Mitigation strategies include implementing proper input validation and sanitization of user input, as well as proper configuration of access control lists (ACLs) and file permissions.", "Recommendations": "Recommendations include prioritizing the remediation of this vulnerability, implementing a web application firewall (WAF), and conducting regular vulnerability scanning and penetration testing.", "Conclusions": "In conclusion, this vulnerability is a critical issue that requires prompt attention and mitigation."}}