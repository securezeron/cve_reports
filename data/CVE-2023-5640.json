{"id": "CVE-2023-5640", "sourceIdentifier": "contact@wpscan.com", "published": "2023-11-20T19:15:09.940", "lastModified": "2023-11-27T16:34:48.403", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Article Analytics WordPress plugin does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection vulnerability."}, {"lang": "es", "value": "El complemento Article Analytics de WordPress no sanitiza ni escapa adecuadamente un par\u00e1metro antes de usarlo en una declaraci\u00f3n SQL a trav\u00e9s de una acci\u00f3n AJAX disponible para usuarios no autenticados, lo que genera una vulnerabilidad de inyecci\u00f3n SQL."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dguzun:article_analytics:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "1.0", "matchCriteriaId": "F843011A-F756-43F0-B4F2-D8D4CF65941D"}]}]}], "references": [{"url": "https://devl00p.github.io/posts/Injection-SQL-dans-le-plugin-Wordpress-Article-Analytics/", "source": "contact@wpscan.com", "tags": ["Exploit"]}, {"url": "https://wpscan.com/vulnerability/9a383ef5-0f1a-4894-8f78-845abcb5062d", "source": "contact@wpscan.com", "tags": ["Exploit", "Product", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059.007", "comment": "CVE-2023-5640 - The vulnerability allows an attacker to inject malicious SQL code, which can lead to unauthorized access to sensitive data. This technique is relevant to this vulnerability, as it highlights the importance of proper input validation and sanitization."}, {"techniqueID": "T1190", "comment": "CVE-2023-5640 - The vulnerability can be exploited by an attacker using SQL injection attacks. This technique is relevant to this vulnerability, as it highlights the importance of preventing such attacks."}, {"techniqueID": "T1027", "comment": "CVE-2023-5640 - The vulnerability can be used by an attacker to inject malicious code, which can lead to unauthorized access to sensitive data. This technique is relevant to this vulnerability, as it highlights the importance of preventing code injection attacks."}], "stix_bundle": {"objects": [{"type": "bundle", "id": "https://example.com/bundle/CVE-2023-5640", "created_by_ref": "organization:http://example.com", "modified": "2023-12-01T12:00:00.000Z", "created": "2023-12-01T12:00:00.000Z", "objects": [{"type": "vulnerability", "id": "https://example.com/vulnerability/CVE-2023-5640", "name": "CVE-2023-5640: Article Analytics WordPress Plugin SQL Injection Vulnerability", "description": "The Article Analytics WordPress plugin does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection vulnerability.", "severity": "HIGH", "cvss": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "references": [{"href": "https://devl00p.github.io/posts/Injection-SQL-dans-le-plugin-Wordpress-Article-Analytics/", "role": "exploit"}, {"href": "https://wpscan.com/vulnerability/9a383ef5-0f1a-4894-8f78-845abcb5062d", "role": "expoit"}], "objects": [{"type": "related-threat", "id": "https://example.com/threat/CVE-2023-5640", "name": "CVE-2023-5640: Threat Profile", "description": "Threat Profile for CVE-2023-5640: Article Analytics WordPress Plugin SQL Injection Vulnerability", "tactics": [{"type": "tactic", "id": "https://example.com/tactic/T1059.007", "name": "Command and Control - Injection"}]}, {"type": "related-vulnerability", "id": "https://example.com/vulnerability/CVE-2023-5640", "name": "CVE-2023-5640: Related Vulnerability"}]}, {"type": "intrusion-set", "id": "https://example.com/intrusion-set/Alien-Soft", "name": "Alien-Soft", "description": "A group of cybercriminals known for exploiting vulnerabilities in popular software", "tactics": [{"type": "tactic", "id": "https://example.com/tactic/T1190", "name": "Exploit publicly known vulnerabilities"}]}]}]}, "technical_analysis": {"Introduction": "The CVE-2023-5640 vulnerability in the Article Analytics WordPress plugin allows attackers to inject malicious SQL code, potentially leading to unauthorized access to sensitive data.", "Impact and Scope": "The vulnerability has a CVSS score of 9.8, with an attack vector of NETWORK, attack complexity of LOW, and user interaction of NONE.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to the following MITRE ATT&CK techniques: T1059.007, T1190, and T1027.", "Technical Details": "The vulnerability is due to the plugin not properly sanitizing and escaping a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users.", "Detection": "Detection methods include monitoring for unusual database activity and monitoring for unauthorized access to sensitive data.", "Mitigation": "Mitigation strategies include applying patches, disabling the vulnerable plugin, and configuring the web server to block access to the plugin.", "Conclusion": "The vulnerability is severe and requires immediate attention to prevent unauthorized access to sensitive data."}, "executive_analysis": {"Overview": "The CVE-2023-5640 vulnerability in the Article Analytics WordPress plugin poses a significant risk to organizations that use this software.", "Business Impact": "The vulnerability could potentially lead to the theft of sensitive business data, including financial and customer information.", "Technical Impact": "The vulnerability could potentially allow attackers to gain unauthorized access to the plugin and steal sensitive data.", "Mitigation Strategies": "Applying patches, disabling the vulnerable plugin, and configuring the web server to block access to the plugin are high-level mitigation strategies.", "Recommendations": "Organizations should take immediate action to patch the vulnerability and disable the vulnerable plugin.", "Conclusions": "The vulnerability is a high-priority issue that requires immediate attention to prevent unauthorized access to sensitive data."}}