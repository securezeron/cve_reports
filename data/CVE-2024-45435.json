{"id": "CVE-2024-45435", "sourceIdentifier": "cve@mitre.org", "published": "2024-08-29T03:15:05.357", "lastModified": "2024-09-03T17:23:36.073", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Chartist 1.x through 1.3.0 allows Prototype Pollution via the extend function."}, {"lang": "es", "value": "Chartist 1.x a 1.3.0 permite la contaminaci\u00f3n de prototipos a trav\u00e9s de la funci\u00f3n de extensi\u00f3n."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-1321"}]}, {"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-1321"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:chartist:chartist:*:*:*:*:*:node.js:*:*", "versionStartIncluding": "1.0.0", "versionEndIncluding": "1.3.0", "matchCriteriaId": "EC330989-A887-440D-9A6A-AFE444D028C7"}]}]}], "references": [{"url": "https://gist.github.com/tariqhawis/c67177164d3b7975210caddb25b60d62", "source": "cve@mitre.org", "tags": ["Exploit"]}, {"url": "https://github.com/chartist-js/chartist/issues/1427", "source": "cve@mitre.org", "tags": ["Issue Tracking"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-45435 - This vulnerability allows an attacker to inject malicious code into the Chartis application, potentially leading to a remote code execution attack. The attacker can exploit this by injecting a malicious payload into the application through the affected function, which is then executed by the application, allowing the attacker to access or modify sensitive data."}, {"techniqueID": "T1204", "comment": "CVE-2024-45435 - This vulnerability can also be used for Lateral Movement, as the attacker can leverage the injected payload to move laterally within the network and maintain persistence."}, {"techniqueID": "T1410", "comment": "CVE-2024-45435 - This vulnerability can be used for Input Validation Smuggling, as the attacker can inject malicious data into the application, which will then be executed by the application, potentially leading to a remote code execution attack."}], "stix_bundle": {"objects": [{"id": "CVE-2024-45435", "type": "vulnerability", "created_by_ref": "stix_cve_relationship", "created": "2024-08-29T03:15:05.357Z", "modified": "2024-09-03T17:23:36.073Z", "name": "CVE-2024-45435", "description": "Chartist 1.x through 1.3.0 allows Prototype Pollution via the extend function.", " exploited_by_refs": [{"type": "tool", "id": "tariqhawis/c67177164d3b7975210caddb25b60d62"}], "references": [{"type": "tool", "id": "cve@mitre.org"}]}, {"id": "T1190", "type": "attack-pattern", "name": "Local File Inclusion", "description": "An attacker exploits a vulnerable server-side application by injecting malicious code into a local file inclusion vulnerability.", "attack_patterns": [{"id": "Local File Inclusion", "name": "Local File Inclusion", "description": "An attacker exploits a vulnerable server-side application by injecting malicious code into a local file inclusion vulnerability."}]}, {"id": "T1204", "type": "attack-pattern", "name": "Lateral Movement", "description": "An attacker moves laterally within a network to maintain persistence or escalate privileges.", "attack_patterns": [{"id": "Lateral Movement", "name": "Lateral Movement", "description": "An attacker moves laterally within a network to maintain persistence or escalate privileges."}]}, {"id": "T1410", "type": "attack-pattern", "name": "Input Validation Smuggling", "description": "An attacker injects malicious input data into a web application's input validation mechanism, allowing them to manipulate the application's behavior.", "attack_patterns": [{"id": "Input Validation Smuggling", "name": "Input Validation Smuggling", "description": "An attacker injects malicious input data into a web application's input validation mechanism, allowing them to manipulate the application's behavior."}]}], "relationships": [{"id": "CVE-2024-45435-T1190", "type": "related_to", "source_ref": "CVE-2024-45435", "target_ref": "T1190"}, {"id": "CVE-2024-45435-T1204", "type": "related_to", "source_ref": "CVE-2024-45435", "target_ref": "T1204"}, {"id": "CVE-2024-45435-T1410", "type": "related_to", "source_ref": "CVE-2024-45435", "target_ref": "T1410"}]}, "technical_analysis": {"Introduction": "CVE-2024-45435 is a prototype pollution vulnerability in Chartist, a popular JavaScript charting library. The vulnerability allows an attacker to inject malicious code into the application, potentially leading to a remote code execution attack.", "Impact and Scope": "The impact of this vulnerability is high, with a CVSS score of 9.8. The scope of the vulnerability is network-based, and it can be exploited by an attacker who has access to the affected application.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques for this vulnerability are Local File Inclusion, Lateral Movement, and Input Validation Smuggling.", "Technical Details": "The vulnerability is caused by a prototype pollution vulnerability in the extend function of Chartist, which allows an attacker to inject malicious code into the application.", "Detection": "To detect this vulnerability, security professionals can use techniques such as static and dynamic code analysis, as well as network traffic analysis.", "Mitigation": "To mitigate this vulnerability, security professionals can apply patches and updates to affected applications, and implement strict input validation and sanitization mechanisms.", "Conclusion": "In conclusion, CVE-2024-45435 is a high-severity prototype pollution vulnerability in Chartist that can be exploited by an attacker to inject malicious code into the application. Security professionals should prioritize patching and updating affected applications, and implementing strict input validation and sanitization mechanisms."}, "executive_analysis": {"Overview": "CVE-2024-45435 is a high-severity prototype pollution vulnerability in Chartist, a popular JavaScript charting library.", "Business Impact": "The business impact of this vulnerability is significant, as it can be exploited by an attacker to inject malicious code into the application, potentially leading to a remote code execution attack.", "Technical Impact": "The technical impact of this vulnerability is high, with a CVSS score of 9.8. The scope of the vulnerability is network-based, and it can be exploited by an attacker who has access to the affected application.", "Mitigation Strategies": "The mitigation strategies for this vulnerability include applying patches and updates to affected applications, implementing strict input validation and sanitization mechanisms, and conducting regular security testing and vulnerability assessments.", "Recommendations": "We recommend that security professionals prioritize patching and updating affected applications, and implementing strict input validation and sanitization mechanisms.", "Conclusions": "In conclusion, CVE-2024-45435 is a high-severity prototype pollution vulnerability in Chartist that requires immediate attention and mitigation. We recommend that security professionals prioritize patching and updating affected applications, and implementing strict input validation and sanitization mechanisms."}}