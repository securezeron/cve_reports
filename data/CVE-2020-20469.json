{"id": "CVE-2020-20469", "sourceIdentifier": "cve@mitre.org", "published": "2021-06-21T05:15:06.567", "lastModified": "2021-06-23T19:33:23.187", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "White Shark System (WSS) 1.3.2 has a SQL injection vulnerability. The vulnerability stems from the log_edit.php files failing to filter the csa_to_user parameter, remote attackers can exploit the vulnerability to obtain database sensitive information."}, {"lang": "es", "value": "White Shark System (WSS) versi\u00f3n 1.3.2, presenta una vulnerabilidad de inyecci\u00f3n SQL. La vulnerabilidad es debido a que los archivos log_edit.php presentan un fallo en filtrar el par\u00e1metro csa_to_user, unos atacantes remotos pueden explotar la vulnerabilidad para obtener informaci\u00f3n confidencial de la base de datos"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:white_shark_systems_project:white_shark_systems:1.3.2:*:*:*:*:*:*:*", "matchCriteriaId": "4A3A8318-3DE4-4E64-BEE2-E83468388BDA"}]}]}], "references": [{"url": "https://github.com/itodaro/WhiteSharkSystem_cve", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "TA0008", "comment": "CVE-2020-20469 - This is a SQL injection vulnerability that can be exploited by an attacker to extract sensitive information from the database. This technique is important as it highlights the importance of proper input validation and sanitization in preventing such attacks."}, {"techniqueID": "TA0012", "comment": "CVE-2020-20469 - This technique is relevant as it involves exploitation of the SQL injection vulnerability. It demonstrates how attackers can manipulate the input data to extract sensitive information from the database."}, {"techniqueID": "TA0021", "comment": "CVE-2020-20469 - This technique is important as it involves exploiting the vulnerability to elevate privileges. It highlights the importance of proper access control and privilege management in preventing such attacks."}, {"techniqueID": "T1190", "comment": "CVE-2020-20469 - This technique is relevant as it involves exploiting the SQL injection vulnerability to steal sensitive information. It demonstrates how attackers can exploit the vulnerability to gain unauthorized access to sensitive data."}], "stix_bundle": {"stix_Bundle": {"id": "urn:uuid:12345678-1234-1234-1234-123456789012", "type": "bundle", "created_by_ref": "urn:stix: vuln: CVE-2020-20469", "created": "2021-07-01T00:00:00.000Z", "mod_time": "2021-07-01T00:00:00.000Z", "name": "Vulnerability Bundle", "description": "Vulnerability Bundle for CVE-2020-20469", "objects": [{"id": "urn:stix: vuln: CVE-2020-20469", "type": "vulnerability", "name": "Vulnerability", "description": "SQL injection vulnerability in White Shark System (WSS) 1.3.2.", "created_by_ref": "urn:stix: entity: User1", "created": "2021-07-01T00:00:00.000Z", "mod_time": "2021-07-01T00:00:00.000Z", "permissions": ["read", "write"], "labels": ["SQL Injection", "Vulnerability", "Exploit"]}, {"id": "urn:stix: course_of_action: TA0008", "type": "course-of-action", "name": "Course of Action", "description": "Apply input validation and sanitization to prevent SQL injection attacks.", "created_by_ref": "urn:stix: entity: User1", "created": "2021-07-01T00:00:00.000Z", "mod_time": "2021-07-01T00:00:00.000Z", "references": ["urn:stix:technique: TA0008"]}, {"id": "urn:stix: entity: WSS 1.3.2", "type": "entity", "name": "Entity", "description": "White Shark System (WSS) 1.3.2", "created_by_ref": "urn:stix: entity: User1", "created": "2021-07-01T00:00:00.000Z", "mod_time": "2021-07-01T00:00:00.000Z", "labels": ["Software", "Vulnerable"]}]}}, "technical_analysis": {"Introduction": "The vulnerability is a SQL injection vulnerability in White Shark System (WSS) 1.3.2. It allows an attacker to extract sensitive information from the database.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5 and an attack vector of NETWORK.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques are TA0008, TA0012, TA0021, and T1190.", "Technical Details": "The vulnerability is caused by the failure of the log_edit.php file to filter the csa_to_user parameter.", "Detection": "Detection involves monitoring database queries for suspicious activity and looking for signs of SQL injection attacks.", "Mitigation": "Mitigation involves applying input validation and sanitization to prevent SQL injection attacks.", "Conclusion": "In conclusion, the vulnerability is a serious security risk that can be exploited by an attacker to extract sensitive information from the database."}, "executive_analysis": {"Overview": "The vulnerability is a serious security risk that can be exploited by an attacker to extract sensitive information from the database.", "Business Impact": "The vulnerability can impact the business by allowing an attacker to steal sensitive information, such as financial data or personally identifiable information.", "Technical Impact": "The vulnerability can impact the technical infrastructure by allowing an attacker to gain unauthorized access to the database and potentially compromise sensitive information.", "Mitigation Strategies": "The mitigation strategies include applying input validation and sanitization to prevent SQL injection attacks.", "Recommendations": "Recommended mitigation strategies include applying input validation and sanitization to prevent SQL injection attacks and monitoring database queries for suspicious activity.", "Conclusions": "In conclusion, the vulnerability is a serious security risk that requires immediate attention and mitigation."}}