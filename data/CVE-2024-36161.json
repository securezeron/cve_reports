{"id": "CVE-2024-36161", "sourceIdentifier": "psirt@adobe.com", "published": "2024-06-13T08:16:05.573", "lastModified": "2024-06-14T20:33:46.227", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Adobe Experience Manager versions 6.5.20 and earlier are affected by a stored Cross-Site Scripting (XSS) vulnerability that could be abused by an attacker to inject malicious scripts into vulnerable form fields. Malicious JavaScript may be executed in a victim\u2019s browser when they browse to the page containing the vulnerable field."}, {"lang": "es", "value": "Las versiones 6.5.20 y anteriores de Adobe Experience Manager se ven afectadas por una vulnerabilidad de cross-site scripting (XSS) almacenado que un atacante podr\u00eda aprovechar para inyectar scripts maliciosos en campos de formulario vulnerables. Se puede ejecutar JavaScript malicioso en el navegador de la v\u00edctima cuando navega a la p\u00e1gina que contiene el campo vulnerable."}], "metrics": {"cvssMetricV31": [{"source": "psirt@adobe.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}]}, "weaknesses": [{"source": "psirt@adobe.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:adobe:experience_manager:*:*:*:*:*:*:*:*", "versionEndExcluding": "6.5.21", "matchCriteriaId": "33F20D83-E0D3-4504-B15F-C3240F8CFB90"}, {"vulnerable": true, "criteria": "cpe:2.3:a:adobe:experience_manager:*:*:*:*:aem_cloud_service:*:*:*", "versionEndExcluding": "2024.5", "matchCriteriaId": "8A667B96-AB3F-48AB-9980-11AB79AA7BD7"}]}]}], "references": [{"url": "https://helpx.adobe.com/security/products/experience-manager/apsb24-28.html", "source": "psirt@adobe.com", "tags": ["Vendor Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-36161 - An attacker can inject malicious JavaScript into vulnerable form fields, which can be executed in a victim's browser. To defend against this, ensure web applications and user interfaces are properly configured and validated for Cross-Site Scripting (XSS) attacks."}, {"techniqueID": "T1208", "comment": "CVE-2024-36161 - Stored Cross-Site Scripting (XSS) vulnerabilities can be exploited to inject malicious scripts into vulnerable form fields. Implement measures to detect and prevent XSS attacks, such as validating user input, and using Content Security Policy (CSP) to define allowed sources of content."}, {"techniqueID": "T1190", "comment": "CVE-2024-36161 - Malicious scripts injected into vulnerable form fields can be used to steal sensitive information. Implement browser-based protections, such as JavaScript sandboxing, and regularly update software and plugins to prevent exploitation of known vulnerabilities."}, {"techniqueID": "T1534", "comment": "CVE-2024-36161 - Cross-Site Scripting (XSS) attacks can be used to steal user authentication credentials. Implement strong authentication and authorization mechanisms, and ensure regular updates and patches for software and plugins to prevent exploitation of known vulnerabilities."}], "technical_analysis": {"Introduction": "The CVE-2024-36161 vulnerability is a stored Cross-Site Scripting (XSS) vulnerability in Adobe Experience Manager versions 6.5.20 and earlier, which can be exploited to inject malicious scripts into vulnerable form fields.", "Impact and Scope": "The vulnerability has a CVSS score of 5.4 (MEDIUM) with an attack vector of NETWORK and an attack complexity of LOW.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques for this vulnerability include T1059, T1208, T1190, and T1534.", "Technical Details": "The vulnerability occurs due to a lack of input validation and sanitization in the Adobe Experience Manager, allowing an attacker to inject malicious JavaScript code into vulnerable form fields.", "Detection": "The vulnerability can be detected by monitoring for suspicious JavaScript code injection in form fields and by implementing web application security testing tools.", "Mitigation": "The vulnerability can be mitigated by implementing web application security measures, such as validating user input, using Content Security Policy (CSP) to define allowed sources of content, and regularly updating software and plugins.", "Conclusion": "The CVE-2024-36161 vulnerability highlights the importance of implementing robust web application security measures to prevent Cross-Site Scripting (XSS) attacks and protect against malicious code injection."}, "executive_analysis": {"Overview": "The CVE-2024-36161 vulnerability is a critical security issue in Adobe Experience Manager versions 6.5.20 and earlier, which can be exploited to inject malicious scripts into vulnerable form fields.", "Business Impact": "The vulnerability can result in the theft of sensitive information, compromise of authentication credentials, and financial loss due to reputational damage.", "Technical Impact": "The vulnerability allows an attacker to inject malicious JavaScript code into vulnerable form fields, which can be executed in a victim's browser and compromised sensitive information.", "Mitigation Strategies": "Implement web application security measures, such as validating user input, using Content Security Policy (CSP) to define allowed sources of content, and regularly updating software and plugins.", "Recommendations": "Recommendations for executives include prioritizing web application security, implementing robust security measures, and regularly testing for vulnerabilities.", "Conclusions": "The CVE-2024-36161 vulnerability highlights the importance of prioritizing web application security and implementing robust security measures to prevent Cross-Site Scripting (XSS) attacks and protect against malicious code injection."}}