{"id": "CVE-2024-3244", "sourceIdentifier": "security@wordfence.com", "published": "2024-04-09T19:15:40.550", "lastModified": "2024-04-10T13:23:38.787", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The EmbedPress \u2013 Embed PDF, Google Docs, Vimeo, Wistia, Embed YouTube Videos, Audios, Maps & Embed Any Documents in Gutenberg & Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's \r\n'embedpress_calendar' shortcode in all versions up to, and including, 3.9.14 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El complemento EmbedPress \u2013 Embed PDF, Google Docs, Vimeo, Wistia, Embed YouTube Videos, Audios, Maps &amp; Embed Any Documents in Gutenberg &amp; Elementor para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del c\u00f3digo corto 'embedpress_calendar' del complemento en todas las versiones hasta hasta, e incluyendo, 3.9.14 debido a una sanitizaci\u00f3n insuficiente de las entradas y a la salida de salida en los atributos proporcionados por el usuario. Esto hace posible que atacantes autenticados, con acceso de nivel de colaborador y superior, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/browser/embedpress/tags/3.9.13/EmbedPress/ThirdParty/Googlecalendar/Embedpress_Google_Helper.php#L657", "source": "security@wordfence.com"}, {"url": "https://plugins.trac.wordpress.org/changeset/3064544/embedpress/tags/3.9.15/EmbedPress/ThirdParty/Googlecalendar/Embedpress_Google_Helper.php", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/778d8443-fc0f-4e97-8460-e5ceee8b62a1?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1190", "comment": " CVE-2024-3244 - This Stored Cross-Site Scripting (XSS) vulnerability allows attackers to inject malicious scripts in pages, which can be executed by authenticated users with contributor-level access and above. Defenders can use Web Application Firewalls (WAFs) to block suspicious script traffic and monitor user input for malicious activity."}, {"techniqueID": "T1059", "comment": " CVE-2024-3244 - The vulnerability can be exploited by authenticated attackers, which implies that a login or other authentication mechanism is present. Defenders can monitor login attempts and failed login attempts to detect potential exploitation attempts and implement robust authentication and access controls."}, {"techniqueID": "T1193", "comment": " CVE-2024-3244 - The XSS vulnerability can be used to inject malicious scripts into pages, which can be executed by authenticated users. Defenders can use input validation and sanitization techniques to prevent malicious script injection and monitor user input for suspicious activity."}], "stix_bundle": {"@timestamp": "2024-04-09T19:15:40.550", "identity": {"group": "Vulnerability", "creator": "security@wordfence.com", "description": "Wordfence Security - Embedded Cross-Site Scripting Vulnerability"}, "objects": [{"ID": "vulnerability", "type": "vulnerability", "description": "Wordfence Security - Embedded Cross-Site Scripting Vulnerability"}, {"ID": "technique", "type": "technique", "description": "Stored Cross-Site Scripting (XSS)"}, {"ID": "indicator", "type": "indicator", "description": "Suspicious script traffic"}], "relationships": [{"source_ref": "vulnerability", "target_ref": "technique", "relationship_type": "exploits"}, {"source_ref": "technique", "target_ref": "indicator", "relationship_type": "generated"}]}, "technical_analysis": {"Introduction": "The Wordfence Security vulnerability is a Stored Cross-Site Scripting (XSS) vulnerability in the EmbedPress plugin for WordPress.", "Impact and Scope": "The vulnerability can be exploited by authenticated attackers with contributor-level access or above, leading to the execution of malicious scripts in pages.", "Related MITRE ATT&CK Techniques": "T1190, T1059, T1193", "Technical Details": "The vulnerability is caused by insufficient input sanitization and output escaping in the plugin's 'embedpress_calendar' shortcode.", "Detection": "Web Application Firewalls (WAFs) can be used to block suspicious script traffic. Monitoring user input for malicious activity can also help detect exploitation attempts.", "Mitigation": "Input validation and sanitization can prevent malicious script injection. Implementing robust authentication and access controls can also help defend against this vulnerability.", "Conclusion": "This vulnerability highlights the importance of input validation and sanitization in web applications, as well as the need for robust authentication and access controls."}, "executive_analysis": {"Overview": "Wordfence Security has identified a vulnerability in the EmbedPress plugin for WordPress.", "Business Impact": "The vulnerability can lead to the execution of malicious scripts in pages, which can result in data breaches and other security incidents.", "Technical Impact": "The vulnerability is caused by insufficient input sanitization and output escaping, which can lead to the execution of malicious scripts in pages.", "Mitigation Strategies": "Implementing input validation and sanitization, and robust authentication and access controls, can help defend against this vulnerability.", "Recommendations": "Executives are recommended to prioritize patching and updating vulnerable plugins and implementing additional security measures to prevent exploitation.", "Conclusions": "This vulnerability highlights the need for regular security assessments and updates to ensure the security and integrity of web applications."}}