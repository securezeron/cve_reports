{"id": "CVE-2020-26165", "sourceIdentifier": "cve@mitre.org", "published": "2020-12-31T21:15:12.207", "lastModified": "2021-07-21T11:39:23.747", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "qdPM through 9.1 allows PHP Object Injection via timeReportActions::executeExport in core/apps/qdPM/modules/timeReport/actions/actions.class.php because unserialize is used."}, {"lang": "es", "value": "qdPM versiones hasta 9.1, permite una inyecci\u00f3n de objetos PHP por medio de la funci\u00f3n timeReportActions::executeExport en el archivo core/apps/qdPM/modules/timeReport/actions/actions.class.php porque una deserializaci\u00f3n es usada."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-502"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:qdpm:qdpm:*:*:*:*:*:*:*:*", "versionEndIncluding": "9.1", "matchCriteriaId": "23E0AE8C-5310-4A59-BBED-3909BD330B30"}]}]}], "references": [{"url": "http://packetstormsecurity.com/files/160733/qdPM-9.1-PHP-Object-Injection.html", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}, {"url": "http://qdpm.net/qdpm-release-notes-free-project-management", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "http://seclists.org/fulldisclosure/2021/Jan/10", "source": "cve@mitre.org", "tags": ["Exploit", "Mailing List", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1203", "comment": "CVE-2020-26165 - PHP Object Injection vulnerability in qdPM, allows attacker to execute arbitrary PHP code. This technique is relevant and a potential point of attack, and can be defended against by implementing input validation and sanitization, and restricting the use of unserialize function."}, {"techniqueID": "T1047", "comment": "CVE-2020-26165 - PHP Object Injection vulnerability in qdPM allows attackers to inject malicious PHP objects, effectively performing code execution. This technique is relevant and a potential point of attack, and can be defended against by implementing strong input validation and sanitization, and restricting the use of unserialize function."}, {"techniqueID": "T1035", "comment": "CVE-2020-26165 - qdPM's unserialize function allows attackers to inject malicious PHP objects, leading to code execution. This technique is relevant and a potential point of attack, and can be defended against by implementing strong input validation and sanitization, and restricting the use of unserialize function."}, {"techniqueID": "T1204", "comment": "CVE-2020-26165 - PHP Object Injection vulnerability in qdPM, allows attacker to execute arbitrary PHP code. This technique is relevant and a potential point of attack, and can be defended against by implementing input validation and sanitization, and restricting the use of unserialize function."}, {"techniqueID": "T1505", "comment": "CVE-2020-26165 - PHP Object Injection vulnerability in qdPM allows attackers to inject malicious PHP objects, effectively performing code execution. This technique is relevant and a potential point of attack, and can be defended against by implementing strong input validation and sanitization, and restricting the use of unserialize function."}], "stix_bundle": {"type": "bundle", "id": "https://example.com/cve-2020-26165", "created": "2021-07-21T11:39:23.747", "modified": "2021-07-21T11:39:23.747", "labels": ["CVE-2020-26165", "qdPM", "PHP Object Injection"], "objects": [{"type": "vulnerability", "id": "https://example.com/cve-2020-26165", "description": "qdPM through 9.1 allows PHP Object Injection via timeReportActions::executeExport in core/apps/qdPM/modules/timeReport/actions/actions.class.php because unserialize is used.", "cve": {"CVE_data_meta": {"ID": "CVE-2020-26165"}, "problemtype": {"problemtype_data": [{"affected_product": [{"vulnerability": "qdPM", "version": "9.1"}]}]}}}, {"type": "intrusion-set", "id": "https://example.com/ malicious-php-objects", "description": "A set of malicious PHP objects used in exploitation of CVE-2020-26165", "labels": ["Malicious PHP Objects", "qdPM", "PHP Object Injection"]}, {"type": "indicator", "id": "https://example.com/php-object-injection", "description": "Indicator of potential PHP Object Injection exploitation", "labels": ["PHP Object Injection", "qdPM", "CWE-502"], "Observable": {"sightings": [{"value": "https://example.com/php-object-injection", "startTime": "2021-07-21T11:39:23.747", "endTime": "2021-07-21T11:39:23.747"}]}}, {"type": "course-of-action", "id": "https://example.com/mitigate-php-object-injection", "description": "A course of action to mitigate PHP Object Injection exploitation", "labels": ["Mitigate PHP Object Injection", "qdPM", "CWE-502"], "relationship": [{"id": "https://example.com/mitigate-php-object-injection", "type": "mitigates", "to_ref": "https://example.com/php-object-injection", "scheme": "https://example.com/cve-2020-26165"}]}]}, "technical_analysis": {"Introduction": "qdPM, a free project management software, is vulnerable to PHP Object Injection due to an unserialize function being used. This vulnerability allows attackers to execute arbitrary PHP code.", "Impact and Scope": "The vulnerability has a CVSS score of 8.8 and an attack vector of NETWORK. It allows attackers to inject malicious PHP objects, effectively performing code execution.", "Related MITRE ATT&CK Techniques": "T1203, T1047, T1035, T1204, T1505", "Technical Details": "The vulnerability occurs in the unserialize function used in the timeReportActions::executeExport function of the actions.class.php file.", "Detection": "Detection can be based on network traffic patterns and system calls.", "Mitigation": "Mitigation strategies include input validation and sanitization, restricting the use of unserialize function, and patching the affected software.", "Conclusion": "qdPM's PHP Object Injection vulnerability is a serious threat that must be mitigated."}, "executive_analysis": {"Overview": "qdPM's PHP Object Injection vulnerability is a significant threat to enterprise systems.", "Business Impact": "The vulnerability can result in data breaches, financial losses, and reputational damage.", "Technical Impact": "The vulnerability allows attackers to execute arbitrary PHP code, effectively taking control of the system.", "Mitigation Strategies": "Implement input validation and sanitization, restrict the use of unserialize function, and patch the affected software.", "Recommendations": "Recommend patching the software, validating and sanitizing user input, and restricting access to sensitive areas.", "Conclusions": "The qdPM's PHP Object Injection vulnerability must be taken seriously and mitigated immediately."}}