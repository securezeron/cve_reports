{"id": "CVE-2024-31210", "sourceIdentifier": "security-advisories@github.com", "published": "2024-04-04T23:15:16.127", "lastModified": "2024-04-05T12:40:52.763", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "WordPress is an open publishing platform for the Web. It's possible for a file of a type other than a zip file to be submitted as a new plugin by an administrative user on the Plugins -> Add New -> Upload Plugin screen in WordPress. If FTP credentials are requested for installation (in order to move the file into place outside of the `uploads` directory) then the uploaded file remains temporary available in the Media Library despite it not being allowed. If the `DISALLOW_FILE_EDIT` constant is set to `true` on the site _and_ FTP credentials are required when uploading a new theme or plugin, then this technically allows an RCE when the user would otherwise have no means of executing arbitrary PHP code. This issue _only_ affects Administrator level users on single site installations, and Super Admin level users on Multisite installations where it's otherwise expected that the user does not have permission to upload or execute arbitrary PHP code. Lower level users are not affected. Sites where the `DISALLOW_FILE_MODS` constant is set to `true` are not affected. Sites where an administrative user either does not need to enter FTP credentials or they have access to the valid FTP credentials, are not affected. The issue was fixed in WordPress 6.4.3 on January 30, 2024 and backported to versions 6.3.3, 6.2.4, 6.1.5, 6.0.7, 5.9.9, 5.8.9, 5.7.11, 5.6.13, 5.5.14, 5.4.15, 5.3.17, 5.2.20, 5.1.18, 5.0.21, 4.9.25, 2.8.24, 4.7.28, 4.6.28, 4.5.31, 4.4.32, 4.3.33, 4.2.37, and 4.1.40. A workaround is available. If the `DISALLOW_FILE_MODS` constant is defined as `true` then it will not be possible for any user to upload a plugin and therefore this issue will not be exploitable.\n"}, {"lang": "es", "value": "WordPress es una plataforma de publicaci\u00f3n abierta para la Web. Es posible que un usuario administrativo env\u00ede un archivo de un tipo que no sea un archivo zip como un nuevo complemento en la pantalla Complementos -&gt; Agregar nuevo -&gt; Cargar complemento en WordPress. Si se solicitan credenciales FTP para la instalaci\u00f3n (para mover el archivo a un lugar fuera del directorio `uploads`), entonces el archivo cargado permanece disponible temporalmente en la librer\u00eda multimedia a pesar de que no est\u00e9 permitido. Si la constante `DISALLOW_FILE_EDIT` se establece en `true` en el sitio _y_ se requieren credenciales FTP al cargar un nuevo tema o complemento, entonces esto t\u00e9cnicamente permite un RCE cuando el usuario no tendr\u00eda medios para ejecutar c\u00f3digo PHP arbitrario. Este problema _solo_ afecta a los usuarios de nivel de administrador en instalaciones de un solo sitio y a los usuarios de nivel de superadministrador en instalaciones de m\u00faltiples sitios donde, de lo contrario, se espera que el usuario no tenga permiso para cargar o ejecutar c\u00f3digo PHP arbitrario. Los usuarios de niveles inferiores no se ven afectados. Los sitios donde la constante `DISALLOW_FILE_MODS` est\u00e1 establecida en `true` no se ven afectados. Los sitios donde un usuario administrativo no necesita ingresar credenciales FTP o tiene acceso a las credenciales FTP v\u00e1lidas no se ven afectados. El problema se solucion\u00f3 en WordPress 6.4.3 el 30 de enero de 2024 y se actualiz\u00f3 a las versiones 6.3.3, 6.2.4, 6.1.5, 6.0.7, 5.9.9, 5.8.9, 5.7.11, 5.6.13. 5.5.14, 5.4.15, 5.3.17, 5.2.20, 5.1.18, 5.0.21, 4.9.25, 2.8.24, 4.7.28, 4.6.28, 4.5.31, 4.4.32, 4.3. 33, 4.2.37 y 4.1.40. Hay una soluci\u00f3n disponible. Si la constante `DISALLOW_FILE_MODS` se define como `true`, ning\u00fan usuario podr\u00e1 cargar un complemento y, por lo tanto, este problema no ser\u00e1 explotable."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.6, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.0, "impactScore": 6.0}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-434"}]}], "references": [{"url": "https://github.com/WordPress/wordpress-develop/security/advisories/GHSA-x79f-xrjv-jx5r", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-31210: An Attacker could exploit this vulnerability by using a theme or plugin upload functionality to upload an arbitrary PHP file. This could result in Remote Code Execution (RCE)."}, {"techniqueID": "T1204", "comment": "CVE-2024-31210: A vulnerable theme or plugin could be uploaded by an attacker, allowing them to upload an arbitrary PHP file and execute it via an FTP server."}, {"techniqueID": "T1133", "comment": "CVE-2024-31210: An attacker could exploit this vulnerability by uploading a malicious theme or plugin and then using the FTP server to execute the malicious code."}], "stix_bundle": {"identity": {"type": " Vulnerability", "value": "CVE-2024-31210"}, "vulnerability": {"description": "A vulnerability in WordPress allows an attacker to upload a theme or plugin and then execute arbitrary PHP code via an FTP server.", "cvssScore": 7.6, "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:C/C:H/I:H/A:H", "cvssVectorVersion": "3.1", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseSeverity": "HIGH"}, "notes": [{"note": "To mitigate this vulnerability, it is recommended to update to the latest version of WordPress.", "relationship": " Mitigates", "technique": {"techniqueID": "T1190"}}], "tasks": [{"type": " Course of Action", "description": "Apply the latest security patches to WordPress.", "relationship": "Mitigates", "technique": {"techniqueID": "T1190"}}]}, "technical_analysis": {"Introduction": "CVE-2024-31210 is a vulnerability in WordPress that allows an attacker to upload a theme or plugin and then execute arbitrary PHP code via an FTP server.", "Impact and Scope": "The vulnerability has a CVSS score of 7.6 and affects WordPress versions prior to 6.4.3.", "Related MITRE ATT&CK Techniques": "T1190, T1204, T1133", "Technical Details": "The vulnerability is caused by the fact that WordPress allows an administrative user to upload a theme or plugin and then execute arbitrary PHP code via an FTP server.", "Detection": "To detect this vulnerability, it is recommended to check the WordPress version and verify that it has been updated to the latest version.", "Mitigation": "To mitigate this vulnerability, it is recommended to update to the latest version of WordPress and apply security patches.", "Conclusion": "CVE-2024-31210 is a critical vulnerability that allows an attacker to execute arbitrary PHP code via an FTP server. It is essential to apply the latest security patches and update to the latest version of WordPress to mitigate this vulnerability."}, "executive_analysis": {"Overview": "CVE-2024-31210 is a vulnerability in WordPress that allows an attacker to upload a theme or plugin and then execute arbitrary PHP code via an FTP server.", "Business Impact": "The vulnerability has a high business impact, as it allows an attacker to compromise the security of the WordPress application and potentially steal sensitive data.", "Technical Impact": "The vulnerability has a high technical impact, as it allows an attacker to execute arbitrary PHP code via an FTP server, which can lead to a complete compromise of the WordPress application.", "Mitigation Strategies": "To mitigate this vulnerability, it is recommended to update to the latest version of WordPress and apply security patches.", "Recommendations": "It is recommended that all users update to the latest version of WordPress and apply security patches to mitigate this vulnerability.", "Conclusions": "In conclusion, CVE-2024-31210 is a critical vulnerability that requires immediate attention to mitigate the risks of exploitation."}}