{"id": "CVE-2024-4381", "sourceIdentifier": "contact@wpscan.com", "published": "2024-06-21T06:15:11.907", "lastModified": "2024-07-17T02:54:24.913", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The CB (legacy) WordPress plugin through 0.9.4.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"}, {"lang": "es", "value": "El complemento CB (heredado) de WordPress hasta la versi\u00f3n 0.9.4.18 no sanitiza ni escapa a algunas de sus configuraciones, lo que podr\u00eda permitir a usuarios con privilegios elevados, como el administrador, realizar ataques de Cross-Site Scripting Almacenado incluso cuando la capacidad unfiltered_html no est\u00e1 permitida (por ejemplo, en una configuraci\u00f3n multisitio)"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wielebenwir:commonsbooking:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "0.9.4.18", "matchCriteriaId": "79A8A0AE-8E3A-4414-847B-1F11CEFDD8C7"}]}]}], "references": [{"url": "https://wpscan.com/vulnerability/9b3cda9a-17a7-4173-93a2-d552a874fae9/", "source": "contact@wpscan.com", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059: Command and Control", "comment": "CVE-2024-4381 - Stored Cross-Site Scripting (XSS) vulnerability in CB (legacy) WordPress plugin allows high privilege users to perform attacks even when the unfiltered_html capability is disallowed, demonstrating a Command and Control technique."}, {"techniqueID": "T1190: Exploit Public-Facing Application", "comment": "CVE-2024-4381 - The vulnerability in CB (legacy) WordPress plugin allows attackers to perform Stored Cross-Site Scripting (XSS) attacks, making it possible for an unintended actor to exploit a public-facing application."}, {"techniqueID": "T1048: Web Shell", "comment": "CVE-2024-4381 - The Stored Cross-Site Scripting (XSS) vulnerability in CB (legacy) WordPress plugin allows attackers to insert and execute malicious code, which can be used to create a web shell."}, {"techniqueID": "T1063: Application Layer Flooding", "comment": "CVE-2024-4381 - The vulnerability in CB (legacy) WordPress plugin can be used to generate a large amount of traffic, potentially leading to Application Layer Flooding."}], "stix_bundle": {"@context": "https://raw.githubusercontent.com/oasis-open/cti/stix-v21/cti-context.jsonld", "@type": "STIX_Bundle", "description": "Bundle for CVE-2024-4381", "objects": [{"@type": "Vulnerability", "id": "vuln:CVE-2024-4381", "created_by_ref": "organization:myorg", "name": "CB (legacy) WordPress Plugin Stored Cross-Site Scripting Vulnerability", "description": "CB (legacy) WordPress plugin Stored Cross-Site Scripting vulnerability", "published": "2024-06-21T06:15:11.907", "modified": "2024-07-17T02:54:24.913", "vulnerability_type": "Vulnerability"}, {"@type": "Attack Pattern", "id": "ap:Stored-Cross-Site-Scripting", "name": "Stored Cross-Site Scripting", "description": "Stored Cross-Site Scripting (XSS) attack pattern", "objects": [{"@type": "Note", "id": "note:Stored-XSS-CVE-2024-4381", "note": "This note describes a Stored Cross-Site Scripting (XSS) attack pattern that can be used to exploit the CB (legacy) WordPress plugin vulnerability with CVE-2024-4381."}], "modified": "2024-07-17T02:54:24.913"}, {"@type": "Course of Action", "id": "cao:Mitigate-Vulnerability-CVE-2024-4381", "name": "Mitigate Vulnerability CVE-2024-4381", "description": "Mitigate the vulnerability by updating the CB (legacy) WordPress plugin to the latest version.", "modified": "2024-07-17T02:54:24.913", " technique_ref": "technique:T1190"}, {"@type": "Note", "id": "note:Defense-Point-CVE-2024-4381", "note": "Defense point: Implement web application firewalls to detect and block suspicious traffic and update plugins to the latest version."}]}, "technical_analysis": {"Introduction": "The CB (legacy) WordPress plugin Stored Cross-Site Scripting vulnerability is a critical issue that allows high privilege users to perform attacks even when the unfiltered_html capability is disallowed.", "Impact and Scope": "The vulnerability has a CVSS score of 4.8 and an attack vector of NETWORK.", "Related MITRE ATT&CK Techniques": "T1059, T1190, T1048, and T1063.", "Technical Details": "The vulnerability allows attackers to inject and execute malicious code, which can be used to create a web shell or perform other malicious activities.", "Detection": "Detection can be done using web application firewalls and security information and event management systems.", "Mitigation": "Mitigation can be done by updating the CB (legacy) WordPress plugin to the latest version and implementing web application firewalls.", "Conclusion": "The CB (legacy) WordPress plugin Stored Cross-Site Scripting vulnerability is a critical issue that requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "The CB (legacy) WordPress plugin Stored Cross-Site Scripting vulnerability is a critical issue that allows high privilege users to perform attacks even when the unfiltered_html capability is disallowed.", "Business Impact": "The vulnerability can lead to business disruption, data loss, and reputational damage.", "Technical Impact": "The vulnerability allows attackers to inject and execute malicious code, which can be used to create a web shell or perform other malicious activities.", "Mitigation Strategies": "Update the CB (legacy) WordPress plugin to the latest version and implement web application firewalls.", "Recommendations": "Recommendations include implementing web application firewalls, updating plugins to the latest version, and conducting regular security assessments.", "Conclusions": "The CB (legacy) WordPress plugin Stored Cross-Site Scripting vulnerability is a critical issue that requires immediate attention and mitigation."}}