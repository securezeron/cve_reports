{"id": "CVE-2024-5871", "sourceIdentifier": "security@wordfence.com", "published": "2024-06-15T04:15:13.693", "lastModified": "2024-06-17T12:42:04.623", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The WooCommerce - Social Login plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 2.6.2 via deserialization of untrusted input from the 'woo_slg_verify' vulnerable parameter. This makes it possible for unauthenticated attackers to inject a PHP Object. No known POP chain is present in the vulnerable software. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code."}, {"lang": "es", "value": "El complemento WooCommerce - Social Login para WordPress es vulnerable a la inyecci\u00f3n de objetos PHP en todas las versiones hasta la 2.6.2 incluida a trav\u00e9s de la deserializaci\u00f3n de entradas no confiables del par\u00e1metro vulnerable 'woo_slg_verify'. Esto hace posible que atacantes no autenticados inyecten un objeto PHP. No hay ninguna cadena POP conocida presente en el software vulnerable. Si hay una cadena POP presente a trav\u00e9s de un complemento o tema adicional instalado en el sistema de destino, podr\u00eda permitir al atacante eliminar archivos arbitrarios, recuperar datos confidenciales o ejecutar c\u00f3digo."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "references": [{"url": "https://codecanyon.net/item/social-login-wordpress-woocommerce-plugin/8495883", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/ffd592e6-2ac4-4af4-bfc0-d4f834157d71?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1190 - PHP Object Injection", "comment": "CVE-2024-5871 - The WooCommerce - Social Login plugin for WordPress is vulnerable to PHP Object Injection, which allows attackers to inject a PHP Object, leading to unauthorized code execution, data access, and file manipulation. This can be mitigated by validating user input and sanitizing user-supplied data."}, {"techniqueID": "T1210 - Exploitation of Remotely Chained Vulnerabilities", "comment": "CVE-2024-5871 - As the vulnerability is exploitable via a deserialization of untrusted input from the 'woo_slg_verify' vulnerable parameter, it's likely that attackers will chain this vulnerability with other publicly known vulnerabilities to gain additional privileges or achieve further system compromise. This can be mitigated by implementing robust vulnerability management practices and patching known vulnerabilities."}, {"techniqueID": "T1666 - Scheduling and Invocation of Malicious Code", "comment": "CVE-2024-5871 - If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code. This can be mitigated by implementing robust security configurations and monitoring for suspicious activity."}], "stix_bundle": {"objects": [{"id": "cve-2024-5871", "type": "vulnerability", "name": "WooCommerce - Social Login Plugin PHP Object Injection", "description": "The WooCommerce - Social Login plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 2.6.2.", "score": 9.8, "cvss_metrics": {"vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attack_vector": "NETWORK", "attack_complexity": "LOW", "privileges_required": "NONE", "user_interaction": "NONE", "scope": "UNCHANGED", "confidentiality_impact": "HIGH", "integrity_impact": "HIGH", "availability_impact": "HIGH"}, "references": {"reference": {"data_type": "uri", "value": "https://codecanyon.net/item/social-login-wordpress-woocommerce-plugin/8495883"}}}, {"id": "t1190-php-object-injection", "type": "misuse_case", "name": "PHP Object Injection", "description": "The attacker injects a PHP Object into the vulnerable software via deserialization of untrusted input.", "related_attack_patterns": {"attack_pattern": {"id": "T1190", "type": "attack-pattern", "name": "PHP Object Injection"}}}, {"id": "t1210-exploitation-of-remotely-chained-vulnerabilities", "type": "misuse_case", "name": "Exploitation of Remotely Chained Vulnerabilities", "description": "The attacker chains the vulnerable software with other publicly known vulnerabilities to gain additional privileges or achieve further system compromise."}, {"id": "t1666-scheduling-and-invocation-of-malicious-code", "type": "misuse_case", "name": "Scheduling and Invocation of Malicious Code", "description": "The attacker schedules and invokes malicious code on the vulnerable system."}, {"id": "c5-defensive-security-configuration", "type": "course_of_action", "name": "Implement Robust Security Configurations", "description": "Implementing robust security configurations and monitoring for suspicious activity can help mitigate the effects of this vulnerability."}, {"id": "c6-patch-known-vulnerabilities", "type": "course_of_action", "name": "Patch Known Vulnerabilities", "description": "Patching known vulnerabilities and implementing regular vulnerability management practices can help reduce the attack surface."}], "relationships": [{"id": "cve-2024-5871-relationship-t1190-php-object-injection", "type": "has-mitigation", "source_ref": "cve-2024-5871", "target_ref": "t1190-php-object-injection"}, {"id": "cve-2024-5871-relationship-t1210-exploitation-of-remotely-chained-vulnerabilities", "type": "has-mitigation", "source_ref": "cve-2024-5871", "target_ref": "t1210-exploitation-of-remotely-chained-vulnerabilities"}, {"id": "cve-2024-5871-relationship-t1666-scheduling-and-invocation-of-malicious-code", "type": "has-exploit", "source_ref": "cve-2024-5871", "target_ref": "t1666-scheduling-and-invocation-of-malicious-code"}, {"id": "cve-2024-5871-relationship-c5-defensive-security-configuration", "type": "mitigates", "source_ref": "cve-2024-5871", "target_ref": "c5-defensive-security-configuration"}, {"id": "cve-2024-5871-relationship-c6-patch-known-vulnerabilities", "type": "mitigates", "source_ref": "cve-2024-5871", "target_ref": "c6-patch-known-vulnerabilities"}]}, "technical_analysis": {"Introduction": "The WooCommerce - Social Login plugin for WordPress is vulnerable to PHP Object Injection, which allows attackers to inject a PHP Object, leading to unauthorized code execution, data access, and file manipulation.", "Impact and Scope": "The vulnerability has a CVSS score of 9.8, indicating a high severity risk. It affects all versions of the plugin up to and including 2.6.2.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to T1190 - PHP Object Injection, T1210 - Exploitation of Remotely Chained Vulnerabilities, and T1666 - Scheduling and Invocation of Malicious Code.", "Technical Details": "The vulnerability is exploitable via deserialization of untrusted input from the 'woo_slg_verify' vulnerable parameter.", "Detection": "Detection methods include monitoring for suspicious activity, such as unexpected code execution or data access.", "Mitigation": "Mitigation strategies include implementing robust security configurations, patching known vulnerabilities, and regularly monitoring for suspicious activity.", "Conclusion": "The WooCommerce - Social Login plugin for WordPress is vulnerable to PHP Object Injection, and it's essential to implement robust security configurations and regularly monitor for suspicious activity to mitigate the risk."}, "executive_analysis": {"Overview": "The WooCommerce - Social Login plugin for WordPress is vulnerable to PHP Object Injection, which poses a high risk to the security of websites using the plugin.", "Business Impact": "The vulnerability can lead to unauthorized code execution, data access, and file manipulation, which can result in financial losses and reputational damage.", "Technical Impact": "The vulnerability is related to T1190 - PHP Object Injection, T1210 - Exploitation of Remotely Chained Vulnerabilities, and T1666 - Scheduling and Invocation of Malicious Code.", "Mitigation Strategies": "Implement robust security configurations, patch known vulnerabilities, and regularly monitor for suspicious activity.", "Recommendations": "Recommend taking immediate action to patch the vulnerability and implement robust security configurations.", "Conclusions": "The WooCommerce - Social Login plugin for WordPress is vulnerable to PHP Object Injection, and it's essential to prioritize patching and security configurations to mitigate the risk."}}