{"id": "CVE-2024-21747", "sourceIdentifier": "audit@patchstack.com", "published": "2024-01-08T17:15:08.163", "lastModified": "2024-01-11T18:45:06.960", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in weDevs WP ERP | Complete HR solution with recruitment & job listings | WooCommerce CRM & Accounting.This issue affects WP ERP | Complete HR solution with recruitment & job listings | WooCommerce CRM & Accounting: from n/a through 1.12.8.\n\n"}, {"lang": "es", "value": "Neutralizaci\u00f3n inadecuada de elementos especiales utilizados en una vulnerabilidad de comando SQL ('inyecci\u00f3n SQL') en weDevs WP ERP | Complete HR solution with recruitment &amp; job listings | WooCommerce CRM &amp; Accounting. Este problema afecta a WP ERP | Complete HR solution with recruitment &amp; job listings | WooCommerce CRM &amp; Accounting: desde n/a hasta 1.12.8."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.2, "impactScore": 3.6}, {"source": "audit@patchstack.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:N/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "LOW", "baseScore": 7.6, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.3, "impactScore": 4.7}]}, "weaknesses": [{"source": "audit@patchstack.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wedevs:wp_erp:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "1.12.9", "matchCriteriaId": "1910335F-AE23-4A18-91FA-5BCA20F46554"}]}]}], "references": [{"url": "https://patchstack.com/database/vulnerability/erp/wordpress-wp-erp-plugin-1-12-8-sql-injection-vulnerability?_s_id=cve", "source": "audit@patchstack.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-21747 is relevant to this technique as it can be used to inject malicious SQL queries for data exfiltration, which can be mitigated by implementing input validation and sanitization"}, {"techniqueID": "T1040", "comment": "This technique is relevant as the vulnerability can be exploited for unauthorized data access, which can be detected by monitoring database logs and implementing robust access controls"}, {"techniqueID": "T1190", "comment": "This technique is relevant as the vulnerability can be used to inject malware, which can be mitigated by implementing regular software updates and patching"}, {"techniqueID": "T1203", "comment": "This technique is relevant as the vulnerability can be used to harvest credentials, which can be mitigated by implementing two-factor authentication and monitoring user credentials"}, {"techniqueID": "T1068", "comment": "This technique is relevant as the vulnerability can be used to import malicious data, which can be mitigated by implementing data validation and sanitization"}], "stix_bundle": {"stix_objects": [{"type": "indicator", "id": "indicator--1", "title": "Potential SQL Injection Attack", "idref": "CVE-2024-21747", "description": "Potential SQL Injection Attack", "created_by_ref": "actor--1", "modified": "2024-01-11T18:45:06.960", "created": "2024-01-08T17:15:08.163", "stix_core_id": "indicator--1", "object_marking_refs": [{"idref": "marking-definition--1"}], "created_packages": [{"idref": "package--1"}], "object_refs": [{"idref": "observable--1"}]}, {"type": "http-traffic", "id": "observable--1", "idref": "indicator--1", "value": "SQL Injection Attack", "spec_version": "2.1", "pattern_observable": "observable--1"}, {"type": "actor", "id": "actor--1", "title": "SQL Injection Actor", "email": "actor@example.com", "identity_class": "org", "org_name": "Example Org"}, {"type": "package", "id": "package--1", "title": "SQL Injection Attack Package", "description": " Package for the SQL Injection Attack"}]}, "technical_analysis": {"Introduction": "The SQL Injection vulnerability in the weDevs WP ERP plugin is a critical issue that can result in unauthorized data access and exfiltration.", "Impact and Scope": "This vulnerability has a CVSS score of 7.6 with an attack vector of NETWORK and an attack complexity of LOW. It can result in high confidentiality impact, low integrity impact, and low availability impact.", "Related MITRE ATT&CK Techniques": "This vulnerability is related to several MITRE ATT&CK techniques, including T1059, T1040, T1190, T1203, and T1068.", "Technical Details": "The vulnerability is caused by improper neutralization of special elements used in an SQL command, which can be exploited by an attacker to inject malicious SQL queries.", "Detection": "Detection can be achieved by monitoring database logs and implementing robust access controls.", "Mitigation": "Mitigation can be achieved by implementing regular software updates and patching, as well as implementing data validation and sanitization.", "Conclusion": "In conclusion, the SQL Injection vulnerability in the weDevs WP ERP plugin is a critical issue that requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "The SQL Injection vulnerability in the weDevs WP ERP plugin is a critical issue that can result in unauthorized data access and exfiltration, which can have significant business and technical impacts.", "Business Impact": "This vulnerability can result in the loss of sensitive data, reputational damage, and financial losses.", "Technical Impact": "This vulnerability can result in unauthorized data access, data breaches, and system compromise.", "Mitigation Strategies": "Mitigation can be achieved by implementing regular software updates and patching, as well as implementing data validation and sanitization.", "Recommendations": "We recommend that the organization implement a response plan to address this vulnerability, including patching the affected software, implementing additional security measures, and conducting a thorough investigation.", "Conclusions": "In conclusion, the SQL Injection vulnerability in the weDevs WP ERP plugin is a critical issue that requires immediate attention and mitigation."}}