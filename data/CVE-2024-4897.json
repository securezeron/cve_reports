{"id": "CVE-2024-4897", "sourceIdentifier": "security@huntr.dev", "published": "2024-07-02T15:15:11.853", "lastModified": "2024-07-02T17:44:45.700", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "parisneo/lollms-webui, in its latest version, is vulnerable to remote code execution due to an insecure dependency on llama-cpp-python version llama_cpp_python-0.2.61+cpuavx2-cp311-cp311-manylinux_2_31_x86_64. The vulnerability arises from the application's 'binding_zoo' feature, which allows attackers to upload and interact with a malicious model file hosted on hugging-face, leading to remote code execution. The issue is linked to a known vulnerability in llama-cpp-python, CVE-2024-34359, which has not been patched in lollms-webui as of commit b454f40a. The vulnerability is exploitable through the application's handling of model files in the 'bindings_zoo' feature, specifically when processing gguf format model files."}, {"lang": "es", "value": "parisneo/lollms-webui, en su \u00faltima versi\u00f3n, es vulnerable a la ejecuci\u00f3n remota de c\u00f3digo debido a una dependencia insegura de la versi\u00f3n llama-cpp-python llama_cpp_python-0.2.61+cpuavx2-cp311-cp311-manylinux_2_31_x86_64. La vulnerabilidad surge de la funci\u00f3n 'binding_zoo' de la aplicaci\u00f3n, que permite a los atacantes cargar e interactuar con un archivo de modelo malicioso alojado en hugging-face, lo que lleva a la ejecuci\u00f3n remota de c\u00f3digo. El problema est\u00e1 relacionado con una vulnerabilidad conocida en llama-cpp-python, CVE-2024-34359, que no ha sido parcheada en lollms-webui a partir de el commit b454f40a. La vulnerabilidad se puede explotar mediante el manejo de archivos de modelo por parte de la aplicaci\u00f3n en la funci\u00f3n 'bindings_zoo', espec\u00edficamente cuando se procesan archivos de modelo en formato gguf."}], "metrics": {"cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.4, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.5, "impactScore": 5.9}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-76"}]}], "references": [{"url": "https://huntr.com/bounties/ecf386df-4b6a-40b2-9000-db0974355acc", "source": "security@huntr.dev"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-4897 - Exploitation of insecure dependency leads to command injection, defend against using a hardened build and code review"}, {"techniqueID": "T1218", "comment": "CVE-2024-4897 - Execution of malicious model file facilitates remote code execution, defend against by validating and sanitizing model files"}, {"techniqueID": "T1457", "comment": "CVE-2024-4897 - Inadequate dependency management enables remote code execution, defend against by ensuring all dependencies are up-to-date and verified"}], "stix_bundle": {"objects": [{"type": "indicator", "id": " indicator--88c9e5d5-38a2-4f6a-ab39-f9f8d14583e5", "created_by_ref": "organization--1", "modified": "2024-07-02T15:15:11.853", "created": "2024-07-02T15:15:11.853", "name": "parisneo/lollms-webui Remote Code Execution", "description": "Indication of potential remote code execution through insecure dependency", "modified_by_ref": "organization--1", "objects": [{"type": "observed-data", "id": "observed-data--a2345678-1234-5678-a123-456789012345", "created_by_ref": "organization--1", "modified": "2024-07-02T15:15:11.853", "created": "2024-07-02T15:15:11.853", "name": "parisneo/lollms-webui Remote Code Execution", "description": "Successful exploitation of insecure dependency leads to remote code execution"}]}, {"type": "course-of-action", "id": "course-of-action--12345678-1234-5678-a123-456789012345", "created_by_ref": "organization--1", "modified": "2024-07-02T15:15:11.853", "created": "2024-07-02T15:15:11.853", "name": "Invalidating and Sanitizing Model Files", "description": "Validate and sanitize model files to prevent execution of malicious code"}], " relationships": [{"type": "indicates", "id": " Indicates-1", "source_ref": "indicator--88c9e5d5-38a2-4f6a-ab39-f9f8d14583e5", "target_ref": "observed-data--a2345678-1234-5678-a123-456789012345"}, {"type": "mitigates", "id": "mitigates-1", "source_ref": "course-of-action--12345678-1234-5678-a123-456789012345", "target_ref": "indicator--88c9e5d5-38a2-4f6a-ab39-f9f8d14583e5"}]}, "technical_analysis": {"Introduction": "parisneo/lollms-webui version 2.61 is vulnerable to remote code execution due to an insecure dependency on llama-cpp-python version 0.2.61+cpuavx2-cp311-cp311-manylinux_2_31_x86_64.", "Impact and Scope": "The vulnerability is exploitable through the application's handling of model files in the 'binding_zoo' feature, specifically when processing gguf format model files.", "Related MITRE ATT&CK Techniques": "T1190, T1218, T1457", "Technical Details": "The vulnerability arises from the application's 'binding_zoo' feature, which allows attackers to upload and interact with a malicious model file hosted on hugging-face.", "Detection": "Detect by monitoring for anomalies in model file processing and checking for gguf format model files.", "Mitigation": "Upgrade to a patched version, validate and sanitize model files, ensure all dependencies are up-to-date and verified.", "Conclusion": "Conduct a thorough code review and harden the build to prevent exploitation."}, "executive_analysis": {"Overview": "parisneo/lollms-webui version 2.61 is vulnerable to remote code execution due to an insecure dependency.", "Business Impact": "The vulnerability could allow attackers to execute malicious code, potentially leading to data theft, disruption of services, or other malicious activities.", "Technical Impact": "The vulnerability allows attackers to exploit the application and execute malicious code.", "Mitigation Strategies": "Upgrade to a patched version, implement model file validation and sanitization, and ensure all dependencies are up-to-date and verified.", "Recommendations": "Apply the patches as soon as possible, perform a thorough code review, and harden the build to prevent exploitation.", "Conclusions": "This vulnerability highlights the importance of secure coding practices and the need for continuous monitoring and testing."}}