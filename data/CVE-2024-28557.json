{"id": "CVE-2024-28557", "sourceIdentifier": "cve@mitre.org", "published": "2024-04-15T19:15:09.913", "lastModified": "2024-08-21T15:35:04.820", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "SQL Injection vulnerability in Sourcecodester php task management system v1.0, allows remote attackers to execute arbitrary code, escalate privileges, and obtain sensitive information via crafted payload to update-admin.php."}, {"lang": "es", "value": "Vulnerabilidad de inyecci\u00f3n SQL en Sourcecodester php task management system v1.0, permite a atacantes remotos ejecutar c\u00f3digo arbitrario, escalar privilegios y obtener informaci\u00f3n confidencial a trav\u00e9s de un payload manipulado en update-admin.php."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-89"}]}], "references": [{"url": "https://github.com/xuanluansec/vul/blob/main/vul/2/README-SQL-2.md", "source": "cve@mitre.org"}, {"url": "https://github.com/xuanluansec/vul/issues/2", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "TA0010", "comment": "CVE-2024-28557 - This is a SQL Injection vulnerability, which can be mitigated by implementing input validation and sanitization, as well as using parameterized queries."}, {"techniqueID": "T1059", "comment": "CVE-2024-28557 - This technique can be used to gain unauthorized access to sensitive data and escalate privileges. Defenders can detect this by monitoring database queries and looking for unusual or suspicious activity."}, {"techniqueID": "T1190", "comment": "CVE-2024-28557 - This technique can be used to inject malicious code into the database. Defenders can detect this by monitoring database queries and looking for unusual or suspicious activity."}], "technical_analysis": {"Introduction": "SQL Injection vulnerability in Sourcecodester php task management system v1.0 allows remote attackers to execute arbitrary code, escalate privileges, and obtain sensitive information via crafted payload to update-admin.php.", "Impact and Scope": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H. The attack vector is the NETWORK. The privileges required are NONE. The user interaction is NONE. The scope is UNCHANGED. The confidentiality impact is HIGH. The integrity impact is HIGH. The availability impact is HIGH. The base score is 9.8, and the base severity is CRITICAL.", "Related MITRE ATT&CK Techniques": "TA0010, T1059, T1190", "Technical Details": "The vulnerability occurs due to a lack of input validation and sanitization in the update-admin.php file, allowing attackers to inject malicious SQL code. The vulnerable parameter is the 'query' parameter.", "Detection": "Monitor database queries for unusual or suspicious activity, and implement input validation and sanitization to prevent SQL injection attacks.", "Mitigation": "Implement input validation and sanitization, use parameterized queries, and restrict access to sensitive data.", "Conclusion": "This vulnerability allows attackers to execute arbitrary code, escalate privileges, and obtain sensitive information. Defenders can detect and mitigate this vulnerability by implementing input validation and sanitization, using parameterized queries, and monitoring database queries for unusual or suspicious activity."}, "executive_analysis": {"Overview": "SQL Injection vulnerability in Sourcecodester php task management system v1.0 allows remote attackers to execute arbitrary code, escalate privileges, and obtain sensitive information.", "Business Impact": "This vulnerability can lead to unauthorized access to sensitive data, loss of confidentiality and integrity, and denial of service.", "Technical Impact": "This vulnerability allows attackers to execute arbitrary code, escalate privileges, and obtain sensitive information. It also allows attackers to inject malicious SQL code and gain unauthorized access to sensitive data.", "Mitigation Strategies": "Implement input validation and sanitization, use parameterized queries, and restrict access to sensitive data.", "Recommendations": "Promptly patch the vulnerability, implement input validation and sanitization, and restrict access to sensitive data.", "Conclusions": "This vulnerability is critical and requires immediate attention. Implementing the recommended mitigation strategies can prevent unauthorized access to sensitive data and prevent loss of confidentiality and integrity."}}