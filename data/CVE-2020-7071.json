{"id": "CVE-2020-7071", "sourceIdentifier": "security@php.net", "published": "2021-02-15T04:15:12.563", "lastModified": "2022-08-29T20:05:12.300", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "In PHP versions 7.3.x below 7.3.26, 7.4.x below 7.4.14 and 8.0.0, when validating URL with functions like filter_var($url, FILTER_VALIDATE_URL), PHP will accept an URL with invalid password as valid URL. This may lead to functions that rely on URL being valid to mis-parse the URL and produce wrong data as components of the URL."}, {"lang": "es", "value": "En PHP versiones 7.3.x por debajo de 7.3.26, 7.4.x por debajo de 7.4.14 y 8.0.0, cuando se comprueba una URL con funciones como filter_var ($url, FILTER_VALIDATE_URL), PHP aceptar\u00e1 una URL con una contrase\u00f1a no v\u00e1lida como una URL v\u00e1lida.&#xa0;Esto puede conllevar a funciones que dependen de que la URL sea v\u00e1lida para analizar inapropiadamente la URL y producir datos incorrectos como componentes de la URL"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}, {"source": "security@php.net", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}]}, {"source": "security@php.net", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*", "versionStartIncluding": "7.3.0", "versionEndExcluding": "7.3.26", "matchCriteriaId": "67F12208-9A77-4FBA-A3C9-0E5A08394D57"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*", "versionStartIncluding": "7.4.0", "versionEndExcluding": "7.4.14", "matchCriteriaId": "D2DE7B3F-B495-41CB-B4B8-CCE4A0D99D45"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*", "versionStartIncluding": "8.0.0", "versionEndExcluding": "8.0.1", "matchCriteriaId": "649C94AB-07A2-417B-999B-A67416C5AB29"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*", "matchCriteriaId": "DEECE5FC-CACF-4496-A3E7-164736409252"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*", "matchCriteriaId": "07B237A9-69A3-4A9C-9DA0-4E06BD37AE73"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:netapp:clustered_data_ontap:-:*:*:*:*:*:*:*", "matchCriteriaId": "1FE996B1-6951-4F85-AA58-B99A379D2163"}]}]}], "references": [{"url": "https://bugs.php.net/bug.php?id=77423", "source": "security@php.net", "tags": ["Exploit", "Issue Tracking", "Vendor Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2021/07/msg00008.html", "source": "security@php.net", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://security.gentoo.org/glsa/202105-23", "source": "security@php.net", "tags": ["Third Party Advisory"]}, {"url": "https://security.netapp.com/advisory/ntap-20210312-0005/", "source": "security@php.net", "tags": ["Vendor Advisory"]}, {"url": "https://www.debian.org/security/2021/dsa-4856", "source": "security@php.net", "tags": ["Third Party Advisory"]}, {"url": "https://www.oracle.com/security-alerts/cpuoct2021.html", "source": "security@php.net", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.tenable.com/security/tns-2021-14", "source": "security@php.net", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "TA1534", "comment": "CVE-2020-7071 exploits the Filter Validation vulnerability in PHP, allowing an attacker to bypass input validation and upload malicious files. This attack can be prevented by implementing proper input validation and whitelisting."}, {"techniqueID": "TA1518", "comment": "The vulnerability allows an attacker to upload a malicious file, which can be exploited to gain remote code execution. This attack can be prevented by implementing strict file upload restrictions and regular security audits."}, {"techniqueID": "TA1536", "comment": "The Filter Validation vulnerability in PHP can be exploited to inject malicious code into the system, which can lead to data breaches and unauthorized access. This attack can be prevented by implementing secure coding practices and regular security audits."}], "stix_bundle": {"objects": {"bundle": {"id": "CVE-2020-7071", "type": "Bundle", "title": "CVE-2020-7071: PHP Filter Validation Vulnerability", "created": "2021-02-15T04:15:12.563", "modified": "2022-08-29T20:05:12.300"}, "vulnerability": {"id": "CVE-2020-7071", "type": "Vulnerability", "title": "PHP Filter Validation Vulnerability", "description": "In PHP versions 7.3.x below 7.3.26, 7.4.x below 7.4.14 and 8.0.0, when validating URL with functions like filter_var($url, FILTER_VALIDATE_URL), PHP will accept an URL with invalid password as valid URL. This may lead to functions that rely on URL being valid to mis-parse the URL and produce wrong data as components of the URL."}, "attack_pattern": {"id": "T1534", "type": "AttackPattern", "title": "File Upload", "description": "An attacker uploads a malicious file to a vulnerable PHP application, which can be exploited to gain remote code execution."}, "course_of_action": {"id": "CoA-1", "type": "CourseOfAction", "title": "Implement Proper Input Validation", "description": "Implement proper input validation and whitelisting to prevent attackers from bypassing input validation and uploading malicious files."}}, "intrusion_sets": {}, "recommendations": {"node": {"id": "node-2", "type": "Node", "title": "Recommendation 2", "description": "Regularly update PHP to the latest version and apply security patches."}}}, "technical_analysis": {"Introduction": "The CVE-2020-7071 vulnerability in PHP's filter validation functionality allows an attacker to bypass input validation and upload malicious files, leading to potential remote code execution.", "Impact and Scope": "This vulnerability has a CVSS score of 5.3 and is applicable to PHP versions 7.3.x below 7.3.26, 7.4.x below 7.4.14, and 8.0.0.", "Related MITRE ATT&CK Techniques": "This vulnerability is related to TA1534, TA1518, and TA1536, which are all related to file upload attacks.", "Technical Details": "The vulnerability is due to a lack of proper input validation and filtering in PHP's filter validation functionality.", "Detection": "Detecting this vulnerability requires monitoring for malicious file uploads and unusual network activity.", "Mitigation": "Applying proper input validation and whitelisting, regularly updating PHP to the latest version, and applying security patches are effective mitigation strategies.", "Conclusion": "In conclusion, the CVE-2020-7071 vulnerability in PHP's filter validation functionality is a significant security risk that requires immediate attention and action to prevent exploitation."}, "executive_analysis": {"Overview": "The CVE-2020-7071 vulnerability in PHP's filter validation functionality is a high-severity vulnerability that has the potential to allow attackers to upload malicious files and gain remote code execution.", "Business Impact": "This vulnerability poses a significant business risk, as it can lead to data breaches, unauthorized access, and damage to reputation.", "Technical Impact": "The vulnerability also has a significant technical impact, as it requires immediate attention and action to prevent exploitation.", "Mitigation Strategies": "Implementing proper input validation and whitelisting, regularly updating PHP to the latest version, and applying security patches are effective mitigation strategies.", "Recommendations": "Executives should recommend that developers prioritize the vulnerability and implement the necessary fixes to prevent exploitation.", "Conclusions": "In conclusion, the CVE-2020-7071 vulnerability in PHP's filter validation functionality is a critical security risk that requires immediate attention and action to prevent exploitation."}}