{"id": "CVE-2020-19962", "sourceIdentifier": "cve@mitre.org", "published": "2021-10-14T15:15:08.727", "lastModified": "2021-10-19T19:15:39.837", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "A stored cross-site scripting (XSS) vulnerability in the getClientIp function in /lib/tinwin.class.php of Chaoji CMS 2.39, allows attackers to execute arbitrary web scripts."}, {"lang": "es", "value": "Una vulnerabilidad de tipo cross-site scripting (XSS) almacenada en la funci\u00f3n getClientIp en el archivo /lib/tinwin.class.php de Chaoji CMS 2.39, permite a atacantes ejecutar scripts web arbitrarios"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:chaoji_cms_project:chaoji_cms:2.39:*:*:*:*:*:*:*", "matchCriteriaId": "F0C2B09D-4B88-4A61-97BE-199252E0C8C8"}]}]}], "references": [{"url": "https://github.com/zhuxianjin/vuln_repo/blob/master/chaojicms_stored_xss.md", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190: Exploit Public-Facing Application", "comment": "CVE-2020-19962 - A stored cross-site scripting (XSS) vulnerability in thegetClientIp function in /lib/tinwin.class.php of Chaoji CMS 2.39 allows attackers to execute arbitrary web scripts, which can be exploited by an attacker to inject malicious scripts into a vulnerable website, further allowing for an attack."}, {"techniqueID": "T1191: Exploit Formerly Vulnerable Module", "comment": "CVE-2020-19962 - The vulnerability in Chaoji CMS 2.39 can be exploited as a stored XSS vulnerability, allowing an attacker to inject malicious scripts into a vulnerable website, which can be used to deliver malware, steal sensitive information, or disrupt the website's functionality."}, {"techniqueID": "T1059: Command and Scripting Interpereter", "comment": "CVE-2020-19962 - The vulnerability in Chaoji CMS 2.39 can be exploited to inject malicious scripts into a vulnerable website, which can be executed by a command and scripting interpreter, allowing an attacker to control the website's functionality and steal sensitive information."}, {"techniqueID": "T1567: Phishing", "comment": "CVE-2020-19962 - The vulnerability in Chaoji CMS 2.39 can be exploited to inject malicious scripts into a vulnerable website, which can be used to deliver phishing attacks, allowing an attacker to steal sensitive information or disrupt the website's functionality."}], "stix_bundle": {"id": "https://stix-vocab.org/objects", "type": "Bundle", "created_by_ref": "https://stix-vocab.org/objects", "created": "2021-10-20T15:15:08.727", "modified": "2021-10-25T19:15:39.837", "objects": [{"id": "Chaoji_CMS_2.39_Stored_XSS", "type": "Vulnerability", "name": "Chaoji CMS 2.39 Stored XSS", "description": "A stored cross-site scripting (XSS) vulnerability in the getClientIp function in /lib/tinwin.class.php of Chaoji CMS 2.39 allows attackers to execute arbitrary web scripts.", "confidentiality": "LOW", "integrity": "LOW", "availability": "NONE", "base_score": 5.4, "base_severity": "MEDIUM", "exploitability_score": 2.3, "impact_score": 2.7}, {"id": "T1190_Exploit_Public-Facing_Application", "type": "Attack-Pattern", "name": "T1190: Exploit Public-Facing Application", "description": "An attack pattern that involves exploiting a publicly accessible web application by injecting malicious code or data, allowing an attacker to access sensitive information or disrupt the application's functionality.", "data_markup": "Exploit Public-Facing Application is a common attack pattern used in cyber attacks, where an attacker injects malicious code or data into a publicly accessible web application, allowing them to access sensitive information or disrupt the application's functionality."}, {"id": "T1191_Exploit_Formaly_Vulnerable_Module", "type": "Attack-Pattern", "name": "T1191: Exploit Formerly Vulnerable Module", "description": "An attack pattern that involves exploiting a previously patched module or component of a software application, allowing an attacker to access sensitive information or disrupt the application's functionality.", "data_markup": "Exploit Formerly Vulnerable Module is a common attack pattern used in cyber attacks, where an attacker exploits a previously patched module or component of a software application, allowing them to access sensitive information or disrupt the application's functionality."}, {"id": "T1059_Command_and_Scripting_Interperiter", "type": "Attack-Pattern", "name": "T1059: Command and Scripting Interperiter", "description": "An attack pattern that involves exploiting a command and scripting interpreter, allowing an attacker to execute arbitrary code or commands, further allowing access to sensitive information or disruption of the application's functionality.", "data_markup": "Command and Scripting Interpreter is a common attack pattern used in cyber attacks, where an attacker exploits a command and scripting interpreter, allowing them to execute arbitrary code or commands, further allowing access to sensitive information or disruption of the application's functionality."}, {"id": "T1567_Phishing", "type": "Attack-Pattern", "name": "T1567: Phishing", "description": "An attack pattern that involves sending a phishing email or messaging, allowing an attacker to steal sensitive information or disrupt an organization's operations.", "data_markup": "Phishing is a common attack pattern used in cyber attacks, where an attacker sends a phishing email or messaging, allowing them to steal sensitive information or disrupt an organization's operations."}]}, "technical_analysis": {"Introduction": "The Chaoji CMS 2.39 Stored XSS vulnerability allows an attacker to execute arbitrary web scripts, which can be used to deliver malware, steal sensitive information, or disrupt the website's functionality.", "Impact and Scope": "The vulnerability has a CVSS base score of 5.4, with a medium severity rating and a low to moderate attack complexity.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to several MITRE ATT&CK techniques, including T1190: Exploit Public-Facing Application, T1191: Exploit Formerly Vulnerable Module, T1059: Command and Scripting Interpreter, and T1567: Phishing.", "Technical Details": "The vulnerability is a stored XSS vulnerability in the getClientIp function in /lib/tinwin.class.php of Chaoji CMS 2.39, which can be exploited by an attacker to inject malicious scripts into a vulnerable website.", "Detection": "Detection methods include monitoring for suspicious network traffic, analyzing logs for signs of exploitation, and conducting regular vulnerability assessments.", "Mitigation": "Mitigation strategies include applying security patches, implementing web application firewalls, and conducting regular security testing and assessments.", "Conclusion": "The Chaoji CMS 2.39 Stored XSS vulnerability is a serious security vulnerability that can be exploited by an attacker to deliver malware, steal sensitive information, or disrupt the website's functionality."}, "executive_analysis": {"Overview": "The Chaoji CMS 2.39 Stored XSS vulnerability is a critical security vulnerability that requires immediate attention and action.", "Business Impact": "The vulnerability has the potential to cause significant financial and reputational damage to an organization, particularly if sensitive information is stolen or exploited.", "Technical Impact": "The vulnerability is a technical vulnerability that requires technical expertise to remediate, but can be exploited by an attacker with minimal technical skills.", "Mitigation Strategies": "Mitigation strategies include applying security patches, implementing web application firewalls, and conducting regular security testing and assessments.", "Recommendations": "Recommendations for executives include prioritizing vulnerability remediation, implementing robust security measures, and conducting regular security assessments.", "Conclusions": "In conclusion, the Chaoji CMS 2.39 Stored XSS vulnerability is a critical security vulnerability that requires immediate attention and action, and must be prioritized as a high-risk vulnerability."}}