{"id": "CVE-2024-30373", "sourceIdentifier": "zdi-disclosures@trendmicro.com", "published": "2024-06-06T19:15:56.167", "lastModified": "2024-06-07T14:56:05.647", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Kofax Power PDF JPF File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Kofax Power PDF. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of JPF files. The issue results from the lack of proper validation of user-supplied data, which can result in a write  past the end of an allocated object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22092."}, {"lang": "es", "value": "Vulnerabilidad de ejecuci\u00f3n remota de c\u00f3digo de escritura fuera de los l\u00edmites en el an\u00e1lisis de archivos JPF de Kofax Power PDF. Esta vulnerabilidad permite a atacantes remotos ejecutar c\u00f3digo arbitrario en instalaciones afectadas de Kofax Power PDF. Se requiere la interacci\u00f3n del usuario para aprovechar esta vulnerabilidad, ya que el objetivo debe visitar una p\u00e1gina maliciosa o abrir un archivo malicioso. La falla espec\u00edfica existe en el an\u00e1lisis de archivos JPF. El problema se debe a la falta de una validaci\u00f3n adecuada de los datos proporcionados por el usuario, lo que puede provocar una escritura m\u00e1s all\u00e1 del final de un objeto asignado. Un atacante puede aprovechar esta vulnerabilidad para ejecutar c\u00f3digo en el contexto del proceso actual. Era ZDI-CAN-22092."}], "metrics": {"cvssMetricV30": [{"source": "zdi-disclosures@trendmicro.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.8, "impactScore": 5.9}]}, "weaknesses": [{"source": "zdi-disclosures@trendmicro.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-787"}]}], "references": [{"url": "https://www.zerodayinitiative.com/advisories/ZDI-24-557/", "source": "zdi-disclosures@trendmicro.com"}], "techniques": [{"techniqueID": "T1210", "comment": "This vulnerability can be exploited using injected HTML/CSS/JS code, allowing an attacker to execute arbitrary code and potentially leading to remote code execution. - CVE-2024-30373 - Defending against this by validating user-supplied data and sanitizing user input can help mitigate the risk of exploitation"}, {"techniqueID": "T1078", "comment": "The vulnerability relies on user interaction to exploit, making it depend on the victim's actions. This makes it an opportunistic method of attack. - CVE-2024-30373 - Implementing secure coding practices and input validation can help prevent this type of vulnerability from occurring"}, {"techniqueID": "T1190", "comment": "An attacker can use this vulnerability to execute code in the context of the current process. This can lead to a wide range of actions being performed, including privilege escalation. - CVE-2024-30373 - Implementing process isolation and separation can help mitigate the risk of privilege escalation"}], "stix_bundle": {"stixBundle": [{"type": "course-of-action", "id": "COA-1", "title": "Validate User-Supplied Data", "description": "Validate user-supplied data to prevent exploitation of this vulnerability", "related_techniques": ["T1210"]}, {"type": "course-of-action", "id": "COA-2", "title": "Sanitize User Input", "description": "Sanitize user input to prevent exploitation of this vulnerability", "related_techniques": ["T1210"]}, {"type": "course-of-action", "id": "COA-3", "title": "Implement Secure Coding Practices", "description": "Implement secure coding practices to prevent this type of vulnerability from occurring", "related_techniques": ["T1078"]}, {"type": "course-of-action", "id": "COA-4", "title": "Implement Process Isolation", "description": "Implement process isolation to prevent privilege escalation", "related_techniques": ["T1190"]}]}, "technical_analysis": {"Introduction": "Kofax Power PDF JPF File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability allows remote attackers to execute arbitrary code on affected installations of Kofax Power PDF.", "Impact and Scope": "The vulnerability has a severity level of 7.8 as per CVSS 3.0 scoring, with the attack vector being local, attack complexity being low, and privileges required being none.", "Related MITRE ATT&CK Techniques": "The techniques related to this vulnerability are T1210, T1078, and T1190.", "Technical Details": "The vulnerability exists within the parsing of JPF files. The issue results from the lack of proper validation of user-supplied data, which can result in a write past the end of an allocated object.", "Detection": "Detection of this vulnerability can be done by looking for suspicious file parsing behavior and payload manipulation.", "Mitigation": "Mitigation strategies include validating user-supplied data, sanitizing user input, implementing secure coding practices, and implementing process isolation.", "Conclusion": "In conclusion, this vulnerability can be exploited using injected HTML/CSS/JS code, and mitigation strategies should be implemented to prevent exploitation."}, "executive_analysis": {"Overview": "The Kofax Power PDF JPF File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability has a potential impact on business operations and data confidentiality.", "Business Impact": "The vulnerability can lead to remote code execution, making it possible for an attacker to gain control over the system and potentially access sensitive data.", "Technical Impact": "The vulnerability has a CVSS score of 7.8, indicating a high severity level.", "Mitigation Strategies": "Mitigation strategies include implementing secure coding practices, validating user-supplied data, and implementing process isolation.", "Recommendations": "Recommendations for executives include prioritizing vulnerability remediation, implementing additional security controls, and conducting regular security assessments.", "Conclusions": "In conclusion, the Kofax Power PDF JPF File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability is a critical vulnerability that requires immediate attention and mitigation."}}