{"id": "CVE-2024-3473", "sourceIdentifier": "security@wordfence.com", "published": "2024-05-02T17:15:25.603", "lastModified": "2024-05-02T18:00:37.360", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Header Footer Code Manager Pro plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the message parameter in all versions up to, and including, 1.0.16 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."}, {"lang": "es", "value": "El complemento Header Footer Code Manager Pro para WordPress es vulnerable a Reflected Cross-Site Scripting a trav\u00e9s del par\u00e1metro de mensaje en todas las versiones hasta la 1.0.16 incluida debido a una sanitizaci\u00f3n de entrada y un escape de salida insuficientes. Esto hace posible que atacantes no autenticados inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutan si logran enga\u00f1ar a un usuario para que realice una acci\u00f3n como hacer clic en un enlace."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "references": [{"url": "https://app.loopedin.io/header-footer-code-manager-pro#/updates", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/83a35d16-526d-4e45-b2cf-a6858b2b2f21?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-3473 - The Header Footer Code Manager Pro plugin for WordPress is vulnerable to Reflected Cross-Site Scripting, which enables attackers to inject arbitrary web scripts in pages that execute if a user is tricked into performing an action. Defend against this by validating and sanitizing user-input data."}, {"techniqueID": "T1191", "comment": "CVE-2024-3473 - Insufficient input sanitization and output escaping in the Header Footer Code Manager Pro plugin for WordPress allow an attacker to inject arbitrary web scripts in pages that execute if a user is tricked into performing an action. Defend against this by implementing input validation and output encoding."}], "stix_bundle": {"id": "CVE-2024-3473", "type": "vulnerability", "created_by_ref": {"idref": "stix_common:identity:security@wordfence.com", "type": "identity"}, "created": "2024-05-02T17:15:25.603", "modified": "2024-05-02T18:00:37.360", "name": "Header Footer Code Manager Pro Plugin for WordPress Vulnerability", "description": "The Header Footer Code Manager Pro plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the message parameter in all versions up to, and including, 1.0.16 due to insufficient input sanitization and output escaping.", "vulnerabilityObjectType": "VULNERABILITY", "extends": [{"type": "vulnerability", "idref": "http://mitre.org/stdlib/cve/CVE-2024-3473"}], "objects": [{"id": "T1190", "type": "attack-pattern", "description": "The Header Footer Code Manager Pro plugin for WordPress is vulnerable to Reflected Cross-Site Scripting, which enables attackers to inject arbitrary web scripts in pages that execute if a user is tricked into performing an action.", "pattern_name": "Reflected Cross-Site Scripting", "kill_chain_phases": [{"kill_chain_name": "mitre(att&ck)", "phase_name": "Initial Access"}]}, {"id": "T1191", "type": "attack-pattern", "description": "Insufficient input sanitization and output escaping in the Header Footer Code Manager Pro plugin for WordPress allow an attacker to inject arbitrary web scripts in pages that execute if a user is tricked into performing an action.", "pattern_name": "Insufficient Input Sanitization", "kill_chain_phases": [{"kill_chain_name": "mitre(att&ck)", "phase_name": "Initial Access"}]}]}, "technical_analysis": {"Introduction": "The Header Footer Code Manager Pro plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to insufficient input sanitization and output escaping.", "Impact and Scope": "The vulnerability allows an attacker to inject arbitrary web scripts in pages that execute if a user is tricked into performing an action, leading to a low-impact, low-severity attack.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to T1190 - Reflected Cross-Site Scripting and T1191 - Insufficient Input Sanitization.", "Technical Details": "The vulnerability occurs due to the lack of input validation and output encoding in the Header Footer Code Manager Pro plugin, allowing an attacker to inject arbitrary code.", "Detection": "Detection can be performed by monitoring for suspicious script execution and tracking user interactions.", "Mitigation": "Mitigation strategies include implementing input validation and output encoding, as well as monitoring for suspicious activity.", "Conclusion": "The vulnerability is a medium-severity issue that can be mitigated by implementing proper input validation and output encoding."}, "executive_analysis": {"Overview": "The Header Footer Code Manager Pro plugin for WordPress is vulnerable to Reflected Cross-Site Scripting, which can be exploited to inject arbitrary web scripts.", "Business Impact": "The attack can lead to unauthorized access to sensitive information, making it a medium-severity issue.", "Technical Impact": "The vulnerability is specific to the Header Footer Code Manager Pro plugin and its impact is limited to pages that execute injected scripts.", "Mitigation Strategies": "Implementing input validation and output encoding, as well as monitoring for suspicious activity, can help mitigate the vulnerability.", "Recommendations": "Recommendations include updating the plugin, implementing web application firewalls, and conducting regular security audits.", "Conclusions": "The vulnerability is a medium-severity issue that requires attention and mitigation to prevent exploitation."}}