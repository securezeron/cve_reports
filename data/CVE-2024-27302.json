{"id": "CVE-2024-27302", "sourceIdentifier": "security-advisories@github.com", "published": "2024-03-06T19:15:08.330", "lastModified": "2024-03-06T21:42:48.053", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "go-zero is a web and rpc framework. Go-zero allows user to specify a CORS Filter with a configurable allows param - which is an array of domains allowed in CORS policy. However, the `isOriginAllowed` uses `strings.HasSuffix` to check the origin, which leads to bypass via a malicious domain. This vulnerability is capable of breaking CORS policy and thus allowing any page to make requests and/or retrieve data on behalf of other users. Version 1.4.4 fixes this issue.\n"}, {"lang": "es", "value": "go-zero es un framework web y rpc. Go-zero permite al usuario especificar un filtro CORS con un par\u00e1metro de permisos configurable, que es una serie de dominios permitidos en la pol\u00edtica CORS. Sin embargo, `isOriginAllowed` usa `strings.HasSuffix` para verificar el origen, lo que lleva a pasar por alto un dominio malicioso. Esta vulnerabilidad es capaz de romper la pol\u00edtica CORS y as\u00ed permitir que cualquier p\u00e1gina realice solicitudes y/o recupere datos en nombre de otros usuarios. La versi\u00f3n 1.4.4 soluciona este problema."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 9.1, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.2}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-639"}]}], "references": [{"url": "https://github.com/zeromicro/go-zero/commit/d9d79e930dff6218a873f4f02115df61c38b15db", "source": "security-advisories@github.com"}, {"url": "https://github.com/zeromicro/go-zero/security/advisories/GHSA-fgxv-gw55-r5fq", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1059.002", "comment": "CVE-2024-27302 - This technique is related to CORS policy bypass, which allows an attacker to make requests and/or retrieve data on behalf of other users. Defending against this involves configuring CORS correctly and validating user requests."}, {"techniqueID": "T1190", "comment": "CVE-2024-27302 - An attacker might use this technique to bypass CORS policy and make unauthorized requests. Defending against this involves configuring CORS correctly and validating user requests."}], "stix_bundle": {"bundle": {"type": "bundle", "spec_version": "2.1", "id": "bundled_attack_data", "created_by_ref": "https://example.com/created-by", "created": "2024-03-06T19:15:08.330", "modified": "2024-03-06T21:42:48.053", "objects": [{"type": "vulnerability", "id": "CVE-2024-27302", "name": "go-zero Web and RPC Framework CORS Filter Bypass Vulnerability", "description": "go-zero is a web and rpc framework. Go-zero allows user to specify a CORS Filter with a configurable allows param - which is an array of domains allowed in CORS policy. However, the `isOriginAllowed` uses `strings.HasSuffix` to check the origin, which leads to bypass via a malicious domain.", "external_references": [{"source_name": "security-advisories@github.com", "external_id": "https://github.com/zeromicro/go-zero/commit/d9d79e930dff6218a873f4f02115df61c38b15db", "reference_url": "https://github.com/zeromicro/go-zero/security/advisories/GHSA-fgxv-gw55-r5fq"}], "cvssv3": {"baseSeverity": "CRITICAL", "baseScore": 9.1, "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}}, {"type": "attack-pattern", "id": "T1059.002-go-zero-CORS-Bypass", "name": "go-zero CORS Filter Bypass", "description": "Bypasses CORS policy using a malicious domain", "kill_chain_phases": [{"phase_name": "Reconnaissance", "phase_id": "R", "phase_rank": 1}]}, {"type": "attack-pattern", "id": "T1190-go-zero-CORS-Bypass", "name": "go-zero CORS Filter Bypass", "description": "Bypasses CORS policy and makes unauthorized requests", "kill_chain_phases": [{"phase_name": "Exploit", "phase_id": "E", "phase_rank": 2}]}]}}, "technical_analysis": {"Introduction": "The go-zero Web and RPC Framework CORS Filter Bypass Vulnerability (CVE-2024-27302) is a critical vulnerability that allows an attacker to bypass CORS policy and make unauthorized requests.", "Impact and Scope": "This vulnerability has a CVSS score of 9.1 and allows an attacker to bypass CORS policy, making it a critical vulnerability. The attack vector is network-based, and the complexity is low.", "Related MITRE ATT&CK Techniques": "T1059.002 and T1190", "Technical Details": "The vulnerability occurs when the `isOriginAllowed` function uses `strings.HasSuffix` to check the origin, which can be bypassed by a malicious domain.", "Detection": "Detecting this vulnerability requires monitoring for unauthorized requests and identifying malicious domains.", "Mitigation": "Mitigation strategies include configuring CORS correctly and validating user requests.", "Conclusion": "This vulnerability is a critical threat that requires immediate attention."}, "executive_analysis": {"Overview": "The go-zero Web and RPC Framework CORS Filter Bypass Vulnerability (CVE-2024-27302) is a critical vulnerability that poses a significant threat to organizations.", "Business Impact": "This vulnerability can allow an attacker to make unauthorized requests and retrieve sensitive data.", "Technical Impact": "The attack vector is network-based, and the complexity is low, making it a critical vulnerability.", "Mitigation Strategies": "Configure CORS correctly and validate user requests.", "Recommendations": "Implement additional security measures to detect and prevent unauthorized requests.", "Conclusions": "This vulnerability is a critical threat that requires immediate attention and mitigation strategies."}}