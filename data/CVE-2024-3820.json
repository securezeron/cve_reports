{"id": "CVE-2024-3820", "sourceIdentifier": "security@wordfence.com", "published": "2024-06-01T09:15:09.660", "lastModified": "2024-06-03T14:46:24.250", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The wpDataTables \u2013 WordPress Data Table, Dynamic Tables & Table Charts Plugin plugin for WordPress is vulnerable to SQL Injection via the 'id_key' parameter of the wdt_delete_table_row AJAX action in all versions up to, and including, 6.3.1 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database. Please note this only affects the premium version of the plugin."}, {"lang": "es", "value": "El complemento wpDataTables \u2013 WordPress Data Table, Dynamic Tables &amp; Table Charts Plugin para WordPress es vulnerable a la inyecci\u00f3n SQL a trav\u00e9s del par\u00e1metro 'id_key' de la acci\u00f3n AJAX wdt_delete_table_row en todas las versiones hasta la 6.3.1 incluida debido a un escape insuficiente en el par\u00e1metro proporcionado por el usuario y falta de preparaci\u00f3n suficiente en la consulta SQL existente. Esto hace posible que atacantes no autenticados agreguen consultas SQL adicionales a consultas ya existentes que pueden usarse para extraer informaci\u00f3n confidencial de la base de datos. Tenga en cuenta que esto solo afecta a la versi\u00f3n premium del complemento."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 10.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 6.0}]}, "references": [{"url": "https://wpdatatables.com/help/whats-new-changelog/", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/fbba822b-172f-4167-bccf-4697a298178e?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-3820 - The vulnerability allows attackers to inject SQL queries via the 'id_key' parameter, making it possible to extract sensitive information from the database. This can be mitigated by input validation and sanitization."}, {"techniqueID": "T1055", "comment": "CVE-2024-3820 - The vulnerability allows attackers to inject SQL queries via the 'id_key' parameter, making it possible to extract sensitive information from the database. This can be mitigated by using prepared statements and parameterized queries."}, {"techniqueID": "T1195", "comment": "CVE-2024-3820 - The vulnerability allows attackers to inject SQL queries via the 'id_key' parameter, making it possible to extract sensitive information from the database. This can be mitigated by using a web application firewall to block suspicious traffic."}], "stix_bundle": {"stix_version": "2.1", "_incident_report": [{"language": "en", "category": "incident-report", "type": "indicator", "created_by_ref": "https://example.com/identity", "created_at": "2024-06-01T09:15:09.660", "id": "CVE-2024-3820", "name": "SQL Injection Vulnerability", "description": "The wpDataTables \u2013 WordPress Data Table, Dynamic Tables & Table Charts Plugin plugin for WordPress is vulnerable to SQL Injection via the 'id_key' parameter of the wdt_delete_table_row AJAX action in all versions up to, and including, 6.3.1.", "specification_of_offenses": [{"type": "indicator", "category": "technical", "observation_info": "The 'id_key' parameter of the wdt_delete_table_row AJAX action in the wpDataTables plugin is vulnerable to SQL Injection."}]}], "vulnerability": [{"type": "vulnerability", "category": "vulnerability", "created_by_ref": "https://example.com/identity", "created_at": "2024-06-01T09:15:09.660", "id": "CVE-2024-3820", "name": "SQL Injection Vulnerability in wpDataTables Plugin", "description": "The wpDataTables \u2013 WordPress Data Table, Dynamic Tables & Table Charts Plugin plugin for WordPress is vulnerable to SQL Injection via the 'id_key' parameter of the wdt_delete_table_row AJAX action in all versions up to, and including, 6.3.1.", "references": [{"type": "reference", "href": "https://wpdatatables.com/help/whats-new-changelog/", "title": "wpDataTables Change Log"}, {"type": "reference", "href": "https://www.wordfence.com/threat-intel/vulnerabilities/id/fbba822b-172f-4167-bccf-4697a298178e?source=cve", "title": "Wordfence Vulnerability ID"}]}], "mitigation": [{"type": "mitigation", "category": "mitigation", "name": "Input Validation and Sanitization", "description": "Validate and sanitize user input to prevent SQL Injection attacks."}, {"type": "mitigation", "category": "mitigation", "name": "Using Prepared Statements and Parameterized Queries", "description": "Use prepared statements and parameterized queries to prevent SQL Injection attacks."}, {"type": "mitigation", "category": "mitigation", "name": "Using a Web Application Firewall", "description": "Use a web application firewall to block suspicious traffic and prevent SQL Injection attacks."}], "tasks": [{"type": "task", "category": "task", "name": "Update the wpDataTables Plugin", "description": "Update the wpDataTables plugin to version 6.3.2 or higher to mitigate the SQL Injection vulnerability."}]}, "technical_analysis": {"Introduction": "The wpDataTables \u2013 WordPress Data Table, Dynamic Tables & Table Charts Plugin plugin for WordPress is vulnerable to SQL Injection via the 'id_key' parameter of the wdt_delete_table_row AJAX action in all versions up to, and including, 6.3.1.", "Impact and Scope": "The vulnerability allows attackers to inject SQL queries via the 'id_key' parameter, making it possible to extract sensitive information from the database. CVSS Score: 10.0, Attack Vector: NETWORK, Attack Complexity: LOW, Privileges Required: NONE, User Interaction: NONE, Scope: CHANGED, Confidentiality Impact: HIGH, Integrity Impact: HIGH, Availability Impact: HIGH.", "Related MITRE ATT&CK Techniques": "T1190, T1055, T1195", "Technical Details": "The vulnerability is due to insufficient escaping on the user-supplied parameter and lack of sufficient preparation on the existing SQL query.", "Detection": "Detection methods include monitoring for suspicious database queries and monitoring for unauthorized access to the database.", "Mitigation": "Mitigation strategies include updating the wpDataTables plugin to version 6.3.2 or higher, using input validation and sanitization, using prepared statements and parameterized queries, and using a web application firewall.", "Conclusion": "In conclusion, the wpDataTables \u2013 WordPress Data Table, Dynamic Tables & Table Charts Plugin plugin for WordPress is vulnerable to SQL Injection via the 'id_key' parameter of the wdt_delete_table_row AJAX action in all versions up to, and including, 6.3.1."}, "executive_analysis": {"Overview": "The wpDataTables \u2013 WordPress Data Table, Dynamic Tables & Table Charts Plugin plugin for WordPress has been found to be vulnerable to SQL Injection via the 'id_key' parameter of the wdt_delete_table_row AJAX action in all versions up to, and including, 6.3.1.", "Business Impact": "The vulnerability can be exploited by attackers to extract sensitive information from the database, which can lead to data breaches and compromise the confidentiality, integrity, and availability of the data.", "Technical Impact": "The vulnerability can be exploited by attackers to inject SQL queries via the 'id_key' parameter, making it possible to extract sensitive information from the database. CVSS Score: 10.0.", "Mitigation Strategies": "Mitigation strategies include updating the wpDataTables plugin to version 6.3.2 or higher, using input validation and sanitization, using prepared statements and parameterized queries, and using a web application firewall.", "Recommendations": "Recommendations include conducting a thorough risk assessment, implementing mitigation strategies, and monitoring for suspicious activity.", "Conclusions": "In conclusion, the wpDataTables \u2013 WordPress Data Table, Dynamic Tables & Table Charts Plugin plugin for WordPress is vulnerable to SQL Injection via the 'id_key' parameter of the wdt_delete_table_row AJAX action in all versions up to, and including, 6.3.1. It is recommended that users update the plugin to version 6.3.2 or higher and implement mitigation strategies to prevent exploitation of the vulnerability."}}