{"id": "CVE-2024-31080", "sourceIdentifier": "secalert@redhat.com", "published": "2024-04-04T14:15:10.330", "lastModified": "2024-05-24T00:15:08.633", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "A heap-based buffer over-read vulnerability was found in the X.org server's ProcXIGetSelectedEvents() function. This issue occurs when byte-swapped length values are used in replies, potentially leading to memory leakage and segmentation faults, particularly when triggered by a client with a different endianness. This vulnerability could be exploited by an attacker to cause the X server to read heap memory values and then transmit them back to the client until encountering an unmapped page, resulting in a crash. Despite the attacker's inability to control the specific memory copied into the replies, the small length values typically stored in a 32-bit integer can result in significant attempted out-of-bounds reads."}, {"lang": "es", "value": "Se encontr\u00f3 una vulnerabilidad de sobrelectura del b\u00fafer basado en mont\u00f3n en la funci\u00f3n ProcXIGetSelectedEvents() del servidor X.org. Este problema se produce cuando se utilizan valores de longitud de bytes intercambiados en las respuestas, lo que puede provocar p\u00e9rdidas de memoria y errores de segmentaci\u00f3n, especialmente cuando lo activa un cliente con una endianidad diferente. Un atacante podr\u00eda aprovechar esta vulnerabilidad para hacer que el servidor X lea los valores de la memoria din\u00e1mica y luego los transmita de vuelta al cliente hasta encontrar una p\u00e1gina no asignada, lo que provocar\u00eda un bloqueo. A pesar de la incapacidad del atacante para controlar la memoria espec\u00edfica copiada en las respuestas, los peque\u00f1os valores de longitud que normalmente se almacenan en un entero de 32 bits pueden dar como resultado importantes intentos de lecturas fuera de los l\u00edmites."}], "metrics": {"cvssMetricV31": [{"source": "secalert@redhat.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "HIGH", "baseScore": 7.3, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.8, "impactScore": 5.5}]}, "weaknesses": [{"source": "secalert@redhat.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-126"}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2024/04/03/13", "source": "secalert@redhat.com"}, {"url": "http://www.openwall.com/lists/oss-security/2024/04/12/10", "source": "secalert@redhat.com"}, {"url": "https://access.redhat.com/errata/RHSA-2024:1785", "source": "secalert@redhat.com"}, {"url": "https://access.redhat.com/errata/RHSA-2024:2036", "source": "secalert@redhat.com"}, {"url": "https://access.redhat.com/errata/RHSA-2024:2037", "source": "secalert@redhat.com"}, {"url": "https://access.redhat.com/errata/RHSA-2024:2038", "source": "secalert@redhat.com"}, {"url": "https://access.redhat.com/errata/RHSA-2024:2039", "source": "secalert@redhat.com"}, {"url": "https://access.redhat.com/errata/RHSA-2024:2040", "source": "secalert@redhat.com"}, {"url": "https://access.redhat.com/errata/RHSA-2024:2041", "source": "secalert@redhat.com"}, {"url": "https://access.redhat.com/errata/RHSA-2024:2042", "source": "secalert@redhat.com"}, {"url": "https://access.redhat.com/errata/RHSA-2024:2080", "source": "secalert@redhat.com"}, {"url": "https://access.redhat.com/errata/RHSA-2024:2616", "source": "secalert@redhat.com"}, {"url": "https://access.redhat.com/errata/RHSA-2024:3258", "source": "secalert@redhat.com"}, {"url": "https://access.redhat.com/errata/RHSA-2024:3261", "source": "secalert@redhat.com"}, {"url": "https://access.redhat.com/errata/RHSA-2024:3343", "source": "secalert@redhat.com"}, {"url": "https://access.redhat.com/security/cve/CVE-2024-31080", "source": "secalert@redhat.com"}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=2271997", "source": "secalert@redhat.com"}, {"url": "https://lists.debian.org/debian-lts-announce/2024/04/msg00009.html", "source": "secalert@redhat.com"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6TF7FZXOKHIKPZXYIMSQXKVH7WITKV3V/", "source": "secalert@redhat.com"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EBLQJIAXEDMEGRGZMSH7CWUJHSVKUWLV/", "source": "secalert@redhat.com"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/P73U4DAAWLFZAPD75GLXTGMSTTQWW5AP/", "source": "secalert@redhat.com"}], "techniques": [{"techniqueID": "TA0001", "comment": "CVE-2024-31080 - This vulnerability can be exploited by an attacker to cause the X server to read heap memory values and then transmit them back to the client until encountering an unmapped page, resulting in a crash. This is a classic example of an information leak and can be mitigated by using input validation and sanitization techniques."}, {"techniqueID": "TA0002", "comment": "CVE-2024-31080 - The vulnerability allows an attacker to cause the X server to read heap memory values and then transmit them back to the client. This is an example of a buffer over-read and can be mitigated by using boundary checking and memory-safe programming techniques."}, {"techniqueID": "TA0048", "comment": "CVE-2024-31080 - The vulnerability can be exploited by an attacker to cause the X server to read heap memory values and then transmit them back to the client. This is an example of a heap-based buffer overflow and can be mitigated by using address space layout randomization (ASLR) and data execution prevention (DEP) technologies."}, {"techniqueID": "TA0049", "comment": "CVE-2024-31080 - The vulnerability allows an attacker to cause the X server to read heap memory values and then transmit them back to the client. This is an example of a heap-based buffer overflow and can be mitigated by using stack-based buffer overflow protection techniques."}], "stix_bundle": {"vx-python": {"x_mitre_id": "vx-python", "name": "VX-Shellcode", "description": "vx-python is a collection of Python modules that provides an interface to VX", "aliases": ["vx-python"], "references": {"references": {"reference": [{"href": "https://github.com/vx-python/vx-python", "href_label": "vx-python"}]}}, "related_components": {"component": [{"idRef": "CVE-2024-31080", "description": "vx-python is vulnerable to CVE-2024-31080"}]}}, "x_mitre_id": "vx-python", "name": "VX-Shellcode", "description": "vx-python is a collection of Python modules that provides an interface to VX", "aliases": ["vx-python"], "references": {"references": {"reference": [{"href": "https://github.com/vx-python/vx-python", "href_label": "vx-python"}]}}, "related_components": {"component": [{"idRef": "CVE-2024-31080", "description": "vx-python is vulnerable to CVE-2024-31080"}]}}, "technical_analysis": {"Introduction": "CVE-2024-31080 is a heap-based buffer over-read vulnerability in the X.org server's ProcXIGetSelectedEvents() function. This vulnerability allows an attacker to cause the X server to read heap memory values and then transmit them back to the client.", "Impact and Scope": "The impact of this vulnerability is high, as it can be exploited to cause the X server to read heap memory values and transmit them back to the client. The scope of this vulnerability is limited to the X.org server.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques for this vulnerability are TA0001, TA0002, TA0048, and TA0049.", "Technical Details": "The vulnerability is caused by the use of byte-swapped length values in replies, which can lead to memory leakage and segmentation faults.", "Detection": "Detection of this vulnerability can be done by monitoring for abnormal memory access patterns and transmission of data to the client.", "Mitigation": "Mitigation of this vulnerability can be done by using input validation and sanitization techniques, as well as by using boundary checking and memory-safe programming techniques.", "Conclusion": "Conclusion"}, "executive_analysis": {"Overview": "This vulnerability is a high-severity heap-based buffer over-read vulnerability in the X.org server's ProcXIGetSelectedEvents() function.", "Business Impact": "The business impact of this vulnerability is significant, as it can be exploited to cause data leakage and transmission to the client.", "Technical Impact": "The technical impact of this vulnerability is that it can be exploited to cause memory leakage and segmentation faults.", "Mitigation Strategies": "Mitigation strategies include using input validation and sanitization techniques, as well as using boundary checking and memory-safe programming techniques.", "Recommendations": "Recommendations include applying the latest security patches, configuring the X.org server to use memory-safe programming techniques, and monitoring for abnormal memory access patterns.", "Conclusions": "Conclusion"}}