{"id": "CVE-2020-26051", "sourceIdentifier": "cve@mitre.org", "published": "2021-02-08T14:15:12.390", "lastModified": "2021-02-10T19:23:26.967", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "College Management System Php 1.0 suffers from SQL injection vulnerabilities in the index.php page from POST parameters 'unametxt' and 'pwdtxt', which are not filtered before passing a SQL query."}, {"lang": "es", "value": "College Management System Php versi\u00f3n 1.0, sufre de vulnerabilidades de inyecci\u00f3n SQL en la p\u00e1gina index.php de los par\u00e1metros POST \"unametxt\" y \"pwdtxt\", que no son filtradas antes de pasar una consulta SQL"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:college_management_system_project:college_management_system:1.0:*:*:*:*:*:*:*", "matchCriteriaId": "3ADB4C9F-1230-4F3E-9E79-15F80FE25866"}]}]}], "references": [{"url": "https://www.exploit-db.com/exploits/48593", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2020-26051 - SQL Injection vulnerability in College Management System Php 1.0, exploited using crafted POST requests, can be mitigated by validating user input and configuring proper access controls."}, {"techniqueID": "T1027", "comment": "CVE-2020-26051 - Adversaries may use this vulnerability to inject malicious SQL queries, which can be detected by monitoring database logs and implementing a Web Application Firewall."}, {"techniqueID": "T1190", "comment": "CVE-2020-26051 - Adversaries may use this vulnerability to steal sensitive data, which can be mitigated by implementing encryption and secure authentication mechanisms."}, {"techniqueID": "T1204", "comment": "CVE-2020-26051 - Adversaries may use this vulnerability to disrupt system operations, which can be mitigated by configuring proper access controls and implementing a Incident Response plan."}], "technical_analysis": {"Introduction": "The College Management System Php 1.0 has been found to contain a SQL injection vulnerability, allowing attackers to inject malicious SQL queries.", "Impact and Scope": "The vulnerability has a CVSS 3.1 score of 9.8, an attack vector of NETWORK, and an exploitability score of 3.9.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to techniques T1059, T1027, T1190, and T1204, which involve command injection, credential dumping, data exfiltration, and system disruption.", "Technical Details": "The vulnerability occurs due to the failure to properly sanitize user input in the index.php page, allowing attackers to inject malicious SQL queries.", "Detection": "The vulnerability can be detected by monitoring database logs, implementing a Web Application Firewall, and conducting regular penetration testing.", "Mitigation": "The vulnerability can be mitigated by validating user input, configuring proper access controls, implementing encryption and secure authentication mechanisms, and configuring a Incident Response plan.", "Conclusion": "The College Management System Php 1.0 SQL injection vulnerability is a serious threat that can be mitigated by implementing proper security controls and practices."}, "executive_analysis": {"Overview": "The College Management System Php 1.0 has been found to contain a SQL injection vulnerability, which can compromise sensitive data and disrupt system operations.", "Business Impact": "The vulnerability can have a significant business impact by exposing sensitive data, disrupting system operations, and compromising compliance with regulations.", "Technical Impact": "The vulnerability can have a significant technical impact by compromising data security, system integrity, and availability.", "Mitigation Strategies": "Implementing proper security controls, configuring access controls, and conducting regular security audits can mitigate the vulnerability.", "Recommendations": "Executives should prioritize the remediation of this vulnerability, ensure that the organization's incident response plan is up-to-date, and conduct regular security training for staff.", "Conclusions": "The College Management System Php 1.0 SQL injection vulnerability is a serious threat that requires immediate attention and remediation."}}