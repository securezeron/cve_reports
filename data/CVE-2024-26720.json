{"id": "CVE-2024-26720", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-04-03T15:15:53.993", "lastModified": "2024-07-18T12:15:02.847", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/writeback: fix possible divide-by-zero in wb_dirty_limits(), again\n\n(struct dirty_throttle_control *)->thresh is an unsigned long, but is\npassed as the u32 divisor argument to div_u64().  On architectures where\nunsigned long is 64 bytes, the argument will be implicitly truncated.\n\nUse div64_u64() instead of div_u64() so that the value used in the \"is\nthis a safe division\" check is the same as the divisor.\n\nAlso, remove redundant cast of the numerator to u64, as that should happen\nimplicitly.\n\nThis would be difficult to exploit in memcg domain, given the ratio-based\narithmetic domain_drity_limits() uses, but is much easier in global\nwriteback domain with a BDI_CAP_STRICTLIMIT-backing device, using e.g. \nvm.dirty_bytes=(1<<32)*PAGE_SIZE so that dtc->thresh == (1<<32)"}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: mm/writeback: corrige la posible divisi\u00f3n por cero en wb_dirty_limits(), nuevamente (struct dirty_throttle_control *)-&gt;thresh es un largo sin firmar, pero se pasa como argumento del divisor u32 a div_u64(). En arquitecturas donde la longitud sin firmar es de 64 bytes, el argumento se truncar\u00e1 impl\u00edcitamente. Utilice div64_u64() en lugar de div_u64() para que el valor utilizado en la comprobaci\u00f3n \"\u00bfEs esta una divisi\u00f3n segura\" sea el mismo que el divisor? Adem\u00e1s, elimine la conversi\u00f3n redundante del numerador a u64, ya que eso deber\u00eda suceder impl\u00edcitamente. Esto ser\u00eda dif\u00edcil de explotar en el dominio memcg, dado el uso de la aritm\u00e9tica basada en proporciones domain_drity_limits(), pero es mucho m\u00e1s f\u00e1cil en el dominio de reescritura global con un dispositivo de respaldo BDI_CAP_STRICTLIMIT, usando, por ejemplo, vm.dirty_bytes=(1&lt;&lt;32)*PAGE_SIZE de modo que dtc-&gt;thresh == (1&lt;&lt;32)"}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/000099d71648504fb9c7a4616f92c2b70c3e44ec", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/145faa3d03688cbb7bbaaecbd84c01539852942c", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/16b1025eaa8fc223ab4273ece20d1c3a4211a95d", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/1f12e4b3284d6c863f272eb2de0d4248ed211cf4", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/23a28f5f3f6ca1e4184bd0e9631cd0944cf1c807", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/253f9ea7e8e53a5176bd80ceb174907b10724c1a", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/2820005edae13b140f2d54267d1bd6bb23915f59", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/5099871b370335809c0fd1abad74d9c7c205d43f", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/65977bed167a92e87085e757fffa5798f7314c9f", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/81e7d2530d458548b90a5c5e76b77ad5e5d1c0df", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/9319b647902cbd5cc884ac08a8a6d54ce111fc78", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/c593d26fb5d577ef31b6e49a31e08ae3ebc1bc1e", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/cbbe17a324437c0ff99881a3ee453da45b228a00", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/ec18ec230301583395576915d274b407743d8f6c", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/f6620df12cb6bdcad671d269debbb23573502f9d", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-26720 - This technique is relevant as it involves division by zero, which can be a critical indicator of potential attacks. Defending against this exploit would require monitoring for unusual system behavior and implementing strict access controls."}, {"techniqueID": "T1204", "comment": "CVE-2024-26720 - This technique is relevant as it involves data manipulation, which can be used to compromise system integrity. Defending against this exploit would require implementing robust data validation and sanitization mechanisms."}, {"techniqueID": "T1562", "comment": "CVE-2024-26720 - This technique is relevant as it involves privilege escalation, which can be used to increase an attacker's privileges. Defending against this exploit would require implementing strict access controls and monitoring for privileged activity."}], "stix_bundle": {"id": "b2d6af4d-ec5e-495d-96d1-43c16a7ad52e", "type": "bundle", "spec_version": "2.1", "definitions": [{"id": "threat-actor", "type": " observable", "spec_version": "2.1", "data_type": "indicator", "name": "Unknown", "description": "An unknown actor exploiting the CVE-2024-26720 vulnerability."}], "objects": [{"id": "CVE-2024-26720", "type": "indicator", "spec_version": "2.1", "data_type": "unknown", "name": "CVE-2024-26720", "description": "A Linux kernel vulnerability that can be exploited by dividing by zero.", "created_by_ref": "b2d6af4d-ec5e-495d-96d1-43c16a7ad52e", "objective_ref": "b2d6af4d-ec5e-495d-96d1-43c16a7ad52e"}, {"id": "T1190", "type": "intrusion-set", "spec_version": "2.1", "data_type": "technique", "name": "Divide-By-Zero", "description": "An attacker attempts to divide by zero in a Linux kernel function.", "related_threat_actors": ["b2d6af4d-ec5e-495d-96d1-43c16a7ad52e"]}, {"id": "T1204", "type": "intrusion-set", "spec_version": "2.1", "data_type": "technique", "name": "Data Manipulation", "description": "An attacker manipulates data in a Linux kernel function.", "related_threat_actors": ["b2d6af4d-ec5e-495d-96d1-43c16a7ad52e"]}, {"id": "T1562", "type": "intrusion-set", "spec_version": "2.1", "data_type": "technique", "name": "Privilege Escalation", "description": "An attacker escalates privileges in a Linux kernel function.", "related_threat_actors": ["b2d6af4d-ec5e-495d-96d1-43c16a7ad52e"]}], "relationships": [{"source_ref": "CVE-2024-26720", "target_ref": "T1190", "type": "indicates"}, {"source_ref": "CVE-2024-26720", "target_ref": "T1204", "type": "indicates"}, {"source_ref": "CVE-2024-26720", "target_ref": "T1562", "type": "indicates"}, {"source_ref": "T1190", "target_ref": "T1204", "type": "implements"}, {"source_ref": "T1204", "target_ref": "T1562", "type": "implements"}]}, "technical_analysis": {"Introduction": "The CVE-2024-26720 vulnerability is a Linux kernel vulnerability that can be exploited by dividing by zero. This vulnerability can be used to compromise system integrity and increase an attacker's privileges.", "Impact and Scope": "The impact of this vulnerability is high, as it can be used to conduct a variety of attacks, including privilege escalation and data manipulation. The scope of this vulnerability is limited to Linux systems.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques are T1190, T1204, and T1562.", "Technical Details": "The vulnerability is caused by a division by zero in a Linux kernel function. This can be exploited by an attacker to manipulate data and increase their privileges.", "Detection": "Detection of this vulnerability can be done by monitoring for unusual system behavior and implementing strict access controls.", "Mitigation": "Mitigation strategies include implementing robust data validation and sanitization mechanisms, as well as monitoring for privileged activity.", "Conclusion": "In conclusion, the CVE-2024-26720 vulnerability is a critical vulnerability that can be exploited to compromise system integrity and increase an attacker's privileges. It is important to implement strict access controls and monitor for unusual system behavior to detect and mitigate this vulnerability."}, "executive_analysis": {"Overview": "The CVE-2024-26720 vulnerability is a critical Linux kernel vulnerability that can be exploited by dividing by zero.", "Business Impact": "The business impact of this vulnerability is significant, as it can be used to compromise system integrity and increase an attacker's privileges.", "Technical Impact": "The technical impact of this vulnerability is high, as it can be used to conduct a variety of attacks, including privilege escalation and data manipulation.", "Mitigation Strategies": "Mitigation strategies include implementing robust data validation and sanitization mechanisms, as well as monitoring for privileged activity.", "Recommendations": "Recommendations for executives include implementing a vulnerability management program, as well as conducting regular security audits and assessments.", "Conclusions": "In conclusion, the CVE-2024-26720 vulnerability is a critical vulnerability that requires immediate attention and action. It is important to implement strict access controls and monitor for unusual system behavior to detect and mitigate this vulnerability."}}