{"id": "CVE-2024-3021", "sourceIdentifier": "security@wordfence.com", "published": "2024-05-02T17:15:21.663", "lastModified": "2024-05-02T18:00:37.360", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Mhr Post Ticker plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the Header Title value in all versions up to, and including, 1.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level access, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled."}, {"lang": "es", "value": "El complemento Mhr Post Ticker para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del valor del t\u00edtulo del encabezado en todas las versiones hasta la 1.1 incluida debido a una sanitizaci\u00f3n de entrada y un escape de salida insuficientes. Esto hace posible que atacantes autenticados, con acceso a nivel de administrador, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada. Esto solo afecta a las instalaciones multisitio y a las instalaciones en las que se ha deshabilitado unfiltered_html."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.3, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3074516%40mhr-post-ticker&new=3074516%40mhr-post-ticker&sfp_email=&sfph_mail=", "source": "security@wordfence.com"}, {"url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3077808%40mhr-post-ticker&new=3077808%40mhr-post-ticker&sfp_email=&sfph_mail=", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/2f89bb45-2872-4081-a3b8-a1f11bbdbc55?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1189", "comment": "CVE-2024-3021 - An attacker can inject arbitrary web scripts in pages, impacting confidentiality, integrity, and availability"}, {"techniqueID": "T1190", "comment": "CVE-2024-3021 - Attackers can inject malicious scripts using stored XSS, making it possible to access sensitive information and perform unauthorized actions"}, {"techniqueID": "T1191", "comment": "CVE-2024-3021 - Without proper input validation and output escaping, attackers can inject custom JavaScript code in the Header Title value, resulting in code injection attacks"}, {"techniqueID": "T1192", "comment": "CVE-2024-3021 - The vulnerability allows attackers to inject scripts that will execute whenever a user accesses the injected page, increasing the attack surface for cross-site scripting"}], "stix_bundle": {"bundle": {"objects": [{"id": "vulnerability-1", "type": "vulnerability", "name": "Mhr Post Ticker Plugin Stored Cross-Site Scripting Vulnerability (CVE-2024-3021)", "description": "The Mhr Post Ticker plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the Header Title value in all versions up to, and including, 1.1 due to insufficient input sanitization and output escaping.", "references": [{"reference": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3074516@mhr-post-ticker&new=3074516@mhr-post-ticker&sfp_email=&sfph_mail=", "role": "mitre_attck"}, {"reference": "https://www.wordfence.com/threat-intel/vulnerabilities/id/2f89bb45-2872-4081-a3b8-a1f11bbdbc55?source=cve", "role": "mitre_attck"}]}, {"id": "course-of-action-1", "type": "course-of-action", "name": "Update the Mhr Post Ticker plugin to version 1.2 or later", "description": "updating the plugin to the latest version will fix the vulnerability and prevent attackers from injecting malicious scripts", "related_object": "vulnerability-1", "relationship": "mitigates"}, {"id": "course-of-action-2", "type": "course-of-action", "name": "Disable unfiltered_html functionality", "description": "disabling unfiltered_html functionality will prevent attackers from injecting scripts and reduce the attack surface", "related_object": "vulnerability-1", "relationship": "mitigates"}], "relationships": [{"relationship": "related_to", "object1": "vulnerability-1", "object2": "course-of-action-1"}, {"relationship": "related_to", "object1": "vulnerability-1", "object2": "course-of-action-2"}]}}, "technical_analysis": {"Introduction": "The Mhr Post Ticker plugin for WordPress is vulnerable to Stored Cross-Site Scripting due to insufficient input sanitization and output escaping.", "Impact and Scope": "The vulnerability affects multi-site installations and installations where unfiltered_html has been disabled, and has a CVSS score of 4.4.", "Related MITRE ATT&CK Techniques": "T1189, T1190, T1191, T1192", "Technical Details": "The vulnerability allows attackers to inject custom JavaScript code in the Header Title value, making it possible to access sensitive information and perform unauthorized actions.", "Detection": "Detection methods include analyzing plugin logs for suspicious traffic and monitoring for script injection.", "Mitigation": "Mitigation strategies include updating the plugin to the latest version, disabling unfiltered_html functionality, and implementing input validation and output escaping.", "Conclusion": "In conclusion, this vulnerability is a critical issue that requires immediate attention and remediation to prevent attacks and maintain the security of the WordPress installation."}, "executive_analysis": {"Overview": "The Mhr Post Ticker plugin for WordPress has a critical vulnerability that allows attackers to inject malicious scripts and access sensitive information.", "Business Impact": "The vulnerability can lead to data breaches, unauthorized access, and reputational damage.", "Technical Impact": "The vulnerability allows attackers to inject custom JavaScript code, making it possible to access sensitive information and perform unauthorized actions.", "Mitigation Strategies": "Updating the plugin to the latest version, disabling unfiltered_html functionality, and implementing input validation and output escaping are effective mitigation strategies.", "Recommendations": "Executives should prioritize updating the plugin to the latest version, disabling unfiltered_html functionality, and implementing input validation and output escaping to prevent attacks and maintain the security of the WordPress installation.", "Conclusions": "In conclusion, this vulnerability requires immediate attention and remediation to prevent attacks and maintain the security of the WordPress installation."}}