{"id": "CVE-2024-31445", "sourceIdentifier": "security-advisories@github.com", "published": "2024-05-14T15:25:21.567", "lastModified": "2024-06-10T17:16:26.097", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Cacti provides an operational monitoring and fault management framework. Prior to version 1.2.27, a SQL injection vulnerability in `automation_get_new_graphs_sql` function of `api_automation.php` allows authenticated users to exploit these SQL injection vulnerabilities to perform privilege escalation and remote code execution. In `api_automation.php` line 856, the `get_request_var('filter')` is being concatenated into the SQL statement without any sanitization. In `api_automation.php` line 717, The filter of `'filter'` is `FILTER_DEFAULT`, which means there is no filter for it. Version 1.2.27 contains a patch for the issue."}, {"lang": "es", "value": "Cacti proporciona un framework de monitoreo operativo y gesti\u00f3n de fallas. Antes de la versi\u00f3n 1.2.27, una vulnerabilidad de inyecci\u00f3n SQL en la funci\u00f3n `automation_get_new_graphs_sql` de `api_automation.php` permit\u00eda a los usuarios autenticados explotar estas vulnerabilidades de inyecci\u00f3n SQL para realizar escalada de privilegios y ejecuci\u00f3n remota de c\u00f3digo. En la l\u00ednea 856 de `api_automation.php`, `get_request_var('filter')` se concatena en la declaraci\u00f3n SQL sin ning\u00fan tipo de sanitizaci\u00f3n. En `api_automation.php` l\u00ednea 717, el filtro de ``filtro'' es `FILTER_DEFAULT`, lo que significa que no hay ning\u00fan filtro para \u00e9l. La versi\u00f3n 1.2.27 contiene un parche para el problema."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-89"}]}], "references": [{"url": "https://github.com/Cacti/cacti/blob/501712998589763d411a68d35e3cda98fd9cfd18/lib/api_automation.php#L717", "source": "security-advisories@github.com"}, {"url": "https://github.com/Cacti/cacti/blob/501712998589763d411a68d35e3cda98fd9cfd18/lib/api_automation.php#L856", "source": "security-advisories@github.com"}, {"url": "https://github.com/Cacti/cacti/commit/fd93c6e47651958b77c3bbe6a01fff695f81e886", "source": "security-advisories@github.com"}, {"url": "https://github.com/Cacti/cacti/security/advisories/GHSA-vjph-r677-6pcc", "source": "security-advisories@github.com"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RBEOAFKRARQHTDIYSL723XAFJ2Q6624X/", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1027", "comment": "CVE-2024-31445 - SQL Injection vulnerability allows authenticated users to perform privilege escalation and remote code execution, demonstrating the importance of proper input validation and sanitization, and the need to regularly update software."}, {"techniqueID": "T1204", "comment": "CVE-2024-31445 - The use of a SQL injection vulnerability to perform remote code execution highlights the importance of utilizing reputable third-party libraries and the need to regularly monitor and update dependencies."}, {"techniqueID": "T1210", "comment": "CVE-2024-31445 - This vulnerability demonstrates the importance of secure coding practices, such as using prepared statements and parameterized queries, and the need for developers to follow best practices to prevent SQL injection attacks."}, {"techniqueID": "T1565", "comment": "CVE-2024-31445 - The ability to perform remote code execution through a SQL injection vulnerability highlights the importance of utilizing a web application firewall (WAF) to detect and prevent malicious traffic, as well as regularly monitoring and updating software."}], "stix_bundle": {"ms-stix:STIX_Bundle": {"id": "bundle:https://example.com/stix_bundle", "type": "ms-stix:STIX_Bundle", "spec_version": "2.1", "objects": [{"id": "Vulnerability:CVE-2024-31445", "type": "vulnerability:Vulnerability", "name": "CVE-2024-31445: Cacti SQL Injection Vulnerability", "description": "A SQL injection vulnerability in Cacti allows authenticated users to perform privilege escalation and remote code execution.", "objects": [{"id": "observable:CodeSnippet#L717", "type": "observable:CodeSnippet", "source_data_identifier": "https://github.com/Cacti/cacti/blob/501712998589763d411a68d35e3cda98fd9cfd18/lib/api_automation.php#L717"}, {"id": "observable:CodeSnippet#L856", "type": "observable:CodeSnippet", "source_data_identifier": "https://github.com/Cacti/cacti/blob/501712998589763d411a68d35e3cda98fd9cfd18/lib/api_automation.php#L856"}], "relationships": [{"from_id": "Vulnerability:CVE-2024-31445", "to_id": "technique:T1027", "type": "vulnerability:exploits-technique"}, {"from_id": "Vulnerability:CVE-2024-31445", "to_id": "technique:T1204", "type": "vulnerability:exploits-technique"}, {"from_id": "Vulnerability:CVE-2024-31445", "to_id": "technique:T1210", "type": "vulnerability:exploits-technique"}, {"from_id": "Vulnerability:CVE-2024-31445", "to_id": "technique:T1565", "type": "vulnerability:exploits-technique"}]}]}}, "technical_analysis": {"Introduction": "A SQL injection vulnerability exists in the Cacti software due to an unvalidated user-input parameter in the `get_request_var('filter')` function, allowing authenticated users to perform privilege escalation and remote code execution.", "Impact and Scope": "The vulnerability has a CVSS score of 8.8, with a high impact score due to the potential for remote code execution and the ability to escalate privileges. This vulnerability affects all users of Cacti versions prior to 1.2.27.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to T1027, T1204, T1210, and T1565, which demonstrated the importance of proper input validation, secure coding practices, and the use of a WAF to detect and prevent malicious traffic.", "Technical Details": "The vulnerability exists in the `api_automation.php` file, specifically in the `get_request_var('filter')` function, which is concatenating user-input without sanitization.", "Detection": "Detection of this vulnerability can be done by monitoring network traffic and looking for suspicious SQL queries, as well as implementing WAF rules to detect and block malicious traffic.", "Mitigation": "Mitigation strategies include updating to the latest version of Cacti (1.2.27 or higher), implementing input validation and sanitization, and utilizing a WAF to detect and prevent malicious traffic.", "Conclusion": "The SQL injection vulnerability in Cacti is a significant security risk and highlights the importance of proper input validation and sanitization, as well as the need for developers to follow best practices to prevent SQL injection attacks."}, "executive_analysis": {"Overview": "A vulnerable SQL injection vulnerability exists in the Cacti software, allowing authenticated users to perform privilege escalation and remote code execution, and highlighting the need for improved security practices.", "Business Impact": "The vulnerability has the potential to cause significant business disruption and loss, particularly if exploited by unauthorized users or malicious actors.", "Technical Impact": "The vulnerability has a high technical impact due to the potential for remote code execution and privilege escalation, and highlights the importance of secure coding practices and regular software updates.", "Mitigation Strategies": "Mitigation strategies include updating to the latest version of Cacti, implementing input validation and sanitization, and utilizing a WAF to detect and prevent malicious traffic.", "Recommendations": "Recommendations for executives include prioritizing software updates, implementing strong security practices, and utilizing a WAF to detect and prevent malicious traffic.", "Conclusions": "In conclusion, the SQL injection vulnerability in Cacti is a significant security risk that highlights the importance of proper input validation and sanitization, as well as the need for regular software updates and strong security practices."}}