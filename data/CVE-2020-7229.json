{"id": "CVE-2020-7229", "sourceIdentifier": "cve@mitre.org", "published": "2020-01-21T17:15:12.863", "lastModified": "2024-02-14T01:17:43.863", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "An issue was discovered in Simplejobscript.com SJS before 1.65. There is unauthenticated SQL injection via the search engine. The parameter is landing_location. The function is countSearchedJobs(). The file is _lib/class.Job.php."}, {"lang": "es", "value": "Se detect\u00f3 un problema en Simplejobscript.com SJS versiones anteriores a 1.65. Se presenta una inyecci\u00f3n SQL no autenticada por medio del motor de b\u00fasqueda. El par\u00e1metro es landing_location. La funci\u00f3n es countSearchedJobs(). El archivo es  _lib/class.Job.php."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:simplejobscript:simplejobscript:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.65", "matchCriteriaId": "BB5C84B9-3990-499E-ACFF-1E8F990A4691"}]}]}], "references": [{"url": "https://github.com/niteosoft/simplejobscript/issues/7", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://simplejobscript.com", "source": "cve@mitre.org", "tags": ["Vendor Advisory", "URL Repurposed"]}], "techniques": [{"techniqueID": "T1047", "comment": "CVE-2020-7229 - Unauthenticated SQL injection via the search engine parameter, potentially leading to remote code execution."}, {"techniqueID": "T1190", "comment": "CVE-2020-7229 - Weakness in search engine parameter, allowing for potential SQL injection attacks."}, {"techniqueID": "T1020", "comment": "CVE-2020-7229 - Inadequate error handling in the web application, allowing for potential SQL injection attacks."}], "stix_bundle": {"id": "sb_cve-2020-7229", "type": "bundle", "created_by": "Cyber Security Expert", "created": "2024-02-14T01:17:43.863", "modified": "2024-02-14T01:17:43.863", "labels": ["vulnerable", "sqlinjection", "webapplication"], "objects": [{"id": "vulnerability_cve-2020-7229", "type": "vulnerability", "name": "CVE-2020-7229: Unauthenticated SQL injection via search engine parameter", "description": ["An issue was discovered in Simplejobscript.com SJS before 1.65. There is unauthenticated SQL injection via the search engine. The parameter is landing_location. The function is countSearchedJobs(). The file is _lib/class.Job.php."]}, {"id": "attack_pattern_t1047", "type": "attack-pattern", "name": "T1047: SQL Injection", "description": ["Staging, Development, or Testing Infrastructure", "Network-based Detection Data is Collected"]}, {"id": "attack_pattern_t1190", "type": "attack-pattern", "name": "T1190: Content Injection", "description": ["Data is Injected into the Webpage"]}, {"id": "mitigation_strategy Defense Point 1", "type": "course-of-action", "name": "Defense Point 1: Validate and sanitize user input data", "description": ["Ensure that all user input data is validated and sanitized to prevent SQL injection attacks"], "relates_to": [{"id": "vulnerability_cve-2020-7229", "type": "related-to", "label": "mitigates"}]}, {"id": "mitigation_strategy Defense Point 2", "type": "course-of-action", "name": "Defense Point 2: Use prepared statements for database interactions", "description": ["Use prepared statements for all database interactions to prevent SQL injection attacks"], "relates_to": [{"id": "vulnerability_cve-2020-7229", "type": "related-to", "label": "mitigates"}]}]}, "technical_analysis": {"Introduction": "The vulnerability CVE-2020-7229 is a remote code execution vulnerability found in the search engine of the Simplejobscript.com SJS web application.", "Impact and Scope": "The vulnerability can allow an attacker to inject and execute arbitrary SQL code, potentially leading to remote code execution. The attack vector is through the landing_location search engine parameter.", "Related MITRE ATT&CK Techniques": "T1047, T1190, T1020", "Technical Details": "The vulnerability occurs due to the insufficient validation and sanitization of user input data, allowing for SQL injection attacks.", "Detection": "Detecting this vulnerability requires monitoring of network traffic for unusual patterns and analyzing logs for signs of SQL injection attacks.", "Mitigation": "Validating and sanitizing user input data, using prepared statements for database interactions, and implementing web application firewalls can help mitigate this vulnerability.", "Conclusion": "In conclusion, CVE-2020-7229 is a high-severity vulnerability that can lead to remote code execution and data breaches. It is essential to prioritize its patching and mitigation."}, "executive_analysis": {"Overview": "The vulnerability CVE-2020-7229 is a critical remote code execution vulnerability found in the search engine of the Simplejobscript.com SJS web application.", "Business Impact": "This vulnerability can lead to significant business impacts, such as data breaches, financial losses, and damage to the organization's reputation.", "Technical Impact": "The vulnerability can allow an attacker to inject and execute arbitrary SQL code, potentially leading to remote code execution.", "Mitigation Strategies": "Prioritize patching and implementing web application firewalls, validating and sanitizing user input data, and using prepared statements for database interactions.", "Recommendations": "Recommendations for executives include prioritizing the patching and mitigation of this vulnerability, implementing web application firewalls, and regular monitoring of network traffic and logs.", "Conclusions": "In conclusion, the executive team should prioritize the patching and mitigation of CVE-2020-7229 to ensure the security and integrity of the organization's web application."}}