{"id": "CVE-2024-44973", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-09-04T19:15:31.487", "lastModified": "2024-09-05T12:53:21.110", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm, slub: do not call do_slab_free for kfence object\n\nIn 782f8906f805 the freeing of kfence objects was moved from deep\ninside do_slab_free to the wrapper functions outside. This is a nice\nchange, but unfortunately it missed one spot in __kmem_cache_free_bulk.\n\nThis results in a crash like this:\n\nBUG skbuff_head_cache (Tainted: G S  B       E     ): Padding overwritten. 0xffff88907fea0f00-0xffff88907fea0fff @offset=3840\n\nslab_err (mm/slub.c:1129)\nfree_to_partial_list (mm/slub.c:? mm/slub.c:4036)\nslab_pad_check (mm/slub.c:864 mm/slub.c:1290)\ncheck_slab (mm/slub.c:?)\nfree_to_partial_list (mm/slub.c:3171 mm/slub.c:4036)\nkmem_cache_alloc_bulk (mm/slub.c:? mm/slub.c:4495 mm/slub.c:4586 mm/slub.c:4635)\nnapi_build_skb (net/core/skbuff.c:348 net/core/skbuff.c:527 net/core/skbuff.c:549)\n\nAll the other callers to do_slab_free appear to be ok.\n\nAdd a kfence_free check in __kmem_cache_free_bulk to avoid the crash."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mm, slub: no llamar a do_slab_free para el objeto kfence En 782f8906f805, la liberaci\u00f3n de objetos kfence se traslad\u00f3 desde lo profundo de do_slab_free a las funciones envolventes externas. Este es un cambio agradable, pero desafortunadamente omiti\u00f3 un punto en __kmem_cache_free_bulk. Esto da como resultado un fallo como este: ERROR skbuff_head_cache (Tainted: GSBE ): Relleno sobrescrito. 0xffff88907fea0f00-0xffff88907fea0fff @offset=3840 error_losa (mm/slub.c:1129) lista_libre_a_parcial (mm/slub.c:? mm/slub.c:4036) comprobaci\u00f3n_almohadilla_losa (mm/slub.c:864 mm/slub.c:1290) comprobaci\u00f3n_losa (mm/slub.c:?) lista_libre_a_parcial (mm/slub.c:3171 mm/slub.c:4036) kmem_cache_alloc_bulk (mm/slub.c:? mm/slub.c:4495 mm/slub.c:4586 mm/slub.c:4635) napi_build_skb (net/core/skbuff.c:348 net/core/skbuff.c:527 net/core/skbuff.c:549) Todos los dem\u00e1s llamadores de do_slab_free parecen estar bien. Agregue una comprobaci\u00f3n de kfence_free en __kmem_cache_free_bulk para evitar el bloqueo."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/a371d558e6f3aed977a8a7346350557de5d25190", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/b35cd7f1e969aaa63e6716d82480f6b8a3230949", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-44973 - The vulnerability demonstrates the importance of patch management and regular kernel updates. It's essential to keep the system up-to-date with the latest patches to prevent exploitation."}, {"techniqueID": "T1047", "comment": "The vulnerability highlights the risk of unpatched kernel modules. Attackers can exploit unpatched modules to gain privileges. Regularly checking and updating kernel modules is crucial for maintaining system security."}, {"techniqueID": "T1130", "comment": "The vulnerability shows the importance of input validation and sanitization. Failure to properly validate and sanitize user input can lead to buffer overflows and crashes. Implementing proper input validation mechanisms is essential for preventing these types of attacks."}, {"techniqueID": "T1191", "comment": "The vulnerability demonstrates the need for robust and well-maintained software development practices. Regularly reviewing and testing software for vulnerabilities is critical for maintaining system security."}, {"techniqueID": "T1563", "comment": "The vulnerability highlights the risk of elevated privileges. Attackers can exploit vulnerabilities to gain elevated privileges, which can lead to further exploitation and data theft. Implementing robust access controls and monitoring is essential for preventing privilege escalation."}], "stix_bundle": {"bundled_analysis": {"type": "bundle", "id": "bundle--CVE-2024-44973", "created_by": "automatic", "created": "2024-09-05T12:53:21.110", "updated": "2024-09-05T12:53:21.110", "objects": [{"type": "vulnerability", "id": "vulnerability--CVE-2024-44973", "created_by": "automatic", "created": "2024-09-05T12:53:21.110", "updated": "2024-09-05T12:53:21.110", "name": "CVE-2024-44973", "description": "The vulnerability in the Linux kernel's mm/slub.c module allows an attacker to cause a NULL pointer dereference, resulting in a crash.", "references": [{"type": "reference", "id": "reference--https://git.kernel.org/stable/c/a371d558e6f3aed977a8a7346350557de5d25190", "created_by": "automatic", "created": "2024-09-05T12:53:21.110", "updated": "2024-09-05T12:53:21.110", "name": "kernel patch", "description": "Fixed patch for the vulnerability", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"type": "reference", "id": "reference--https://git.kernel.org/stable/c/b35cd7f1e969aaa63e6716d82480f6b8a3230949", "created_by": "automatic", "created": "2024-09-05T12:53:21.110", "updated": "2024-09-05T12:53:21.110", "name": "kernel patch", "description": "Fixed patch for the vulnerability", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "components": [{"type": "operating-system", "id": "component--Linux_kernel", "created_by": "automatic", "created": "2024-09-05T12:53:21.110", "updated": "2024-09-05T12:53:21.110", "name": "Linux_kernel", "description": "The Linux kernel is the operating system of the device."}]}, {"type": "tactic", "id": "tactic--Defense_Evasion", "created_by": "automatic", "created": "2024-09-05T12:53:21.110", "updated": "2024-09-05T12:53:21.110", "name": "Defense_Evasion", "description": "The tactic involves evading detection by the defender.", " Mitigation": "Avoid unpatched systems, Implement robust access controls and monitoring, Regularly reviewing and testing software for vulnerabilities"}, {"type": "technique", "id": "technique--T1190", "created_by": "automatic", "created": "2024-09-05T12:53:21.110", "updated": "2024-09-05T12:53:21.110", "name": "T1190", "description": "The technique involves exploiting unpatched kernel modules.", "tactics": [{"type": "tactic", "id": "tactic--Defense_Evasion", "created_by": "automatic", "created": "2024-09-05T12:53:21.110", "updated": "2024-09-05T12:53:21.110", "name": "Defense_Evasion", "description": "The tactic involves evading detection by the defender."}]}], " relationships": [{"type": "relates_to", "id": "relates_to--CVE-2024-44973", "created_by": "automatic", "created": "2024-09-05T12:53:21.110", "updated": "2024-09-05T12:53:21.110", "from": "vulnerability--CVE-2024-44973", "to": "technique--T1190"}]}}, "technical_analysis": {"Introduction": "CVE-2024-44973 is a vulnerability in the Linux kernel that allows an attacker to cause a NULL pointer dereference, resulting in a crash.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5 and is assigned the base metric score.", "Related MITRE ATT&CK Techniques": "This vulnerability is related to T1190, T1047, T1130, T1191, and T1563.", "Technical Details": "The vulnerability is due to a NULL pointer dereference in the Linux kernel's mm/slub.c module.", "Detection": "Detection methods include checking for kernel module updates and monitoring system logs for crashes.", "Mitigation": "Mitigation strategies include avoiding unpatched systems, implementing robust access controls and monitoring, and regularly reviewing and testing software for vulnerabilities.", "Conclusion": "This vulnerability highlights the importance of maintaining up-to-date kernel modules and regularly reviewing and testing software for vulnerabilities."}, "executive_analysis": {"Overview": "CVE-2024-44973 is a critical vulnerability in the Linux kernel that can lead to a crash.", "Business Impact": "This vulnerability can lead to data loss and system downtime, which can result in significant financial losses.", "Technical Impact": "The vulnerability can allow an attacker to cause a NULL pointer dereference, resulting in a crash.", "Mitigation Strategies": "Avoid unpatched systems, Implement robust access controls and monitoring, Regularly reviewing and testing software for vulnerabilities", "Recommendations": "Recommendations include keeping system software up-to-date, regularly reviewing and testing software for vulnerabilities, and implementing robust access controls and monitoring.", "Conclusions": "This vulnerability highlights the importance of maintaining up-to-date system software and regularly reviewing and testing software for vulnerabilities."}}