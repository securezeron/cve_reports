{"id": "CVE-2024-24572", "sourceIdentifier": "security-advisories@github.com", "published": "2024-01-31T23:15:08.337", "lastModified": "2024-02-07T17:34:10.943", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "facileManager is a modular suite of web apps built with the sysadmin in mind. In versions 4.5.0 and earlier, the $_REQUEST global array was unsafely called inside an extract() function in admin-logs.php. The PHP file fm-init.php prevents arbitrary manipulation of $_SESSION via the GET/POST parameters. However, it does not prevent manipulation of any other sensitive variables such as $search_sql. Knowing this, an authenticated user with privileges to view site logs can manipulate the search_sql\nvariable by appending a GET parameter search_sql in the URL. The information above means that the checks and SQL injection prevention attempts were rendered unusable."}, {"lang": "es", "value": "facileManager es un conjunto modular de aplicaciones web creadas pensando en el administrador del sistema. En las versiones 4.5.0 y anteriores, la matriz global $_REQUEST se llamaba de forma insegura dentro de una funci\u00f3n extract() en admin-logs.php. El archivo PHP fm-init.php evita la manipulaci\u00f3n arbitraria de $_SESSION a trav\u00e9s de los par\u00e1metros GET/POST. Sin embargo, no impide la manipulaci\u00f3n de otras variables sensibles como $search_sql. Sabiendo esto, un usuario autenticado con privilegios para ver los registros del sitio puede manipular la variable search_sql agregando un par\u00e1metro GET search_sql en la URL. La informaci\u00f3n anterior significa que las comprobaciones y los intentos de prevenci\u00f3n de inyecci\u00f3n SQL quedaron inutilizables."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.2, "impactScore": 5.2}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.2, "impactScore": 5.2}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:facilemanager:facilemanager:*:*:*:*:*:*:*:*", "versionEndExcluding": "4.5.1", "matchCriteriaId": "E0E110C6-3BD9-442C-9641-29531155410B"}]}]}], "references": [{"url": "https://github.com/WillyXJ/facileManager/commit/0aa850d4b518f10143a4c675142b15caa5872877", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/WillyXJ/facileManager/security/advisories/GHSA-xw34-8pj6-75gc", "source": "security-advisories@github.com", "tags": ["Exploit", "Vendor Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-24572 - This vulnerability allows for SQL injection, which is a classic example of a data manipulation attack. This can be defended against by validating user input, using parameterized queries, and limiting access to sensitive data."}, {"techniqueID": "T1027", "comment": "CVE-2024-24572 - The attacker can manipulate the search_sql variable, which can lead to further attacks such as data exfiltration or data manipulation. This can be defended against by limiting access to sensitive data and implementing robust validation of user input."}, {"techniqueID": "T1174", "comment": "CVE-2024-24572 - The attacker can inject arbitrary SQL queries, which can be used to extract sensitive data or manipulate the database. This can be defended against by implementing robust security controls and limiting access to sensitive data."}], "technical_analysis": {"Introduction": "The CVE-2024-24572 vulnerability is a SQL injection vulnerability in the facileManager suite of web apps, which allows an authenticated user with privileges to view site logs to manipulate the search_sql variable and inject arbitrary SQL queries.", "Impact and Scope": "The impact of this vulnerability is a moderate risk to confidentiality, integrity, and availability. The attack vector is network-based, and the CVSS score is 6.5.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK Techniques are T1190, T1027, and T1174.", "Technical Details": "The vulnerability occurs in the admin-logs.php file, where the $_REQUEST global array is unsafely called inside an extract() function. This allows an authenticated user to inject arbitrary SQL queries and manipulate the search_sql variable.", "Detection": "Detection of this vulnerability can be done by monitoring for suspicious SQL queries or unusual access to sensitive data.", "Mitigation": "Mitigation of this vulnerability can be done by limiting access to sensitive data, implementing robust validation of user input, and using parameterized queries.", "Conclusion": "In conclusion, the CVE-2024-24572 vulnerability is a SQL injection vulnerability that can be exploited by an authenticated user with privileges to view site logs."}, "executive_analysis": {"Overview": "The CVE-2024-24572 vulnerability is a critical security risk that affects the facileManager suite of web apps.", "Business Impact": "The business impact of this vulnerability is a threat to the confidentiality, integrity, and availability of sensitive data.", "Technical Impact": "The technical impact of this vulnerability is the potential for data exfiltration or data manipulation.", "Mitigation Strategies": "The recommended mitigation strategies are to limit access to sensitive data, implement robust validation of user input, and use parameterized queries.", "Recommendations": "Recommendations for executives include ensuring that all web apps are patched and updated regularly, implementing robust security controls, and conducting regular security audits.", "Conclusions": "In conclusion, the CVE-2024-24572 vulnerability is a critical security risk that requires immediate attention and action."}}