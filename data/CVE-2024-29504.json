{"id": "CVE-2024-29504", "sourceIdentifier": "cve@mitre.org", "published": "2024-04-10T22:15:07.287", "lastModified": "2024-08-27T20:35:28.797", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Cross Site Scripting vulnerability in Summernote v.0.8.18 and before allows a remote attacker to execute arbtirary code via a crafted payload to the codeview parameter."}, {"lang": "es", "value": "Vulnerabilidad de Cross Site Scripting en Summernote v.0.8.18 y anteriores permite a un atacante remoto ejecutar c\u00f3digo arbitrario a trav\u00e9s de un payload manipulado en el par\u00e1metro codeview."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "HIGH", "availabilityImpact": "LOW", "baseScore": 7.6, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 4.7}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://gist.github.com/phoenix118go/a9192281efcfa518daa709ab7638712b", "source": "cve@mitre.org"}, {"url": "https://github.com/summernote/summernote/pull/3782", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-29504 - This Cross-Site Scripting (XSS) vulnerability in Summernote v.0.8.18 and earlier allows an attacker to inject arbitrary JavaScript code into a vulnerable application's codeview parameter, potentially leading to remote code execution and browser-based attacks."}, {"techniqueID": "T1048", "comment": "CVE-2024-29504 - The weakness in Summernote's codeview parameter processing can also be exploited to inject malicious content and manipulate the application's behavior, potentially allowing for unauthorized data modification, data exfiltration, and other attacks."}, {"techniqueID": "T1204", "comment": "CVE-2024-29504 - The XSS vulnerability can be used to trick users into divulging sensitive information or performing unintended actions, and can also be used to launch homograph attacks, potentially leading to sensitive data exposure."}], "stix_bundle": {"bundle": {"type": "indicator", "id": "CVE-2024-29504", "created_by_ref": "https://cve.mitre.org/data/refs/cve@mitre.org", "modified": "2024-08-27T20:35:28.797", "name": "Cross-Site Scripting vulnerability in Summernote v.0.8.18 and earlier", "description": "Cross Site Scripting vulnerability in Summernote v.0.8.18 and earlier", "indicators": [{"type": "identity", "id": "Summernote v.0.8.18 and earlier", "description": "Summernote v.0.8.18 and earlier"}], "objects": [{"type": "Campaign", "id": "XSS exploit via codeview parameter", "description": "Exploitation of the XSS vulnerability via the codeview parameter"}, {"type": "Task", "id": "Injecting malicious JavaScript code", "description": "Injecting malicious JavaScript code into the vulnerable application's codeview parameter"}], "relationships": [{"from": "https://cve.mitre.org/data/refs/cve@mitre.org", "to": "https://cve.mitre.org/data/refs/cve@mitre.org", "type": "related_to"}, {"from": "https://cve.mitre.org/data/refs/cve@mitre.org", "to": "CVE-2024-29504", "type": "has_course_of_action"}, {"from": "CVE-2024-29504", "to": "XSS exploit via codeview parameter", "type": "exploits"}]}}, "technical_analysis": {"Introduction": "This vulnerability is a Cross-Site Scripting (XSS) vulnerability in Summernote v.0.8.18 and earlier, which allows an attacker to inject arbitrary JavaScript code into a vulnerable application's codeview parameter.", "Impact and Scope": "The vulnerability has a CVSS score of 7.6 (High) and an attack vector of NETWORK.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques are T1059, T1048, and T1204.", "Technical Details": "The vulnerability occurs due to the insecure processing of the codeview parameter, which allows an attacker to inject malicious JavaScript code.", "Detection": "Detection of the vulnerability can be done by monitoring for unusual behavior in the application, such as unexpected JavaScript code execution.", "Mitigation": "Mitigation strategies include implementing input validation and sanitization, using Content Security Policy (CSP), and using a Web Application Firewall (WAF).", "Conclusion": "In conclusion, this vulnerability poses a significant threat to applications that use Summernote v.0.8.18 and earlier, and should be addressed promptly to prevent attacks."}, "executive_analysis": {"Overview": "This vulnerability is a high-risk Cross-Site Scripting (XSS) vulnerability in Summernote v.0.8.18 and earlier, which allows an attacker to inject arbitrary JavaScript code into a vulnerable application's codeview parameter.", "Business Impact": "The vulnerability can lead to unauthorized data modification, data exfiltration, and other attacks, which can result in significant business losses and reputational damage.", "Technical Impact": "The vulnerability can allow an attacker to inject malicious JavaScript code and conduct unauthorized actions, potentially leading to remote code execution and browser-based attacks.", "Mitigation Strategies": "Implementing input validation and sanitization, using Content Security Policy (CSP), and using a Web Application Firewall (WAF) can mitigate the vulnerability.", "Recommendations": "It is recommended that all applications that use Summernote v.0.8.18 and earlier be updated to the latest version, and that additional security measures be implemented to prevent attacks.", "Conclusions": "In conclusion, this vulnerability is a high-priority vulnerability that requires immediate attention and mitigation to prevent attacks."}}