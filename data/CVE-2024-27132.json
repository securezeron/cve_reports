{"id": "CVE-2024-27132", "sourceIdentifier": "reefs@jfrog.com", "published": "2024-02-23T22:15:55.077", "lastModified": "2024-02-26T13:42:22.567", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Insufficient sanitization in MLflow leads to XSS when running an untrusted recipe.\n\nThis issue leads to a client-side RCE when running an untrusted recipe in Jupyter Notebook.\n\nThe vulnerability stems from lack of sanitization over template variables.\n\n"}, {"lang": "es", "value": "Una sanitizaci\u00f3n insuficiente en MLflow genera XSS cuando se ejecuta una receta que no es de confianza. Este problema genera un RCE del lado del cliente cuando se ejecuta una receta que no es de confianza en Jupyter Notebook. La vulnerabilidad se debe a la falta de saneamiento de las variables de la plantilla."}], "metrics": {"cvssMetricV31": [{"source": "reefs@jfrog.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.6, "impactScore": 5.9}]}, "weaknesses": [{"source": "reefs@jfrog.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://github.com/mlflow/mlflow/pull/10873", "source": "reefs@jfrog.com"}, {"url": "https://research.jfrog.com/vulnerabilities/mlflow-untrusted-recipe-xss-jfsa-2024-000631930/", "source": "reefs@jfrog.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-27132 - This vulnerability allows an attacker to inject malicious JavaScript code into an MLflow Jupyter Notebook, leading to Cross-Site Scripting (XSS) and potentially Remote Code Execution (RCE). Defending against this involves validating and sanitizing user input to prevent template injection."}, {"techniqueID": "T1182", "comment": "CVE-2024-27132 - Insufficient sanitization in MLflow allows an attacker to inject malicious JavaScript code, potentially leading to RCE. Implementing input validation and sanitization can help mitigate this risk."}, {"techniqueID": "T1055", "comment": "CVE-2024-27132 - The vulnerability stems from lack of sanitization over template variables, enabling an attacker to inject malicious code. Defending against this involves implementing input validation and sanitization."}], "stix_bundle": {"STIX_Bundle": {"objects": [{"id": "sid-1", "type": "vulnerability", "name": "MLflow Untrusted Recipe XSS", "description": "Insufficient sanitization in MLflow leads to XSS when running an untrusted recipe.", "vulnerability_status": "Awaiting Analysis", "modified": "2024-02-26T13:42:22.567"}, {"id": "sid-2", "type": "indicator", "name": "Malicious JS Code Injection", "description": "Injection of malicious JavaScript code into an MLflow Jupyter Notebook", "created": "2024-02-23T22:15:55.077"}, {"id": "sid-3", "type": "course-of-action", "name": "Validate and Sanitize User Input", "description": "Validate and sanitize user input to prevent template injection", "mitigates": "sid-1"}], "relationships": [{"relationship": "related_to", "object_ref": "sid-1", "object": "sid-2"}, {"relationship": "mitigates", "object_ref": "sid-2", "object": "sid-3"}]}}, "technical_analysis": {"Introduction": "The vulnerability in MLflow allows an untrusted recipe to inject malicious JavaScript code, leading to Cross-Site Scripting and potentially Remote Code Execution.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5, indicating high impact and high severity.", "Related MITRE ATT&CK Techniques": "T1190, T1182, T1055", "Technical Details": "The vulnerability stems from lack of sanitization over template variables.", "Detection": "Detecting this vulnerability requires monitoring for unusual activity in MLflow Jupyter Notebooks.", "Mitigation": "Implementing input validation and sanitization can help mitigate this risk.", "Conclusion": "In conclusion, the vulnerability in MLflow requires immediate attention and should be prioritized for mitigation."}, "executive_analysis": {"Overview": "The vulnerability in MLflow allows an untrusted recipe to inject malicious JavaScript code, leading to potential security risks.", "Business Impact": "This vulnerability has high business impact, as it could compromise sensitive data and systems.", "Technical Impact": "The vulnerability has high technical impact, as it could allow an attacker to execute arbitrary code and take control of the system.", "Mitigation Strategies": "Implement input validation and sanitization to mitigate the risk.", "Recommendations": "Recommend that the development team prioritize fixing this vulnerability.", "Conclusions": "In conclusion, this vulnerability requires immediate attention and should be prioritized for mitigation."}}