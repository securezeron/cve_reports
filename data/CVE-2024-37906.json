{"id": "CVE-2024-37906", "sourceIdentifier": "security-advisories@github.com", "published": "2024-07-29T15:15:10.747", "lastModified": "2024-07-29T16:21:52.517", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Admidio is a free, open source user management system for websites of organizations and groups. In Admidio before version 4.3.9, there is an SQL Injection in the `/adm_program/modules/ecards/ecard_send.php` source file of the Admidio Application. The SQL Injection results in a compromise of the application's database. The value of `ecard_recipients `POST parameter is being directly concatenated with the SQL query in the source code causing the SQL Injection. The SQL Injection can be exploited by a member user, using blind condition-based, time-based, and Out of band interaction SQL Injection payloads. This vulnerability is fixed in 4.3.9."}, {"lang": "es", "value": "Admidio es un sistema de gesti\u00f3n de usuarios gratuito y de c\u00f3digo abierto para sitios web de organizaciones y grupos. En Admidio anterior a la versi\u00f3n 4.3.9, hay una inyecci\u00f3n SQL en el archivo fuente `/adm_program/modules/ecards/ecard_send.php` de la aplicaci\u00f3n Admidio. La inyecci\u00f3n SQL resulta en un compromiso de la base de datos de la aplicaci\u00f3n. El valor del par\u00e1metro POST `ecard_recipients `se concatena directamente con la consulta SQL en el c\u00f3digo fuente que causa la inyecci\u00f3n SQL. La inyecci\u00f3n SQL puede ser explotada por un usuario miembro, utilizando cargas \u00fatiles de inyecci\u00f3n SQL ciegas basadas en condiciones, basadas en tiempo y fuera de banda. Esta vulnerabilidad se solucion\u00f3 en 4.3.9."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.9, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.1, "impactScore": 6.0}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-89"}]}], "references": [{"url": "https://github.com/Admidio/admidio/commit/3ff02b0c64a6911ab3e81cd61077f392c0b25248", "source": "security-advisories@github.com"}, {"url": "https://github.com/Admidio/admidio/security/advisories/GHSA-69wx-xc6j-28v3", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "TA1513", "comment": " Admidio SQL Injection vulnerability - Potential exploitation via SQL Injection payloads to compromise the application's database. This can be defended against by implementing proper input validation and sanitization mechanisms, as well as educating users on secure coding practices."}, {"techniqueID": "T1190", "comment": " Admidio SQL Injection vulnerability - Potential exploitation via Blind Condition-Based SQL Injection payloads to extract sensitive information from the database. This can be defended against by implementing robust logging and monitoring mechanisms to detect and respond to suspicious activity."}, {"techniqueID": "T1093", "comment": " Admidio SQL Injection vulnerability - Potential exploitation via Out-of-Band SQL Injection payloads to exfiltrate data from the database. This can be defended against by implementing segmentation and isolation techniques to limit the impact of a potential data exfiltration."}], "stix_bundle": {"spec_version": "2.1", "type": "bundle", "id": "bundle--ea8d6a33-4c5c-4eb4-a3bb-f9c8f85f0af9", "created_by_ref": "identity--c93deba6-70c5-43e2-9b27-9e23c5b1fa26", "created": "2022-08-12T14:30:00.000Z", "modified": "2022-08-12T14:30:00.000Z", "objects": [{"type": "vulnerability", "id": "vulnerability--f4e9b4c1-1a10-4a54-a60e-23e3e25b35bf", "created_by_ref": "identity--c93deba6-70c5-43e2-9b27-9e23c5b1fa26", "created": "2022-08-12T14:30:00.000Z", "modified": "2022-08-12T14:30:00.000Z", "name": "Admidio SQL Injection Vulnerability", "description": "An SQL Injection vulnerability exists in Admidio before version 4.3.9, which allows an attacker to compromise the application's database.", "object_refs": [{"type": "indicator", "id": "indicator--3e39a4ec-0d44-4689-a0c6-7c11e0f72c7a"}, {"type": "course-of-action", "id": "course-of-action--e345f1e5-e7e1-4f2f-a91a-d94c555edf44"}]}, {"type": "indicator", "id": "indicator--3e39a4ec-0d44-4689-a0c6-7c11e0f72c7a", "created_by_ref": "identity--c93deba6-70c5-43e2-9b27-9e23c5b1fa26", "created": "2022-08-12T14:30:00.000Z", "modified": "2022-08-12T14:30:00.000Z", "name": "Admidio SQL Injection Indicator", "description": "An indicator of potential Admidio SQL Injection vulnerability exploitation", "object_refs": [{"type": "course-of-action", "id": "course-of-action--e345f1e5-e7e1-4f2f-a91a-d94c555edf44"}]}, {"type": "course-of-action", "id": "course-of-action--e345f1e5-e7e1-4f2f-a91a-d94c555edf44", "created_by_ref": "identity--c93deba6-70c5-43e2-9b27-9e23c5b1fa26", "created": "2022-08-12T14:30:00.000Z", "modified": "2022-08-12T14:30:00.000Z", "name": "Mitigation Course of Action", "description": "Implement input validation and sanitization mechanisms, as well as educate users on secure coding practices to mitigate potential Admidio SQL Injection attacks."}]}, "technical_analysis": {"Introduction": "Admidio SQL Injection vulnerability has been identified in Admidio before version 4.3.9, which allows an attacker to compromise the application's database.", "Impact and Scope": "The vulnerability has a CVSS score of 9.9 and an attack vector of NETWORK, with high confidentiality, integrity, and availability impact.", "Related MITRE ATT&CK Techniques": "TA1513, T1190, T1093", "Technical Details": "The vulnerability is caused by an unvalidated user input in the `/adm_program/modules/ecards/ecard_send.php` file, which can be exploited using SQL Injection payloads.", "Detection": "Detect potential exploitation via robust logging and monitoring mechanisms, as well as network traffic analysis.", "Mitigation": "Implement input validation and sanitization mechanisms, educate users on secure coding practices, and consider implementing segmentation and isolation techniques.", "Conclusion": "The Admidio SQL Injection vulnerability is a critical risk, and immediate action must be taken to mitigate potential attacks."}, "executive_analysis": {"Overview": "Admidio SQL Injection vulnerability exists in Admidio before version 4.3.9, which could compromise the application's database.", "Business Impact": "The vulnerability could result in data breaches, financial losses, and reputational damage.", "Technical Impact": "The vulnerability could allow an attacker to extract sensitive information from the database, disrupt application functionality, and potentially perform data exfiltration.", "Mitigation Strategies": "Implement input validation and sanitization mechanisms, educate users on secure coding practices, and consider implementing segmentation and isolation techniques.", "Recommendations": "Patch the vulnerability, monitor and log suspicious activity, and conduct regular security audits and penetration testing.", "Conclusions": "The Admidio SQL Injection vulnerability is a significant risk, and immediate action must be taken to mitigate potential attacks. It is recommended to patch the vulnerability, monitor and log suspicious activity, and conduct regular security audits and penetration testing."}}