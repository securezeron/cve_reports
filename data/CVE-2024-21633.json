{"id": "CVE-2024-21633", "sourceIdentifier": "security-advisories@github.com", "published": "2024-01-03T17:15:13.103", "lastModified": "2024-01-10T18:50:41.510", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Apktool is a tool for reverse engineering Android APK files. In versions 2.9.1 and prior, Apktool infers resource files' output path according to their resource names which can be manipulated by attacker to place files at desired location on the system Apktool runs on. Affected environments are those in which an attacker may write/overwrite any file that user has write access, and either user name is known or cwd is under user folder. Commit d348c43b24a9de350ff6e5bd610545a10c1fc712 contains a patch for this issue."}, {"lang": "es", "value": "Apktool es una herramienta para realizar ingenier\u00eda inversa en archivos APK de Android. En las versiones 2.9.1 y anteriores, Apktool infiere la ruta de salida de los archivos de recursos de acuerdo con sus nombres de recursos, que el atacante puede manipular para colocar los archivos en la ubicaci\u00f3n deseada en el sistema en el que se ejecuta Apktool. Los entornos afectados son aquellos en los que un atacante puede escribir/sobrescribir cualquier archivo en el que el usuario tenga acceso de escritura y en el que el nombre de usuario sea conocido o cwd est\u00e9 en la carpeta del usuario. El commit d348c43b24a9de350ff6e5bd610545a10c1fc712 contiene un parche para este problema."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.8, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.8, "impactScore": 5.9}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:apktool:apktool:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.9.2", "matchCriteriaId": "895E73D0-A24D-4B95-9F32-697AABEF73E3"}]}]}], "references": [{"url": "https://github.com/iBotPeaches/Apktool/commit/d348c43b24a9de350ff6e5bd610545a10c1fc712", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/iBotPeaches/Apktool/security/advisories/GHSA-2hqv-2xv4-5h5w", "source": "security-advisories@github.com", "tags": ["Exploit", "Patch", "Vendor Advisory"]}], "techniques": [{"techniqueID": "T1164", "comment": "Directory Traversal - Apktool's ability to infer resource files' output path according to their resource names can be exploited by an attacker to place files at a desired location on the system, making it vulnerable to directory traversal attacks."}, {"techniqueID": "T1190", "comment": "Path Interception - An attacker can manipulate the resource names to place files at a desired location on the system, intercepting the path and executing files with elevated privileges."}, {"techniqueID": "T1210", "comment": "Exploit Public-Facing Application - An attacker can exploit the vulnerability by manipulating the resource names to place files at a desired location on the system, leading to arbitrary code execution in a public-facing application."}, {"techniqueID": "T1505", "comment": "Use of Legitimate Functionality for Malicious Purposes - Apktool's ability to infer resource files' output path according to their resource names can be exploited by an attacker to place files at a desired location on the system, making it vulnerable to legitimate functionality being used maliciously."}], "stix_bundle": "... TO BE COMPLETED...", "technical_analysis": {"Introduction": "Apktool, a tool for reverse engineering Android APK files, contains a vulnerability that allows attackers to manipulate the resource files' output path according to their resource names, leading to arbitrary code execution.", "Impact and Scope": "This vulnerability affects Apktool versions 2.9.1 and prior, and has a CVSS score of 7.8, with an attack vector of LOCAL, requiring user interaction, and affecting confidentiality, integrity, and availability.", "Related MITRE ATT&CK Techniques": "T1164, T1190, T1210, T1505", "Technical Details": "The vulnerability is due to Apktool's ability to infer resource files' output path according to their resource names, which can be manipulated by an attacker to place files at a desired location on the system.", "Detection": "Detection methods include monitoring for unusual file placement and access, as well as analyzing system calls for suspicious behavior.", "Mitigation": "Mitigation strategies include updating to version 2.9.2 or later, restricting file access and writing, and implementing user access controls.", "Conclusion": "In conclusion, the vulnerability in Apktool highlights the importance of secure coding practices and the need for ongoing monitoring and testing to identify and mitigate vulnerabilities."}, "executive_analysis": {"Overview": "The vulnerability in Apktool affects the security of Android APK files and has significant business implications.", "Business Impact": "This vulnerability can lead to data breaches, system compromise, and reputational damage.", "Technical Impact": "The vulnerability affects the integrity and confidentiality of Android APK files, allowing attackers to execute arbitrary code.", "Mitigation Strategies": "Implementing robust security controls, such as access controls and file encryption, can help mitigate the risk.", "Recommendations": "Executive-level recommendations include prioritizing security testing and validation, implementing robust security controls, and providing regular training and awareness programs for employees.", "Conclusions": "In conclusion, prompt action is necessary to mitigate this vulnerability and protect sensitive data and systems."}}