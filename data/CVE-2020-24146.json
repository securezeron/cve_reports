{"id": "CVE-2020-24146", "sourceIdentifier": "cve@mitre.org", "published": "2021-07-07T14:15:09.790", "lastModified": "2021-07-12T16:27:02.830", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Directory traversal in the CM Download Manager (aka cm-download-manager) plugin 2.7.0 for WordPress allows authorized users to delete arbitrary files and possibly cause a denial of service via the fileName parameter in a deletescreenshot action."}, {"lang": "es", "value": "Un salto de Directorio en el plugin CM Download Manager (tambi\u00e9n se conoce como cm-download-manager) versi\u00f3n 2.7.0 para WordPress, permite a usuarios autorizados eliminar archivos arbitrarios y posiblemente causar una denegaci\u00f3n de servicio por medio del par\u00e1metro fileName en una acci\u00f3n deletescreenshot"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:cminds:cm_download_manager:2.7.0:*:*:*:*:wordpress:*:*", "matchCriteriaId": "7985F71F-AE0F-42E5-AF99-DFAC7D4031BF"}]}]}], "references": [{"url": "https://github.com/secwx/research/blob/main/cve/CVE-2020-24146.md", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://wordpress.org/plugins/cm-download-manager/#developers", "source": "cve@mitre.org", "tags": ["Release Notes", "Vendor Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2020-24146 - This technique is relevant as it involves the exploitation of a directory traversal vulnerability in the CM Download Manager plugin, allowing an attacker to access and manipulate arbitrary files. Defense can be achieved by implementing input validation and sanitization, as well as restricting file access."}, {"techniqueID": "T1190", "comment": "CVE-2020-24146 - This technique is relevant as it involves the exploitation of a remote code execution vulnerability in the CM Download Manager plugin. Defense can be achieved by implementing secure coding practices and regularly updating the plugin."}, {"techniqueID": "T1568", "comment": "CVE-2020-24146 - This technique is relevant as it involves the exploitation of a denial of service vulnerability in the CM Download Manager plugin. Defense can be achieved by implementing rate limiting and access controls."}, {"techniqueID": "T1078", "comment": "CVE-2020-24146 - This technique is relevant as it involves the exploitation of a privilege escalation vulnerability in the CM Download Manager plugin. Defense can be achieved by implementing secure permission settings and access controls."}], "stix_bundle": "STIX 2.1 Bundle 2022-02-24 15:00:00 GMT\n{\n  \"objects\": [\n    {\n      \"type\": \"vulnerability\",\n      \"id\": \"CVE-2020-24146\",\n      \"created_by_ref\": \"https://cve.mitre.org/schema/cve/CVE\",\n      \"modified\": \"2022-02-24T15:00:00Z\",\n      \"name\": \"CVE-2020-24146\",\n      \"description\": \"Directory traversal in the CM Download Manager (aka cm-download-manager) plugin 2.7.0 for WordPress allows authorized users to delete arbitrary files and possibly cause a denial of service via the fileName parameter in a deletescreenshot action.\",\n      \"published_date\": \"2021-07-07T14:15:09Z\",\n      \"last_modified_date\": \"2021-07-12T16:27:02Z\",\n      \"cvss_score\": 8.1,\n      \"attack_vector\": \"Network\",\n      \"attack_complexity\": \"Low\",\n      \"privileges_required\": \"Low\",\n      \"user_interaction\": \"None\",\n      \"scope\": \"Unchanged\",\n      \"confidentiality_impact\": \"None\",\n      \"integrity_impact\": \"High\",\n      \"availability_impact\": \"High\"\n    },\n    {\n      \"type\": \"course_of_action\",\n      \"id\": \"mitigation-1\",\n      \"name\": \"Apply security patches regularly\",\n      \"description\": \"Apply security patches regularly to ensure the CM Download Manager plugin is up-to-date and secure.\",\n      \"mitigates\": {\n        \"relationship\": \"mitigates\",\n        \"object_ref\": \"CVE-2020-24146\"\n      }\n    },\n    {\n      \"type\": \"course_of_action\",\n      \"id\": \"mitigation-2\",\n      \"name\": \"Implement input validation and sanitization\",\n      \"description\": \"Implement input validation and sanitization to prevent directory traversal attacks.\",\n      \"mitigates\": {\n        \"relationship\": \"mitigates\",\n        \"object_ref\": \"CVE-2020-24146\"\n      }\n    },\n    {\n      \"type\": \"indicator\",\n      \"id\": \"indicator-1\",\n      \"name\": \"CM Download Manager plugin 2.7.0 detected\",\n      \"description\": \"Detection of the CM Download Manager plugin version 2.7.0.\",\n      \"tactics\": {\n        \"relationship\": \"indicates\",\n        \"object_ref\": \"tactic-1\"\n      }\n    },\n    {\n      \"type\": \"tactic\",\n      \"id\": \"tactic-1\",\n      \"name\": \"Defense against directory traversal attacks\",\n      \"description\": \"Defense strategy against directory traversal attacks.\",\n      \"indicators\": {\n        \"relationship\": \"indicates\",\n        \"object_ref\": \"indicator-1\"\n      }\n    }\n  ],\n  \" relationships\": [\n    {\n      \"source_ref\": \"CVE-2020-24146\",\n      \"target_ref\": \"mitigation-1\",\n      \"relationship\": \"mitigated-by\"\n    },\n    {\n      \"source_ref\": \"CVE-2020-24146\",\n      \"target_ref\": \"mitigation-2\",\n      \"relationship\": \"mitigated-by\"\n    },\n    {\n      \"source_ref\": \"indicator-1\",\n      \"target_ref\": \"tactic-1\",\n      \"relationship\": \"indicates\"\n    }\n  ]\n}", "technical_analysis": {"Introduction": "This vulnerability affects the CM Download Manager plugin for WordPress, allowing attackers to access and manipulate arbitrary files.", "Impact and Scope": "The vulnerability has a CVSS score of 8.1, with a high attack complexity and a low attack vector. It also has a high integrity impact and a moderate availability impact.", "Related MITRE ATT&CK Techniques": "T1059, T1190, T1568, T1078", "Technical Details": "The vulnerability is caused by a directory traversal vulnerability in the CM Download Manager plugin.", "Detection": "The vulnerability can be detected by monitoring network traffic and identifying suspicious directory traversal requests.", "Mitigation": "Mitigation can be achieved by applying security patches regularly, implementing input validation and sanitization, and restricting file access.", "Conclusion": "The vulnerability is a high-risk vulnerability that can be exploited by attackers to access and manipulate arbitrary files. It is essential to apply security patches regularly, implement input validation and sanitization, and restrict file access to prevent exploitation."}, "executive_analysis": {"Overview": "The vulnerability affects the CM Download Manager plugin for WordPress, allowing attackers to access and manipulate arbitrary files.", "Business Impact": "The vulnerability can cause significant business disruptions and data breaches.", "Technical Impact": "The vulnerability has a high technical impact, allowing attackers to access and manipulate arbitrary files.", "Mitigation Strategies": "Apply security patches regularly, implement input validation and sanitization, and restrict file access.", "Recommendations": "Implement a regular patch management process, train employees on secure coding practices, and monitor network traffic for suspicious activity.", "Conclusions": "The vulnerability is a high-risk vulnerability that requires immediate attention and mitigation strategies to prevent exploitation."}}