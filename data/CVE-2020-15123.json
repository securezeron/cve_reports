{"id": "CVE-2020-15123", "sourceIdentifier": "security-advisories@github.com", "published": "2020-07-20T18:15:12.250", "lastModified": "2020-07-27T19:00:27.503", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "In codecov (npm package) before version 3.7.1 the upload method has a command injection vulnerability. Clients of the codecov-node library are unlikely to be aware of this, so they might unwittingly write code that contains a vulnerability. A similar CVE (CVE-2020-7597 for GHSA-5q88-cjfq-g2mh) was issued but the fix was incomplete. It only blocked &, and command injection is still possible using backticks instead to bypass the sanitizer. The attack surface is low in this case. Particularly in the standard use of codecov, where the module is used directly in a build pipeline, not built against as a library in another application that may supply malicious input and perform command injection."}, {"lang": "es", "value": "En codecov (paquete npm) versiones anteriores a 3.7.1, el m\u00e9todo de carga presenta una vulnerabilidad de inyecci\u00f3n de comandos. Es poco probable que los clientes de la biblioteca codecov-node se den cuenta de esto, por lo que pueden escribir involuntariamente c\u00f3digo que contiene una vulnerabilidad. Se emiti\u00f3 un CVE similar (CVE-2020-7597 para GHSA-5q88-cjfq-g2mh) pero la correcci\u00f3n fue incompleta. Solo bloque\u00f3 &amp;, y la inyecci\u00f3n de comandos todav\u00eda es posible usando backticks (comilla izquierda) para omitir el saneamiento. La superficie de ataque es baja en este caso. Particularmente en el uso est\u00e1ndar de codecov, donde el m\u00f3dulo es usado directamente en una tuber\u00eda de compilaci\u00f3n, no como una biblioteca en otra aplicaci\u00f3n que puede suministrar entradas maliciosas y llevar a cabo una inyecci\u00f3n de comandos"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 9.3, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.8, "impactScore": 5.8}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 9.3, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.8, "impactScore": 5.8}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-78"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-78"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:codecov:codecov:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "3.7.1", "matchCriteriaId": "81DA3182-6DF1-4C0B-859D-A64CFEFC89CE"}]}]}], "references": [{"url": "https://github.com/advisories/GHSA-5q88-cjfq-g2mh", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/codecov/codecov-node/commit/c0711c656686e902af2cd92d6aecc8074de4d83d", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/codecov/codecov-node/pull/180", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/codecov/codecov-node/security/advisories/GHSA-xp63-6vf5-xf3v", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://lgtm.com/query/7714424068617023832", "source": "security-advisories@github.com", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "The vulnerability allows for command injection, which can be done by using backticks (comilla izquierda) to bypass the sanitizer. This is a classic example of a Command and Control technique, where an attacker can inject malicious commands and potentially execute arbitrary code."}, {"techniqueID": "T1027", "comment": "The vulnerability can be exploited by an attacker who has uploaded malicious code to the codecov node library, allowing them to execute arbitrary commands and potentially escalate privileges."}, {"techniqueID": "T1047", "comment": "The vulnerability can be used to perform a man-in-the-middle attack, where an attacker intercepts and modifies the upload method to inject malicious commands and bypass the sanitizer."}, {"techniqueID": "T1534", "comment": "The vulnerability can be exploited by exploiting the sanitizer bypass using backticks (comilla izquierda), allowing an attacker to inject malicious commands and execute arbitrary code."}], "stix_bundle": {"_objects": {"vulnerability": {"_type": "marker:indicator", "id": "CVE-2020-15123", "name": "codecov command injection vulnerability", "description": "In codecov (npm package) before version 3.7.1 the upload method has a command injection vulnerability.", "created": "2020-07-20T18:15:12.250", "modified": "2020-07-27T19:00:27.503", "confidence": 100, "rationale": "The vulnerability allows for command injection, which can be done by using backticks (comilla izquierda) to bypass the sanitizer.", "extended_properties": {"vector_string": "AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"}}}, "granular_marking": {"vulnerability": {"techniques": {"_type": "stix_core_structure:technique", "$ref": "T1190", "name": "Command and Control", "description": "The vulnerability allows for command injection, which can be done by using backticks (comilla izquierda) to bypass the sanitizer."}, "exploits": {"_type": "stix_core_structure:exploit", "$ref": "T1027", "name": "Uploaded malicious code", "description": "The vulnerability can be exploited by an attacker who has uploaded malicious code to the codecov node library, allowing them to execute arbitrary commands and potentially escalate privileges."}, "mitigations": {"_type": "stix_core_structure:mitigation", "$ref": "T1047", "name": "Sanitizer bypass", "description": "The vulnerability can be used to perform a man-in-the-middle attack, where an attacker intercepts and modifies the upload method to inject malicious commands and bypass the sanitizer."}}}}, "technical_analysis": {"Introduction": "The vulnerability in codecov allows for command injection, which can be done by using backticks (comilla izquierda) to bypass the sanitizer.", "Impact and Scope": "The vulnerability has a high CVSS score of 9.3, indicating that it is a critical vulnerability that can have a significant impact on affected systems.", "Related MITRE ATT&CK Techniques": "T1190, T1027, T1047, T1534", "Technical Details": "The vulnerability is caused by the upload method not validating user input properly, allowing an attacker to inject malicious commands and potentially execute arbitrary code.", "Detection": "Detection can be done by monitoring for suspicious command execution on affected systems.", "Mitigation": "Mitigation strategies include validating user input properly and sanitizing user input to prevent command injection.", "Conclusion": "The vulnerability is a critical issue that requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "The vulnerability in codecov allows for command injection, which can be done by using backticks (comilla izquierda) to bypass the sanitizer.", "Business Impact": "The vulnerability can have a significant impact on affected systems, potentially leading to data breaches and unauthorized access.", "Technical Impact": "The vulnerability can be exploited by an attacker to execute arbitrary commands and potentially escalate privileges.", "Mitigation Strategies": "Implement proper input validation and sanitization to prevent command injection attacks.", "Recommendations": "Recommendations for executives include implementing proper input validation and sanitization, monitoring for suspicious command execution, and ensuring that affected systems are updated with the latest security patches.", "Conclusions": "The vulnerability is a critical issue that requires immediate attention and mitigation to prevent potential data breaches and unauthorized access."}}