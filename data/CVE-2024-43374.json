{"id": "CVE-2024-43374", "sourceIdentifier": "security-advisories@github.com", "published": "2024-08-16T02:15:17.687", "lastModified": "2024-08-19T13:00:23.117", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The UNIX editor Vim prior to version 9.1.0678 has a use-after-free error in argument list handling. When adding a new file to the argument list, this triggers `Buf*` autocommands. If in such an autocommand the buffer that was just opened is closed (including the window where it is shown), this causes the window structure to be freed which contains a reference to the argument list that we are actually modifying. Once the autocommands are completed, the references to the window and argument list are no longer valid and as such cause an use-after-free. Impact is low since the user must either intentionally add some unusual autocommands that wipe a buffer during creation (either manually or by sourcing a malicious plugin), but it will crash Vim. The issue has been fixed as of Vim patch v9.1.0678."}, {"lang": "es", "value": " El editor UNIX Vim anterior a la versi\u00f3n 9.1.0678 tiene un error de use-after-free en el manejo de la lista de argumentos. Al agregar un nuevo archivo a la lista de argumentos, esto activa los comandos autom\u00e1ticos `Buf*`. Si en dicho autocomando se cierra el b\u00fafer que se acaba de abrir (incluida la ventana donde se muestra), esto hace que se libere la estructura de la ventana que contiene una referencia a la lista de argumentos que actualmente estamos modificando. Una vez que se completan los comandos autom\u00e1ticos, las referencias a la ventana y la lista de argumentos ya no son v\u00e1lidas y, como tales, provocan un uuse-after-free. El impacto es bajo ya que el usuario debe agregar intencionalmente algunos comandos autom\u00e1ticos inusuales que borran un b\u00fafer durante la creaci\u00f3n (ya sea manualmente o obteniendo un complemento malicioso), pero Vim fallar\u00e1. El problema se solucion\u00f3 a partir del parche Vim v9.1.0678."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L", "attackVector": "LOCAL", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 4.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.0, "impactScore": 3.4}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-416"}]}], "references": [{"url": "https://github.com/vim/vim/commit/0a6e57b09bc8c76691b367a5babfb79b31b770e8", "source": "security-advisories@github.com"}, {"url": "https://github.com/vim/vim/security/advisories/GHSA-2w8m-443v-cgvw", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1027: Obfuscated Files or Information", "comment": "The use-after-free error in the UNIX editor Vim can potentially be exploited to execute malicious code, making obfuscation techniques relevant in this context. Defending against this vulnerability requires a combination of secure coding practices and vulnerability scanning."}, {"techniqueID": "T1059: Command and Scripting Interpreter", "comment": "The vulnerability in Vim allows for the execution of malicious plugins or autocommands, highlighting the importance of securing command and scripting interpreters. Defending against this vulnerability requires implementing secure coding practices and regularly updating software."}, {"techniqueID": "T1210: Exploitation of Remote Services", "comment": "The use-after-free error in Vim can be exploited to execute remote code, making exploitation of remote services a relevant technique. Defending against this vulnerability requires implementing secure remote access protocols and regularly updating software."}], "stix_bundle": {"objects": [{"type": "vulnerability", "id": "CVE-2024-43374", "created_by_ref": "mitre-enterprise", "description": "The UNIX editor Vim prior to version 9.1.0678 has a use-after-free error in argument list handling.", "packages": [{"name": "vim", "version": "prior to 9.1.0678"}], "threat_actor_refs": [{"id": "TA0001 - Global Threat Actors"}], "exploit_pubs": [{"id": "T1210: Exploitation of Remote Services"}], "defense_cmds": [{"id": "D3FEND-T1000 - Use of Secure Coding Practices"}]}]}, "technical_analysis": {"Introduction": "The use-after-free error in the UNIX editor Vim prior to version 9.1.0678 can lead to the execution of malicious code.", "Impact and Scope": "The impact of this vulnerability is low, but it can cause the execution of remote code and potentially compromise the confidentiality, integrity, and availability of the system.", "Related MITRE ATT&CK Techniques": "T1027: Obfuscated Files or Information, T1059: Command and Scripting Interpreter, T1210: Exploitation of Remote Services", "Technical Details": "The use-after-free error occurs when adding a new file to the argument list and triggering Buf* autocommands, causing a buffer that was just opened to be closed.", "Detection": "Detection of this vulnerability requires monitoring system logs for signs of unusual behavior and using vulnerability scanning tools to identify vulnerable software.", "Mitigation": "Mitigating this vulnerability requires implementing secure coding practices, regularly updating software, and using vulnerability scanning tools to identify and remediate vulnerabilities.", "Conclusion": "The use-after-free error in Vim prior to version 9.1.0678 is a low-impact vulnerability that can potentially lead to the execution of remote code and compromise system security."}, "executive_analysis": {"Overview": "This vulnerability is a low-impact vulnerability in the UNIX editor Vim that can potentially be exploited to execute remote code.", "Business Impact": "This vulnerability can potentially compromise the confidentiality, integrity, and availability of the system, leading to business disruption and financial loss.", "Technical Impact": "This vulnerability can potentially lead to the execution of remote code and compromise system security.", "Mitigation Strategies": "Implementing secure coding practices, regularly updating software, and using vulnerability scanning tools to identify and remediate vulnerabilities are effective mitigation strategies.", "Recommendations": "Executives should prioritize implementing secure coding practices, regularly updating software, and using vulnerability scanning tools to identify and remediate vulnerabilities.", "Conclusions": "The use-after-free error in Vim prior to version 9.1.0678 is a low-impact vulnerability that requires immediate attention to ensure system security."}}