{"id": "CVE-2024-27397", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-05-14T15:12:28.240", "lastModified": "2024-08-19T05:15:06.293", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: use timestamp to check for set element timeout\n\nAdd a timestamp field at the beginning of the transaction, store it\nin the nftables per-netns area.\n\nUpdate set backend .insert, .deactivate and sync gc path to use the\ntimestamp, this avoids that an element expires while control plane\ntransaction is still unfinished.\n\n.lookup and .update, which are used from packet path, still use the\ncurrent time to check if the element has expired. And .get path and dump\nalso since this runs lockless under rcu read size lock. Then, there is\nasync gc which also needs to check the current time since it runs\nasynchronously from a workqueue."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: netfilter: nf_tables: use la marca de tiempo para verificar el tiempo de espera del elemento establecido. Agregue un campo de marca de tiempo al comienzo de la transacci\u00f3n y gu\u00e1rdelo en el \u00e1rea nftables per-netns. Actualice el conjunto de backend .insert, .deactivate y sincronice la ruta gc para usar la marca de tiempo, esto evita que un elemento caduque mientras la transacci\u00f3n del plano de control a\u00fan no ha finalizado. .lookup y .update, que se usan desde la ruta del paquete, a\u00fan usan la hora actual para verificar si el elemento ha caducado. Y obtener ruta y volcar tambi\u00e9n, ya que se ejecuta sin bloqueo bajo el bloqueo de tama\u00f1o de lectura de rcu. Luego, est\u00e1 el gc async que tambi\u00e9n necesita verificar la hora actual, ya que se ejecuta de forma asincr\u00f3nica desde una cola de trabajo."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/0d40e8cb1d1f56a994cdd2e015af622fdca9ed4d", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/383182db8d58c4237772ba0764cded4938a235c3", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/7395dfacfff65e9938ac0889dafa1ab01e987d15", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/7b17de2a71e56c10335b565cc7ad238e6d984379", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/b45176b869673417ace338b87cf9cdb66e2eeb01", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/eaf1a29ea5d7dba8e84e9e9f3b3f47d0cd540bfe", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/f8dfda798650241c1692058713ca4fef8e429061", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "TA0003", "comment": "This technique is relevant because it describes the use of a timestamp to check for set element timeout in netfilter. This can lead to a race condition where an element expires while control plane transaction is still unfinished."}, {"techniqueID": "TA0005", "comment": "This technique is relevant because it talks about adding a timestamp field at the beginning of the transaction, which can help in checking the timeout of set elements."}, {"techniqueID": "TA0036", "comment": "This technique is relevant because it describes how a attacker can exploit the vulnerability by using timestamp to check for set element timeout."}, {"techniqueID": "TA0037", "comment": "This technique is relevant because it describes how a defender can mitigate the vulnerability by using timestamp to check for set element timeout."}], "stix_bundle": {"@context": "https://stix2.io/XMLSchema", "@type": "Package", "rationale": "Vulnerability Analysis Bundle", "entities": [{"@type": "Vulnerability", "id": "CVE-2024-27397", "discovered": {"@type": "DateTime", "value": "2024-05-14T15:12:28.240Z"}, "last_modified": {"@type": "DateTime", "value": "2024-08-19T05:15:06.293Z"}, "description": ["A vulnerability in the Linux kernel allows an attacker to exploit the race condition.", "The vulnerability arises due to the lack of a timestamp field."]}, {"@type": "TTP", "id": "TTACCTL-USE-TIMESTAMP", "name": "Use Timestamp", "description": ["This TTP describes how an attacker can use timestamp to check for set element timeout."], "attack_pattern": {"@type": "AttackPattern", "id": "AP-Netfilter-Timeout-Exploit"}, "mitigation": {"@type": "CourseOfAction", "id": "COA-Netfilter-Timeout-Mitigation"}}, {"@type": "TTP", "id": "TTACCTL-ADD-TIMESTAMP", "name": "Add Timestamp", "description": ["This TTP describes how a defender can add a timestamp field to check for set element timeout."], "course_of_action": {"@type": "CourseOfAction", "id": "COA-Netfilter-Timeout-Mitigation"}}, {"@type": "TTP", "id": "TTACCTL-EXPLOIT-RACE-CONDITION", "name": "Exploit Race Condition", "description": ["This TTP describes how an attacker can exploit the race condition to gain unauthorized access."], "attack_pattern": {"@type": "AttackPattern", "id": "AP-Netfilter-Timeout-Exploit"}}, {"@type": "TTP", "id": "TTACCTL-MITIGATE-RACE-CONDITION", "name": "Mitigate Race Condition", "description": ["This TTP describes how a defender can mitigate the race condition by adding a timestamp field."], "course_of_action": {"@type": "CourseOfAction", "id": "COA-Netfilter-Timeout-Mitigation"}}], "relationships": [{"source_id": "CVE-2024-27397", "target_id": "TTACCTL-USE-TIMESTAMP", "relationship_type": "exploited_by"}, {"source_id": "TTACCTL-USE-TIMESTAMP", "target_id": "AP-Netfilter-Timeout-Exploit", "relationship_type": "subtechnique"}, {"source_id": "CVE-2024-27397", "target_id": "TTACCTL-ADD-TIMESTAMP", "relationship_type": "mitigated_by"}, {"source_id": "TTACCTL-ADD-TIMESTAMP", "target_id": "COA-Netfilter-Timeout-Mitigation", "relationship_type": "subtechnique"}]}, "technical_analysis": {"Introduction": "The Linux kernel has a vulnerability that can be exploited by an attacker to gain unauthorized access.", "Impact and Scope": "The impact of this vulnerability is that it allows an attacker to exploit the race condition and gain unauthorized access.", "Related MITRE ATT&CK Techniques": "The related techniques are TA0003, TA0005, TA0036 and TA0037.", "Technical Details": "The vulnerability arises due to the lack of a timestamp field in the set element timeout.", "Detection": "The vulnerability can be detected by analyzing the timestamp field of the set element timeout.", "Mitigation": "The vulnerability can be mitigated by adding a timestamp field to the set element timeout.", "Conclusion": "In conclusion, the vulnerability in the Linux kernel allows an attacker to exploit the race condition and gain unauthorized access."}, "executive_analysis": {"Overview": "The Linux kernel has a vulnerability that can be exploited by an attacker to gain unauthorized access.", "Business Impact": "The business impact of this vulnerability is that it can lead to unauthorized access to sensitive data.", "Technical Impact": "The technical impact of this vulnerability is that it allows an attacker to exploit the race condition and gain unauthorized access.", "Mitigation Strategies": "The mitigation strategies for this vulnerability are to add a timestamp field to the set element timeout.", "Recommendations": "The recommendations for executives are to take immediate action to mitigate the vulnerability and prevent unauthorized access.", "Conclusions": "In conclusion, the vulnerability in the Linux kernel is a high-priority issue that requires immediate attention and mitigation."}}