{"id": "CVE-2024-39698", "sourceIdentifier": "security-advisories@github.com", "published": "2024-07-09T18:15:10.863", "lastModified": "2024-07-12T17:06:45.907", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "electron-updater allows for automatic updates for Electron apps. The file `packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts` implements the signature validation routine for Electron applications on Windows. Because of the surrounding shell, a first pass by `cmd.exe` expands any environment variable found in command-line above. This creates a situation where `verifySignature()` can be tricked into validating the certificate of a different file than the one that was just downloaded. If the step is successful, the malicious update will be executed even if its signature is invalid. This attack assumes a compromised update manifest (server compromise, Man-in-the-Middle attack if fetched over HTTP, Cross-Site Scripting to point the application to a malicious updater server, etc.). The patch is available starting from 6.3.0-alpha.6."}, {"lang": "es", "value": "electron-updater permite actualizaciones autom\u00e1ticas para las aplicaciones de Electron. El archivo `packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts` implementa la rutina de validaci\u00f3n de firmas para aplicaciones Electron en Windows. Debido al shell circundante, un primer paso por `cmd.exe` expande cualquier variable de entorno que se encuentre en la l\u00ednea de comandos anterior. Esto crea una situaci\u00f3n en la que se puede enga\u00f1ar a `verifySignature()` para que valide el certificado de un archivo diferente al que se acaba de descargar. Si el paso tiene \u00e9xito, la actualizaci\u00f3n maliciosa se ejecutar\u00e1 incluso si su firma no es v\u00e1lida. Este ataque supone un manifiesto de actualizaci\u00f3n comprometido (compromiso del servidor, ataque Man-in-the-Middle si se obtiene a trav\u00e9s de HTTP, Cross Site Scripting para apuntar la aplicaci\u00f3n a un servidor de actualizaci\u00f3n malicioso, etc.). El parche est\u00e1 disponible a partir de 6.3.0-alpha.6."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.6, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.6, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-295"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-154"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:electron:electron-builder:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "6.3.0", "matchCriteriaId": "F77447F6-4E3F-468E-BBBB-AB248C06CF1B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:electron:electron-builder:6.3.0:alpha0:*:*:*:node.js:*:*", "matchCriteriaId": "801B3F79-555D-4FCB-B854-227E8D3FDD9E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:electron:electron-builder:6.3.0:alpha1:*:*:*:node.js:*:*", "matchCriteriaId": "3B939D2F-400E-478C-8F45-568D5B7C5756"}, {"vulnerable": true, "criteria": "cpe:2.3:a:electron:electron-builder:6.3.0:alpha2:*:*:*:node.js:*:*", "matchCriteriaId": "4ECAF72F-A2E1-4D12-9797-CA1461931579"}, {"vulnerable": true, "criteria": "cpe:2.3:a:electron:electron-builder:6.3.0:alpha3:*:*:*:node.js:*:*", "matchCriteriaId": "E03022BB-203E-4750-BCD1-493971C95559"}, {"vulnerable": true, "criteria": "cpe:2.3:a:electron:electron-builder:6.3.0:alpha4:*:*:*:node.js:*:*", "matchCriteriaId": "587F242D-22D2-4BE6-BCF0-87C2865546E0"}, {"vulnerable": true, "criteria": "cpe:2.3:a:electron:electron-builder:6.3.0:alpha5:*:*:*:node.js:*:*", "matchCriteriaId": "116D170A-CD87-484A-864E-5CA0D198C947"}]}]}], "references": [{"url": "https://github.com/electron-userland/electron-builder/blob/140e2f0eb0df79c2a46e35024e96d0563355fc89/packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts#L35-L41", "source": "security-advisories@github.com", "tags": ["Product"]}, {"url": "https://github.com/electron-userland/electron-builder/commit/ac2e6a25aa491c1ef5167a552c19fc2085cd427f", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/electron-userland/electron-builder/pull/8295", "source": "security-advisories@github.com", "tags": ["Issue Tracking", "Patch"]}, {"url": "https://github.com/electron-userland/electron-builder/security/advisories/GHSA-9jxc-qjr9-vjxq", "source": "security-advisories@github.com", "tags": ["Exploit", "Vendor Advisory"]}], "techniques": [{"techniqueID": "T1210: Expand Attack Pattern", "comment": "CVE-2024-39698 - Electron-updater allows for automatic updates for Electron apps. The attack assumes a compromised update manifest (server compromise, Man-in-the-Middle attack if fetched over HTTP, Cross-Site Scripting to point the application to a malicious updater server, etc.) which can be executed to manipulate the update process."}, {"techniqueID": "T1190: Exploit Public-Facing Application", "comment": "CVE-2024-39698 - The vulnerable code can be exploited by an attacker to manipulate the update process of an Electron app, allowing for arbitrary code execution."}, {"techniqueID": "T1192: Cross-Site Scripting", "comment": "CVE-2024-39698 - An attacker can inject malicious JavaScript code into the update manifest to manipulate the update process and execute arbitrary code on the vulnerable system."}, {"techniqueID": "T1134: Command and Scripting Interperter", "comment": "CVE-2024-39698 - The vulnerable code allows for command injection, which can be used by an attacker to execute arbitrary system commands with elevated privileges."}, {"techniqueID": "T1204: User Execution", "comment": "CVE-2024-39698 - The attack requires user interaction to execute the update, which can be manipulated by an attacker to trick the user into downloading and executing a malicious update."}], "stix_bundle": {"spl": {"Foreign_Marked": false, "From_Namespace": null, "References": {"Reference": {"Description": "https://github.com/electron-userland/electron-builder/security/advisories/GHSA-9jxc-qjr9-vjxq", "Source": "security-advisories@github.com", "Tags": ["Exploit", "Vendor Advisory"]}}, "Title": "electron-updater Remote Code Execution Vulnerability"}, "Objects": {"Vulnerability": {"Created": "2024-07-09T18:15:10.863", "Description": "electron-updater allows for automatic updates for Electron apps. The file `packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts` implements the signature validation routine for Electron applications on Windows. Because of the surrounding shell, a first pass by `cmd.exe` expands any environment variable found in command-line above. This creates a situation where `verifySignature()` can be tricked into validating the certificate of a different file than the one that was just downloaded. If the step is successful, the malicious update will be executed even if its signature is invalid.", "Exploit_Cvss_Score": "7.5", "Exploit_Cvss_Vector_String": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H", "Exploit_Cvss_Base_Score": "7.5", "Exploit_Cvss_Base_Severity": "HIGH", "Vulnerable_Configurations": {"Configuration": {"Node": {"matcher": {"test": "cpe:2.3:a:electron:electron-builder:*:*:*:*:*:node.js:*:*", "operator": "OR"}, "negate": false, "match_criteria_id": "F77447F6-4E3F-468E-BBBB-AB248C06CF1B"}}}, "Impacted_Users": {"User": {"role": "User", "entities": []}}}, "Cause": {"ID": "CVE-2024-39698"}, "Mitigations": {"Mitigation": {"Description": "Apply the latest security patches and update Electron apps to version 6.3.0-alpha.6 or later."}}}}, "technical_analysis": {"Introduction": "electron-updater remote code execution vulnerability", "Impact and Scope": "The vulnerability allows an attacker to execute arbitrary code on a vulnerable Electron app, leading to a remote code execution. The attack assumes a compromised update manifest (server compromise, Man-in-the-Middle attack if fetched over HTTP, Cross-Site Scripting to point the application to a malicious updater server, etc.) which can be executed to manipulate the update process.", "Related MITRE ATT&CK Techniques": "T1210, T1190, T1192, T1134, T1204", "Technical Details": "The vulnerability exists in the `packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts` file, which implements the signature validation routine for Electron applications on Windows. The surrounding shell allows for command-line expansion of environment variables, making it possible to trick the signature validation routine into validating the certificate of a different file than the one that was just downloaded.", "Detection": "Detect the vulnerability by looking for abnormal update behavior, such as unusual update frequency or incorrect update manifests.", "MItigation": "Apply the latest security patches and update Electron apps to version 6.3.0-alpha.6 or later. Use secure update mechanisms, such as HTTPS, to prevent Man-in-the-Middle attacks.", "Conclusion": "electron-updater remote code execution vulnerability is a critical vulnerability that can be exploited by attackers. It is essential to apply the latest security patches and update Electron apps to version 6.3.0-alpha.6 or later."}, "executive_analysis": {"Overview": "electron-updater remote code execution vulnerability", "Business Impact": "The vulnerability can allow attackers to execute arbitrary code on vulnerable Electron apps, leading to unauthorized access to sensitive data and potential financial losses.", "Technical Impact": "The vulnerability can be exploited by attackers to gain unauthorized access to Electron apps, allowing them to steal sensitive data, inject malware, or disrupt service.", "Mitigation Strategies": "Apply the latest security patches and update Electron apps to version 6.3.0-alpha.6 or later. Use secure update mechanisms, such as HTTPS, to prevent Man-in-the-Middle attacks.", "Recommendations": "Recommend updating Electron apps to the latest version and applying the latest security patches.", "Conclusions": "electron-updater remote code execution vulnerability is a critical vulnerability that requires immediate attention and action."}}