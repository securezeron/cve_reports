{"id": "CVE-2020-26231", "sourceIdentifier": "security-advisories@github.com", "published": "2020-11-23T21:15:12.347", "lastModified": "2020-12-08T18:57:38.110", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "October is a free, open-source, self-hosted CMS platform based on the Laravel PHP Framework. A bypass of CVE-2020-15247 (fixed in 1.0.469 and 1.1.0) was discovered that has the same impact as CVE-2020-15247. An authenticated backend user with the cms.manage_pages, cms.manage_layouts, or cms.manage_partials permissions who would normally not be permitted to provide PHP code to be executed by the CMS due to cms.enableSafeMode being enabled is able to write specific Twig code to escape the Twig sandbox and execute arbitrary PHP. This is not a problem for anyone that trusts their users with those permissions to normally write & manage PHP within the CMS by not having cms.enableSafeMode enabled, but would be a problem for anyone relying on cms.enableSafeMode to ensure that users with those permissions in production do not have access to write & execute arbitrary PHP. Issue has been patched in Build 470 (v1.0.470) and v1.1.1."}, {"lang": "es", "value": "October es una plataforma CMS gratuita, de c\u00f3digo abierto y autohosteada basada en Laravel PHP Framework.&#xa0;Se detect\u00f3 un bypass de CVE-2020-15247 (corregido en versiones 1.0.469 y 1.1.0), que tiene el mismo impacto que CVE-2020-15247.&#xa0;Un usuario del backend autenticado con los permisos cms.manage_pages, cms.manage_layouts o cms.manage_partials que normalmente no podr\u00eda proporcionar c\u00f3digo PHP para ser ejecutado por el CMS debido a que cms.enableSafeMode est\u00e1 habilitado, puede escribir c\u00f3digo Twig espec\u00edfico para escapar del sandbox de Twig y ejecutar PHP arbitrario.&#xa0;Esto no es un problema para cualquiera que conf\u00ede en sus usuarios con esos permisos para escribir y administrar PHP normalmente dentro del CMS al no tener cms.enableSafeMode habilitado, pero ser\u00eda un problema para cualquiera que conf\u00ede en cms.enableSafeMode para asegurarse de que los usuarios con esos permisos en producci\u00f3n no tienen acceso para escribir y&#xa0;ejecutar PHP arbitrario.&#xa0;El problema se corrigi\u00f3 en Build 470 (versi\u00f3n v1.0.470) y versi\u00f3n v1.1.1"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 6.7, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 0.8, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:L", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.2, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.1, "impactScore": 3.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.4}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.4, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-862"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:octobercms:october:1.0.469:*:*:*:*:*:*:*", "matchCriteriaId": "40EC0658-E1FF-4267-951C-5AB8185E70CB"}, {"vulnerable": true, "criteria": "cpe:2.3:a:octobercms:october:1.1.0:*:*:*:*:*:*:*", "matchCriteriaId": "C7A37D3A-A944-4F0A-A023-04FEAD7BE347"}]}]}], "references": [{"url": "https://github.com/octobercms/october/commit/d34fb8ab51108495a9a651b841202d935f4e12f7", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/octobercms/october/security/advisories/GHSA-r89v-cgv7-3jhx", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2020-26231 - The vulnerability allows authenticated backend users with specific permissions to write custom Twig code and execute arbitrary PHP code, making it a potential avenue for privilege escalation and code injection attacks. This is reminiscent of Cobalt Strike's Beacon payload, which uses a similar technique to stage and execute arbitrary code on a target system."}, {"techniqueID": "T1117", "comment": "The vulnerability's impact is similar to that of a code injection attack, where an attacker can inject and execute arbitrary code on the system. This can be mitigated by implementing strict input validation and sanitization, as well as configuring the system to prevent untrusted users from writing or executing PHP code."}, {"techniqueID": "T1027", "comment": "The vulnerability can be exploited to execute arbitrary code on the system, which can be used to perform a variety of malicious activities, including data theft or destruction, and system compromise. This can be mitigated by implementing a robust intrusion detection system and conducting regular security audits and penetration testing."}], "stix_bundle": "[Insert valid STIX 2.1 bundle here, expressing all related techniques, risks, and defense strategies for this CVE.]", "technical_analysis": {"Introduction": "CVE-2020-26231 is a vulnerability in the October CMS platform that allows authenticated users with specific permissions to write and execute custom PHP code, making it a potential avenue for privilege escalation and code injection attacks. This vulnerability is a consequence of relying on the `cms.enableSafeMode` feature, which was intended to prevent untrusted users from writing or executing PHP code.", "Impact and Scope": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H, with a base score of 6.7. The vulnerability affects all users with the `cms.manage_pages`, `cms.manage_layouts`, or `cms.manage_partials` permissions, and can result in the execution of arbitrary PHP code and potential system compromise.", "Related MITRE ATT&CK Techniques": "This vulnerability is related to Techniques T1190, T1117, and T1027, which involve code injection, privilege escalation, and system compromise.", "Technical Details": "The vulnerability is a consequence of the `cms.enableSafeMode` feature, which relies on Twig's sandbox mode to prevent untrusted users from writing or executing PHP code. However, the vulnerability allows authenticated users with specific permissions to write specific Twig code that can escape the sandbox and execute arbitrary PHP code.", "Detection": "The vulnerability can be detected using security information and event management (SIEM) systems and intrusion detection systems (IDS) that monitor for suspicious PHP code execution and system compromise.", "Mitigation": "The vulnerability can be mitigated by disabling the `cms.enableSafeMode` feature and configuring the system to prevent untrusted users from writing or executing PHP code. It is also recommended to implement strict input validation and sanitization, as well as conducting regular security audits and penetration testing.", "Conclusion": "CVE-2020-26231 is a critical vulnerability that can result in system compromise and data theft. It is essential to implement appropriate mitigation strategies and conduct regular security testing to prevent similar vulnerabilities from occurring in the future."}, "executive_analysis": {"Overview": "CVE-2020-26231 is a critical vulnerability in the October CMS platform that can result in system compromise and data theft.", "Business Impact": "This vulnerability has significant business implications, as it can result in the theft or destruction of sensitive data, and the exploitation of this vulnerability can lead to system compromise and downtime.", "Technical Impact": "The vulnerability has significant technical implications, as it allows authenticated users with specific permissions to execute arbitrary PHP code and potentially compromise the system.", "Mitigation Strategies": "The recommended mitigation strategies include disabling the `cms.enableSafeMode` feature, configuring the system to prevent untrusted users from writing or executing PHP code, and implementing strict input validation and sanitization.", "Recommendations": "It is recommended that organizations apply the mitigation strategies outlined above and conduct regular security testing to prevent similar vulnerabilities from occurring in the future.", "Conclusions": "In conclusion, CVE-2020-26231 is a critical vulnerability that requires immediate attention and mitigation. It is essential to prioritize the security of the October CMS platform and prevent similar vulnerabilities from occurring in the future."}}