{"id": "CVE-2023-52765", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-05-21T16:15:15.777", "lastModified": "2024-07-03T01:43:55.870", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmfd: qcom-spmi-pmic: Fix revid implementation\n\nThe Qualcomm SPMI PMIC revid implementation is broken in multiple ways.\n\nFirst, it assumes that just because the sibling base device has been\nregistered that means that it is also bound to a driver, which may not\nbe the case (e.g. due to probe deferral or asynchronous probe). This\ncould trigger a NULL-pointer dereference when attempting to access the\ndriver data of the unbound device.\n\nSecond, it accesses driver data of a sibling device directly and without\nany locking, which means that the driver data may be freed while it is\nbeing accessed (e.g. on driver unbind).\n\nThird, it leaks a struct device reference to the sibling device which is\nlooked up using the spmi_device_from_of() every time a function (child)\ndevice is calling the revid function (e.g. on probe).\n\nFix this mess by reimplementing the revid lookup so that it is done only\nat probe of the PMIC device; the base device fetches the revid info from\nthe hardware, while any secondary SPMI device fetches the information\nfrom the base device and caches it so that it can be accessed safely\nfrom its children. If the base device has not been probed yet then probe\nof a secondary device is deferred."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: mfd: qcom-spmi-pmic: reparaci\u00f3n de la implementaci\u00f3n revid. La implementaci\u00f3n revid de Qualcomm SPMI PMIC est\u00e1 rota de varias maneras. En primer lugar, se supone que el hecho de que el dispositivo base hermano se haya registrado significa que tambi\u00e9n est\u00e1 vinculado a un controlador, lo que puede no ser el caso (por ejemplo, debido a un aplazamiento de la sonda o una sonda asincr\u00f3nica). Esto podr\u00eda desencadenar una desreferencia del puntero NULL al intentar acceder a los datos del controlador del dispositivo independiente. En segundo lugar, accede a los datos del controlador de un dispositivo hermano directamente y sin ning\u00fan bloqueo, lo que significa que los datos del controlador pueden liberarse mientras se accede a ellos (por ejemplo, al desvincular el controlador). En tercer lugar, filtra una referencia de dispositivo de estructura al dispositivo hermano que se busca usando spmi_device_from_of() cada vez que un dispositivo de funci\u00f3n (secundario) llama a la funci\u00f3n revid (por ejemplo, en la sonda). Solucione este problema volviendo a implementar la b\u00fasqueda revid para que se realice solo en la sonda del dispositivo PMIC; el dispositivo base obtiene la informaci\u00f3n revid del hardware, mientras que cualquier dispositivo SPMI secundario obtiene la informaci\u00f3n del dispositivo base y la almacena en cach\u00e9 para que sus hijos puedan acceder a ella de forma segura. Si el dispositivo base a\u00fan no ha sido sondeado, se pospone la sonda de un dispositivo secundario."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 6.2, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.5, "impactScore": 3.6}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-476"}]}], "references": [{"url": "https://git.kernel.org/stable/c/4ce77b023d42a9f1062eecf438df1af4b4072eb2", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/7b439aaa62fee474a0d84d67a25f4984467e7b95", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/affae18838db5e6b463ee30c821385695af56dc2", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/db98de0809f12b0edb9cd1be78e1ec1bfeba8f40", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "TA0001", "comment": "Lateral Movement via SPMI PMIC revid Implementation Null Pointer Dereference - Exploit the revid implementation vulnerability to gain access to the targeted system."}, {"techniqueID": "TA0024", "comment": "Execution Through Hijacked SPMI PMIC revid Function - Abuse the revid function to execute code on the targeted system."}, {"techniqueID": "T1190", "comment": "Path Manipulation via SPMI PMIC revid Implementation - Manipulate the revid implementation to access unauthorized areas of the system."}, {"techniqueID": "T1222", "comment": "Cross-Site Scripting via SPMI PMIC revid Implementation - Inject malicious scripts to steal data or compromise the system."}], "stix_bundle": {"type": "bundle", "objects": [{"type": "vulnerability", "id": "CVE-2023-52765", "created": "2024-05-21T16:15:15.777", "modified": "2024-07-03T01:43:55.870", "name": "SPMI PMIC revid Implementation Vulnerability", "description": "The Qualcomm SPMI PMIC revid implementation is broken in multiple ways, allowing for null pointer dereferences, data leaks, and unauthorized access.", "references": [{"href": "https://git.kernel.org/stable/c/4ce77b023d42a9f1062eecf438df1af4b4072eb2", "name": "Git Kerne"}, {"href": "https://git.kernel.org/stable/c/7b439aaa62fee474a0d84d67a25f4984467e7b95", "name": "Git Kerne"}, {"href": "https://git.kernel.org/stable/c/affae18838db5e6b463ee30c821385695af56dc2", "name": "Git Kerne"}, {"href": "https://git.kernel.org/stable/c/db98de0809f12b0edb9cd1be78e1ec1bfeba8f40", "name": "Git Kerne"}], "related_object": [{"href": "#technique1", "label": "TA0001- Lateral Movement via SPMI PMIC revid Implementation Null Pointer Dereference"}, {"href": "#technique2", "label": "TA0024- Execution Through Hijacked SPMI PMIC revid Function"}, {"href": "#technique3", "label": "T1190- Path Manipulation via SPMI PMIC revid Implementation"}, {"href": "#technique4", "label": "T1222- Cross-Site Scripting via SPMI PMIC revid Implementation"}]}]}, "technical_analysis": {"Introduction": "The Qualcomm SPMI PMIC revid implementation vulnerability is a critical issue that allows attackers to execute code, steal data, and compromise the system.", "Impact and Scope": "CVSS Score: 6.2, Attack Vector: Local, Privileges Required: None, User Interaction: None, Confidentiality Impact: None, Integrity Impact: None, Availability Impact: High.", "Related MITRE ATT&CK Techniques": "TA0001, TA0024, T1190, T1222", "Technical Details": "The vulnerability occurs due to the revid implementation being broken in multiple ways, allowing for null pointer dereferences, data leaks, and unauthorized access.", "Detection": "Monitor system logs for suspicious activity, check for unusual network traffic, and analyze system memory for malicious code.", "Mitigation": "Apply patches promptly, restrict OS access, implement network segmentation, and monitor system logs.", "Conclusion": "The Qualcomm SPMI PMIC revid implementation vulnerability is a critical issue that requires immediate attention and remediation."}, "executive_analysis": {"Overview": "The Qualcomm SPMI PMIC revid implementation vulnerability is a critical security issue that can compromise the integrity, confidentiality, and availability of the system.", "Business Impact": "This vulnerability can lead to significant financial losses, reputational damage, and legal liability.", "Technical Impact": "The vulnerability can allow attackers to execute code, steal data, and compromise the system.", "Mitigation Strategies": "Implement patches, restrict OS access, and monitor system logs.", "Recommendations": "Improve patch management, implement network segmentation, and enhance system logging and monitoring capabilities.", "Conclusions": "The Qualcomm SPMI PMIC revid implementation vulnerability is a critical security issue that requires immediate attention and remediation."}}