{"id": "CVE-2023-7083", "sourceIdentifier": "contact@wpscan.com", "published": "2024-01-16T16:15:13.973", "lastModified": "2024-01-19T14:54:30.993", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Voting Record WordPress plugin through 2.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack"}, {"lang": "es", "value": "El complemento Voting Record de WordPress hasta la versi\u00f3n 2.0 no tiene verificaci\u00f3n CSRF en algunos lugares y le falta sanitizaci\u00f3n y escape, lo que podr\u00eda permitir a los atacantes hacer que el administrador que haya iniciado sesi\u00f3n agregue payloads XSS almacenados a trav\u00e9s de un ataque CSRF."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:davidjmiller:voting_record:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "2.0", "matchCriteriaId": "5618CD85-545A-47B3-A1E9-13091C2C8EE9"}]}]}], "references": [{"url": "https://magos-securitas.com/txt/CVE-2023-7083.txt", "source": "contact@wpscan.com", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://wpscan.com/vulnerability/ba77704a-32a1-494b-b2c0-e1c2a3f98adc/", "source": "contact@wpscan.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2023-7083 - This technique is relevant as the vulnerability allows attackers to add stored XSS payloads via a CSRF attack, which can be used to further exploit the system. Defending against this technique involves implementing CSRF protection in the Voting Record WordPress plugin and validating user input."}, {"techniqueID": "T1190", "comment": "CVE-2023-7083 - This technique is relevant as the vulnerability can be used to make logged in admins add stored XSS payloads via a CSRF attack, which can be used to further exploit the system. Defending against this technique involves implementing CSRF protection in the Voting Record WordPress plugin and validating user input."}, {"techniqueID": "T1567", "comment": "CVE-2023-7083 - This technique is relevant as the vulnerability can be used to perform a stored XSS attack, which can be used to further exploit the system. Defending against this technique involves validating user input and sanitizing user input in the Voting Record WordPress plugin."}], "stix_bundle": {"stix_header": "1.0", "markings": [{"type": "MARKING-definition", "definition": "CVEDefine-1"}], "objects": [{"type": "Report", "generated_by": "WPScan"}, {"type": "Incident", "created": "2024-01-16T16:15:13.973Z", "modified": "2024-01-19T14:54:30.993Z"}, {"type": "Indicator", "title": "Voting Record WordPress Plugin Vulnerability", "generated_by": "WPScan"}, {"type": "AttackPattern", "id": "aps:attack-pattern-1", "title": "Stored XSS Attack via CSRF", "description": "The attacker attempts to add stored XSS payloads via a CSRF attack to the Voting Record WordPress plugin."}, {"type": "CourseOfAction", "id": "cov:course-of-action-1", "title": "Implement CSRF Protection", "description": "Implementing CSRF protection in the Voting Record WordPress plugin to prevent stored XSS attacks via CSRF."}, {"type": "CourseOfAction", "id": "cov:course-of-action-2", "title": "Validate User Input", "description": "Validating user input in the Voting Record WordPress plugin to prevent stored XSS attacks via CSRF."}, {"type": "Note", "id": "note:note-1", "content": "The Voting Record WordPress plugin is vulnerable to stored XSS attacks via CSRF due to a lack of CSRF protection and input validation."}, {"type": "INDICATES", "id": "rel:relationship-1", "from": "report:report-1", "to": "indicator:indicator-1"}, {"type": "INVOLVES", "id": "rel:relationship-2", "from": "attack_pattern:attack-pattern-1", "to": "incident:incident-1"}, {"type": "MITIGATES", "id": "rel:relationship-3", "from": "course_of_action:cov:course-of-action-1", "to": "attack_pattern:attack-pattern-1"}], " relationships": [{"id": "rel:relationship-1", "parent": "report:report-1", "child": "indicator:indicator-1", "type": "INDICATES"}]}, "technical_analysis": {"Introduction": "The Voting Record WordPress plugin is vulnerable to stored XSS attacks via CSRF due to a lack of CSRF protection and input validation.", "Impact and Scope": "The vulnerability allows attackers to add stored XSS payloads via a CSRF attack, which can be used to further exploit the system.", "Related MITRE ATT&CK Techniques": "T1059, T1190, and T1567", "Technical Details": "The Voting Record WordPress plugin does not have CSRF check in some places, and is missing sanitisation as well as escaping, which can allow attackers to make logged in admins add stored XSS payloads via a CSRF attack.", "Detection": "Detection methods include monitoring for suspicious activity in the Voting Record WordPress plugin and monitoring for stored XSS attacks.", "Mitigation": "Mitigation strategies include implementing CSRF protection in the Voting Record WordPress plugin and validating user input.", "Conclusion": "The Voting Record WordPress plugin is vulnerable to stored XSS attacks via CSRF and should be updated with CSRF protection and input validation to prevent further exploitation."}, "executive_analysis": {"Overview": "The Voting Record WordPress plugin is vulnerable to stored XSS attacks via CSRF and can be exploited to further compromise the system.", "Business Impact": "This vulnerability can result in the compromise of sensitive data and can lead to reputational damage.", "Technical Impact": "The vulnerability allows attackers to add stored XSS payloads via a CSRF attack, which can be used to further exploit the system.", "Mitigation Strategies": "Implementing CSRF protection in the Voting Record WordPress plugin and validating user input are recommended mitigation strategies.", "Recommendations": "Executives should recommend that the Voting Record WordPress plugin be updated with CSRF protection and input validation to prevent further exploitation.", "Conclusions": "The Voting Record WordPress plugin is vulnerable to stored XSS attacks via CSRF and should be updated with CSRF protection and input validation to prevent further exploitation."}}