{"id": "CVE-2024-1450", "sourceIdentifier": "security@wordfence.com", "published": "2024-03-21T02:51:42.693", "lastModified": "2024-03-21T12:58:51.093", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Shariff Wrapper plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'shariff' shortcode in all versions up to, and including, 4.6.10 due to insufficient input sanitization and output escaping on user supplied attributes such as 'align'. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El complemento Shariff Wrapper para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del c\u00f3digo abreviado 'shariff' del complemento en todas las versiones hasta la 4.6.10 incluida debido a una sanitizaci\u00f3n de entrada insuficiente y a un escape de salida en atributos proporcionados por el usuario como \"alinear\" . Esto hace posible que atacantes autenticados con permisos de nivel de colaborador y superiores inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/browser/shariff/tags/4.6.10/shariff.php", "source": "security@wordfence.com"}, {"url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3047668%40shariff&new=3047668%40shariff&sfp_email=&sfph_mail=", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/00a3d8e3-17b1-488b-9c42-2479932c9bf7?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1059.007", "comment": "CVE-2024-1450 - The Shariff Wrapper plugin for WordPress is vulnerable to Stored Cross-Site Scripting (XSS) due to insufficient input sanitization and output escaping, allowing attackers to inject arbitrary web scripts. This technique is relevant as it enables attackers to steal user data, inject malicious scripts, and manipulate the website's behavior. Defending against this technique requires implementing proper input validation and sanitization, as well as output encoding and escaping."}, {"techniqueID": "T1190", "comment": "CVE-2024-1450 - The vulnerability allows attackers to inject malicious scripts, which can be used to perform actions like stealing user data or injecting malware. This technique is relevant as it enables attackers to bypass security controls and gain unauthorized access to the system. Defending against this technique requires implementing robust security controls, such as web application firewalls and intrusion detection systems, as well as monitoring for suspicious activity."}, {"techniqueID": "T1505", "comment": "CVE-2024-1450 - The vulnerability enables attackers to inject malicious scripts, which can be used to perform actions like stealing user data or injecting malware. This technique is relevant as it enables attackers to manipulate the website's behavior and gain unauthorized access to the system. Defending against this technique requires implementing robust security controls, such as web application firewalls and intrusion detection systems, as well as monitoring for suspicious activity."}], "stix_bundle": {"type": "bundle", "id": "bundle--cve-2024-1450", "created_by_ref": "identity--5", "created": "2024-04-01T12:00:00.000", "modified": "2024-04-01T12:00:00.000", "objects": [{"type": "vulnerability", "id": "vulnerability--cve-2024-1450", "created_by_ref": "identity--5", "created": "2024-04-01T12:00:00.000", "modified": "2024-04-01T12:00:00.000", "name": "CVE-2024-1450: Shariff Wrapper Plugin Stored Cross-Site Scripting", "description": "The Shariff Wrapper plugin for WordPress is vulnerable to Stored Cross-Site Scripting (XSS) due to insufficient input sanitization and output escaping.", "references": [{"type": "indicator", "id": "indicator--cve-2024-1450-ref", "name": "CVE-2024-1450 Reference"}]}, {"type": "technique", "id": "technique--t1059-007", "created_by_ref": "identity--5", "created": "2024-04-01T12:00:00.000", "modified": "2024-04-01T12:00:00.000", "name": "T1059.007: Input Validation and Sanitization", "description": "Input validation and sanitization are crucial for preventing XSS attacks.", " courses_of_action": [{"type": "course-of-action", "id": "course-of-action--input-validation", "name": "Implement Input Validation and Sanitization"}]}, {"type": "notice", "id": "notice--cve-2024-1450-defend", "created_by_ref": "identity--5", "created": "2024-04-01T12:00:00.000", "modified": "2024-04-01T12:00:00.000", "name": "Defend against CVE-2024-1450", "description": "Implement robust security controls and monitor for suspicious activity to defend against CVE-2024-1450."}], "x_opencti_relationships": [{"id": "relationship--cve-2024-1450-to-technique", "type": "related_to", "object_ref": "vulnerability--cve-2024-1450", "object_id": "technique--t1059-007"}]}, "technical_analysis": {"Introduction": "The Shariff Wrapper plugin for WordPress is vulnerable to Stored Cross-Site Scripting (XSS) due to insufficient input sanitization and output escaping, allowing attackers to inject arbitrary web scripts.", "Impact and Scope": "The vulnerability allows attackers to inject malicious scripts, which can be used to perform actions like stealing user data or injecting malware. The impact of this vulnerability is significant, as it can result in the theft of sensitive data or the injection of malware.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques for this vulnerability are T1059.007, T1190, and T1505.", "Technical Details": "The vulnerability is due to the lack of input validation and sanitization in the Shariff Wrapper plugin's 'shariff' shortcode, which allows attackers to inject arbitrary web scripts.", "Detection": "The vulnerability can be detected using web application security scanners and penetration testing tools.", "Mitigation": "The vulnerability can be mitigated by implementing robust security controls, such as web application firewalls and intrusion detection systems, as well as monitoring for suspicious activity.", "Conclusion": "In conclusion, the Shariff Wrapper plugin for WordPress is vulnerable to Stored Cross-Site Scripting due to insufficient input sanitization and output escaping, which can result in serious consequences. Defending against this vulnerability requires implementing robust security controls and monitoring for suspicious activity."}, "executive_analysis": {"Overview": "The Shariff Wrapper plugin for WordPress is vulnerable to Stored Cross-Site Scripting (XSS) due to insufficient input sanitization and output escaping, which can result in serious consequences.", "Business Impact": "The vulnerability can result in the theft of sensitive data or the injection of malware, which can have significant business implications.", "Technical Impact": "The vulnerability can result in the compromise of sensitive data or the injection of malware, which can have significant technical implications.", "Mitigation Strategies": "Implementing robust security controls, such as web application firewalls and intrusion detection systems, as well as monitoring for suspicious activity, can mitigate the vulnerability.", "Recommendations": "Recommendations for executives include implementing robust security controls, regularly monitoring for suspicious activity, and ensuring that all software is up-to-date.", "Conclusions": "In conclusion, the Shariff Wrapper plugin for WordPress is vulnerable to Stored Cross-Site Scripting due to insufficient input sanitization and output escaping, which can result in serious consequences. Defending against this vulnerability requires implementing robust security controls and monitoring for suspicious activity."}}