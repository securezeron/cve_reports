{"id": "CVE-2024-6307", "sourceIdentifier": "security@wordfence.com", "published": "2024-06-25T11:15:50.820", "lastModified": "2024-06-28T13:15:03.453", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "WordPress Core is vulnerable to Stored Cross-Site Scripting via the HTML API in various versions prior to 6.5.5 due to insufficient input sanitization and output escaping on URLs. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "WordPress Core es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s de la API HTML en varias versiones hasta la 6.5.5 debido a una sanitizaci\u00f3n de entrada insuficiente y a un escape de salida en las URL. Esto hace posible que atacantes autenticados, con acceso de nivel de colaborador y superior, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "references": [{"url": "https://core.trac.wordpress.org/changeset/58472", "source": "security@wordfence.com"}, {"url": "https://core.trac.wordpress.org/changeset/58473", "source": "security@wordfence.com"}, {"url": "https://wordpress.org/news/2024/06/wordpress-6-5-5/", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/bc0d36f8-6569-49a1-b722-5cf57c4bb32a?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-6307 - This is an example of stored cross-site scripting (XSS) vulnerability in WordPress website. Attackers with contributor-level access can inject malicious scripts in pages, which can lead to data theft, unauthorized access, and other types of attacks. To defend against this, it is recommended to validate and sanitize user input, use content security policy (CSP) to restrict which sources can be used to load resources, and keep WordPress and all plugins up to date."}, {"techniqueID": "T1176", "comment": "CVE-2024-6307 - This vulnerability can also be exploited by attackers to perform cross-site request forgery (CSRF) attacks. An attacker can trick a user into performing a malicious action, such as deleting sensitive data or initiating a financial transaction. To defend against this, it is recommended to validate and sanitise user input, use CSRF protection, and use secure tokens to secure user interactions."}, {"techniqueID": "T1190", "comment": "CVE-2024-6307 - This vulnerability can also be exploited by attackers to perform server-side request forgery (SSRF) attacks. An attacker can trick a server into making unauthorized requests to other systems, which can lead to data theft, authentication bypass, and other types of attacks. To defend against this, it is recommended to validate and sanitise user input, use SSRF protection, and use secure protocols to secure communication between systems."}], "stix_bundle": {"@swagger": "2.0", "definitions": {"Vulnerability": {"$ref": "#/definitions/VulnerabilityDefinition"}, "MitreTechnique": {"$ref": "#/definitions/MitreTechniqueDefinition"}}, "objects": {"CVE-2024-6307": {"type": "Vulnerability", "id": "CVE-2024-6307", "name": "WordPress Stored Cross-Site Scripting Vulnerability", "description": "WordPress Core is vulnerable to Stored Cross-Site Scripting via the HTML API in various versions prior to 6.5.5 due to insufficient input sanitization and output escaping on URLs.", "severity": "Medium", "published": "2024-06-25T11:15:50.820", "lastModified": "2024-06-28T13:15:03.453", "vulnStatus": "Awaiting Analysis", "mitreTechniques": [{"type": "MitreTechnique", "techniqueID": "T1059", "comment": "CVE-2024-6307 - This is an example of stored cross-site scripting (XSS) vulnerability in WordPress website. Attackers with contributor-level access can inject malicious scripts in pages, which can lead to data theft, unauthorized access, and other types of attacks."}, {"type": "MitreTechnique", "techniqueID": "T1176", "comment": "CVE-2024-6307 - This vulnerability can also be exploited by attackers to perform cross-site request forgery (CSRF) attacks. An attacker can trick a user into performing a malicious action, such as deleting sensitive data or initiating a financial transaction."}, {"type": "MitreTechnique", "techniqueID": "T1190", "comment": "CVE-2024-6307 - This vulnerability can also be exploited by attackers to perform server-side request forgery (SSRF) attacks. An attacker can trick a server into making unauthorized requests to other systems, which can lead to data theft, authentication bypass, and other types of attacks."}]}}, "relations": {"CVE-2024-6307": {"vulnerability": {"type": "Vulnerability", "id": "CVE-2024-6307"}, "mitreTechniques": {"T1059": {"type": "MitreTechnique", "techniqueID": "T1059"}, "T1176": {"type": "MitreTechnique", "techniqueID": "T1176"}, "T1190": {"type": "MitreTechnique", "techniqueID": "T1190"}}}}}, "technical_analysis": {"Introduction": "Introduction content. CVE-2024-6307 is a stored cross-site scripting vulnerability in WordPress website. This vulnerability allows attackers with contributor-level access to inject malicious scripts in pages, which can lead to data theft, unauthorized access, and other types of attacks.", "Impact and Scope": "The impact of this vulnerability is Low (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N) and affects WordPress website with prior to version 6.5.5. This vulnerability can be exploited by attackers to perform cross-site scripting, cross-site request forgery, and server-side request forgery attacks.", "Related MITRE ATT&CK Techniques": "T1059, T1176, T1190", "Technical Details": "Detailed technical details of the vulnerability", "Detection": "Methods for detecting the vulnerability", "Mitigation": "Mitigation strategies for the vulnerability", "Conclusion": "Summary and conclusions"}, "executive_analysis": {"Overview": "Overview of the vulnerability", "Business Impact": "Explanation of the business impact of the vulnerability", "Technical Impact": "Explanation of the technical impact of the vulnerability", "Mitigation Strategies": "High-level mitigation strategies", "Recommendations": "Recommendations for executives", "Conclusions": "Final conclusions and next steps"}}