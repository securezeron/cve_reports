{"id": "CVE-2023-52900", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-08-21T07:15:06.297", "lastModified": "2024-08-21T12:30:33.697", "vulnStatus": "Undergoing Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix general protection fault in nilfs_btree_insert()\n\nIf nilfs2 reads a corrupted disk image and tries to reads a b-tree node\nblock by calling __nilfs_btree_get_block() against an invalid virtual\nblock address, it returns -ENOENT because conversion of the virtual block\naddress to a disk block address fails.  However, this return value is the\nsame as the internal code that b-tree lookup routines return to indicate\nthat the block being searched does not exist, so functions that operate on\nthat b-tree may misbehave.\n\nWhen nilfs_btree_insert() receives this spurious 'not found' code from\nnilfs_btree_do_lookup(), it misunderstands that the 'not found' check was\nsuccessful and continues the insert operation using incomplete lookup path\ndata, causing the following crash:\n\n general protection fault, probably for non-canonical address\n 0xdffffc0000000005: 0000 [#1] PREEMPT SMP KASAN\n KASAN: null-ptr-deref in range [0x0000000000000028-0x000000000000002f]\n ...\n RIP: 0010:nilfs_btree_get_nonroot_node fs/nilfs2/btree.c:418 [inline]\n RIP: 0010:nilfs_btree_prepare_insert fs/nilfs2/btree.c:1077 [inline]\n RIP: 0010:nilfs_btree_insert+0x6d3/0x1c10 fs/nilfs2/btree.c:1238\n Code: bc 24 80 00 00 00 4c 89 f8 48 c1 e8 03 42 80 3c 28 00 74 08 4c 89\n ff e8 4b 02 92 fe 4d 8b 3f 49 83 c7 28 4c 89 f8 48 c1 e8 03 <42> 80 3c\n 28 00 74 08 4c 89 ff e8 2e 02 92 fe 4d 8b 3f 49 83 c7 02\n ...\n Call Trace:\n <TASK>\n  nilfs_bmap_do_insert fs/nilfs2/bmap.c:121 [inline]\n  nilfs_bmap_insert+0x20d/0x360 fs/nilfs2/bmap.c:147\n  nilfs_get_block+0x414/0x8d0 fs/nilfs2/inode.c:101\n  __block_write_begin_int+0x54c/0x1a80 fs/buffer.c:1991\n  __block_write_begin fs/buffer.c:2041 [inline]\n  block_write_begin+0x93/0x1e0 fs/buffer.c:2102\n  nilfs_write_begin+0x9c/0x110 fs/nilfs2/inode.c:261\n  generic_perform_write+0x2e4/0x5e0 mm/filemap.c:3772\n  __generic_file_write_iter+0x176/0x400 mm/filemap.c:3900\n  generic_file_write_iter+0xab/0x310 mm/filemap.c:3932\n  call_write_iter include/linux/fs.h:2186 [inline]\n  new_sync_write fs/read_write.c:491 [inline]\n  vfs_write+0x7dc/0xc50 fs/read_write.c:584\n  ksys_write+0x177/0x2a0 fs/read_write.c:637\n  do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n  do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80\n  entry_SYSCALL_64_after_hwframe+0x63/0xcd\n ...\n </TASK>\n\nThis patch fixes the root cause of this problem by replacing the error\ncode that __nilfs_btree_get_block() returns on block address conversion\nfailure from -ENOENT to another internal code -EINVAL which means that the\nb-tree metadata is corrupted.\n\nBy returning -EINVAL, it propagates without glitches, and for all relevant\nb-tree operations, functions in the upper bmap layer output an error\nmessage indicating corrupted b-tree metadata via\nnilfs_bmap_convert_error(), and code -EIO will be eventually returned as\nit should be."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: nilfs2: soluciona el fallo de protecci\u00f3n general en nilfs_btree_insert() Si nilfs2 lee una imagen de disco corrupta e intenta leer un bloque de nodo de \u00e1rbol b llamando a __nilfs_btree_get_block() contra una direcci\u00f3n de bloque virtual no v\u00e1lida, devuelve -ENOENT porque falla la conversi\u00f3n de la direcci\u00f3n del bloque virtual a una direcci\u00f3n de bloque de disco. Sin embargo, este valor de retorno es el mismo que el c\u00f3digo interno que devuelven las rutinas de b\u00fasqueda del \u00e1rbol b para indicar que el bloque que se busca no existe, por lo que las funciones que operan en ese \u00e1rbol b pueden comportarse mal. Cuando nilfs_btree_insert() recibe este c\u00f3digo falso 'no encontrado' de nilfs_btree_do_lookup(), malinterpreta que la verificaci\u00f3n 'no encontrado' fue exitosa y contin\u00faa la operaci\u00f3n de inserci\u00f3n utilizando datos de ruta de b\u00fasqueda incompletos, lo que provoca el siguiente bloqueo: falla de protecci\u00f3n general, probablemente por direcci\u00f3n no can\u00f3nica 0xdffffc0000000005: 0000 [#1] PREEMPT SMP KASAN KASAN: null-ptr-deref en el rango [0x0000000000000028-0x000000000000002f] ... RIP: 0010:nilfs_btree_get_nonroot_node fs/nilfs 2/btree.c:418 [en l\u00ednea] RIP: 0010:nilfs_btree_prepare_insert fs/nilfs2/btree.c:1077 [en l\u00ednea] RIP: 0010:nilfs_btree_insert+0x6d3/0x1c10 fs/nilfs2/btree.c:1238 C\u00f3digo: bc 24 80 00 00 00 4c 89 f8 48 c1 e8 3 42 80 3c 28 00 74 08 4c 89 ff e8 4b 02 92 fe 4d 8b 3f 49 83 c7 28 4c 89 f8 48 c1 e8 03 &lt;42&gt; 80 3c 28 00 74 08 4c 89 ff e8 2e 02 92 fe 4d 8b f 49 83 c7 02... Seguimiento de llamadas:  nilfs_bmap_do_insert fs/nilfs2/bmap.c:121 [en l\u00ednea] nilfs_bmap_insert+0x20d/0x360 fs/nilfs2/bmap.c:147 nilfs_get_block+0x414/0x8d0 fs/nilfs2/inode.c: 101 __block_write_begin_int+0x54c/0x1a80 fs/buffer.c:1991 __block_write_begin fs/buffer.c:2041 [en l\u00ednea] block_write_begin+0x93/0x1e0 fs/buffer.c:2102 nilfs_write_begin+0x9c/0x110 fs/nilfs2/inode.c :261 generic_perform_write+0x2e4/0x5e0 mm/filemap.c:3772 __generic_file_write_iter+0x176/0x400 mm/filemap.c:3900 generic_file_write_iter+0xab/0x310 mm/filemap.c:3932 call_write_iter include/linux/fs.h:2186 [en l\u00ednea] new_sync_write fs/read_write.c:491 [en l\u00ednea] vfs_write+0x7dc/0xc50 fs/read_write.c:584 ksys_write+0x177/0x2a0 fs/read_write.c:637 do_syscall_x64 arch/x86/entry/common.c:50 [en l\u00ednea] do_syscall_64 +0x3d/0xb0 arch/x86/entry/common.c:80 Entry_SYSCALL_64_after_hwframe+0x63/0xcd ...  Este parche soluciona la causa ra\u00edz de este problema reemplazando el c\u00f3digo de error que devuelve __nilfs_btree_get_block() en la conversi\u00f3n de direcciones de bloque falla de -ENOENT a otro c\u00f3digo interno -EINVAL, lo que significa que los metadatos del \u00e1rbol b est\u00e1n da\u00f1ados. Al devolver -EINVAL, se propaga sin fallos y, para todas las operaciones relevantes del \u00e1rbol b, las funciones en la capa superior del mapa b generan un mensaje de error que indica metadatos del \u00e1rbol b corruptos a trav\u00e9s de nilfs_bmap_convert_error(), y el c\u00f3digo -EIO se devolver\u00e1 eventualmente cuando deber\u00eda ser."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/0bf463939c09e5b2c35c71ed74a5fd60a74d6a04", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/3c2a2ff67d46106715c2132021b98bd057c27545", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/45627a1a6450662e1e0f8174ef07b05710a20062", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/712bd74eccb9d3626a0a236641962eca8e11a243", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/7633355e5c7f29c049a9048e461427d1d8ed3051", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/b0ba060d3287108eba17603bee3810e4cf2c272d", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/d9fde9eab1766170ff2ade67d09178d2cfd78749", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2023-52900 - This technique uses a null-pointer dereference vulnerability in the Linux kernel's nilfs2 file system to crash the system. defenders can detect this by looking for system crashes and kernel panics, and can mitigate it by patching the vulnerability and monitoring system call tables for suspicious activity."}, {"techniqueID": "T1085", "comment": "CVE-2023-52900 - This technique uses a kernel exploit to gain elevated privileges. Defenders can detect this by monitoring system call tables for suspicious activity and can mitigate it by patching the vulnerability and implementing kernel restrictions such as grsecurity."}, {"techniqueID": "T1072", "comment": "CVE-2023-52900 - This technique uses a kernel exploit to gain elevated privileges. Defenders can detect this by monitoring system call tables for suspicious activity and can mitigate it by patching the vulnerability and implementing kernel restrictions such as grsecurity."}, {"techniqueID": "T1047", "comment": "CVE-2023-52900 - This technique uses a kernel exploit to gain elevated privileges. Defenders can detect this by monitoring system call tables for suspicious activity and can mitigate it by patching the vulnerability and implementing kernel restrictions such as grsecurity."}], "stix_bundle": {"type": "bundle", "spec_version": "2.1", "id": "a62a38de-40c4-4ee0-a7a5-4c5aaa2c5a93", "title": "CVE-2023-52900 Bundle", "objects": [{"type": "vulnerability", "id": "a62a38de-40c4-4ee0-a7a5-4c5aaa2c5a93", "title": "CVE-2023-52900: Linux Kernel nilfs2 File System Null-Pointer Dereference Vulnerability"}, {"type": "indicator", "id": "d30ba1e5-da81-4f5c-ae2f-34a00e84ff49", "title": "System Crash or Kernel Panic", "description": "Indicates a system crash or kernel panic", "names": ["System Crash", "Kernel Panic"]}, {"type": "intrusion-set", "id": "f30b9eaf-f98b-4e8c-9e36-03bc74a15ed9", "title": "Kernel Exploit", "description": "An intrusion set that uses kernel exploits to gain elevated privileges"}], "relationships": [{"type": "has-part", "from": {"id": "a62a38de-40c4-4ee0-a7a5-4c5aaa2c5a93"}, "to": {"id": "d30ba1e5-da81-4f5c-ae2f-34a00e84ff49"}}, {"type": "relates-to", "from": {"id": "a62a38de-40c4-4ee0-a7a5-4c5aaa2c5a93"}, "to": {"id": "f30b9eaf-f98b-4e8c-9e36-03bc74a15ed9"}}]}, "technical_analysis": {"Introduction": "This vulnerability is a null-pointer dereference vulnerability in the Linux kernel's nilfs2 file system. It allows an attacker to crash the system by exploiting the vulnerability in the nilfs_btree_insert function.", "Impact and Scope": {"Impact": "High", "Scope": "Local", "CVSS Score": "8.8/10", "Attack Vector": "Local", "Attack Complexity": "High", "Privileges Required": "None", "User Interaction": "None", "Sensitivity": "High", "Confidentiality": "High", "Integrity": "High"}, "Related MITRE ATT&CK Techniques": "T1190, T1085, T1072, T1047", "Technical Details": "The vulnerability is caused by a null-pointer dereference in the nilfs_btree_insert function. This function is used to insert a new node into a b-tree. The vulnerability is exploited by causing the function to return a null pointer, which can be used to crash the system.", "Detection": "Detection of this vulnerability can be done by monitoring system crash and kernel panic logs", "Mitigation": "Mitigation can be done by patching the vulnerability and implementing kernel restrictions such as grsecurity", "Conclusion": "This vulnerability is a serious threat to Linux systems and should be patched as soon as possible."}, "executive_analysis": {"Overview": "CVE-2023-52900 is a serious vulnerability in the Linux kernel's nilfs2 file system that allows an attacker to crash the system.", "Business Impact": "This vulnerability can cause significant business disruption and data loss if not properly patched.", "Technical Impact": "This vulnerability can cause a system crash and data corruption.", "Mitigation Strategies": "Patch the vulnerability and implement kernel restrictions such as grsecurity", "Recommendations": "Recommend that the system administrator patch the vulnerability as soon as possible and implement kernel restrictions such as grsecurity", "Conclusions": "This vulnerability is a serious threat to Linux systems and should be taken seriously. Patching and kernel restrictions are recommended to mitigate the risk."}}