{"id": "CVE-2024-27935", "sourceIdentifier": "security-advisories@github.com", "published": "2024-03-21T02:52:22.627", "lastModified": "2024-03-21T12:58:51.093", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Deno is a JavaScript, TypeScript, and WebAssembly runtime. Starting in version 1.35.1 and prior to version 1.36.3, a vulnerability in Deno's Node.js compatibility runtime allows for cross-session data contamination during simultaneous asynchronous reads from Node.js streams sourced from sockets or files. The issue arises from the re-use of a global buffer (BUF) in stream_wrap.ts used as a performance optimization to limit allocations during these asynchronous read operations. This can lead to data intended for one session being received by another session, potentially resulting in data corruption and unexpected behavior. This affects all users of Deno that use the node.js compatibility layer for network communication or other streams, including packages that may require node.js libraries indirectly. Version 1.36.3 contains a patch for this issue.\n"}, {"lang": "es", "value": "Deno es un tiempo de ejecuci\u00f3n de JavaScript, TypeScript y WebAssembly. A partir de la versi\u00f3n 1.35.1 y antes de la versi\u00f3n 1.36.3, una vulnerabilidad en el tiempo de ejecuci\u00f3n de compatibilidad de Node.js de Deno permite la contaminaci\u00f3n de datos entre sesiones durante lecturas asincr\u00f3nicas simult\u00e1neas de flujos de Node.js provenientes de sockets o archivos. El problema surge de la reutilizaci\u00f3n de un b\u00fafer global (BUF) en stream_wrap.ts utilizado como optimizaci\u00f3n del rendimiento para limitar las asignaciones durante estas operaciones de lectura asincr\u00f3nicas. Esto puede provocar que los datos destinados a una sesi\u00f3n sean recibidos por otra sesi\u00f3n, lo que podr\u00eda provocar da\u00f1os en los datos y comportamientos inesperados. Esto afecta a todos los usuarios de Deno que usan la capa de compatibilidad de node.js para la comunicaci\u00f3n de red u otras transmisiones, incluidos los paquetes que pueden requerir librer\u00edas de node.js indirectamente. La versi\u00f3n 1.36.3 contiene un parche para este problema."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:N/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "LOW", "baseScore": 7.2, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 2.7}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-488"}]}], "references": [{"url": "https://github.com/denoland/deno/commit/3e9fb8aafd9834ebacd27734cea4310caaf794c6", "source": "security-advisories@github.com"}, {"url": "https://github.com/denoland/deno/issues/20188", "source": "security-advisories@github.com"}, {"url": "https://github.com/denoland/deno/security/advisories/GHSA-wrqv-pf6j-mqjp", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1027", "comment": "CVE-2024-27935 - This technique is related to Data Contamination, which is a common attack vector. Deno's Node.js compatibility runtime vulnerability allows for data intended for one session to be received by another session, potentially leading to data corruption and unexpected behavior. Defenses such as implementing proper input validation and sanitization can help mitigate this attack."}, {"techniqueID": "T1190", "comment": "CVE-2024-27935 - This technique is related to Exploitation of Public-Facing Application, which is a common attack vector. The vulnerability in Deno's Node.js compatibility runtime can be exploited by an attacker to gain unauthorized access to sensitive data. Defenses such as implementing proper authentication and access control mechanisms can help mitigate this attack."}, {"techniqueID": "T1567.2", "comment": "CVE-2024-27935 - This technique is related to Data Modification, which is a common attack vector. The vulnerability in Deno's Node.js compatibility runtime allows for data intended for one session to be modified by another session, potentially leading to data corruption and unexpected behavior. Defenses such as implementing proper data validation and sanitization can help mitigate this attack."}], "stix_bundle": {"type": "bundle", "id": "bundle--f51136f5-7f5c-49cf-9f14-7dd9f18cf534", "spec_version": "2.1", "objects": [{"type": "attack-pattern", "id": "attack-pattern--c73f7c94-8a5c-432e-9d22-f4c9bf9edd3f", "name": "Data Contamination", "description": "Data contamination is the intentional alteration of data in a way that makes it difficult to determine the source of the data or its authenticity."}, {"type": "attack-pattern", "id": "attack-pattern--f2b8a57a-1e3b-44c5-83f4-99e3f45ba75e", "name": "Exploitation of Public-Facing Application", "description": "Exploitation of public-facing applications is the act of attacking a publicly accessible application to gain unauthorized access or to compromise the confidentiality, integrity, or availability of the application."}, {"type": "attack-pattern", "id": "attack-pattern--6f8a0b36-7c1b-4946-b4e3-1af9bf41f8ad", "name": "Data Modification", "description": "Data modification is the intentional alteration of data in a way that makes it difficult to determine the source of the data or its authenticity."}, {"type": "course-of-action", "id": "course-of-action--9f61e40a-0dd0-4e38-ab7b-f7c49a3e5c3c", "name": "Input Validation and Sanitization", "description": "Implementing input validation and sanitization can help prevent data contamination and modification.", "related_attack_pattern": "attack-pattern--c73f7c94-8a5c-432e-9d22-f4c9bf9edd3f"}, {"type": "course-of-action", "id": "course-of-action--5a534c55-79f4-44a5-b94e-8c4f35cfe01e", "name": "Proper Authentication and Access Control", "description": "Implementing proper authentication and access control mechanisms can help prevent exploitation of public-facing applications.", "related_attack_pattern": "attack-pattern--f2b8a57a-1e3b-44c5-83f4-99e3f45ba75e"}, {"type": "indicator", "id": "indicator--e3a5a4f5-555a-45e5-bc87-9b9a3f1b4b11", "name": "Data Corruption", "description": "Data corruption is the intentional alteration of data in a way that makes it difficult to determine the source of the data or its authenticity."}], "relationships": [{"type": "related-to", "id": "relationship--a1f6a18e-7b1b-44af-a1e1-a9a7f27a00da", "object": "indicator--e3a5a4f5-555a-45e5-bc87-9b9a3f1b4b11"}, {"type": "related-to", "id": "relationship--65c27a94-5df5-4e4f-9d1d-45c5c3e6f5b3", "object": "attack-pattern--c73f7c94-8a5c-432e-9d22-f4c9bf9edd3f"}, {"type": "related-to", "id": "relationship--bf2f6f59-fd16-44d9-a2c3-eeb5e1e3c3c3", "object": "attack-pattern--f2b8a57a-1e3b-44c5-83f4-99e3f45ba75e"}]}, "technical_analysis": {"Introduction": "This vulnerability allows for data contamination and modification by utilizing Deno's Node.js compatibility runtime. The attacker can exploit this vulnerability by sending malicious data to the processing node, which will then contaminate or modify the data intended for other sessions.", "Impact and Scope": "The impact and scope of this vulnerability are high, as it allows for data contamination and modification, which can lead to data breaches, unauthorized access, and confidentiality, integrity, and availability breaches.", "Related MITRE ATT&CK Techniques": "This vulnerability is related to the following MITRE ATT&CK techniques: T1027, T1190, and T1567.2.", "Technical Details": "This vulnerability occurs due to Deno's Node.js compatibility runtime allowing data intended for one session to be received by another session, potentially leading to data corruption and unexpected behavior.", "Detection": "The vulnerability can be detected by monitoring for unusual network traffic, analyzing system logs, and scanning for vulnerable systems.", "Mitigation": "The vulnerability can be mitigated by implementing input validation and sanitization, proper authentication and access control mechanisms, and regular system updates and patching.", "Conclusion": "In conclusion, this vulnerability is a significant risk to security, as it allows for data contamination and modification. It is crucial to implement proper security measures to prevent exploitation of this vulnerability."}, "executive_analysis": {"Overview": "This is a high-severity vulnerability that allows for data contamination and modification. It is essential to implement proper security measures to prevent exploitation of this vulnerability.", "Business Impact": "The business impact of this vulnerability is significant, as it can lead to data breaches, unauthorized access, and confidentiality, integrity, and availability breaches.", "Technical Impact": "The technical impact of this vulnerability is high, as it allows for data contamination and modification.", "Mitigation Strategies": "Mitigation strategies include implementing input validation and sanitization, proper authentication and access control mechanisms, and regular system updates and patching.", "Recommendations": "Recommendations for executives include conducting thorough risk assessments, implementing security measures, and educating employees on security best practices.", "Conclusions": "In conclusion, this vulnerability is a significant risk to security, and it is essential to implement proper security measures to prevent exploitation of this vulnerability."}}