{"id": "CVE-2024-5205", "sourceIdentifier": "security@wordfence.com", "published": "2024-05-24T03:15:08.580", "lastModified": "2024-05-24T13:03:11.993", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Videojs HTML5 Player plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's videojs_video shortcode in all versions up to, and including, 1.1.11 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El complemento Videojs HTML5 Player para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del c\u00f3digo corto videojs_video del complemento en todas las versiones hasta la 1.1.11 incluida debido a una sanitizaci\u00f3n de entrada insuficiente y a un escape de salida en los atributos proporcionados por el usuario. Esto hace posible que atacantes autenticados, con acceso de nivel de colaborador y superior, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/browser/videojs-html5-player/trunk/videojs-html5-player.php#L258", "source": "security@wordfence.com"}, {"url": "https://plugins.trac.wordpress.org/changeset/3091226/#file1", "source": "security@wordfence.com"}, {"url": "https://wordpress.org/plugins/videojs-html5-player/#developers", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/4ffd76a2-6700-4c2a-858d-4c7339a8d09a?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1169", "comment": "Stored Cross-Site Scripting - CVE-2024-5205 is a vulnerability in the Videojs HTML5 Player plugin for WordPress that allows authenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This can be mitigated with proper input sanitization and output escaping."}, {"techniqueID": "T1504", "comment": "Client-Side Execution File - The vulnerability in CVE-2024-5205 can be exploited by an attacker to inject malicious JavaScript code into a web page, which can be executed by a user to launch further attacks. This can be mitigated by using Content Security Policy (CSP) and implementing a web application firewall (WAF)."}, {"techniqueID": "T1030", "comment": "Web Shell - The vulnerability in CVE-2024-5205 can allow an attacker to create a web shell on the affected system, which can be used to execute arbitrary system commands and access sensitive data. This can be mitigated by implementing regular security updates and using a web application firewall (WAF)."}], "stix_bundle": {"@schema": "https://containers.threatgrid.com/Vulnerability/vulnerability-1.0.json", "objects": [{"type": "vulnerability", "id": "vuln-1", "title": "Videojs HTML5 Player Plugin Stored Cross-Site Scripting Vulnerability", "description": "Stored Cross-Site Scripting vulnerability in Videojs HTML5 Player plugin for WordPress", "cve": {"cve-entries": [{"referenced-by": "vuln-1", "cve-id": "CVE-2024-5205", "name": "Videojs HTML5 Player Plugin Stored Cross-Site Scripting Vulnerability"}]}, "related-objects": [{"relationship": "mitigates", "id-ref": "tech-1", "object-ref": "vuln-1"}]}, {"type": "technique", "id": "tech-1", "title": "Stored Cross-Site Scripting", "description": "Stored Cross-Site Scripting vulnerability in Videojs HTML5 Player plugin for WordPress", "related-objects": [{"relationship": "reported-by", "id-ref": "vuln-1", "object-ref": "tech-1"}]}]}, "technical_analysis": {"Introduction": "The Videojs HTML5 Player plugin for WordPress is vulnerable to Stored Cross-Site Scripting due to insufficient input sanitization and output escaping.", "Impact and Scope": "The vulnerability allows an authenticated attacker to inject arbitrary web scripts, which can execute whenever a user accesses an injected page.", "Related MITRE ATT&CK Techniques": "T1169, T1504, T1030", "Technical Details": "The vulnerability is due to the lack of proper input sanitization and output escaping in the plugin's videojs_video shortcode.", "Detection": "Detection of this vulnerability can be made using web application security scanners and vulnerability assessment tools.", "Mitigation": "The vulnerability can be mitigated by implementing proper input sanitization and output escaping, as well as using Content Security Policy (CSP) and a web application firewall (WAF).", "Conclusion": "The Videojs HTML5 Player plugin for WordPress is vulnerable to Stored Cross-Site Scripting, which can be exploited by an authenticated attacker to inject arbitrary web scripts."}, "executive_analysis": {"Overview": "A vulnerability in the Videojs HTML5 Player plugin for WordPress allows an authenticated attacker to inject arbitrary web scripts, which can execute whenever a user accesses an injected page.", "Business Impact": "This vulnerability can allow an attacker to inject malicious JavaScript code, which can be used to launch further attacks and compromise the security of the affected system.", "Technical Impact": "The vulnerability is due to insufficient input sanitization and output escaping in the plugin's videojs_video shortcode.", "Mitigation Strategies": "Mitigate this vulnerability by implementing proper input sanitization and output escaping, as well as using Content Security Policy (CSP) and a web application firewall (WAF).", "Recommendations": "Patch the affected plugin, implement a Content Security Policy (CSP), and use a web application firewall (WAF) to prevent attacks.", "Conclusions": "The Videojs HTML5 Player plugin for WordPress is vulnerable to Stored Cross-Site Scripting, and implementing mitigation strategies is crucial to preventing attacks."}}