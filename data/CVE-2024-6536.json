{"id": "CVE-2024-6536", "sourceIdentifier": "contact@wpscan.com", "published": "2024-07-30T06:15:04.013", "lastModified": "2024-07-30T13:32:45.943", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Zephyr Project Manager WordPress plugin before 3.3.99 does not sanitise and escape some of its settings, which could allow high privilege users such as editors and admins to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"}, {"lang": "es", "value": "El complemento de WordPress Zephyr Project Manager anterior a 3.3.99 no sanitiza ni escapa a algunas de sus configuraciones, lo que podr\u00eda permitir a usuarios con privilegios elevados, como editores y administradores, realizar ataques de Cross Site Scripting almacenado incluso cuando la capacidad unfiltered_html no est\u00e1 permitida (por ejemplo, en configuraci\u00f3n multisitio)"}], "metrics": {}, "references": [{"url": "https://wpscan.com/vulnerability/ee40c1c6-4186-4b97-866c-fb0e76cedeb8/", "source": "contact@wpscan.com"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-6536 - The vulnerability allows high privilege users to perform Stored Cross-Site Scripting attacks. This technique can be used to inject malicious scripts into a web page."}, {"techniqueID": "T1002", "comment": "CVE-2024-6536 - The vulnerability allows attackers to inject malicious code in a web application. This technique can be used to deliver malicious payloads."}], "stix_bundle": {"objects": [{"id": "vulnerability:26024", "type": "vulnerability", "created_by_ref": "identity:1", "cve": "CVE-2024-6536"}, {"id": "attack-pattern:1059", "type": "attack-pattern", "name": "Cross-Site Scripting", "description": "The ability to execute script within a user's browser."}, {"id": "threat-actor:3", "type": "threat-actor", "name": "Web Application Attackers"}, {"id": "malware-family:10", "type": "malware-family", "name": "WebShell"}, {"id": "course-of-action:2001", "type": "course-of-action", "name": "Use a web application firewall", "description": "To prevent the injection of malicious code in a web application."}, {"id": "impl/validating-pod-contents-with-regex-v1.0", "type": "stix-payload", "name": "Regular Expression Validation", "description": "A regular expression is used to validate user-input data."}], "relationships": [{"id": "vulnerability-attack-pattern:26024-1059", "type": "related", "vulnerability": "vulnerability:26024", "attack_pattern": "attack-pattern:1059"}, {"id": "course-of-action-attack-pattern:2001-1059", "type": "mitigates", "course_of_action": "course-of-action:2001", "attack_pattern": "attack-pattern:1059"}, {"id": "vulnerability-course-of-action:26024-2001", "type": "mitigated-by", "vulnerability": "vulnerability:26024", "course_of_action": "course-of-action:2001"}]}, "technical_analysis": {"Introduction": "The Zephyr Project Manager WordPress plugin before 3.3.99 does not sanitise and escape some of its settings, which could allow high privilege users to perform Stored Cross-Site Scripting attacks.", "Impact and Scope": "The vulnerability affects all versions of the plugin before 3.3.99, and allows attackers to inject malicious code in a web application.", "Related MITRE ATT&CK Techniques": "T1059 and T1002", "Technical Details": "The vulnerability occurs when the plugin does not properly sanitise and escape user-input data, allowing attackers to inject malicious code.", "Detection": "Detection can be done by monitoring for unusual patterns of traffic and identifying potentially malicious code in web traffic.", "Mitigation": "Mitigation strategies include using a web application firewall, validating user-input data using regular expressions, and keeping software up to date.", "Conclusion": "The vulnerability is a critical risk and requires immediate attention."}, "executive_analysis": {"Overview": "The Zephyr Project Manager WordPress plugin has a vulnerability that allows high privilege users to perform Stored Cross-Site Scripting attacks.", "Business Impact": "The vulnerability could allow attackers to inject malicious code in a web application, potentially leading to data theft or other sensitive information being compromised.", "Technical Impact": "The vulnerability allows attackers to inject malicious code in a web application, and could potentially lead to data theft or other sensitive information being compromised.", "Mitigation Strategies": "Implementing a web application firewall and keeping software up to date can help prevent this vulnerability from being exploited.", "Recommendations": "Recommendations include implementing a web application firewall, keeping software up to date, and validating user-input data using regular expressions.", "Conclusions": "The vulnerability is a critical risk and requires immediate attention to prevent potential exploitation."}}