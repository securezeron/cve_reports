{"id": "CVE-2023-52851", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-05-21T16:15:22.160", "lastModified": "2024-05-21T16:53:56.550", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/mlx5: Fix init stage error handling to avoid double free of same QP and UAF\n\nIn the unlikely event that workqueue allocation fails and returns NULL in\nmlx5_mkey_cache_init(), delete the call to\nmlx5r_umr_resource_cleanup() (which frees the QP) in\nmlx5_ib_stage_post_ib_reg_umr_init().  This will avoid attempted double\nfree of the same QP when __mlx5_ib_add() does its cleanup.\n\nResolves a splat:\n\n   Syzkaller reported a UAF in ib_destroy_qp_user\n\n   workqueue: Failed to create a rescuer kthread for wq \"mkey_cache\": -EINTR\n   infiniband mlx5_0: mlx5_mkey_cache_init:981:(pid 1642):\n   failed to create work queue\n   infiniband mlx5_0: mlx5_ib_stage_post_ib_reg_umr_init:4075:(pid 1642):\n   mr cache init failed -12\n   ==================================================================\n   BUG: KASAN: slab-use-after-free in ib_destroy_qp_user (drivers/infiniband/core/verbs.c:2073)\n   Read of size 8 at addr ffff88810da310a8 by task repro_upstream/1642\n\n   Call Trace:\n   <TASK>\n   kasan_report (mm/kasan/report.c:590)\n   ib_destroy_qp_user (drivers/infiniband/core/verbs.c:2073)\n   mlx5r_umr_resource_cleanup (drivers/infiniband/hw/mlx5/umr.c:198)\n   __mlx5_ib_add (drivers/infiniband/hw/mlx5/main.c:4178)\n   mlx5r_probe (drivers/infiniband/hw/mlx5/main.c:4402)\n   ...\n   </TASK>\n\n   Allocated by task 1642:\n   __kmalloc (./include/linux/kasan.h:198 mm/slab_common.c:1026\n   mm/slab_common.c:1039)\n   create_qp (./include/linux/slab.h:603 ./include/linux/slab.h:720\n   ./include/rdma/ib_verbs.h:2795 drivers/infiniband/core/verbs.c:1209)\n   ib_create_qp_kernel (drivers/infiniband/core/verbs.c:1347)\n   mlx5r_umr_resource_init (drivers/infiniband/hw/mlx5/umr.c:164)\n   mlx5_ib_stage_post_ib_reg_umr_init (drivers/infiniband/hw/mlx5/main.c:4070)\n   __mlx5_ib_add (drivers/infiniband/hw/mlx5/main.c:4168)\n   mlx5r_probe (drivers/infiniband/hw/mlx5/main.c:4402)\n   ...\n\n   Freed by task 1642:\n   __kmem_cache_free (mm/slub.c:1826 mm/slub.c:3809 mm/slub.c:3822)\n   ib_destroy_qp_user (drivers/infiniband/core/verbs.c:2112)\n   mlx5r_umr_resource_cleanup (drivers/infiniband/hw/mlx5/umr.c:198)\n   mlx5_ib_stage_post_ib_reg_umr_init (drivers/infiniband/hw/mlx5/main.c:4076\n   drivers/infiniband/hw/mlx5/main.c:4065)\n   __mlx5_ib_add (drivers/infiniband/hw/mlx5/main.c:4168)\n   mlx5r_probe (drivers/infiniband/hw/mlx5/main.c:4402)\n   ..."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: IB/mlx5: corrige el manejo de errores de la etapa inicial para evitar la doble liberaci\u00f3n del mismo QP y UAF. En el improbable caso de que la asignaci\u00f3n de la cola de trabajo falle y devuelva NULL en mlx5_mkey_cache_init(), elimine la llamada a mlx5r_umr_resource_cleanup() (que libera el QP) en mlx5_ib_stage_post_ib_reg_umr_init(). Esto evitar\u00e1 intentos de double free del mismo QP cuando __mlx5_ib_add() realice su limpieza. Resuelve un problema: Syzkaller inform\u00f3 un UAF en ib_destroy_qp_user workqueue: No se pudo crear un kthread de rescate para wq \"mkey_cache\": -EINTR infiniband mlx5_0: mlx5_mkey_cache_init:981:(pid 1642): no se pudo crear la cola de trabajo infiniband mlx5_0: mlx5_ib_stage_post_ib_reg_umr_ inicio: 4075: (pid 1642): el inicio de cach\u00e9 de mr fall\u00f3 -12 ========================================= =========================== BUG: KASAN: uso de losa despu\u00e9s de la liberaci\u00f3n en ib_destroy_qp_user (drivers/infiniband/core/verbs.c :2073) Lectura de tama\u00f1o 8 en la direcci\u00f3n ffff88810da310a8 mediante la tarea repro_upstream/1642 Rastreo de llamadas:  kasan_report (mm/kasan/report.c:590) ib_destroy_qp_user (drivers/infiniband/core/verbs.c:2073) mlx5r_umr_resource_cleanup (drivers /infiniband/hw/mlx5/umr.c:198) __mlx5_ib_add (drivers/infiniband/hw/mlx5/main.c:4178) mlx5r_probe (drivers/infiniband/hw/mlx5/main.c:4402) ...  Asignado por la tarea 1642: __kmalloc (./include/linux/kasan.h:198 mm/slab_common.c:1026 mm/slab_common.c:1039) create_qp (./include/linux/slab.h:603 ./ include/linux/slab.h:720 ./include/rdma/ib_verbs.h:2795 drivers/infiniband/core/verbs.c:1209) ib_create_qp_kernel (drivers/infiniband/core/verbs.c:1347) mlx5r_umr_resource_init (drivers/ infiniband/hw/mlx5/umr.c:164) mlx5_ib_stage_post_ib_reg_umr_init (drivers/infiniband/hw/mlx5/main.c:4070) __mlx5_ib_add (drivers/infiniband/hw/mlx5/main.c:4168) mlx5r_probe (drivers/infiniband/ hw/mlx5/main.c:4402) ... Liberado por la tarea 1642: __kmem_cache_free (mm/slub.c:1826 mm/slub.c:3809 mm/slub.c:3822) ib_destroy_qp_user (drivers/infiniband/core/ verbs.c:2112) mlx5r_umr_resource_cleanup (drivers/infiniband/hw/mlx5/umr.c:198) mlx5_ib_stage_post_ib_reg_umr_init (drivers/infiniband/hw/mlx5/main.c:4076 drivers/infiniband/hw/mlx5/main.c:4065 ) __mlx5_ib_add (controladores/infiniband/hw/mlx5/main.c:4168) mlx5r_probe (controladores/infiniband/hw/mlx5/main.c:4402) ..."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/2ef422f063b74adcc4a4a9004b0a87bb55e0a836", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/437f033e30c897bb3723eac9e9003cd9f88d00a3", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/4f4a7a7d1404297f2a92df0046f7e64dc5c52dd9", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/6387f269d84e6e149499408c4d1fc805017729b2", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2023-52851 - This technique utilizes a kernel vulnerability to inject arbitrary code into the kernel's memory space. It's relevant in this case because it demonstrates how the vulnerability can be exploited, and defenders should be aware of this technique to prevent similar attacks."}, {"techniqueID": "T12", "comment": "CVE-2023-52851 - This technique exploits the use-after-free vulnerability in the Linux kernel to inject malicious code into the kernel's memory space. Defenders should be aware of this technique and implement measures to prevent similar attacks."}], "stix_bundle": {"bundle": {"type": "bundle", "description": "STIX Bundle for CVE-2023-52851", "created_by_ref": "https://example.com", "created": "2024-05-21T16:15:22.160", "modified": "2024-05-21T16:53:56.550", "entities": [{"type": "vulnerability", "id": "vuln:CVE-2023-52851", "name": "Linux Kernel Use-After-Free Vulnerability", "description": "A use-after-free vulnerability in the Linux kernel allows attackers to inject arbitrary code into the kernel's memory space.", "severity": "High", "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H", "published_date": "2024-05-21T16:15:22.160", "modified_date": "2024-05-21T16:53:56.550"}, {"type": "attack_pattern", "id": "ap:T1190", "name": "Common Weakness Enumeration: CWE-416", "description": "Using the same memory location for multiple purposes, leading to data races or other issues.", "created_by_ref": "https://example.com", "created": "2024-05-21T16:15:22.160", "modified": "2024-05-21T16:53:56.550"}, {"type": "course_of_action", "id": "coa:mitigation", "name": "Mitigation", "description": "Implement measures to prevent similar attacks, such as memory safety checks and bounds checking.", "created_by_ref": "https://example.com", "created": "2024-05-21T16:15:22.160", "modified": "2024-05-21T16:53:56.550", "related_attack_pattern": "ap:T1190", "related_vulnerability": "vuln:CVE-2023-52851"}], "objects": [{"type": "indicator", "id": "indicator:network-traffic", "name": "Network Traffic", "description": "Network traffic with suspicious payload", "created_by_ref": "https://example.com", "created": "2024-05-21T16:15:22.160", "modified": "2024-05-21T16:53:56.550", "pattern": "Network traffic with suspicious payload", "malware": "True", "related_vulnerability": "vuln:CVE-2023-52851", "related_attack_pattern": "ap:T1190"}], "relations": [{"type": "relates_to", "source_ref": "vuln:CVE-2023-52851", "target_ref": "ap:T1190"}, {"type": "relates_to", "source_ref": "vuln:CVE-2023-52851", "target_ref": "coa:mitigation"}, {"type": "indicates", "source_ref": "indicator:network-traffic", "target_ref": "vuln:CVE-2023-52851"}]}}, "technical_analysis": {"Introduction": "A use-after-free vulnerability in the Linux kernel allows attackers to inject arbitrary code into the kernel's memory space.", "Impact and Scope": "The vulnerability has a high severity rating and can be exploited by attackers to gain elevated privileges on the system.", "Related MITRE ATT&CK Techniques": "T1190, T12", "Technical Details": "The vulnerability occurs due to the use-after-free error in the kernel, which allows attackers to inject arbitrary code into the kernel's memory space.", "Detection": "Network-based detection of the vulnerability exploit can be achieved by monitoring network traffic and identifying suspicious payload.", "Mitigation": "Implement measures to prevent similar attacks, such as memory safety checks and bounds checking.", "Conclusion": "The vulnerability presents a significant risk to systems running the affected version of the Linux kernel."}, "executive_analysis": {"Overview": "A use-after-free vulnerability has been identified in the Linux kernel, which can be exploited by attackers to gain elevated privileges on the system.", "Business Impact": "The vulnerability has a high severity rating and can impact the confidentiality, integrity, and availability of sensitive data.", "Technical Impact": "The vulnerability can allow attackers to inject arbitrary code into the kernel's memory space, leading to unauthorized access and control.", "Mitigation Strategies": "Implement measures to prevent similar attacks, such as memory safety checks and bounds checking.", "Recommendations": "Recommend implementing memory safety checks and bounds checking to prevent similar attacks.", "Conclusions": "The vulnerability presents a significant risk to systems running the affected version of the Linux kernel, and it's essential to take immediate action to mitigate the risk."}}