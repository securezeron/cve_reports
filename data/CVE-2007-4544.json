{"id": "CVE-2007-4544", "sourceIdentifier": "cve@mitre.org", "published": "2007-08-27T23:17:00.000", "lastModified": "2018-10-15T21:36:02.997", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "Cross-site scripting (XSS) vulnerability in wp-newblog.php in WordPress multi-user (MU) 1.0 and earlier allows remote attackers to inject arbitrary web script or HTML via the weblog_id parameter (Username field)."}, {"lang": "es", "value": "Vulnerabilidad de secuencia de comandos en sitios cruzados (XSS) en wp-newblog.php en WordPress multi-user (MU) 1.0 y anteriores permite a atacantes remotos inyectar secuencias de comandos web o HTML a trav\u00e9s del par\u00e1metro weblog_id (campo Username)."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wordpress:wordpress_mu:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.0", "matchCriteriaId": "208CBA6B-EC8C-4FA4-9B29-D45EBEC738E1"}]}]}], "references": [{"url": "http://osvdb.org/38442", "source": "cve@mitre.org"}, {"url": "http://securityvulns.ru/Rdocument875.html", "source": "cve@mitre.org"}, {"url": "http://websecurity.com.ua/1269/", "source": "cve@mitre.org"}, {"url": "http://www.securityfocus.com/archive/1/482006/100/0/threaded", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2007-4544 - Cross-site scripting (XSS) vulnerability in wp-newblog.php in WordPress multi-user (MU) 1.0 and earlier allows remote attackers to inject arbitrary web script or HTML via the weblog_id parameter (Username field). A malicious actor could use this technique to inject malicious scripts into a WordPress site and potentially gain unauthorized access."}, {"techniqueID": "T1190", "comment": "CVE-2007-4544 - Cross-site scripting (XSS) vulnerability in wp-newblog.php in WordPress multi-user (MU) 1.0 and earlier allows remote attackers to inject arbitrary web script or HTML via the weblog_id parameter (Username field). A malicious actor could use this technique to inject malicious scripts into a WordPress site and potentially gain unauthorized access."}, {"techniqueID": "T1569", "comment": "CVE-2007-4544 - Cross-site scripting (XSS) vulnerability in wp-newblog.php in WordPress multi-user (MU) 1.0 and earlier allows remote attackers to inject arbitrary web script or HTML via the weblog_id parameter (Username field). A malicious actor could use this technique to inject malicious scripts into a WordPress site and potentially gain unauthorized access."}], "stix_bundle": {"type": "bundle", "id": "bundle-_cve-2007-4544", "created_by": "user", "created": "2022-01-01T00:00:00.000000", "modified": "2022-01-01T00:00:00.000000", "objects": [{"type": "indicator", "id": "indicator-_xss-vulnerability", "created_by": "user", "created": "2022-01-01T00:00:00.000000", "modified": "2022-01-01T00:00:00.000000", "name": "XSS Vulnerability", "description": "Cross-site scripting (XSS) vulnerability in wp-newblog.php in WordPress multi-user (MU) 1.0 and earlier allows remote attackers to inject arbitrary web script or HTML via the weblog_id parameter (Username field).", "labels": ["XSS", "Web Application"], "Observable": {"type": "stix_ci_common", "x_status": "active"}, "Related_Objects": [{"type": "intrusion_set", "id": "intrusion_set-_wp-newblog-php", "name": "WP-Newblog-PHP", "description": "Intrusion set targeting WordPress Newblog.php vulnerability"}, {"type": "malware", "id": "malware-_xss-script", "name": "XSS Script", "description": "Malware script injected via XSS vulnerability on WordPress Newblog.php"}, {"type": "course_of_action", "id": "course_of_action-_mitigate-xss", "name": "Mitigate XSS", "description": "Mitigate the XSS vulnerability by patching WP-Newblog-PHP"}]}, {"type": "intrusion_set", "id": "intrusion_set-_wp-newblog-php", "name": "WP-Newblog-PHP", "description": "Intrusion set targeting WordPress Newblog.php vulnerability"}, {"type": "malware", "id": "malware-_xss-script", "name": "XSS Script", "description": "Malware script injected via XSS vulnerability on WordPress Newblog.php"}, {"type": "course_of_action", "id": "course_of_action-_mitigate-xss", "name": "Mitigate XSS", "description": "Mitigate the XSS vulnerability by patching WP-Newblog-PHP"}]}, "technical_analysis": {"Introduction": "The vulnerability is an exploitable Cross-Site Scripting (XSS) flaw in the wp-newblog.php file of WordPress multi-user (MU) 1.0 and earlier.", "Impact and Scope": "The vulnerability has a CVSS score of 4.3, with an attack vector of NETWORK, and it allows remote attackers to inject arbitrary web script or HTML via the weblog_id parameter (Username field).", "Related MITRE ATT&CK Techniques": "T1059, T1190, T1569", "Technical Details": "The vulnerability is caused by the lack of proper sanitization of the weblog_id parameter in the wp-newblog.php file. An attacker can inject malicious JavaScript code by manipulating the weblog_id parameter.", "Detection": "Detection methods include monitoring for suspicious JavaScript code injection in the weblog_id parameter, monitoring for unusual activity in the wp-newblog.php file, and monitoring for signs of exploitation such as cross-site scripting attacks.", "Mitigation": "Mitigation strategies include patching the vulnerability, implementing input validation and sanitization, and monitoring for signs of exploitation.", "Conclusion": "In conclusion, the vulnerability is a significant risk and requires prompt attention and remediation. "}, "executive_analysis": {"Overview": "The vulnerability is an XSS flaw in WordPress Newblog.php file allowing attackers to inject malicious JavaScript code.", "Business Impact": "The vulnerability could lead to unauthorized access, data theft, and reputational damage.", "Technical Impact": "The vulnerability allows remote attackers to inject arbitrary web script or HTML via the weblog_id parameter, exposing sensitive information and potentially allowing attackers to take control of the system.", "Mitigation Strategies": "Patching the vulnerability, implementing input validation and sanitization, and monitoring for signs of exploitation.", "Recommendations": "Recommendations include regularly updating and patching software, implementing strong access controls, and monitoring for signs of exploitation.", "Conclusions": "In conclusion, the vulnerability is a critical risk and requires prompt attention and remediation. "}}