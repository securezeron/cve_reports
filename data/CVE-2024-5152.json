{"id": "CVE-2024-5152", "sourceIdentifier": "security@wordfence.com", "published": "2024-06-06T04:15:13.720", "lastModified": "2024-07-24T17:58:12.617", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The ElementsReady Addons for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018_id\u2019 parameter in all versions up to, and including, 6.1.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El complemento ElementsReady Addons para Elementor para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del par\u00e1metro '_id' en todas las versiones hasta la 6.1.0 incluida debido a una sanitizaci\u00f3n de entrada y un escape de salida insuficientes. Esto hace posible que atacantes autenticados, con acceso de nivel de Colaborador y superior, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:quomodosoft:elementsready:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "6.2.0", "matchCriteriaId": "C03C52A1-929C-40BA-81D1-98B77C7EAFCE"}]}]}], "references": [{"url": "https://plugins.trac.wordpress.org/browser/element-ready-lite/trunk/inc/Widgets/info_box/Element_Ready_Info_Box_Widget.php#L742", "source": "security@wordfence.com", "tags": ["Patch"]}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d2cffdc3-bd74-42ab-befd-8a396c5d990d?source=cve", "source": "security@wordfence.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-5152 - This stored cross-site scripting (XSS) vulnerability makes it possible for authenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page, allowing for a TTP-based exploitation."}, {"techniqueID": "T1178", "comment": "CVE-2024-5152 - The insufficient input sanitization and output escaping allows an attacker to inject malicious scripts into the web application, making it a prime target for a TTP-based exploitation through the use of reflected cross-site scripting injections."}, {"techniqueID": "T1190", "comment": "CVE-2024-5152 - The vulnerability in the ElementsReady Addons for Elementor plugin for WordPress also enables an attacker to perform Stored Cross-Site Scripting (XSS) attacks, making it a possible TTP to exploit the vulnerability."}, {"techniqueID": "T1607", "comment": "CVE-2024-5152 - The lack of proper validation and sanitization of user-supplied data in the 'id' parameter of the Element_Ready_Info_Box_Widget.php script makes it possible to inject malicious scripts and payloads, allowing for a TTP-based exploitation."}], "technical_analysis": {"Introduction": "The ElementsReady Addons for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the '_id' parameter in all versions up to and including 6.1.0 due to insufficient input sanitization and output escaping.", "Impact and Scope": "This vulnerability allows authenticated attackers with Contributor-level access and above to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. Theattack vector is network-based, and the privilege required is low.", "Related MITRE ATT&CK Techniques": "T1059, T1178, T1190, T1607", "Technical Details": "The vulnerability is caused by the PHP script not properly validating and sanitizing the user-supplied data in the '_id' parameter, allowing an attacker to inject malicious scripts and payloads.", "Detection": "Detection of this vulnerability can be done by scanning the web application for the presence of the vulnerable script and verifying the presence of the vulnerable parameter.", "Mitigation": "The vulnerability can be mitigated by updating the ElementsReady Addons for Elementor plugin to a version greater than 6.1.0, patching the script to properly validate and sanitize the user-supplied data in the '_id' parameter.", "Conclusion": "In conclusion, the ElementsReady Addons for Elementor plugin for WordPress vulnerability proves that input validation and sanitization are crucial for preventing common web attacks, particularly Stored Cross-Site Scripting."}, "executive_analysis": {"Overview": "The ElementsReady Addons for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting, allowing attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.", "Business Impact": "This vulnerability can have significant business impacts, including the potential compromise of sensitive data, disruption of business operations, and loss of customer trust.", "Technical Impact": "The vulnerability has technical implications, including the potential for data breaches, unauthorized access, and exploitation of sensitive data.", "Mitigation Strategies": "Implementing patches, updating software, and conducting regular security assessments can help mitigate the vulnerability.", "Recommendations": "Executives should prioritize software updates, vulnerability patching, and conducting regular security assessments to minimize the risk of exploitation.", "Conclusions": "In conclusion, the ElementsReady Addons for Elementor plugin for WordPress vulnerability highlights the importance of prioritizing software updates, patching, and regular security assessments to minimize the risk of exploitation."}}