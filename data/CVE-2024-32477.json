{"id": "CVE-2024-32477", "sourceIdentifier": "security-advisories@github.com", "published": "2024-04-18T20:15:17.927", "lastModified": "2024-04-19T13:10:25.637", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Deno is a JavaScript, TypeScript, and WebAssembly runtime with secure defaults. By using ANSI escape sequences and a race between `libc::tcflush(0, libc::TCIFLUSH)` and reading standard input, it's possible to manipulate the permission prompt and force it to allow an unsafe action regardless of the user input. Some ANSI escape sequences act as a info request to the master terminal emulator and the terminal emulator sends back the reply in the PTY channel. standard streams also use this channel to send and get data. For example the `\\033[6n` sequence requests the current cursor position. These sequences allow us to append data to the standard input of Deno. This vulnerability allows an attacker to bypass Deno permission policy.  This vulnerability is fixed in 1.42.2.\n"}, {"lang": "es", "value": "Deno es un tiempo de ejecuci\u00f3n de JavaScript, TypeScript y WebAssembly con valores predeterminados seguros. Al usar secuencias de escape ANSI y una ejecuci\u00f3n entre `libc::tcflush(0, libc::TCIFLUSH)` y leer la entrada est\u00e1ndar, es posible manipular el mensaje de permiso y forzarlo a permitir una acci\u00f3n insegura independientemente de la entrada del usuario. Algunas secuencias de escape ANSI act\u00faan como una solicitud de informaci\u00f3n al emulador de terminal maestro y el emulador de terminal devuelve la respuesta en el canal PTY. Las transmisiones est\u00e1ndar tambi\u00e9n utilizan este canal para enviar y recibir datos. Por ejemplo, la secuencia `\\033[6n` solicita la posici\u00f3n actual del cursor. Estas secuencias nos permiten agregar datos a la entrada est\u00e1ndar de Deno. Esta vulnerabilidad permite a un atacante eludir la pol\u00edtica de permisos de Deno. Esta vulnerabilidad se solucion\u00f3 en 1.42.2."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.7, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.5, "impactScore": 5.2}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-362"}, {"lang": "en", "value": "CWE-78"}]}], "references": [{"url": "https://github.com/denoland/deno/security/advisories/GHSA-95cj-3hr2-7j5j", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1190", "comment": "T1190: Exploit Public-Facing Application - Deno vulnerabilities allow attackers to bypass Deno permission policy, which can be exploited to perform unauthorized actions."}, {"techniqueID": "T1027", "comment": "T1027: Remote System Discovery - Deno vulnerabilities can be used to discover and exploit remote systems, allowing attackers to compromise additional systems."}, {"techniqueID": "T1078", "comment": "T1078: Windows System File Rule - Deno vulnerabilities can be used to manipulate Windows system files, allowing attackers to bypass security controls and maintain persistence."}, {"techniqueID": "T1036", "comment": "T1036: Malware - Deno vulnerabilities can be used to deliver malware payloads, which can be used to facilitate additional attacks and maintain persistence."}], "technical_analysis": {"Introduction": "Deno is a JavaScript runtime that uses secure defaults to provide a safe environment for executing code. However, a vulnerability in Deno has been discovered that allows attackers to bypass Deno permission policy.", "Impact and Scope": "The vulnerability has a CVSS score of 7.7 and allows attackers to perform unauthorized actions. The attack vector is local, and the vulnerability affects Deno 1.41.0 and earlier versions.", "Related MITRE ATT&CK Techniques": "The vulnerability can be exploited using several MITRE ATT&CK techniques, including T1190, T1027, T1078, and T1036.", "Technical Details": "The vulnerability is caused by Deno's use of ANSI escape sequences and a race between `libc::tcflush(0, libc::TCIFLUSH)` and reading standard input. This allows attackers to manipulate the permission prompt and force it to allow an unsafe action regardless of the user input.", "Detection": "Detection of this vulnerability is challenging, as it requires monitoring for suspicious behavior and anomalies in system logs and network traffic.", "Mitigation": "Mitigation of this vulnerability requires implementing security controls that prevent local exploitation and monitoring systems for suspicious behavior.", "Conclusion": "In conclusion, the Deno vulnerability is a significant threat that requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "The Deno vulnerability is a critical issue that affects Deno 1.41.0 and earlier versions.", "Business Impact": "The vulnerability can allow attackers to perform unauthorized actions, compromising sensitive data and disrupting business operations.", "Technical Impact": "The vulnerability requires local exploitation and has a high attack vector, making it a critical issue that must be addressed immediately.", "Mitigation Strategies": "Implement security controls that prevent local exploitation and monitor systems for suspicious behavior.", "Recommendations": "Recommendations for executives include prioritizing patching and updating Deno to the latest version, conducting thorough risk assessments, and implementing robust security controls.", "Conclusions": "In conclusion, the Deno vulnerability is a critical issue that requires immediate attention and mitigation to prevent unauthorized access and compromise of sensitive data."}}