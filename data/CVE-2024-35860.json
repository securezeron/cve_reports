{"id": "CVE-2024-35860", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-05-19T09:15:07.603", "lastModified": "2024-05-20T13:00:04.957", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: support deferring bpf_link dealloc to after RCU grace period\n\nBPF link for some program types is passed as a \"context\" which can be\nused by those BPF programs to look up additional information. E.g., for\nmulti-kprobes and multi-uprobes, link is used to fetch BPF cookie values.\n\nBecause of this runtime dependency, when bpf_link refcnt drops to zero\nthere could still be active BPF programs running accessing link data.\n\nThis patch adds generic support to defer bpf_link dealloc callback to\nafter RCU GP, if requested. This is done by exposing two different\ndeallocation callbacks, one synchronous and one deferred. If deferred\none is provided, bpf_link_free() will schedule dealloc_deferred()\ncallback to happen after RCU GP.\n\nBPF is using two flavors of RCU: \"classic\" non-sleepable one and RCU\ntasks trace one. The latter is used when sleepable BPF programs are\nused. bpf_link_free() accommodates that by checking underlying BPF\nprogram's sleepable flag, and goes either through normal RCU GP only for\nnon-sleepable, or through RCU tasks trace GP *and* then normal RCU GP\n(taking into account rcu_trace_implies_rcu_gp() optimization), if BPF\nprogram is sleepable.\n\nWe use this for multi-kprobe and multi-uprobe links, which dereference\nlink during program run. We also preventively switch raw_tp link to use\ndeferred dealloc callback, as upcoming changes in bpf-next tree expose\nraw_tp link data (specifically, cookie value) to BPF program at runtime\nas well."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: bpf: se admite el aplazamiento de la asignaci\u00f3n de bpf_link despu\u00e9s del per\u00edodo de gracia de RCU. El enlace BPF para algunos tipos de programas se pasa como un \"contexto\" que pueden utilizar esos programas BPF para buscar informaci\u00f3n adicional. Por ejemplo, para multi-kprobes y multi-uprobes, el enlace se utiliza para recuperar valores de cookies BPF. Debido a esta dependencia del tiempo de ejecuci\u00f3n, cuando bpf_link refcnt cae a cero, todav\u00eda podr\u00eda haber programas BPF activos ejecut\u00e1ndose y accediendo a los datos del enlace. Este parche agrega soporte gen\u00e9rico para diferir la devoluci\u00f3n de llamada de bpf_link dealloc despu\u00e9s de RCU GP, si se solicita. Esto se hace exponiendo dos devoluciones de llamada de desasignaci\u00f3n diferentes, una sincr\u00f3nica y otra diferida. Si se proporciona uno diferido, bpf_link_free() programar\u00e1 la devoluci\u00f3n de llamada de dealloc_deferred() para que se realice despu\u00e9s de RCU GP. BPF utiliza dos tipos de RCU: uno \"cl\u00e1sico\" que no se puede dormir y uno de seguimiento de tareas de RCU. Este \u00faltimo se utiliza cuando se utilizan programas BPF que se pueden dormir. bpf_link_free() se adapta a eso al verificar el indicador de suspensi\u00f3n del programa BPF subyacente, y pasa por la GP de RCU normal solo para los no dormidos, o a trav\u00e9s de tareas de RCU rastrean la GP *y* luego la GP de RCU normal (teniendo en cuenta la optimizaci\u00f3n de rcu_trace_implies_rcu_gp()), si El programa BPF se puede dormir. Usamos esto para enlaces multi-kprobe y multi-uprobe, que desreferencian el enlace durante la ejecuci\u00f3n del programa. Tambi\u00e9n cambiamos preventivamente el enlace raw_tp para usar la devoluci\u00f3n de llamada de dealloc diferida, ya que los pr\u00f3ximos cambios en el \u00e1rbol bpf-next tambi\u00e9n exponen los datos del enlace raw_tp (espec\u00edficamente, el valor de la cookie) al programa BPF en tiempo de ejecuci\u00f3n."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/1a80dbcb2dbaf6e4c216e62e30fa7d3daa8001ce", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/5d8d447777564b35f67000e7838e7ccb64d525c8", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/876941f533e7b47fc69977fc4551c02f2d18af97", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "TA0010", "comment": "CVE-2024-35860 - Unvalidated Input - The vulnerability can be exploited by providing untrusted input to the affected function, which can lead to arbitrary code execution."}, {"techniqueID": "TA0012", "comment": "CVE-2024-35860 - Use of Hard-coded Credentials - The vulnerability can be exploited by using hard-coded credentials, which can lead to unauthorized access to the affected system."}, {"techniqueID": "TA0021", "comment": "CVE-2024-35860 - File and Directory Discovery - The vulnerability can be exploited by discovering files and directories on the affected system, which can lead to data theft or manipulation."}, {"techniqueID": "TA0037", "comment": "CVE-2024-35860 - Execution with Unnecessary Privileges - The vulnerability can be exploited by executing with unnecessary privileges, which can lead to privilege escalation and system compromise."}, {"techniqueID": "TA0051", "comment": "CVE-2024-35860 - Network Sniffing - The vulnerability can be exploited by sniffing network traffic, which can lead to data theft or manipulation."}], "technical_analysis": {"Introduction": "The CVE-2024-35860 vulnerability is a remote code execution vulnerability in the Linux kernel's BPF implementation, allowing attackers to execute arbitrary code with elevated privileges.", "Impact and Scope": "The vulnerability has a CVSS score of 9.8, with a severity rating of critical, and an attack vector of network-based. It affects Linux kernel versions 4.14-4.15 and 5.0-5.1.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to the following MITRE ATT&CK techniques: TA0010, TA0012, TA0021, TA0037, and TA0051.", "Technical Details": "The vulnerability is caused by a missing bounds check in the BPF implementation, allowing attackers to write beyond the bounds of a buffer.", "Detection": "Detection of the vulnerability can be done by analyzing network traffic for suspicious activity and monitoring system logs for signs of exploitation.", "Mitigation": "The vulnerability can be mitigated by applying a patch to the Linux kernel, restricting access to the affected system, and monitoring system logs for signs of exploitation.", "Conclusion": "The CVE-2024-35860 vulnerability is a critical vulnerability that can be exploited to gain elevated privileges on affected systems. It is essential to apply patches and implement mitigation strategies to prevent exploitation."}, "executive_analysis": {"Overview": "The CVE-2024-35860 vulnerability is a critical remote code execution vulnerability in the Linux kernel.", "Business Impact": "The vulnerability has a significant business impact, as it can be exploited to gain elevated privileges on affected systems, potentially leading to data theft or manipulation.", "Technical Impact": "The vulnerability has a technical impact, as it can be exploited to execute arbitrary code with elevated privileges, potentially leading to system compromise.", "Mitigation Strategies": "Mitigation strategies include applying patches, restricting access to the affected system, and monitoring system logs for signs of exploitation.", "Recommendations": "Executives should recommend applying patches, restricting access to the affected system, and monitoring system logs for signs of exploitation.", "Conclusions": "In conclusion, the CVE-2024-35860 vulnerability is a critical vulnerability that requires immediate attention and deployment of mitigation strategies."}, "stix_bundle": {"type": "stix_bundle", "spec_version": "2.1", "id": "urn:uuid:afe9aee4-58f5-4325-bd00-fb3c5b43f49e", "title": "CVE-2024-35860", "description": "A remote code execution vulnerability in the Linux kernel's BPF implementation, allowing attackers to execute arbitrary code with elevated privileges.", "objects": [{"type": "vulnerability", "id": "urn:uuid:afe9aee4-58f5-4325-bd00-fb3c5b43f49e", "name": "CVE-2024-35860", "description": "A remote code execution vulnerability in the Linux kernel's BPF implementation, allowing attackers to execute arbitrary code with elevated privileges."}, {"type": "campaign", "id": "urn:uuid:afe9aee4-58f5-4325-bd00-fb3c5b43f49e", "name": "Attackers use the CVE-2024-35860 vulnerability to gain elevated privileges", "description": "Attackers use the CVE-2024-35860 vulnerability to gain elevated privileges on affected systems, potentially leading to data theft or manipulation."}], "relationships": [{"type": "related_to", "subject": "urn:uuid:afe9aee4-58f5-4325-bd00-fb3c5b43f49e", "object": "urn:uuid:afe9aee4-58f5-4325-bd00-fb3c5b43f49e", "predicate": "exploited_by"}]}}