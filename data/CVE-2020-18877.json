{"id": "CVE-2020-18877", "sourceIdentifier": "cve@mitre.org", "published": "2021-08-20T14:15:08.677", "lastModified": "2021-08-23T19:07:28.460", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "SQL Injection in Wuzhi CMS v4.1.0 allows remote attackers to obtain sensitive information via the 'flag' parameter in the component '/coreframe/app/order/admin/index.php'."}, {"lang": "es", "value": "Una inyecci\u00f3n SQL en Wuzhi CMS versi\u00f3n v4.1.0, permite a atacantes remotos obtener informaci\u00f3n confidencial por medio del par\u00e1metro \"flag\" en el componente \"/coreframe/app/order/admin/index.php\"."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wuzhicms:wuzhicms:4.1.0:*:*:*:*:*:*:*", "matchCriteriaId": "2B76E69A-B2F3-4359-A7C0-046CEE2FAEEB"}]}]}], "references": [{"url": "https://github.com/wuzhicms/wuzhicms/issues/175", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2020-18877 - This SQL injection vulnerability in Wuzhi CMS v4.1.0 allows attackers to obtain sensitive information, which is a classic example of data exfiltration. Defenders should focus on monitoring database queries and filtering user input to prevent such attacks."}, {"techniqueID": "T1027", "comment": "CVE-2020-18877 - Since this vulnerability allows attackers to obtain sensitive information, it's likely that the attacker will use this to gather credentials for further exploitation. Defenders should focus on monitoring login attempts and detecting unauthorized access."}, {"techniqueID": "T1547", "comment": "CVE-2020-18877 - To prevent data exfiltration, defenders should implement web application firewalls (WAFs) and intrusion detection systems (IDS) to monitor and block suspicious traffic. Regular security audits and code reviews can also help detect and remediate similar vulnerabilities."}], "stix_bundle": "... A valid STIX 2.1 bundle expressing all the related techniques, risks and defense strategies for this CVE ...", "technical_analysis": {"Introduction": "Wuzhi CMS v4.1.0 contains a SQL injection vulnerability in the '/coreframe/app/order/admin/index.php' component, allowing remote attackers to obtain sensitive information.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N), indicating high impact and scope.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques are T1059, T1027, and T1547.", "Technical Details": "The vulnerability is caused by insufficient input validation in the 'flag' parameter, allowing attackers to inject malicious SQL queries.", "Detection": "Defenders can detect this vulnerability by monitoring database queries and filtering user input to prevent suspicious traffic.", "Mitigation": "To mitigate this vulnerability, defenders can implement web application firewalls (WAFs) and intrusion detection systems (IDS) to monitor and block suspicious traffic. Regular security audits and code reviews can also help detect and remediate similar vulnerabilities.", "Conclusion": "The Wuzhi CMS v4.1.0 SQL injection vulnerability demonstrates the importance of secure coding practices and regular security testing in web applications."}, "executive_analysis": {"Overview": "The Wuzhi CMS v4.1.0 SQL injection vulnerability poses a significant risk to organisations, allowing attackers to obtain sensitive information.", "Business Impact": "The vulnerability has the potential to compromise business-critical data and disrupt operations.", "Technical Impact": "The vulnerability allows unauthorized access to sensitive information, which can be used for further exploitation.", "Mitigation Strategies": "Implement web application firewalls (WAFs) and intrusion detection systems (IDS) to monitor and block suspicious traffic.", "Recommendations": "Organisations should prioritize secure coding practices and regular security testing in web applications to prevent similar vulnerabilities.", "Conclusions": "Proactive measures to detect and remediate vulnerabilities are essential to maintaining the security and integrity of networks and systems."}}