{"id": "CVE-2024-40631", "sourceIdentifier": "security-advisories@github.com", "published": "2024-07-15T19:15:03.700", "lastModified": "2024-07-16T13:43:58.773", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Plate media is an open source, rich-text editor for React. Editors that use `MediaEmbedElement` and pass custom `urlParsers` to the `useMediaState` hook may be vulnerable to XSS if a custom parser allows `javascript:`, `data:` or `vbscript:` URLs to be embedded. Editors that do not use `urlParsers` and consume the `url` property directly may also be vulnerable if the URL is not sanitised. The default parsers `parseTwitterUrl` and `parseVideoUrl` are not affected. `@udecode/plate-media` 36.0.10 resolves this issue by only allowing HTTP and HTTPS URLs during parsing. This affects only the `embed` property returned from `useMediaState`. In addition, the `url` property returned from `useMediaState` has been renamed to `unsafeUrl` to indicate that it has not been sanitised. The `url` property on `element` is also unsafe, but has not been renamed. If you're using either of these properties directly, you will still need to validate the URL yourself. Users are advised to upgrade. Users unable to upgrade should ensure that any custom `urlParsers` do not allow `javascript:`, `data:` or `vbscript:` URLs to be returned in the `url` property of their return values. If `url` is consumed directly, validate the URL protocol before passing it to the `iframe` element.\n\n"}, {"lang": "es", "value": "Plate media es un editor de texto enriquecido de c\u00f3digo abierto para React. Los editores que usan `MediaEmbedElement` y pasan `urlParsers` personalizados al enlace `useMediaState` pueden ser vulnerables a XSS si un analizador personalizado permite incrustar URL `javascript:`, `data:` o `vbscript:`. Los editores que no utilizan `urlParsers` y consumen la propiedad `url` directamente tambi\u00e9n pueden ser vulnerables si la URL no est\u00e1 sanitizada. Los analizadores predeterminados `parseTwitterUrl` y `parseVideoUrl` no se ven afectados. `@udecode/plate-media` 36.0.10 resuelve este problema al permitir solo URL HTTP y HTTPS durante el an\u00e1lisis. Esto afecta s\u00f3lo a la propiedad `embed` devuelta por `useMediaState`. Adem\u00e1s, se cambi\u00f3 el nombre de la propiedad `url` devuelta por `useMediaState` a `unsafeUrl` para indicar que no se ha sanitizado. La propiedad `url` en `element` tampoco es segura, pero no se le ha cambiado el nombre. Si utiliza cualquiera de estas propiedades directamente, a\u00fan deber\u00e1 validar la URL usted mismo. Se recomienda a los usuarios que actualicen. Los usuarios que no puedan actualizar deben asegurarse de que los `urlParsers` personalizados no permitan que las URL `javascript:`, `data:` o `vbscript:` se devuelvan en la propiedad `url` de sus valores de retorno. Si `url` se consume directamente, valide el protocolo de URL antes de pasarlo al elemento `iframe`."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.2}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://github.com/udecode/plate/commit/1bc0971774fbfb770780c9bdb94746a6f0f196a0", "source": "security-advisories@github.com"}, {"url": "https://github.com/udecode/plate/security/advisories/GHSA-h3pq-667x-r789", "source": "security-advisories@github.com"}, {"url": "https://stackoverflow.com/a/43467144", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-40631 - This vulnerability can be exploited by an attacker to inject malicious JavaScript code, similar to a Stored Cross-Site Scripting (XSS) attack. Defend against this by validating user-input data and using a Content Security Policy (CSP) to restrict JavaScript execution."}, {"techniqueID": "T1193", "comment": "CVE-2024-40631 - This vulnerability can also be exploited by an attacker to inject malicious URLs, similar to a Cross-Site Scripting (XSS) attack. Defend against this by validating user-input data and using a Content Security Policy (CSP) to restrict the execution of URLs."}], "stix_bundle": {"type": "bundle", "spec_version": "2.1", "id": "urn:stix:bundle:1.0", "created_by": "cyber_security_expert", "created": "2024-07-25T10:30:00.000", "objects": [{"type": "indicator", "id": "urn:stix:indicator:1.0", "created_by": "cyber_security_expert", "created": "2024-07-25T10:30:00.000", "name": "CVE-2024-40631 Indicator", "description": "Indicator for CVE-2024-40631 vulnerability", "confidence": "medium", "valid_from": "2024-07-15T00:00:00.000", "valid_until": "2024-07-31T23:59:59.999", "objects": [{"type": "vulnerability", "id": "urn:stix:vulnerability:1.0", "created_by": "cyber_security_expert", "created": "2024-07-25T10:30:00.000", "name": "CVE-2024-40631 Vulnerability", "description": "CVE-2024-40631 vulnerability description", "cve_id": "CVE-2024-40631", "cwe_id": ["CWE-79"], "cvss_score": "8.1", "attack_vector": "NETWORK", "attack_complexity": "LOW", "privileges_required": "LOW", "user_interaction": "NONE", "scope": "UNCHANGED", "confidentiality_impact": "HIGH", "integrity_impact": "HIGH", "availability_impact": "NONE"}, {"type": "threat_actor", "id": "urn:stix:threat_actor:1.0", "created_by": "cyber_security_expert", "created": "2024-07-25T10:30:00.000", "name": "APT-13", "description": "APT-13 threat actor description", "capabilities": ["Network exploitation", "Code injection"], "sophistication_level": "A sophisticated threat actor", "resources": ["Network infrastructure", " Skilled operatives"]}, {"type": "course_of_action", "id": "urn:stix:course_of_action:1.0", "created_by": "cyber_security_expert", "created": "2024-07-25T10:30:00.000", "name": "Mitigate CVE-2024-40631", "description": "Mitigation strategy for CVE-2024-40631", "notes": ["Implement Content Security Policy (CSP)", "Validate user-input data"]}]}]}, "technical_analysis": {"Introduction": "This section provides a full technical analysis of the CVE-2024-40631 vulnerability.", "Impact and Scope": "The CVE-2024-40631 vulnerability is a Stored Cross-Site Scripting (XSS) vulnerability that affects editors that use the MediaEmbedElement component and pass custom urlParsers to the useMediaState hook.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to MITRE ATT&CK Techniques T1190 and T1193.", "Technical Details": "The vulnerability is caused by the improper validation of user-input data, which allows an attacker to inject malicious JavaScript code or URLs into the editor.", "Detection": "To detect this vulnerability, you can use a combination of intrusion detection systems and web application firewalls.", "Mitigation": "To mitigate this vulnerability, you can implement Content Security Policy (CSP) and validate user-input data.", "Conclusion": "In conclusion, the CVE-2024-40631 vulnerability is a critical issue that requires immediate attention."}, "executive_analysis": {"Overview": "This section provides a high-level overview of the CVE-2024-40631 vulnerability and its business impact.", "Business Impact": "The vulnerability can result in a significant loss of reputation and financial loss for organizations affected by it.", "Technical Impact": "The vulnerability can result in unauthorized access to sensitive information and can be used to carry out various types of attacks.", "Mitigation Strategies": "To mitigate this vulnerability, organizations should implement a Content Security Policy (CSP) and validate user-input data.", "Recommendations": "Recommendations for executives include prioritizing vulnerability remediation, implementing a thorough risk assessment and mitigation strategy, and conducting regular penetration testing and vulnerability scanning.", "Conclusions": "In conclusion, the CVE-2024-40631 vulnerability is a critical issue that requires immediate attention and strategic mitigation to prevent significant business impact."}}