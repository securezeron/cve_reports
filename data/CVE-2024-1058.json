{"id": "CVE-2024-1058", "sourceIdentifier": "security@wordfence.com", "published": "2024-02-29T01:43:38.890", "lastModified": "2024-02-29T13:49:29.390", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The SiteOrigin Widgets Bundle plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the onclick parameter in all versions up to, and including, 1.58.3 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers with contributor access or higher to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. 1.58.3 offers a partial fix."}, {"lang": "es", "value": "El complemento SiteOrigin Widgets Bundle para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del par\u00e1metro onclick en todas las versiones hasta la 1.58.3 incluida, debido a una sanitizaci\u00f3n de entrada y un escape de salida insuficientes. Esto hace posible que atacantes autenticados con acceso de colaborador o superior inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada. 1.58.3 ofrece una soluci\u00f3n parcial."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/browser/so-widgets-bundle/tags/1.58.2/widgets/button/tpl/default.php#L22", "source": "security@wordfence.com"}, {"url": "https://plugins.trac.wordpress.org/browser/so-widgets-bundle/tags/1.58.3/base/base.php#L404", "source": "security@wordfence.com"}, {"url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=3031864%40so-widgets-bundle%2Ftrunk&old=3027675%40so-widgets-bundle%2Ftrunk&sfp_email=&sfph_mail=", "source": "security@wordfence.com"}, {"url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=3033967%40so-widgets-bundle%2Ftrunk&old=3031864%40so-widgets-bundle%2Ftrunk&sfp_email=&sfph_mail=", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/ffeb766f-3684-4eec-bacb-bbf0d434aba0?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1059.007", "comment": "CVE-2024-1058 - The vulnerability allows authenticated attackers to inject arbitrary web scripts in pages, which can lead to Stored Cross-Site Scripting (XSS). This is relevant as it allows attackers to execute malicious JavaScript code on vulnerable pages, potentially leading to data theft, unauthorized access, or other malicious activities. Defense against this includes validating and sanitizing user input, using Content Security Policy (CSP), and implementing a Web Application Firewall (WAF)."}, {"techniqueID": "T1190", "comment": "CVE-2024-1058 - The vulnerability can be exploited to inject malicious scripts, which can be used to distribute malware or steal sensitive information. This is relevant as it allows attackers to execute arbitrary code on vulnerable systems, potentially leading to a wide range of malicious activities. Defense against this includes implementing patch management practices, keeping software up-to-date, and using a reputable antivirus software."}, {"techniqueID": "T1194", "comment": "CVE-2024-1058 - The vulnerability can be exploited to inject malicious scripts, which can be used to distribute malware or steal sensitive information. This is relevant as it allows attackers to execute arbitrary code on vulnerable systems, potentially leading to a wide range of malicious activities. Defense against this includes implementing patch management practices, keeping software up-to-date, and using a reputable antivirus software."}, {"techniqueID": "T1078", "comment": "CVE-2024-1058 - The vulnerability can be exploited to inject malicious scripts, which can be used to distribute malware or steal sensitive information. This is relevant as it allows attackers to execute arbitrary code on vulnerable systems, potentially leading to a wide range of malicious activities. Defense against this includes implementing patch management practices, keeping software up-to-date, and using a reputable antivirus software."}], "technical_analysis": {"Introduction": "The SiteOrigin Widgets Bundle plugin for WordPress is vulnerable to Stored Cross-Site Scripting (XSS) due to insufficient input sanitization and output escaping.", "Impact and Scope": "The vulnerability affects all versions of the plugin up to and including 1.58.3, and allows authenticated attackers with contributor access or higher to inject arbitrary web scripts in pages. The CVSS score is 6.4 (Medium) with an attack vector of NETWORK and a confidentiality impact of LOW.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to MITRE ATT&CK techniques T1059.007 (Server Software Component).", "Technical Details": "The vulnerability occurs due to the lack of proper input validation and output escaping in the plugin's code, which allows attackers to inject malicious scripts in the 'onclick' parameter.", "Detection": "Detection involves monitoring for unusual network traffic patterns and analyzing logs for suspicious activity.", "Mitigation": "Mitigation strategies include updating the plugin to the latest version, validating and sanitizing user input, using Content Security Policy (CSP), and implementing a Web Application Firewall (WAF).", "Conclusion": "In conclusion, the vulnerability allows attackers to inject malicious scripts in pages, potentially leading to data theft, unauthorized access, or other malicious activities."}, "executive_analysis": {"Overview": "The SiteOrigin Widgets Bundle plugin for WordPress is vulnerable to Stored Cross-Site Scripting (XSS) due to insufficient input sanitization and output escaping.", "Business Impact": "The vulnerability can lead to data theft, unauthorized access, or other malicious activities, resulting in reputational damage and financial losses.", "Technical Impact": "The vulnerability can be exploited to inject malicious scripts, which can be used to distribute malware or steal sensitive information.", "Mitigation Strategies": "Update the plugin to the latest version, validate and sanitize user input, use Content Security Policy (CSP), and implement a Web Application Firewall (WAF).", "Recommendations": "Recommendations include implementing regular security updates, conducting regular vulnerability assessments, and monitoring for suspicious activity.", "Conclusions": "In conclusion, the vulnerability is a serious security concern that requires immediate attention and mitigation. Regular security updates and monitoring are crucial to preventing exploitation."}}