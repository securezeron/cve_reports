{"id": "CVE-2024-1990", "sourceIdentifier": "security@wordfence.com", "published": "2024-04-09T19:15:21.703", "lastModified": "2024-04-10T13:23:38.787", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The RegistrationMagic \u2013 Custom Registration Forms, User Registration, Payment, and User Login plugin for WordPress is vulnerable to blind SQL Injection via the \u2018id\u2019 parameter of the RM_Form shortcode in all versions up to, and including, 5.3.1.0 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."}, {"lang": "es", "value": "El complemento RegistrationMagic \u2013 Custom Registration Forms, User Registration, Payment, and User Login para WordPress es vulnerable a la inyecci\u00f3n SQL ciega a trav\u00e9s del par\u00e1metro 'id' del c\u00f3digo corto RM_Form en todas las versiones hasta la 5.3.1.0 incluida debido a un escape insuficiente en el par\u00e1metro proporcionado por el usuario y falta de preparaci\u00f3n suficiente en la consulta SQL existente. Esto hace posible que los atacantes autenticados, con acceso de nivel de colaborador y superior, agreguen consultas SQL adicionales a consultas ya existentes que pueden usarse para extraer informaci\u00f3n confidencial de la base de datos."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}]}, "references": [{"url": "https://plugins.trac.wordpress.org/changeset/3049490/custom-registration-form-builder-with-submission-manager/trunk/public/class_rm_public.php", "source": "security@wordfence.com"}, {"url": "https://plugins.trac.wordpress.org/changeset/3057216/custom-registration-form-builder-with-submission-manager/trunk/public/class_rm_public.php", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/6478cdbc-a20e-4fe2-bbd6-8a550e5da895?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1059.002", "comment": "CVE-2024-1990 - The RegistrationMagic plugin is vulnerable to blind SQL Injection, which can be used to extract sensitive information from the database. Defend against it by validating user input, escaping SQL queries, and restricting database access."}, {"techniqueID": "T1162", "comment": "The registration process of the RegistrationMagic plugin can be exploited by authenticated attackers to inject malicious SQL code. Implement input validation and sanitization to prevent this attack."}, {"techniqueID": "T1190", "comment": "This vulnerability can also be used to extract sensitive user data from the database. Implement data encryption and access controls to prevent unauthorized access."}, {"techniqueID": "T1590", "comment": "Defenders should identify and block suspicious SQL queries and traffic to detect potential attacks based on this vulnerability."}], "stix_bundle": {"@stix2ExtensionPackage": "https://stix2.apache.org/validation/extension-package", "objects": [{"type": "vulnerability", "id": "vuln:CVE-2024-1990", "created_by_ref": "org.cvedetails:cve@cvedetails.com", "severity": "HIGH", "description": "The RegistrationMagic \u2013 Custom Registration Forms, User Registration, Payment, and User Login plugin for WordPress is vulnerable to blind SQL Injection", "affected_systems": [{"type": "software", "id": "soft:RegistrationMagic", "name": "RegistrationMagic"}], "weaknesses": [{"type": "weakness", "id": "weak: CVE-2024-1990", "description": "Insufficient escaping on user-supplied parameters and lack of sufficient preparation on existing SQL queries"}]}, {"type": "attack-pattern", "id": "apn:T1059.002", "name": "SQL Injection", "description": "Blind SQL Injection via the \u2018id\u2019 parameter of the RM_Form shortcode", ".kill_chain_phases": ["Identification", " Weaponization", "Delivery", "Exploitation"]}], "relationships": [{"type": "has-part", "source_ref": "vuln:CVE-2024-1990", "target_ref": "apn:T1059.002"}]}, "technical_analysis": {"Introduction": "The RegistrationMagic plugin for WordPress is vulnerable to blind SQL Injection due to insufficient escaping on user-supplied parameters and lack of sufficient preparation on existing SQL queries.", "Impact and Scope": "The impact of this vulnerability is high, with a CVSS score of 8.8 and an attack vector of NETWORK.", "Related MITRE ATT&CK Techniques": "Related techniques include T1059.002, T1162, T1190, and T1590.", "Technical Details": "The vulnerability is triggered by the \u2018id\u2019 parameter of the RM_Form shortcode, which can be exploited by authenticated attackers to inject malicious SQL code.", "Detection": "Detection of this vulnerability involves monitoring for suspicious SQL queries and traffic.", "Mitigation": "Mitigation strategies include implementing input validation and sanitization, encrypting sensitive data, and restricting database access.", "Conclusion": "In conclusion, the vulnerability in the RegistrationMagic plugin highlights the importance of proper input validation and sanitization in web application development."}, "executive_analysis": {"Overview": "The RegistrationMagic plugin for WordPress is vulnerable to blind SQL Injection due to a lack of proper input validation and sanitization.", "Business Impact": "This vulnerability can result in the theft of sensitive information and compromise of the WordPress installation.", "Technical Impact": "The technical impact of this vulnerability is high, with a CVSS score of 8.8.", "Mitigation Strategies": "Mitigation strategies include implementing input validation and sanitization, encrypting sensitive data, and restricting database access.", "Recommendations": "Executives should take immediate action to update the RegistrationMagic plugin to a patched version.", "Conclusions": "In conclusion, executive level action is required to mitigate the risks associated with this vulnerability."}}