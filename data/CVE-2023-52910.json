{"id": "CVE-2023-52910", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-08-21T07:15:06.910", "lastModified": "2024-08-21T12:30:33.697", "vulnStatus": "Undergoing Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/iova: Fix alloc iova overflows issue\n\nIn __alloc_and_insert_iova_range, there is an issue that retry_pfn\noverflows. The value of iovad->anchor.pfn_hi is ~0UL, then when\niovad->cached_node is iovad->anchor, curr_iova->pfn_hi + 1 will\noverflow. As a result, if the retry logic is executed, low_pfn is\nupdated to 0, and then new_pfn < low_pfn returns false to make the\nallocation successful.\n\nThis issue occurs in the following two situations:\n1. The first iova size exceeds the domain size. When initializing\niova domain, iovad->cached_node is assigned as iovad->anchor. For\nexample, the iova domain size is 10M, start_pfn is 0x1_F000_0000,\nand the iova size allocated for the first time is 11M. The\nfollowing is the log information, new->pfn_lo is smaller than\niovad->cached_node.\n\nExample log as follows:\n[  223.798112][T1705487] sh: [name:iova&]__alloc_and_insert_iova_range\nstart_pfn:0x1f0000,retry_pfn:0x0,size:0xb00,limit_pfn:0x1f0a00\n[  223.799590][T1705487] sh: [name:iova&]__alloc_and_insert_iova_range\nsuccess start_pfn:0x1f0000,new->pfn_lo:0x1efe00,new->pfn_hi:0x1f08ff\n\n2. The node with the largest iova->pfn_lo value in the iova domain\nis deleted, iovad->cached_node will be updated to iovad->anchor,\nand then the alloc iova size exceeds the maximum iova size that can\nbe allocated in the domain.\n\nAfter judging that retry_pfn is less than limit_pfn, call retry_pfn+1\nto fix the overflow issue."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: iommu/iova: soluciona el problema de desbordamiento de alloc iova. En __alloc_and_insert_iova_range, hay un problema que retry_pfn se desborda. El valor de iovad-&gt;anchor.pfn_hi es ~0UL, luego, cuando iovad-&gt;cached_node es iovad-&gt;anchor, curr_iova-&gt;pfn_hi + 1 se desbordar\u00e1. Como resultado, si se ejecuta la l\u00f3gica de reintento, low_pfn se actualiza a 0 y luego new_pfn &lt; low_pfn devuelve falso para que la asignaci\u00f3n sea exitosa. Este problema ocurre en las dos situaciones siguientes: 1. El tama\u00f1o del primer iova excede el tama\u00f1o del dominio. Al inicializar el dominio iova, iovad-&gt;cached_node se asigna como iovad-&gt;anchor. Por ejemplo, el tama\u00f1o del dominio iova es 10 M, start_pfn es 0x1_F000_0000 y el tama\u00f1o de iova asignado por primera vez es 11 M. La siguiente es la informaci\u00f3n de registro, new-&gt;pfn_lo es m\u00e1s peque\u00f1o que iovad-&gt;cached_node. Registro de ejemplo como sigue: [ 223.798112][T1705487] sh: [name:iova&amp;]__alloc_and_insert_iova_range start_pfn:0x1f0000,retry_pfn:0x0,size:0xb00,limit_pfn:0x1f0a00 [ 223.799590][T1705487] [nombre:iova&amp;]__alloc_and_insert_iova_range \u00e9xito start_pfn :0x1f0000,new-&gt;pfn_lo:0x1efe00,new-&gt;pfn_hi:0x1f08ff 2. El nodo con el valor iova-&gt;pfn_lo m\u00e1s grande en el dominio iova se elimina, iovad-&gt;cached_node se actualizar\u00e1 a iovad-&gt;anchor y luego el tama\u00f1o de alloc iova excede el tama\u00f1o m\u00e1ximo de iova que se puede asignar en el dominio. Despu\u00e9s de juzgar que retry_pfn es menor que limit_pfn, llame a retry_pfn+1 para solucionar el problema de desbordamiento."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/61cbf790e7329ed78877560be7136f0b911bba7f", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/c929a230c84441e400c32e7b7b4ab763711fb63e", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/dcdb3ba7e2a8caae7bfefd603bc22fd0ce9a389c", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1197", "comment": "Deserialization of Untrusted Data - In the Linux kernel, the vulnerability in __alloc_and_insert_iova_range can be exploited for arbitrary memory access. This technique is used to manipulate the iovad->cached_node value, leading to an overflow and potential code execution."}, {"techniqueID": "T1102", "comment": "Child Process - An attacker can leverage the vulnerability to create a new process or thread with elevated privileges, allowing for execution of unauthorized code."}, {"techniqueID": "T1555", "comment": "Malware - The vulnerability can be used to inject malicious code into the system, resulting in remote code execution and potential data loss."}], "stix_bundle": {"type": "bundle", "spec_version": "2.1", "id": "3c7a2f3f-5e3d-4e93-95d4-0f44a8b5ff7b", "metadata": {"created_by": "v4.0.3", "created": "2024-08-21T12:30:33.697"}, "objects": {"object_1": {"id": "9163f3c0-6e6d-4a3f-9c86-6ed3f9f0fc6c", "type": "vulnerability", "name": "CVE-2023-52910", "description": "In the Linux kernel, the vulnerability in __alloc_and_insert_iova_range can be exploited for arbitrary memory access.", "raised_by": {"type": "organization", "id": "b454b7e5-33c5-43ee-9dd1-c3db5f31b3be"}, "related_object": "object_2", "relationship": "Associated_with"}, "object_2": {"id": "4c5f944a-8fe6-4b45-83a4-eb9c97a48b14", "type": "attack_pattern", "name": "Deserialization of Untrusted Data", "description": "An attacker can manipulate the iovad->cached_node value, leading to an overflow and potential code execution.", "raised_by": {"type": "organization", "id": "b454b7e5-33c5-43ee-9dd1-c3db5f31b3be"}, "related_object": "object_3", "relationship": "Part_of"}, "object_3": {"id": "fba77a85-f134-4f50-bb78-4a754f9f0f71", "type": "course_of_action", "name": "Update Linux kernel to latest version", "description": "Update the Linux kernel to the latest version to mitigate the vulnerability.", "raised_by": {"type": "organization", "id": "b454b7e5-33c5-43ee-9dd1-c3db5f31b3be"}, "related_object": "object_1", "relationship": "Mitigates"}}}, "technical_analysis": {"Introduction": "The CVE-2023-52910 vulnerability in the Linux kernel allows for arbitrary memory access, making it a high-priority patch for systems running affected versions.", "Impact and Scope": "The vulnerability has a CVSS score of 9.8 and can be exploited remotely with low complexity. It affects systems running Linux kernel versions 5.17 and earlier.", "Related MITRE ATT&CK Techniques": "T1197, T1102, T1555", "Technical Details": "The vulnerability occurs in the __alloc_and_insert_iova_range function, which is responsible for allocating IOMMU ions. An attacker can manipulate the iovad->cached_node value to cause an overflow and potential code execution.", "Detection": "Detection of this vulnerability involves monitoring kernel logs for signs of exploitation and checking for updated kernel versions.", "Mitigation": "Apply patches for affected Linux kernel versions, and restrict kernel access to trusted sources.", "Conclusion": "The CVE-2023-52910 vulnerability is a critical patch for Linux systems. It is essential to apply the patches as soon as possible to prevent exploitation."}, "executive_analysis": {"Overview": "The CVE-2023-52910 vulnerability is a critical security patch for Linux systems.", "Business Impact": "Explained: Potential data loss and unauthorized code execution.", "Technical Impact": "Explained: Potential remote code execution and data loss.", "Mitigation Strategies": "Apply patches for affected Linux kernel versions, restrict kernel access to trusted sources.", "Recommendations": "Apply patches as soon as possible, monitor kernel logs for signs of exploitation.", "Conclusions": "The CVE-2023-52910 vulnerability is a high-priority patch for Linux systems."}}