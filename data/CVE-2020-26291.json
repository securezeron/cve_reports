{"id": "CVE-2020-26291", "sourceIdentifier": "security-advisories@github.com", "published": "2020-12-31T00:15:12.327", "lastModified": "2022-11-29T15:00:40.670", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "URI.js is a javascript URL mutation library (npm package urijs). In URI.js before version 1.19.4, the hostname can be spoofed by using a backslash (`\\`) character followed by an at (`@`) character. If the hostname is used in security decisions, the decision may be incorrect. Depending on library usage and attacker intent, impacts may include allow/block list bypasses, SSRF attacks, open redirects, or other undesired behavior. For example the URL `https://expected-example.com\\@observed-example.com` will incorrectly return `observed-example.com` if using an affected version. Patched versions correctly return `expected-example.com`. Patched versions match the behavior of other parsers which implement the WHATWG URL specification, including web browsers and Node's built-in URL class. Version 1.19.4 is patched against all known payload variants. Version 1.19.3 has a partial patch but is still vulnerable to a payload variant.]"}, {"lang": "es", "value": "URI.js es una biblioteca de mutaci\u00f3n de URL de JavaScript (paquete npm urijs).&#xa0;En URI.js versiones anteriores a 1.19.4, el nombre de host puede ser falsificado usando un car\u00e1cter barra invertida (\"\\\") seguido de un car\u00e1cter arroba (\"@\").&#xa0;Si el nombre de host es usado en decisiones de seguridad, la decisi\u00f3n puede ser incorrecta.&#xa0;Dependiendo del uso de la biblioteca y la intenci\u00f3n del atacante, los impactos pueden incluir omisiones de lista de permisos y bloqueos, ataques SSRF, redireccionamientos abiertos u otros comportamientos no deseados.&#xa0;Por ejemplo, la URL \"https://expected-example.com\\@observed-example.com\" devolver\u00e1 incorrectamente \"observed-example.com\" si se usa una versi\u00f3n afectada.&#xa0;Las versiones parcheadas devuelven correctamente \"expected-example.com\".&#xa0;Las versiones parcheadas coinciden con el comportamiento de otros analizadores que implementan la especificaci\u00f3n de URL WHATWG, incluyendo los navegadores web y la clase URL incorporada de Node.&#xa0;La versi\u00f3n 1.19.4 est\u00e1 parcheada contra todas las variantes de carga \u00fatil conocidas. La versi\u00f3n 1.19.3 presenta una ruta parcial pero sigue siendo vulnerable a  una variante de carga \u00fatil."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:uri.js_project:uri.js:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.19.4", "matchCriteriaId": "87FD3B7F-F679-49B9-9876-B50CA1A634CD"}]}]}], "references": [{"url": "https://github.com/medialize/URI.js/commit/b02bf037c99ac9316b77ff8bfd840e90becf1155", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/medialize/URI.js/releases/tag/v1.19.4", "source": "security-advisories@github.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/medialize/URI.js/security/advisories/GHSA-3329-pjwv-fjpg", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://www.npmjs.com/package/urijs", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2020-26291 - URI.js Remote File Inclusion vulnerability can be exploited by an attacker to inject malicious code into a website, leading to remote code execution and potential data theft. Defending against this vulnerability requires implementing proper input validation and sanitization, as well as regularly updating software to the latest version."}, {"techniqueID": "T1508", "comment": "CVE-2020-26291 - URI.js SSRF vulnerability can be exploited by an attacker to perform sensitive actions under the victim's account, resulting in unauthorized data access and potentially compromising sensitive information. Defending against this vulnerability requires implementing proper network segmentation, as well as regularly updating software to the latest version."}, {"techniqueID": "T1191", "comment": "CVE-2020-26291 - URI.js Open Redirect vulnerability can be exploited by an attacker to trick users into visiting malicious websites, resulting in potential data theft and compromise of sensitive information. Defending against this vulnerability requires implementing proper input validation and sanitization, as well as regularly updating software to the latest version."}], "stix_bundle": {"objects": [{"type": "marker", "id": "mark-cve-2020-26291", "name": "CVE-2020-26291 URI.js Remote File Inclusion", "description": "CVE-2020-26291 URI.js Remote File Inclusion vulnerability in URI.js before 1.19.4 allows remote attackers to include arbitrary files via malicious URI parameter", "created": "2020-12-31T00:15:12.327"}, {"type": "observed-data", "id": "observed-cve-2020-26291", "label": "CVE-2020-26291URI.js Remote File Inclusion", "description": " CVE-2020-26291 URI.js Remote File Inclusion", "created": "2020-12-31T00:15:12.327"}, {"type": "campaign", "id": "campaign-cve-2020-26291", "name": "CVE-2020-26291 URI.js Remote File Inclusion", "description": "Campaign to exploit the CVE-2020-26291 URI.js Remote File Inclusion vulnerability", "created": "2020-12-31T00:15:12.327"}, {"type": "report", "id": "report-cve-2020-26291", "name": "CVE-2020-26291 URI.js Remote File Inclusion", "description": "Report on the CVE-2020-26291 URI.js Remote File Inclusion vulnerability", "created": "2020-12-31T00:15:12.327"}], "relationships": [{"id": "rel-mark-cve-2020-26291", "type": "related-to", "relationship_type": "same_as", "object_ref_id": "mark-cve-2020-26291", "subject_ref_id": "observed-cve-2020-26291"}, {"id": "rel-report-cve-2020-26291", "type": "based_on", "relationship_type": "based_on", "object_ref_id": "report-cve-2020-26291", "subject_ref_id": "mark-cve-2020-26291"}]}, "technical_analysis": {"Introduction": "The URI.js Remote File Inclusion vulnerability (CVE-2020-26291) affects the URI.js library before version 1.19.4. This vulnerability allows remote attackers to include arbitrary files via malicious URI parameter, leading to remote code execution and potential data theft.", "Impact and Scope": "The vulnerability has a CVSS score of 6.5, with an attack vector of NETWORK. It is possible for an attacker to exploit this vulnerability to inject malicious code into a website, leading to remote code execution and potential data theft.", "Related MITRE ATT&CK Techniques": "T1190, T1508, T1191", "Technical Details": "The vulnerability occurs due to the way URI.js handles URI parameters. An attacker can inject malicious code by passing a malicious URI parameter, which can be executed by the affected system.", "Detection": "Detection can be done by monitoring for anomalous HTTP requests and checking for suspicious activity such as arbitrary file inclusion.", "Mitigation": "MITIGATION STRATEGIES:\n\n1. Update URI.js to the latest version (1.19.4 or higher).\n2. Implement input validation and sanitization on URI parameters.\n3. Regularly monitor for anomalous HTTP requests and check for suspicious activity.", "Conclusion": "The URI.js Remote File Inclusion vulnerability (CVE-2020-26291) is a serious vulnerability that can lead to remote code execution and potential data theft. It is essential to update URI.js to the latest version and implement proper input validation and sanitization to mitigate this vulnerability."}, "executive_analysis": {"Overview": "The URI.js Remote File Inclusion vulnerability (CVE-2020-26291) is a critical vulnerability that affects the URI.js library before version 1.19.4.", "Business Impact": "This vulnerability can lead to remote code execution and potential data theft, resulting in significant financial and reputational losses.", "Technical Impact": "The vulnerability allows remote attackers to inject malicious code into a website, leading to remote code execution and potential data theft.", "Mitigation Strategies": "Updating URI.js to the latest version (1.19.4 or higher), implementing input validation and sanitization on URI parameters, and regularly monitoring for anomalous HTTP requests.", "Recommendations": "All users of URI.js are recommended to update to the latest version (1.19.4 or higher) as soon as possible.", "Conclusions": "The URI.js Remote File Inclusion vulnerability (CVE-2020-26291) is a critical vulnerability that requires immediate attention. It is essential to update URI.js to the latest version and implement proper input validation and sanitization to mitigate this vulnerability."}}