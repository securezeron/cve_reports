{"id": "CVE-2024-5709", "sourceIdentifier": "security@wordfence.com", "published": "2024-08-06T06:15:34.793", "lastModified": "2024-08-06T16:30:24.547", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The WPBakery Visual Composer plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 7.7 via the 'layout_name' parameter. This makes it possible for authenticated attackers, with Author-level access and above, and with post permissions granted by an Administrator, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other \u201csafe\u201d file types can be uploaded and included."}, {"lang": "es", "value": "El complemento WPBakery Visual Composer para WordPress es vulnerable a la inclusi\u00f3n de archivos locales en todas las versiones hasta la 7.7 incluida a trav\u00e9s del par\u00e1metro 'layout_name'. Esto hace posible que atacantes autenticados, con acceso de nivel de autor y superior, y con permisos de publicaci\u00f3n otorgados por un administrador, incluyan y ejecuten archivos arbitrarios en el servidor, permitiendo la ejecuci\u00f3n de cualquier c\u00f3digo PHP en esos archivos. Esto se puede utilizar para eludir los controles de acceso, obtener datos confidenciales o lograr la ejecuci\u00f3n de c\u00f3digo en los casos en que se puedan cargar e incluir im\u00e1genes y otros tipos de archivos \"seguros\"."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}]}, "weaknesses": [{"source": "security@wordfence.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-22"}]}], "references": [{"url": "https://wpbakery.com/", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/7fad30c8-fd8a-4cf2-a3aa-16a374231b87?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-5709 - Local File Inclusion vulnerability allows attackers to include and execute arbitrary files on the server, enabling the execution of any PHP code in those files. This technique can be used to bypass access controls, obtain sensitive data, or achieve code execution."}, {"techniqueID": "T1204", "comment": "CVE-2024-5709 - The vulnerability can be exploited by authenticated attackers with Author-level access and above to include and execute arbitrary files, allowing the execution of any PHP code. This technique can be used to achieve code execution and maintain persistence."}, {"techniqueID": "T1402", "comment": "CVE-2024-5709 - The vulnerability can be exploited to upload and include malicious files, allowing attackers to execute arbitrary code. This technique can be used to achieve code execution and maintain persistence."}, {"techniqueID": "T1497", "comment": "CVE-2024-5709 - The vulnerability can be exploited to upload and include malicious files, allowing attackers to execute arbitrary code. This technique can be used to achieve code execution and maintain persistence."}, {"techniqueID": "T1558", "comment": "CVE-2024-5709 - The vulnerability can be exploited to include and execute arbitrary files, allowing the execution of any PHP code. This technique can be used to achieve code execution and maintain persistence."}, {"techniqueID": "T1562", "comment": "CVE-2024-5709 - The vulnerability can be exploited to include and execute arbitrary files, allowing the execution of any PHP code. This technique can be used to achieve code execution and maintain persistence."}], "technical_analysis": {"Introduction": "The CVE-2024-5709 vulnerability refers to a Local File Inclusion (LFI) issue in the WPBakery Visual Composer plugin for WordPress, which allows attackers to include and execute arbitrary files on the server.", "Impact and Scope": "The vulnerability has a CVSS score of 8.8 with a version of 3.1, an attack vector of NETWORK, and privileges required of LOW. It allows attackers to bypass access controls, obtain sensitive data, or achieve code execution.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques for this CVE include T1190, T1204, T1402, T1497, T1558, and T1562.", "Technical Details": "The vulnerability occurs when the 'layout_name' parameter is not properly sanitized, allowing attackers to include and execute arbitrary files.", "Detection": "Detection of this vulnerability can be performed using tools that analyze HTTP requests and responses for suspicious activity.", "Mitigation": "Mitigation strategies include updating the WPBakery Visual Composer plugin to a version less than or equal to 7.7, disabling the 'layout_name' parameter, and implementing access controls to limit the impact of the vulnerability.", "Conclusion": "The CVE-2024-5709 vulnerability is a significant security issue that requires immediate attention. It is essential to understand the technical details of the vulnerability and implement effective mitigation strategies to prevent exploitation."}, "executive_analysis": {"Overview": "The CVE-2024-5709 vulnerability is a Local File Inclusion (LFI) issue in the WPBakery Visual Composer plugin for WordPress that allows attackers to include and execute arbitrary files on the server.", "Business Impact": "The vulnerability can allow attackers to bypass access controls, obtain sensitive data, or achieve code execution, which can impact business operations, data integrity, and overall security.", "Technical Impact": "The vulnerability requires technical expertise to exploit and can be used to achieve code execution and maintain persistence.", "Mitigation Strategies": "Mitigation strategies for this vulnerability include updating the plugin to a secure version, disabling the 'layout_name' parameter, and implementing access controls.", "Recommendations": "It is recommended that executives prioritize updating the WPBakery Visual Composer plugin to a secure version and implementing effective mitigation strategies to prevent exploitation.", "Conclusions": "The CVE-2024-5709 vulnerability is a significant security issue that requires immediate attention from both technical and non-technical stakeholders. It is essential to understand the technical details of the vulnerability and implement effective mitigation strategies to prevent exploitation."}}