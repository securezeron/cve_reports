{"id": "CVE-2024-3999", "sourceIdentifier": "contact@wpscan.com", "published": "2024-07-02T06:15:04.050", "lastModified": "2024-07-03T15:44:56.130", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The EazyDocs  WordPress plugin before 2.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"}, {"lang": "es", "value": "El complemento EazyDocs de WordPress anterior a 2.5.0 no sanitiza ni escapa a algunas de sus configuraciones, lo que podr\u00eda permitir a usuarios con privilegios elevados, como el administrador, realizar ataques de Cross-Site Scripting Almacenado incluso cuando la capacidad unfiltered_html no est\u00e1 permitida (por ejemplo, en una configuraci\u00f3n multisitio)."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}, {"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:spider-themes:eazydocs:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "2.5.0", "matchCriteriaId": "D84E69AF-BB0B-4BB9-B5EA-6D03511649A9"}]}]}], "references": [{"url": "https://wpscan.com/vulnerability/6a8a1deb-6836-40f1-856b-7b3e4ba867d6/", "source": "contact@wpscan.com", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1202", "comment": "CVE-2024-3999 - An attacker could exploit this vulnerability by injecting malicious JavaScript code in a high-privileged environment, leading to stored cross-site scripting attacks. This technique can be defended against by validating and sanitizing user input, and implementing proper input validation and escaping."}, {"techniqueID": "T1190", "comment": "CVE-2024-3999 - An attacker could exploit this vulnerability by using the unfiltered_html capability to inject malicious code. This technique can be defended against by disabling the unfiltered_html capability and implementing proper input validation and escaping."}, {"techniqueID": "T1027", "comment": "CVE-2024-3999 - An attacker could exploit this vulnerability by using cross-site scripting to steal sensitive information. This technique can be defended against by implementing proper input validation and escaping, and by disabling JavaScript in high-privileged environments."}], "stix_bundle": {"type": "bundle", "id": "https://example.com/stix_bundle_cve-2024-3999", "created_by_ref": "https://example.com/user/john_doe", "created": "2024-07-03T15:44:56.130", "modified": "2024-07-03T15:44:56.130", "objects": [{"type": "indicator", "id": "https://example.com/indicator/cve-2024-3999", "created_by_ref": "https://example.com/user/john_doe", "created": "2024-07-03T15:44:56.130", "modified": "2024-07-03T15:44:56.130", "title": "CVE-2024-3999: EazyDocs WordPress Plugin Stored Cross-Site Scripting", "description": "An attacker could exploit this vulnerability by injecting malicious JavaScript code in a high-privileged environment, leading to stored cross-site scripting attacks.", "patternyntax": "cve-2024-3999", "observed_data": [{"type": "stix_state", "value": "1"}]}, {"type": "course_of_action", "id": "https://example.com/course_of_action/stored-cross-site-scripting-mitigation", "created_by_ref": "https://example.com/user/john_doe", "created": "2024-07-03T15:44:56.130", "modified": "2024-07-03T15:44:56.130", "title": "Stored Cross-Site Scripting Mitigation", "description": "Implement proper input validation and escaping to prevent stored cross-site scripting attacks.", "mitigated_by_ref": "https://example.com/technique/T1202"}, {"type": "note", "id": "https://example.com/note/stored-cross-site-scripting-detection", "created_by_ref": "https://example.com/user/john_doe", "created": "2024-07-03T15:44:56.130", "modified": "2024-07-03T15:44:56.130", "title": "Stored Cross-Site Scripting Detection", "description": "Check for unvalidated or unsanitized user input in high-privileged environments to detect stored cross-site scripting attacks.", "related_to_ref": "https://example.com/indicator/cve-2024-3999"}], "Relationships": {"contains": {"objects": [{"type": "indicator", "id": "https://example.com/indicator/cve-2024-3999"}]}}}, "technical_analysis": {"Introduction": "The EazyDocs WordPress plugin is vulnerable to stored cross-site scripting attacks due to improper input validation and escaping.", "Impact and Scope": "The vulnerability allows an attacker to inject malicious JavaScript code in a high-privileged environment, leading to stored cross-site scripting attacks.", "Related MITRE ATT&CK Techniques": "T1202, T1190, and T1027", "Technical Details": "The vulnerability occurs due to the lack of proper input validation and escaping in the EazyDocs WordPress plugin, allowing an attacker to inject malicious JavaScript code.", "Detection": "Check for unvalidated or unsanitized user input in high-privileged environments to detect stored cross-site scripting attacks.", "Mitigation": "Implement proper input validation and escaping, and disable the unfiltered_html capability to prevent stored cross-site scripting attacks.", "Conclusion": "The EazyDocs WordPress plugin is vulnerable to stored cross-site scripting attacks, and proper mitigation strategies should be implemented to prevent attacks."}, "executive_analysis": {"Overview": "The EazyDocs WordPress plugin is vulnerable to stored cross-site scripting attacks due to improper input validation and escaping.", "Business Impact": "The vulnerability could allow an attacker to steal sensitive information or inject malicious code, leading to significant financial and reputational losses.", "Technical Impact": "The vulnerability allows an attacker to inject malicious JavaScript code in a high-privileged environment, leading to stored cross-site scripting attacks.", "Mitigation Strategies": "Implement proper input validation and escaping, and disable the unfiltered_html capability to prevent stored cross-site scripting attacks.", "Recommendations": "Disable the unfiltered_html capability, and implement proper input validation and escaping to prevent stored cross-site scripting attacks.", "Conclusions": "The vulnerability is a significant risk to businesses and individuals, and proper mitigation strategies should be implemented to prevent attacks."}}