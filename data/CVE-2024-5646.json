{"id": "CVE-2024-5646", "sourceIdentifier": "security@wordfence.com", "published": "2024-06-11T21:15:54.003", "lastModified": "2024-06-13T18:36:09.013", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Futurio Extra plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018header_size\u2019 attribute within the Advanced Text Block widget in all versions up to, and including, 2.0.5 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El complemento Futurio Extra para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del atributo 'header_size' dentro del widget de bloque de texto avanzado en todas las versiones hasta la 2.0.5 incluida debido a una sanitizaci\u00f3n de entrada y un escape de salida insuficientes. Esto hace posible que atacantes autenticados, con acceso de nivel de Colaborador y superior, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/browser/futurio-extra/tags/2.0.5/inc/elementor/widgets/advanced-text-block.php#L265", "source": "security@wordfence.com"}, {"url": "https://plugins.trac.wordpress.org/changeset/3100491/#file1", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/cbb3bd9b-ac1f-4488-931f-2ba37576df2d?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-5646 - Stored Cross-Site Scripting (XSS) vulnerability allows attackers to inject malicious scripts in WordPress pages. Defense against this involves properly sanitizing and escaping user-input data."}, {"techniqueID": "T1129", "comment": "CVE-2024-5646 - Inadequate input validation and sanitization enables attackers to inject malicious scripts. Implementing proper input validation and sanitization can help prevent this attack."}, {"techniqueID": "T1199", "comment": "CVE-2024-5646 - Unvalidated user input allows attackers to inject arbitrary web scripts in pages, leading to XSS attacks. Implementing security headers, such as Content Security Policy (CSP), can help mitigate this threat."}, {"techniqueID": "T1190", "comment": "CVE-2024-5646 - Inadequate output escaping enables attackers to inject malicious scripts in pages. Implementing proper output escaping can help prevent this attack."}, {"techniqueID": "T1191", "comment": "CVE-2024-5646 - Unstandardized or inconsistent coding practices lead to vulnerabilities. Develop secure coding practices and use secure development lifecycle (SDL) to identify potential vulnerabilities."}], "stix_bundle": {"type": "bundle", "id": "bundle-1", "description": "Vulnerability Bundle for CVE-2024-5646", "objects": [{"type": "reported-cve", "id": "cve-2024-5646", "description": "Stored Cross-Site Scripting in Wortress Futurio Extra Plugin"}, {"type": "threat-actor", "id": "actor-1", "description": "Unknown attacker group"}, {"type": "campaign", "id": "campaign-1", "description": "Wordpress Plugin Vulnerability Campaign"}, {"type": "indicator", "id": "indicator-1", "description": "Malicious script injection"}, {"type": "attack-pattern", "id": "attack-pattern-1", "description": " Stored Cross-Site Scripting (XSS)"}, {"type": "malware", "id": "malware-1", "description": "XSS Script"}], "relationships": [{"type": "related-to", "id": "rel-1", "source_id": "cve-2024-5646", "target_id": "actor-1", "relationship": "actor"}, {"type": "related-to", "id": "rel-2", "source_id": "cve-2024-5646", "target_id": "campaign-1", "relationship": "target"}, {"type": "related-to", "id": "rel-3", "source_id": "cve-2024-5646", "target_id": "indicator-1", "relationship": "indicator"}, {"type": "related-to", "id": "rel-4", "source_id": "cve-2024-5646", "target_id": "attack-pattern-1", "relationship": "pattern"}, {"type": "related-to", "id": "rel-5", "source_id": "cve-2024-5646", "target_id": "malware-1", "relationship": "malware"}]}, "technical_analysis": {"Introduction": "CVE-2024-5646 is a Stored Cross-Site Scripting (XSS) vulnerability in the WordPress Futurio Extra plugin, affecting all versions up to and including 2.0.5.", "Impact and Scope": "The vulnerability allows authenticated attackers to inject arbitrary web scripts in pages, leading to XSS attacks. The CVSS score is 6.4.", "Related MITRE ATT&CK Techniques": "The techniques related to this vulnerability are T1059, T1129, T1199, T1190, and T1191.", "Technical Details": "The vulnerability occurs due to insufficient input sanitization and output escaping in the Advanced Text Block widget.", "Detection": "Detection involves monitoring for malicious script injection and identifying XSS attacks.", "Mitigation": "Mitigation involves implementing proper input validation and sanitization, output escaping, and security headers such as Content Security Policy (CSP).", "Conclusion": "The CVE-2024-5646 vulnerability affects the WordPress Futurio Extra plugin and can be mitigated by implementing secure coding practices and security headers."}, "executive_analysis": {"Overview": "CVE-2024-5646 is a Stored Cross-Site Scripting (XSS) vulnerability in the WordPress Futurio Extra plugin, affecting all versions up to and including 2.0.5.", "Business Impact": "The vulnerability can lead to data theft, unauthorized access, and reputational damage.", "Technical Impact": "The vulnerability makes it possible for attackers to inject malicious scripts into pages, leading to XSS attacks.", "Mitigation Strategies": "Implementing proper input validation and sanitization, output escaping, and security headers such as Content Security Policy (CSP) can help mitigate this threat.", "Recommendations": "Executives should ensure that their organization's WordPress plugins are up-to-date with the latest security patches and implement secure coding practices.", "Conclusion": "The CVE-2024-5646 vulnerability is a significant threat that requires immediate attention and mitigation to prevent potential attacks."}}