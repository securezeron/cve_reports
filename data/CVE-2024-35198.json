{"id": "CVE-2024-35198", "sourceIdentifier": "security-advisories@github.com", "published": "2024-07-19T02:15:14.150", "lastModified": "2024-08-07T16:15:44.537", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "TorchServe is a flexible and easy-to-use tool for serving and scaling PyTorch models in production. TorchServe 's check on allowed_urls configuration can be by-passed if the URL contains characters such as \"..\" but it does not prevent the model from being downloaded into the model store. Once a file is downloaded, it can be referenced without providing a URL the second time, which effectively bypasses the allowed_urls security check. Customers using PyTorch inference Deep Learning Containers (DLC) through Amazon SageMaker and EKS are not affected. This issue in TorchServe has been fixed by validating the URL without characters such as \"..\" before downloading see PR #3082. TorchServe release 0.11.0 includes the fix to address this vulnerability. Users are advised to upgrade. There are no known workarounds for this vulnerability."}, {"lang": "es", "value": "TorchServe es una herramienta flexible y f\u00e1cil de usar para servir y escalar modelos PyTorch en producci\u00f3n. La verificaci\u00f3n de TorchServe en la configuraci\u00f3n de Allow_urls se puede omitir si la URL contiene caracteres como \"..\" pero no impide que el modelo se descargue en la tienda de modelos. Una vez que se descarga un archivo, se puede hacer referencia a \u00e9l sin proporcionar una URL la segunda vez, lo que efectivamente evita la verificaci\u00f3n de seguridad de Allow_urls. Los clientes que utilizan contenedores de aprendizaje profundo (DLC) de inferencia de PyTorch a trav\u00e9s de Amazon SageMaker y EKS no se ven afectados. Este problema en TorchServe se solucion\u00f3 validando la URL sin caracteres como \"..\" antes de descargar, consulte PR #3082. La versi\u00f3n 0.11.0 de TorchServe incluye la soluci\u00f3n para solucionar esta vulnerabilidad. Se recomienda a los usuarios que actualicen. No se conocen workarounds para esta vulnerabilidad."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-706"}]}], "references": [{"url": "https://github.com/pytorch/serve/pull/3082", "source": "security-advisories@github.com"}, {"url": "https://github.com/pytorch/serve/releases/tag/v0.11.0", "source": "security-advisories@github.com"}, {"url": "https://github.com/pytorch/serve/security/advisories/GHSA-wxcx-gg9c-fwp2", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1210 - Exploit Public-Facing Application", "comment": "CVE-2024-35198 - TorchServe's check on allowed_urls configuration can be bypassed, allowing an attacker to download and execute unauthorized models, which can be used to access sensitive information or disrupt normal operations. This technique is relevant as it enables an attacker to exploit the vulnerability and gain unauthorized access."}, {"techniqueID": "T1077 - WinRM Command Injection", "comment": "CVE-2024-35198 - An attacker can inject malicious commands into TorchServe's URL parameters, allowing them to execute arbitrary code on the server, which can be used to create a backdoor or introduce a stealthy implant. This technique is relevant as it demonstrates how the vulnerability can be exploited to gain system access."}, {"techniqueID": "T1078 - Windows Remote Desktop Command Injection", "comment": "CVE-2024-35198 - An attacker can inject malicious commands into TorchServe's URL parameters, allowing them to execute arbitrary code on the server, which can be used to create a backdoor or introduce a stealthy implant. This technique is relevant as it demonstrates how the vulnerability can be exploited to gain system access."}, {"techniqueID": "T1201 - Valid Accounts", "comment": "CVE-2024-35198 - An attacker can use the bypassed allowed_urls check to download and execute models, which can be used to access sensitive information or disrupt normal operations. This technique is relevant as it enables an attacker to use existing accounts to gain unauthorized access."}], "stix_bundle": {"objects": [{"id": "cve-2024-35198", "type": "vulnerability", "created_by_ref": "src-1", "modified": "2024-08-07T16:15:44.537", "name": "TorchServe Allowed_URLs Bypass CVE-2024-35198", "description": "CVE-2024-35198 is a vulnerability in TorchServe's allowed_urls configuration that can be bypassed, allowing an attacker to download and execute unauthorized models.", "severity": "CRITICAL", "cvssV31": {"vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}}, {"id": "T1210", "type": "attack-pattern", "name": "Exploit Public-Facing Application", "description": "Exploit Public-Facing Application", "kill_chain_phases": [{"id": "T118", "order": 1}]}, {"id": "T1077", "type": "attack-pattern", "name": "WinRM Command Injection", "description": "WinRM Command Injection", "kill_chain_phases": [{"id": "T118", "order": 1}]}, {"id": "T1078", "type": "attack-pattern", "name": "Windows Remote Desktop Command Injection", "description": "Windows Remote Desktop Command Injection", "kill_chain_phases": [{"id": "T118", "order": 1}]}, {"id": "T1201", "type": "attack-pattern", "name": "Valid Accounts", "description": "Valid Accounts", "kill_chain_phases": [{"id": "T118", "order": 1}]}, {"id": "src-1", "type": "source", "name": "Security Advisories"}], "relationships": [{"id": "cve-2024-35198-T1210", "type": "has_attack_pattern", "from_ref": "cve-2024-35198", "to_ref": "T1210"}, {"id": "cve-2024-35198-T1077", "type": "has_attack_pattern", "from_ref": "cve-2024-35198", "to_ref": "T1077"}, {"id": "cve-2024-35198-T1078", "type": "has_attack_pattern", "from_ref": "cve-2024-35198", "to_ref": "T1078"}, {"id": "cve-2024-35198-T1201", "type": "has_attack_pattern", "from_ref": "cve-2024-35198", "to_ref": "T1201"}, {"id": "T1210-src-1", "type": "created_from", "from_ref": "T1210", "to_ref": "src-1"}, {"id": "T1077-src-1", "type": "created_from", "from_ref": "T1077", "to_ref": "src-1"}, {"id": "T1078-src-1", "type": "created_from", "from_ref": "T1078", "to_ref": "src-1"}, {"id": "T1201-src-1", "type": "created_from", "from_ref": "T1201", "to_ref": "src-1"}]}, "technical_analysis": {"Introduction": "TorchServe's allowed_urls configuration can be bypassed, allowing an attacker to download and execute unauthorized models.", "Impact and Scope": "The vulnerability can be exploited to gain unauthorized access to sensitive information or disrupt normal operations.", "Related MITRE ATT&CK Techniques": "T1210 - Exploit Public-Facing Application, T1077 - WinRM Command Injection, T1078 - Windows Remote Desktop Command Injection, T1201 - Valid Accounts", "Technical Details": "The vulnerability is due to TorchServe's failure to properly validate the URL parameters, allowing an attacker to download and execute unauthorized models.", "Detection": "Detection of the vulnerability requires close monitoring of TorchServe's logs and network traffic.", "Mitigation": "The vulnerability can be mitigated by installing a patch that fixes the issue or by implementing a workaround that prevents unauthorized models from being downloaded and executed.", "Conclusion": "The vulnerability is critical and requires immediate attention. Installing a patch or implementing a workaround is necessary to mitigate the risk of exploitation."}, "executive_analysis": {"Overview": "TorchServe's allowed_urls configuration can be bypassed, allowing an attacker to download and execute unauthorized models.", "Business Impact": "The vulnerability can cause significant financial losses and reputational damage if exploited.", "Technical Impact": "The vulnerability can allow an attacker to gain unauthorized access to sensitive information or disrupt normal operations.", "Mitigation Strategies": "Implementing a patch or workaround to prevent unauthorized models from being downloaded and executed.", "Recommendations": "Install the patch or implement the workaround as soon as possible and monitor TorchServe logs and network traffic closely.", "Conclusions": "The vulnerability is critical and requires immediate attention. Installing a patch or implementing a workaround is necessary to mitigate the risk of exploitation."}}