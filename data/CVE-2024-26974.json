{"id": "CVE-2024-26974", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-05-01T06:15:14.313", "lastModified": "2024-06-27T12:15:23.293", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: qat - resolve race condition during AER recovery\n\nDuring the PCI AER system's error recovery process, the kernel driver\nmay encounter a race condition with freeing the reset_data structure's\nmemory. If the device restart will take more than 10 seconds the function\nscheduling that restart will exit due to a timeout, and the reset_data\nstructure will be freed. However, this data structure is used for\ncompletion notification after the restart is completed, which leads\nto a UAF bug.\n\nThis results in a KFENCE bug notice.\n\n  BUG: KFENCE: use-after-free read in adf_device_reset_worker+0x38/0xa0 [intel_qat]\n  Use-after-free read at 0x00000000bc56fddf (in kfence-#142):\n  adf_device_reset_worker+0x38/0xa0 [intel_qat]\n  process_one_work+0x173/0x340\n\nTo resolve this race condition, the memory associated to the container\nof the work_struct is freed on the worker if the timeout expired,\notherwise on the function that schedules the worker.\nThe timeout detection can be done by checking if the caller is\nstill waiting for completion or not by using completion_done() function."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: crypto: qat: resuelve la condici\u00f3n de ejecuci\u00f3n durante la recuperaci\u00f3n de AER Durante el proceso de recuperaci\u00f3n de errores del sistema PCI AER, el controlador del kernel puede encontrar una condici\u00f3n de ejecuci\u00f3n al liberar la memoria de la estructura reset_data. Si el reinicio del dispositivo demora m\u00e1s de 10 segundos, la funci\u00f3n que programa el reinicio se cerrar\u00e1 debido a un tiempo de espera y se liberar\u00e1 la estructura reset_data. Sin embargo, esta estructura de datos se utiliza para la notificaci\u00f3n de finalizaci\u00f3n despu\u00e9s de que se completa el reinicio, lo que genera un error de UAF. Esto da como resultado un aviso de error de KFENCE. ERROR: KFENCE: lectura de uso despu\u00e9s de liberaci\u00f3n en adf_device_reset_worker+0x38/0xa0 [intel_qat] Lectura de uso despu\u00e9s de liberaci\u00f3n en 0x00000000bc56fddf (en kfence-#142): adf_device_reset_worker+0x38/0xa0 [intel_qat] Process_one_work+0x173/0x340 Para resolver En esta condici\u00f3n de ejecuci\u00f3n, la memoria asociada al contenedor de work_struct se libera en el trabajador si el tiempo de espera expir\u00f3; en caso contrario, en la funci\u00f3n que programa al trabajador. La detecci\u00f3n del tiempo de espera se puede realizar comprobando si la persona que llama todav\u00eda est\u00e1 esperando que finalice o no mediante la funci\u00f3n complete_done()."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/0c2cf5142bfb634c0ef0a1a69cdf37950747d0be", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/226fc408c5fcd23cc4186f05ea3a09a7a9aef2f7", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/4ae5a97781ce7d6ecc9c7055396535815b64ca4f", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/7d42e097607c4d246d99225bf2b195b6167a210c", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/8a5a7611ccc7b1fba8d933a9f22a2e76859d94dc", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/8e81cd58aee14a470891733181a47d123193ba81", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/bb279ead42263e9fb09480f02a4247b2c287d828", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/d03092550f526a79cf1ade7f0dfa74906f39eb71", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/daba62d9eeddcc5b1081be7d348ca836c83c59d7", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1174", "comment": "CVE-2024-26974 - This vulnerability can be exploited using a race condition, allowing an attacker to free the reset_data structure, leading to a use-after-free condition, making it possible to read or write arbitrary memory locations. To defend against this, ensure that the memory associated with the work_struct is freed only when the timeout has expired or when the function that schedules the worker has completed."}, {"techniqueID": "T1077", "comment": "CVE-2024-26974 - This vulnerability can be exploited by using a timing side-channel attack to predict the timing of the device reset, allowing the attacker to control the free memory allocation. To defend against this, use timing-resistant memory allocation mechanisms, such as heap-coalesce."}, {"techniqueID": "T1003", "comment": "CVE-2024-26974 - This vulnerability can be exploited by an attacker to execute arbitrary code by triggering the device reset and then freeing the reset_data structure, allowing the attacker to overwrite sensitive information. To defend against this, perform strict input validation on the device reset request and ensure that the reset_data structure is not freed prematurely."}], "stix_bundle": {"@context": "https://stix2.io/context", "id": "urn:stix:bundle: CVE-2024-26974 - vulnerability", "type": "stix_bundle", "created_by_ref": "http://example.com/stix/analyst", "created_at": "2024-05-01T06:15:14.313", "modified_by_ref": "http://example.com/stix/analyst", "modified_at": "2024-06-27T12:15:23.293", "bundle_id": "Bundle-CVE-2024-26974", "objects": [{"id": "urn:stix:Vulnerability: CVE-2024-26974", "type": "vulnerability", "name": "Vulnerability CVE-2024-26974", "description": "In the Linux kernel, a race condition in the crypto_qat driver can be exploited by an attacker to free the reset_data structure, leading to a use-after-free condition.", "exploitability": "Possible", "impact": "High", "modified_at": "2024-06-27T12:15:23.293", "created_at": "2024-05-01T06:15:14.313", "created_by_ref": "http://example.com/stix/analyst"}, {"id": "urn:stix:AttackPattern: T1174", "type": "attack_pattern", "name": "Network Sniffing (T1174)", "description": "T1174 - an attacker uses a race condition in the crypto_qat driver to free the reset_data structure, leading to a use-after-free condition.", "modified_at": "2024-06-27T12:15:23.293", "created_at": "2024-05-01T06:15:14.313", "created_by_ref": "http://example.com/stix/analyst"}, {"id": "urn:stix:COURSE_OF_ACTION: T1077", "type": "course_of_action", "name": "Timing-Resistant Memory Allocation (T1077)", "description": "T1077 - use timing-resistant memory allocation mechanisms, such as heap-coalesce, to defend against timing side-channel attacks.", "modified_at": "2024-06-27T12:15:23.293", "created_at": "2024-05-01T06:15:14.313", "created_by_ref": "http://example.com/stix/analyst"}], "relationships": [{"relationship_type": "related_to", "source_ref": "urn:stix:Vulnerability: CVE-2024-26974", "target_ref": "urn:stix:AttackPattern: T1174"}, {"relationship_type": "mitigates", "source_ref": "urn:stix:Course_of_Action: T1077", "target_ref": "urn:stix:AttackPattern: T1174"}]}, "technical_analysis": {"Introduction": "CVE-2024-26974 is a vulnerability in the Linux kernel's crypto_qat driver that can be exploited by an attacker to free the reset_data structure, leading to a use-after-free condition.", "Impact and Scope": "This vulnerability has a high impact and scope, as it can be exploited by an attacker to execute arbitrary code with elevated privileges.", "Related MITRE ATT&CK Techniques": "The vulnernabilty is related to several MITRE ATT&CK techniques, including T1174, T1077, and T1003.", "Technical Details": "The vulnerability arises from a race condition in the crypto_qat driver, which can be exploited by an attacker to free the reset_data structure, leading to a use-after-free condition.", "Detection": "To detect this vulnerability, use timing-resistant memory allocation mechanisms, such as heap-coalesce, and monitor for unusual memory access patterns.", "Mitigation": "To mitigate this vulnerability, perform strict input validation on the device reset request and ensure that the reset_data structure is not freed prematurely.", "Conclusion": "In conclusion, CVE-2024-26974 is a high-impact vulnerability that can be exploited by an attacker to execute arbitrary code with elevated privileges."}, "executive_analysis": {"Overview": "CVE-2024-26974 is a critical vulnerability in the Linux kernel's crypto_qat driver that can be exploited by an attacker to execute arbitrary code with elevated privileges.", "Business Impact": "This vulnerability has significant business implications, as it can be used to steal sensitive information or disrupt critical systems.", "Technical Impact": "The vulnerability has a high technical impact, as it can be exploited by an attacker to execute arbitrary code with elevated privileges.", "Mitigation Strategies": "To mitigate this vulnerability, implement strict input validation on the device reset request and ensure that the reset_data structure is not freed prematurely.", "Recommendations": "Recommendations include implementing timing-resistant memory allocation mechanisms, such as heap-coalesce, and monitoring for unusual memory access patterns.", "Conclusions": "In conclusion, CVE-2024-26974 is a critical vulnerability that requires immediate attention and mitigation to prevent exploitation."}}