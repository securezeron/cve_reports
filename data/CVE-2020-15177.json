{"id": "CVE-2020-15177", "sourceIdentifier": "security-advisories@github.com", "published": "2020-10-07T19:15:12.797", "lastModified": "2020-10-16T15:39:52.237", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "In GLPI before version 9.5.2, the `install/install.php` endpoint insecurely stores user input into the database as `url_base` and `url_base_api`. These settings are referenced throughout the application and allow for vulnerabilities like Cross-Site Scripting and Insecure Redirection Since authentication is not required to perform these changes,anyone could point these fields at malicious websites or form input in a way to trigger XSS. Leveraging JavaScript it's possible to steal cookies, perform actions as the user, etc. The issue is patched in version 9.5.2."}, {"lang": "es", "value": "En GLPI versiones anteriores a 9.5.2, el endpoint \"install/install.php\" almacena de forma no segura la entrada del usuario en la base de datos como \"url_base\" y \"url_base_api\".&#xa0;Se hace referencia a estas configuraciones en toda la aplicaci\u00f3n y permiten vulnerabilidades como Cross-Site Scripting y Redireccionamiento No Seguro. Dado que no se requiere autenticaci\u00f3n para realizar estos cambios, cualquiera podr\u00eda apuntar estos campos a sitios web maliciosos o ingresar datos de formulario para desencadenar un XSS.&#xa0;Aprovechando JavaScript es posible robar cookies, realizar acciones como el usuario, etc. El problema est\u00e1 parcheado en la versi\u00f3n 9.5.2"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 8.0, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.6, "impactScore": 5.8}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:glpi-project:glpi:*:*:*:*:*:*:*:*", "versionEndExcluding": "9.5.2", "matchCriteriaId": "4FDDC1DB-791A-495C-84D1-110B95394022"}]}]}], "references": [{"url": "https://github.com/glpi-project/glpi/commit/a8109d4ee970a222faf48cf48fae2d2f06465796", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/glpi-project/glpi/security/advisories/GHSA-prvh-9m4h-4m79", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1112", "comment": "CVE-2020-15177 - This is a classic example of a stored cross-site scripting (XSS) vulnerability, where attacker-controlled input is injected into a database and later executed as JavaScript by the application. This can lead to a wide range of attacks, including stealing cookies, performing actions as the user, and more. To defend against this, implement input validation and sanitization, ensure that all user input is properly escaped before being stored or displayed, and consider implementing Content Security Policy (CSP) to restrict the types of scripts that can be executed on the page."}, {"techniqueID": "T1591", "comment": "CVE-2020-15177 - Another way to defend against this is to leverage the application's configuration settings to restrict the types of URLs that can be stored or displayed. For example, restrict the URLs that can be stored in the url_base and url_base_api settings or prevent users from entering malicious URLs in the affected fields."}, {"techniqueID": "T1190", "comment": "CVE-2020-15177 - Finally, consider implementing a Web Application Firewall (WAF) to detect and prevent malicious traffic from reaching the application. This can help block suspicious requests and prevent attackers from exploiting the vulnerability."}], "stix_bundle": "/* TO DO: Generate a valid STIX 2.1 bundle expressing all the related techniques, risks and defense strategies for this CVE */", "technical_analysis": {"Introduction": "CVE-2020-15177 is a stored cross-site scripting (XSS) vulnerability in GLPI before version 9.5.2, where attacker-controlled input is injected into a database and later executed as JavaScript by the application.", "Impact and Scope": "This vulnerability has a CVSS score of 6.1 (MEDIUM) and can lead to a wide range of attacks, including stealing cookies, performing actions as the user, and more.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques for this vulnerability are T1112, T1591, and T1190.", "Technical Details": "The vulnerability occurs when the installation scripts for GLPI do not properly sanitize user input, allowing an attacker to inject malicious code into the database.", "Detection": "This vulnerability can be detected by monitoring for suspicious network traffic, such as requests to the affected endpoints or unusual patterns of JavaScript execution.", "Mitigation": "To mitigate this vulnerability, update to a version of GLPI after 9.5.2, restrict the types of URLs that can be stored or displayed, and consider implementing a Web Application Firewall (WAF) or Content Security Policy (CSP) to restrict the types of scripts that can be executed on the page.", "Conclusion": "CVE-2020-15177 is a known vulnerability in GLPI that can be exploited by attackers to steal cookies, perform actions as the user, and more. To protect against this, it is essential to keep GLPI up to date, validate and sanitize user input, and consider implementing additional security measures such as WAFs or CSPs."}, "executive_analysis": {"Overview": "CVE-2020-15177 is a serious vulnerability in GLPI that can have significant business and technical impacts.", "Business Impact": "This vulnerability can allow attackers to steal sensitive information, disrupt business operations, and compromise the security of company data.", "Technical Impact": "The vulnerability occurs in the database storage mechanism of GLPI, allowing malicious code to be injected and executed, which can have significant technical implications for the security and integrity of the application.", "Mitigation Strategies": "To mitigate this vulnerability, update to a version of GLPI after 9.5.2, restrict the types of URLs that can be stored or displayed, and consider implementing a Web Application Firewall (WAF) or Content Security Policy (CSP) to restrict the types of scripts that can be executed on the page.", "Recommendations": "Executives should prioritize the update to a secure version of GLPI, implement additional security measures as needed, and conduct regular security audits and assessments to identify potential vulnerabilities.", "Conclusions": "CVE-2020-15177 is a critical vulnerability that requires immediate attention and action to protect the security and integrity of GLPI and the organization."}}