{"id": "CVE-2020-5229", "sourceIdentifier": "security-advisories@github.com", "published": "2020-01-30T20:15:10.420", "lastModified": "2020-02-05T20:52:42.963", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Opencast before 8.1 stores passwords using the rather outdated and cryptographically insecure MD5 hash algorithm. Furthermore, the hashes are salted using the username instead of a random salt, causing hashes for users with the same username and password to collide which is problematic especially for popular users like the default `admin` user. This essentially means that for an attacker, it might be feasible to reconstruct a user's password given access to these hashes. Note that attackers needing access to the hashes means that they must gain access to the database in which these are stored first to be able to start cracking the passwords. The problem is addressed in Opencast 8.1 which now uses the modern and much stronger bcrypt password hashing algorithm for storing passwords. Note, that old hashes remain MD5 until the password is updated. For a list of users whose password hashes are stored using MD5, take a look at the `/user-utils/users/md5.json` REST endpoint."}, {"lang": "es", "value": "Opencast versiones anteriores a 8.1, almacena contrase\u00f1as usando el algoritmo hash MD5 bastante antiguo y criptogr\u00e1ficamente no seguro. Adem\u00e1s, los hash son salados utilizando el nombre de usuario en lugar de una sal aleatoria, causando que los hash para usuarios con el mismo nombre de usuario y contrase\u00f1a choquen, lo que es problem\u00e1tico, especialmente para usuarios populares tales como el usuario predeterminado \"admin\". Esto esencialmente significa que para un atacante, podr\u00eda ser factible reconstruir la contrase\u00f1a de un usuario dado el acceso a estos hashes. Considere que los atacantes al necesitar acceso a los hashes significa que deben obtener acceso a la base de datos en la que se almacenan primero, para que sean capaces de descifrar las contrase\u00f1as. El problema es abordado en Opencast versi\u00f3n 8.1, que ahora utiliza el algoritmo de hash de contrase\u00f1a bcrypt moderno y mucho m\u00e1s fuerte para almacenar contrase\u00f1as. Tome en cuenta que los hashes antiguos permanecen MD5 hasta que se actualiza la contrase\u00f1a. Para obtener una lista de los usuarios cuyos hash de contrase\u00f1a son almacenados con MD5, visualice al endpoint REST \"/user-utils/users/md5.json\"."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.2}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.7, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.3, "impactScore": 5.8}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-327"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-327"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:apereo:opencast:*:*:*:*:*:*:*:*", "versionEndExcluding": "8.1", "matchCriteriaId": "11673AEB-4E7B-43BF-98BA-9031E47794ED"}]}]}], "references": [{"url": "https://github.com/opencast/opencast/commit/32bfbe5f78e214e2d589f92050228b91d704758e", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/opencast/opencast/security/advisories/GHSA-h362-m8f2-5x7c", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1133: Debugging to Command", "comment": "CVE-2020-5229 - An attacker could debug a vulnerable system and use the resulting information to achieve command execution. This technique could be used to extract system information, install backdoors or malware, or to maintain persistence on the system."}, {"techniqueID": "T1068: Expoit Public-Facing Application", "comment": "CVE-2020-5229 - The vulnerability in Opencast 8.1 and prior versions allows an attacker to access the system's password hashes, which can be used to gain access to the system. This technique could be used to exploit the vulnerability and obtain elevated privileges."}, {"techniqueID": "T1056: Input Validation", "comment": "CVE-2020-5229 - An attacker could use input validation techniques to manipulate the system and gain access to sensitive information or execute malicious code."}], "stix_bundle": {"objects": [{"id": "vulnerability-cve-2020-5229", "type": "vulnerability", "description": "Opencast before 8.1 stores passwords using the rather outdated and cryptographically insecure MD5 hash algorithm.", "object_version": "1.0"}, {"id": "attack-pattern-debugging-to-command", "type": "attack-pattern", "description": "Debugging to command enables an attacker to execute arbitrary commands on a system.", "object_version": "1.0"}, {"id": "attack-pattern-exploit-public-facing-application", "type": "attack-pattern", "description": "Exploit public-facing application enables an attacker to access a system's password hashes and gain access to the system.", "object_version": "1.0"}, {"id": "mitigation-defend-against-cve-2020-5229", "type": "course-of-action", "description": "Defend against CVE-2020-5229 by validating input and using secure password hashing algorithms.", "object_version": "1.0"}, {"id": "relationship-debugging-to-command-is-used-by-exploit-public-facing-application", "type": "relationship", "relationship_type": "Used By", "from": "attack-pattern-debugging-to-command", "to": "attack-pattern-exploit-public-facing-application"}, {"id": "relationship-exploit-public-facing-application-is-associated-with-vulnerability-cve-2020-5229", "type": "relationship", "relationship_type": "Associated With", "from": "attack-pattern-exploit-public-facing-application", "to": "vulnerability-cve-2020-5229"}, {"id": "relationship-mitigation-defend-against-cve-2020-5229-is-a-countermeasures-for-vulnerability-cve-2020-5229", "type": "relationship", "relationship_type": "Countermeasures For", "from": "course-of-action-mitigation-defend-against-cve-2020-5229", "to": "vulnerability-cve-2020-5229"}], " relationships": [{"id": "relationship-debugging-to-command-is-used-by-exploit-public-facing-application", "type": "relationship", "relationship_type": "Used By", "from": "attack-pattern-debugging-to-command", "to": "attack-pattern-exploit-public-facing-application"}, {"id": "relationship-exploit-public-facing-application-is-associated-with-vulnerability-cve-2020-5229", "type": "relationship", "relationship_type": "Associated With", "from": "attack-pattern-exploit-public-facing-application", "to": "vulnerability-cve-2020-5229"}, {"id": "relationship-mitigation-defend-against-cve-2020-5229-is-a-countermeasures-for-vulnerability-cve-2020-5229", "type": "relationship", "relationship_type": "Countermeasures For", "from": "course-of-action-mitigation-defend-against-cve-2020-5229", "to": "vulnerability-cve-2020-5229"}]}, "technical_analysis": {"Introduction": "CVE-2020-5229 is a vulnerability in Opencast before 8.1 that allows an attacker to access the system's password hashes.", "Impact and Scope": "The vulnerability has a CVSS score of 8.1 and allows an attacker to gain access to the system and potentially execute malicious code.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to the MITRE ATT&CK techniques T1133: Debugging to Command, T1068: Exploit Public-Facing Application, and T1056: Input Validation.", "Technical Details": "The vulnerability is caused by the use of the MD5 hash algorithm to store passwords, which is insecure and can be exploited by an attacker.", "Detection": "The vulnerability can be detected by monitoring system logs for suspicious activity and by conducting regular security audits.", "Mitigation": "The vulnerability can be mitigated by validating input and using secure password hashing algorithms.", "Conclusion": "In conclusion, CVE-2020-5229 is a serious vulnerability that should be addressed promptly to prevent exploitation."}, "executive_analysis": {"Overview": "CVE-2020-5229 is a vulnerability in Opencast before 8.1 that allows an attacker to access the system's password hashes.", "Business Impact": "The vulnerability has significant business implications, including potential data breaches and unauthorized access to sensitive information.", "Technical Impact": "The vulnerability has significant technical implications, including potential exploitation of sensitive data and unauthorized access to system resources.", "Mitigation Strategies": "The vulnerability can be mitigated by validating input and using secure password hashing algorithms.", "Recommendations": "We recommend that Opencast users update to version 8.1 or later to address the vulnerability.", "Conclusions": "In conclusion, CVE-2020-5229 is a serious vulnerability that should be addressed promptly to prevent exploitation."}}