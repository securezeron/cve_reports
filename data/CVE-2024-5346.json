{"id": "CVE-2024-5346", "sourceIdentifier": "security@wordfence.com", "published": "2024-06-22T02:15:45.340", "lastModified": "2024-06-24T20:00:59.240", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Flatsome theme for WordPress is vulnerable to Stored Cross-Site Scripting via the UX Countdown, Video Button, UX Video, UX Slider, UX Sidebar, and UX Payment Icons shortcodes in all versions up to, and including, 3.18.7 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El tema Flatsome para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s de los c\u00f3digos cortos de cuenta regresiva de UX, bot\u00f3n de video, video de UX, control deslizante de UX, barra lateral de UX e \u00edconos de pago de UX en todas las versiones hasta la 3.18.7 incluida debido a insuficiencia sanitizaci\u00f3n de entrada y escape de salida en atributos proporcionados por el usuario. Esto hace posible que atacantes autenticados, con acceso de nivel de colaborador y superior, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:uxthemes:flatsome:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "3.19.0", "matchCriteriaId": "2D056EF3-206D-4DF8-99A0-52E514872751"}]}]}], "references": [{"url": "https://themeforest.net/item/flatsome-multipurpose-responsive-woocommerce-theme/5484319#item-description__change-log", "source": "security@wordfence.com", "tags": ["Release Notes"]}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/11d4c028-94c1-4b78-92f8-0f3303725651?source=cve", "source": "security@wordfence.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-5346 - Stored Cross-Site Scripting vulnerability allows authenticated attackers to inject arbitrary web scripts, using contributor-level access or above. This is relevant as it can be exploited to steal user data, perform actions on behalf of users, and potentially gain unauthorized access to the system."}, {"techniqueID": "T1048", "comment": "CVE-2024-5346 - Insufficient input validation and sanitization in the UX Countdown, Video Button, UX Video, UX Slider, UX Sidebar, and UX Payment Icons shortcodes can be exploited to inject malicious scripts, leading to code injection attacks. This is relevant as it can be used to steal user data, perform actions on behalf of users, and potentially gain unauthorized access to the system."}, {"techniqueID": "T1018", "comment": "CVE-2024-5346 - Deficient output encoding and escaping in the UX Countdown, Video Button, UX Video, UX Slider, UX Sidebar, and UX Payment Icons shortcodes allows attackers to inject malicious scripts, leading to cross-site scripting attacks. This is relevant as it can be used to steal user data, perform actions on behalf of users, and potentially gain unauthorized access to the system."}], "technical_analysis": {"Introduction": "The Flatsome theme for WordPress is vulnerable to Stored Cross-Site Scripting attacks due to insufficient input sanitization and output escaping on user-supplied attributes.", "Impact and Scope": "The vulnerability affects all versions of Flatsome up to and including version 3.18.7, with a CVSSv3.1 base score of 5.4 (MEDIUM) and a CVSSv3.1 base score of 6.4 (MEDIUM) according to Wordfence and NVD, respectively.", "Related MITRE ATT&CK Techniques": "The vulnerabilities can be exploited using stored XSS techniques (T1190) to inject malicious scripts, and can be mitigated by ensuring proper input validation and sanitization (T1048) and output encoding and escaping (T1018).", "Technical Details": "The vulnerability is caused by a failure to properly sanitize and encode user-supplied attributes in the UX Countdown, Video Button, UX Video, UX Slider, UX Sidebar, and UX Payment Icons shortcodes, allowing attackers to inject malicious scripts into the code.", "Detection": "Detection can be performed using regex-based detection and log analysis.", "Mitigation": "Mitigation can be achieved by ensuring proper input validation and sanitization, output encoding and escaping, and implementing Content Security Policy (CSP) and Secure Headers to prevent XSS attacks.", "Conclusion": "The vulnerability poses a significant risk to users of the vulnerable theme, and timely mitigation is recommended to prevent exploitation."}, "executive_analysis": {"Overview": "The Flatsome theme for WordPress has been discovered to contain a Stored Cross-Site Scripting vulnerability, which allows authenticated attackers to inject malicious scripts.", "Business Impact": "The vulnerability poses a significant risk to users of the vulnerable theme, including loss of user data, unauthorized access to systems, and potential business disruption.", "Technical Impact": "The vulnerability allows attackers to inject malicious scripts, leading to the potential for code injection attacks, data exfiltration, and unauthorized access to systems.", "Mitigation Strategies": "Recommendations for mitigation include ensuring proper input validation and sanitization, output encoding and escaping, implementing Content Security Policy (CSP) and Secure Headers, and performing regular security audits and penetration testing.", "Recommendations": "Recommendations for executives include prioritizing timely mitigation, communicating the risk to stakeholders, and ensuring adequate technical expertise is available for remediation.", "Conclusions": "In conclusion, the vulnerability poses a significant risk to users of the vulnerable theme, and prompt mitigation is recommended to prevent exploitation and minimize potential impact."}}