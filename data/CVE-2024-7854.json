{"id": "CVE-2024-7854", "sourceIdentifier": "security@wordfence.com", "published": "2024-08-21T06:15:13.423", "lastModified": "2024-08-21T12:30:33.697", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Woo Inquiry plugin for WordPress is vulnerable to SQL Injection in all versions up to, and including, 0.1 due to insufficient escaping on the user supplied parameter 'dbid' and lack of sufficient preparation on the existing SQL query. This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."}, {"lang": "es", "value": "El complemento Woo Inquiry para WordPress es vulnerable a la inyecci\u00f3n SQL en todas las versiones hasta la 0.1 incluida debido a un escape insuficiente en el par\u00e1metro 'dbid' proporcionado por el usuario y a la falta de preparaci\u00f3n suficiente en la consulta SQL existente. Esto hace posible que atacantes no autenticados agreguen consultas SQL adicionales a consultas ya existentes que pueden usarse para extraer informaci\u00f3n confidencial de la base de datos."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 10.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 6.0}]}, "weaknesses": [{"source": "security@wordfence.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-89"}]}], "references": [{"url": "https://plugins.trac.wordpress.org/browser/woo-inquiry/trunk/includes/functions.php?rev=2088873#L307", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/312a6601-c914-4661-82ff-6f8bac849442?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1027", "comment": "CVE-2024-7854 - This SQL injection vulnerability allows unauthenticated attackers to extract sensitive information from the database, making it a critical technique to defend against."}, {"techniqueID": "T1047", "comment": "CVE-2024-7854 - The vulnerability in Woo Inquiry plugin for WordPress makes it possible for attackers to inject arbitrary SQL code, which can be used to extract sensitive data, making it a potential entry point for attackers."}, {"techniqueID": "T1190", "comment": "CVE-2024-7854 - The lack of proper error handling and data validation in the Woo Inquiry plugin for WordPress can be exploited to inject arbitrary SQL code, making it a high-priority technique to defend against."}, {"techniqueID": "T1056", "comment": "CVE-2024-7854 - The vulnerability in Woo Inquiry plugin for WordPress can be used to extract sensitive information from the database, making it a potential data exfiltration technique."}], "stix_bundle": {"objects": [{"id": "vulnerability", "type": "vulnerability", "vlaues": {"name": "Woo Inquiry Plugin SQL Injection Vulnerability", "description": "The Woo Inquiry plugin for WordPress is vulnerable to SQL Injection due to insufficient escaping on the user-supplied parameter 'dbid' and lack of sufficient preparation on the existing SQL query."}}, {"id": " attack-pattern", "type": "attack-pattern", "values": {"name": "SQL Injection in Woo Inquiry Plugin", "description": "SQL Injection attack pattern that injects arbitrary SQL code into the database query to extract sensitive information."}}, {"id": "campaign", "type": "campaign", "values": {"name": "Woo Inquiry Plugin SQL Injection Campaign", "description": "Campaign that targets the Woo Inquiry plugin for WordPress and uses the SQL Injection vulnerability to extract sensitive information from the database."}}, {"id": "incident", "type": "incident", "values": {"name": "Woo Inquiry Plugin SQL Injection Incident", "description": "Incident that occurred as a result of the SQL Injection attack on the Woo Inquiry plugin for WordPress, resulting in the theft of sensitive information."}}, {"id": "indicator", "type": "indicator", "values": {"name": "Woo Inquiry Plugin SQL Injection Indicator", "description": "Indicator that detects the presence of SQL Injection traffic on the Woo Inquiry plugin for WordPress, indicating a potential attack."}}], "relationships": [{"relationship": "associated-with", "objects": [{"id": "vulnerability", "type": "vulnerability"}]}, {"relationship": "uses", "objects": [{"id": "attack-pattern", "type": "attack-pattern"}]}, {"relationship": "targeted-by", "objects": [{"id": "campaign", "type": "campaign"}]}, {"relationship": "results-in", "objects": [{"id": "incident", "type": "incident"}]}, {"relationship": "indicates", "objects": [{"id": "indicator", "type": "indicator"}]}]}, "technical_analysis": {"Introduction": "The Woo Inquiry plugin for WordPress is vulnerable to SQL Injection due to insufficient escaping on the user-supplied parameter 'dbid' and lack of sufficient preparation on the existing SQL query.", "Impact and Scope": "The vulnerability can be exploited by unauthenticated attackers to extract sensitive information from the database, making it a critical threat.", "Related MITRE ATT&CK Techniques": "T1027, T1047, T1190, T1056", "Technical Details": "The vulnerability occurs due to the lack of proper error handling and data validation in the Woo Inquiry plugin for WordPress.", "Detection": "Detection of the vulnerability can be done by monitoring for SQL Injection traffic and analyzing the database queries.", "Mitigation": "Mitigation strategies include updating the Woo Inquiry plugin, restricting database access, and implementing SQL Injection protection measures.", "Conclusion": "The SQL Injection vulnerability in Woo Inquiry plugin for WordPress is a critical threat that requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "The Woo Inquiry plugin for WordPress is vulnerable to SQL Injection due to insufficient escaping on the user-supplied parameter 'dbid' and lack of sufficient preparation on the existing SQL query.", "Business Impact": "The vulnerability can result in the theft of sensitive information, including customer data, financial information, and intellectual property.", "Technical Impact": "The vulnerability can be exploited by unauthenticated attackers to extract sensitive information from the database, making it a critical threat.", "Mitigation Strategies": "Updating the Woo Inquiry plugin, restricting database access, and implementing SQL Injection protection measures.", "Recommendations": "Recommendations for executives include prioritizing the mitigation of the vulnerability, conducting regular security assessments, and implementing security awareness training for employees.", "Conclusions": "The SQL Injection vulnerability in Woo Inquiry plugin for WordPress is a critical threat that requires immediate attention and mitigation."}}