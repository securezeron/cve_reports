{"id": "CVE-2024-24784", "sourceIdentifier": "security@golang.org", "published": "2024-03-05T23:15:07.733", "lastModified": "2024-08-05T21:35:04.457", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers."}, {"lang": "es", "value": "La funci\u00f3n ParseAddressList controla incorrectamente los comentarios (texto entre par\u00e9ntesis) dentro de los nombres para mostrar. Dado que se trata de una desalineaci\u00f3n con los analizadores de direcciones conformes, puede dar lugar a que los programas que utilizan diferentes analizadores tomen diferentes decisiones de confianza."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "references": [{"url": "http://www.openwall.com/lists/oss-security/2024/03/08/4", "source": "security@golang.org"}, {"url": "https://go.dev/cl/555596", "source": "security@golang.org"}, {"url": "https://go.dev/issue/65083", "source": "security@golang.org"}, {"url": "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg", "source": "security@golang.org"}, {"url": "https://pkg.go.dev/vuln/GO-2024-2609", "source": "security@golang.org"}, {"url": "https://security.netapp.com/advisory/ntap-20240329-0007/", "source": "security@golang.org"}], "techniques": [{"techniqueID": "T1190: Exploit Public-Facing Application", "comment": "CVE-2024-24784 - By exploiting this vulnerability, an attacker can execute code with high integrity, which is a significant threat. Defending against this requires implementing robust input validation and sanitization procedures, as well as monitoring network traffic for suspicious activity."}, {"techniqueID": "T1086: File and Directory Discovery", "comment": "This technique is relevant as it helps in identifying the potential impact of the vulnerability, including the files and directories that could be accessed or modified."}, {"techniqueID": "T1027: Obfuscated Files or Code", "comment": "The vulnerability's remediation requires identifying and removing any obfuscated files or code that could be used to evade detection or implement malicious activity."}, {"techniqueID": "T1047: Scheduled Transfer", "comment": "An attacker could use this vulnerability to schedule a transfer of malicious files or code, making it essential to monitor and restrict suspicious file transfers."}, {"techniqueID": "T1553: Sensitive Data Exposure", "comment": "By exploiting this vulnerability, an attacker could potentially access sensitive data, making it crucial to implement robust access controls and encryption."}], "stix_bundle": {"bundle": {"_objects": [{"type": "incident", "created_by_ref": "reporter", "started": "2024-08-05T21:35:04.457Z", "ended": "2024-08-05T21:35:04.457Z", "status": "indeterminate", "related_object": {"type": "vulnerability", "idref": "CVE-2024-24784", "name": "CVE-2024-24784", "description": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names.", "product_versions": ["Go 1.20.0"]}, "mitigation": {"type": "course-of-action", "id": "COA-1", "title": "Update Go to version 1.21.0", "description": "Apply the latest security patches and ensure that the system is running with the latest version of Go."}, "detection": {"type": "note", "id": "DET-1", "title": "Monitor network traffic for suspicious activity", "text": "Regularly monitor network traffic for signs of suspicious activity, including unusual file transfers or login attempts."}}, {"type": "note", "id": "DEF-1", "title": "Implement robust input validation", "text": "Implement robust input validation and sanitization procedures to prevent attacks on the system."}]}}, "technical_analysis": {"Introduction": "CVE-2024-24784 is a vulnerability in the Go language's ParseAddressList function that can be exploited to execute code with high integrity.", "Impact and Scope": "This vulnerability has a CVSS score of 7.5 with a version of 3.1. The attack vector is network-based, and the confidentiality impact is NONE, the integrity impact is HIGH, and the availability impact is NONE.", "Related MITRE ATT&CK Techniques": "T1190: Exploit Public-Facing Application, T1086: File and Directory Discovery, T1027: Obfuscated Files or Code, T1047: Scheduled Transfer, T1553: Sensitive Data Exposure", "Technical Details": "The vulnerability occurs when the ParseAddressList function incorrectly handles comments (text within parentheses) within display names. This can result in different trust decisions being made by programs using different parsers.", "Detection": "Monitor network traffic for suspicious activity, monitor logs for unusual file transfers or login attempts, and implement robust input validation and sanitization procedures.", "Mitigation": "Update Go to the latest version, implement robust input validation and sanitization procedures, restrict file transfers, and monitor network traffic for suspicious activity.", "Conclusion": "This vulnerability requires immediate attention and remediation to prevent attacks on the system."}, "executive_analysis": {"Overview": "CVE-2024-24784 is a critical vulnerability in the Go language's ParseAddressList function that can be exploited to execute code with high integrity.", "Business Impact": "This vulnerability has significant business implications, including potential data breaches, system compromise, and reputational damage.", "Technical Impact": "This vulnerability has significant technical implications, including the potential for elevating privileges, data exfiltration, and system compromise.", "Mitigation Strategies": "Update Go to the latest version, implement robust input validation and sanitization procedures, restrict file transfers, and monitor network traffic for suspicious activity.", "Recommendations": "Executive management should prioritize the remediation of this vulnerability, allocate resources to implement mitigation strategies, and conduct regular security testing and monitoring.", "Conclusions": "This vulnerability requires immediate attention and remediation to prevent attacks on the system. Executive management should prioritize the remediation of this vulnerability and allocate resources accordingly."}}