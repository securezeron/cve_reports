{"id": "CVE-2024-3563", "sourceIdentifier": "security@wordfence.com", "published": "2024-07-09T09:15:04.670", "lastModified": "2024-08-07T12:44:17.833", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Genesis Blocks plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Sharing block in all versions up to, and including, 3.1.3 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": " El complemento Genesis Blocks para WordPress es vulnerable a las Cross Site Scripting almacenado a trav\u00e9s del bloque Compartir del complemento en todas las versiones hasta la 3.1.3 incluida debido a una sanitizaci\u00f3n de entrada y a un escape de salida insuficientes en los atributos proporcionados por el usuario. Esto hace posible que atacantes autenticados, con acceso de nivel de colaborador y superior, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wpengine:genesis_blocks:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "3.1.4", "matchCriteriaId": "89F149DB-976A-45E4-B024-31932F2714D4"}]}]}], "references": [{"url": "https://plugins.trac.wordpress.org/browser/genesis-blocks/trunk/src/blocks/block-sharing/index.php#L268", "source": "security@wordfence.com", "tags": ["Patch"]}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/ef21fae3-65ef-43e8-9792-619dfc4dfda8?source=cve", "source": "security@wordfence.com", "tags": ["Patch", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059.006", "comment": "CVE-2024-3563 - This Cross-Site Scripting (XSS) vulnerability allows attackers to execute arbitrary web scripts, posing a medium severity risk. This technique is relevant as it demonstrates a coding flaw that can be exploited by attackers."}, {"techniqueID": "T1190", "comment": "CVE-2024-3563 - This techniques allows attackers to inject arbitrary web scripts, further demonstrating the severity of this Cross-Site Scripting vulnerability. Defending against this technique involves implementing strict input validation and sanitization."}, {"techniqueID": "T1062", "comment": "CVE-2024-3563 - This technique involves using user-supplied attributes to inject arbitrary web scripts, making it essential to sanitise and escape any user-supplied input to prevent Cross-Site Scripting attacks."}, {"techniqueID": "T1560.001", "comment": "CVE-2024-3563 - This technique involves exploiting insufficient input validation and sanitization, allowing attackers to inject arbitrary web scripts. Defending against this technique involves implementing robust input validation and sanitization and monitoring web traffic for suspicious activity."}, {"techniqueID": "T1194", "comment": "CVE-2024-3563 - This technique involves using stored Cross-Site Scripting to inject arbitrary web scripts, allowing attackers to execute malicious code after a user interacts with the injected page. Defending against this technique involves implementing robust input validation and sanitization and monitoring web traffic for suspicious activity."}], "stix_bundle": {"stix_objects": [{"id": "indestructible- Vulnerability-Sighting", "type": "vulnerability-sighting", "created_by_ref": "https://opencctv-dev-nortonrose.corp.nortonrose.com/oval/cve", "modified": "2024-08-07T12:44:17.833", "published": "2024-07-09T09:15:04.670", "vulnerability_refs": [{"href": "https://nvd.nist.gov/vuln/detail/CVE-2024-3563", "object_reference": "https://nvd.nist.gov/vuln/detail/CVE-2024-3563"}]}, {"id": "Stored-Cross-Site-Scripting-Technique", "type": "intrusion-set", "created_by_ref": "https://opencctv-dev-nortonrose.corp.nortonrose.com/oval/cve", "modified": "2024-08-07T12:44:17.833", "published": "2024-07-09T09:15:04.670", "techniques_refs": [{"href": "https://attack.mitre.org/techniques/T1059", "object_reference": "https://attack.mitre.org/techniques/T1059"}]}, {"id": "genesis-blocks-stored-xss-bug", "type": " incident", "created_by_ref": "https://opencctv-dev-nortonrose.corp.nortonrose.com/oval/cve", "modified": "2024-08-07T12:44:17.833", "published": "2024-07-09T09:15:04.670", "affected_entities": [{"href": "https://nvd.nist.gov/vuln/detail/CVE-2024-3563", "object_reference": "https://nvd.nist.gov/vuln/detail/CVE-2024-3563"}], "mitigated_by_refs": [{"href": "https://www.wordfence.com/threat-intel/vulnerabilities/id/ef21fae3-65ef-43e8-9792-619dfc4dfda8?source=cve", "object_reference": "https://www.wordfence.com/threat-intel/vulnerabilities/id/ef21fae3-65ef-43e8-9792-619dfc4dfda8?source=cve"}]}], "Relationships": {"vulnerability_sighting_involves": {"type": "vulnerability", "idref": "https://nvd.nist.gov/vuln/detail/CVE-2024-3563"}, "technique_linked_to": {"type": "technique", "idref": "https://attack.mitre.org/techniques/T1059"}, "incident_was_about": {"type": "vulnerability", "idref": "https://nvd.nist.gov/vuln/detail/CVE-2024-3563"}, "incident_was_caused_by": {"type": "technique", "idref": "https://attack.mitre.org/techniques/T1059"}}}, "technical_analysis": {"Introduction": "The Genesis Blocks plugin for WordPress is vulnerable to a Stored Cross-Site Scripting (XSS) attack, allowing attackers to inject arbitrary web scripts and execute malicious code.", "Impact and Scope": "This vulnerability has a CVSS score of 5.4 and an attack vector of NETWORK, with low privileges required, allowing attackers to exploit it.", "Related MITRE ATT&CK Techniques": "T1059.006, T1190, T1062, T1560.001, and T1194", "Technical Details": "The vulnerability is due to insufficient input validation and sanitization on user-supplied attributes, allowing attackers to inject arbitrary web scripts.", "Detection": "Detection can be done by monitoring web traffic for suspicious activity and implementing robust input validation and sanitization.", "Mitigation": "Mitigation strategies include implementing strict input validation and sanitization, updating the Genesis Blocks plugin to the latest version, and monitoring web traffic for suspicious activity.", "Conclusion": "In conclusion, the Stored Cross-Site Scripting vulnerability in the Genesis Blocks plugin for WordPress is a significant risk and should be addressed promptly to prevent exploitation."}, "executive_analysis": {"Overview": "The Genesis Blocks plugin for WordPress contains a critical Stored Cross-Site Scripting vulnerability that can be exploited by attackers to execute malicious code.", "Business Impact": "This vulnerability can lead to data breaches, financial loss, and reputational damage if not addressed promptly.", "Technical Impact": "The vulnerability has a CVSS score of 5.4 and an attack vector of NETWORK, with low privileges required, allowing attackers to exploit it.", "Mitigation Strategies": "Updating the Genesis Blocks plugin to the latest version and implementing robust input validation and sanitization are recommended.", "Recommendations": "It is recommended that executives prioritize the mitigation of this vulnerability and ensure that their organization is not exposed to this risk.", "Conclusions": "In conclusion, the Stored Cross-Site Scripting vulnerability in the Genesis Blocks plugin for WordPress is a critical risk that requires prompt attention and mitigation."}}