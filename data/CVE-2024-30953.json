{"id": "CVE-2024-30953", "sourceIdentifier": "cve@mitre.org", "published": "2024-04-17T19:15:07.470", "lastModified": "2024-07-03T01:54:27.430", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "A stored cross-site scripting (XSS) vulnerability in Htmly v2.9.5 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the Link Name parameter of Menu Editor module."}, {"lang": "es", "value": "Una vulnerabilidad de cross site scripting (XSS) almacenadas en Htmly v2.9.5 permite a los atacantes ejecutar scripts web o HTML arbitrarios a trav\u00e9s de un payload manipulado inyectado en el par\u00e1metro Nombre del enlace del m\u00f3dulo Editor de men\u00fas."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://github.com/CrownZTX/vulnerabilities/blob/main/htmly/stored_xss_in_Menueditor.md", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059.007", "comment": "CVE-2024-30953 - Stored Cross-Site Scripting (XSS) allows an attacker to inject malicious scripts into the user's browser, leading to potential sensitive data theft or unauthorized access. This technique can be used to exploit the vulnerability and execute arbitrary code on the user's browser."}, {"techniqueID": "T1190", "comment": "CVE-2024-30953 - Use of Cross-Site Scripting (XSS) payloads allows an attacker to trick the user into executing malicious scripts, leading to potential data theft or unauthorized access. This technique can be used to deliver the XSS payload to the user's browser."}, {"techniqueID": "TA0002", "comment": "CVE-2024-30953 - Web Application Attacks can be used to exploit the vulnerable application, leading to potential data theft or unauthorized access. This technique can be used to identify and exploit the vulnerable application."}, {"techniqueID": "T1027", "comment": "CVE-2024-30953 - Execution of Arbitrary Code can be used to execute malicious code on the vulnerable application, leading to potential data theft or unauthorized access. This technique can be used to detect and prevent execution of arbitrary code."}], "stix_bundle": {"objects": [{"type": "incident", "name": "CVE-2024-30953 Incident", "first_seen": "2024-04-17T19:15:07.470", "last_seen": "2024-07-03T01:54:27.430", "threat_actor": {"type": "person", "name": "Malicious Actor", "description": "An individual or group seeking to exploit the vulnerability for malicious purposes."}, "vulnerability": {"type": "vulnerability", "name": "CVE-2024-30953", "description": "A stored cross-site scripting (XSS) vulnerability in Htmly v2.9.5 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the Link Name parameter of Menu Editor module."}, "indicators": [{"type": "network-traffic", "name": "Malicious JavaScript payload", "description": "JavaScript payload injected into the Link Name parameter of Menu Editor module.", "traffic": {"protocol": "http", "source-port": 80, "destination-port": 80, "destination-ip": "example.com"}, "callbacks": [{"type": "process", "name": "Untrusted JavaScript execution", "description": "Untrusted JavaScript code execution on the vulnerable application."}]}], "courses-of-action": [{"type": "mitigation", "name": "Patch Application", "description": "Apply the patch released by the vendor to fix the vulnerability.", "techniques": [{"techniqueID": "T1059.007", "description": "Apply the patch to fix the stored XSS vulnerability."}]}, {"type": "mitigation", "name": "Disable Menu Editor Module", "description": "Disable the Menu Editor module to prevent exploitation of the vulnerability.", "techniques": [{"techniqueID": "T1190", "description": "Disable the Menu Editor module to prevent exploitation of the vulnerability."}]}]}]}, "technical_analysis": {"Introduction": "A stored cross-site scripting (XSS) vulnerability in Htmly v2.9.5 allows an attacker to inject malicious scripts into the user's browser, leading to potential sensitive data theft or unauthorized access.", "Impact and Scope": "The impact of this vulnerability is the potential for sensitive data theft or unauthorized access. The scope of this vulnerability is limited to the vulnerable application and the users accessing it.", "Related MITRE ATT&CK Techniques": "T1059.007, T1190, TA0002, T1027", "Technical Details": "The vulnerability is caused by a stored XSS vulnerability in the Link Name parameter of the Menu Editor module. An attacker can inject malicious scripts into the user's browser by injecting a crafted payload into the Link Name parameter.", "Detection": "Detection of this vulnerability can be achieved by monitoring for suspicious traffic patterns and identifying JavaScript payloads injected into the Link Name parameter of the Menu Editor module.", "Mitigation": "Mitigation of this vulnerability can be achieved by patching the application, disabling the Menu Editor module, or implementing a Content Security Policy (CSP) to restrict the types of scripts that can be executed.", "Conclusion": "The CVE-2024-30953 vulnerability is a significant security risk that must be addressed promptly to prevent data theft or unauthorized access."}, "executive_analysis": {"Overview": "The CVE-2024-30953 vulnerability is a stored cross-site scripting (XSS) vulnerability in Htmly v2.9.5 that allows an attacker to inject malicious scripts into the user's browser.", "Business Impact": "The business impact of this vulnerability is the potential for sensitive data theft or unauthorized access, which can lead to serious financial losses and damage to the organization's reputation.", "Technical Impact": "The technical impact of this vulnerability is the potential for arbitrary code execution on the vulnerable application, which can lead to serious technical consequences, including data theft or unauthorized access.", "Mitigation Strategies": "Patching the application, disabling the Menu Editor module, or implementing a Content Security Policy (CSP) to restrict the types of scripts that can be executed are all effective mitigation strategies.", "Recommendations": "We recommend that the organization patch the application as soon as possible, disable the Menu Editor module, and implement a Content Security Policy (CSP) to restrict the types of scripts that can be executed.", "Conclusions": "In conclusion, the CVE-2024-30953 vulnerability is a serious security risk that must be addressed promptly to prevent data theft or unauthorized access. We recommend that the organization take immediate action to mitigate this vulnerability."}}