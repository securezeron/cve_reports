{"id": "CVE-2015-1473", "sourceIdentifier": "cve@mitre.org", "published": "2015-04-08T10:59:03.627", "lastModified": "2023-11-07T02:24:49.967", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "The ADDW macro in stdio-common/vfscanf.c in the GNU C Library (aka glibc or libc6) before 2.21 does not properly consider data-type size during a risk-management decision for use of the alloca function, which might allow context-dependent attackers to cause a denial of service (segmentation violation) or overwrite memory locations beyond the stack boundary via a long line containing wide characters that are improperly handled in a wscanf call."}, {"lang": "es", "value": "El macro ADDW en stdio-common/vfscanf.c en la librar\u00eda GNU C (tambi\u00e9n conocida como glibc o libc6) anterior a 2.21 no considera correctamente el tama\u00f1o de tipos de datos durante una decisi\u00f3n de la gesti\u00f3n de riesgos para utilizar en la funci\u00f3n alloca, lo que podr\u00eda permitir atacantes dependientes de contexto causar una denegaci\u00f3n de servicio (violaci\u00f3n de segmentaci\u00f3n) o sobrescribir localizaciones de memoria m\u00e1s all\u00e1 del l\u00edmite de la pila a trav\u00e9s de una l\u00ednea larga que contiene caracateres anchas que se manejen incorrectamente en una llamada wscanf."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.4}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-119"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:10.04:*:*:*:lts:*:*:*", "matchCriteriaId": "5D37DF0F-F863-45AC-853A-3E04F9FEC7CA"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:12.04:*:*:*:lts:*:*:*", "matchCriteriaId": "B6B7CAD7-9D4E-4FDB-88E3-1E583210A01F"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:14.04:*:*:*:lts:*:*:*", "matchCriteriaId": "B5A6F2F3-4894-4392-8296-3B8DD2679084"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:14.10:*:*:*:*:*:*:*", "matchCriteriaId": "49A63F39-30BE-443F-AF10-6245587D3359"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:gnu:glibc:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.20", "matchCriteriaId": "AA913F6A-63A0-468F-A0E0-66748E337246"}]}]}], "references": [{"url": "http://openwall.com/lists/oss-security/2015/02/04/1", "source": "cve@mitre.org"}, {"url": "http://www.oracle.com/technetwork/topics/security/linuxbulletinoct2015-2719645.html", "source": "cve@mitre.org"}, {"url": "http://www.securityfocus.com/bid/72499", "source": "cve@mitre.org"}, {"url": "http://www.ubuntu.com/usn/USN-2519-1", "source": "cve@mitre.org"}, {"url": "https://sourceware.org/git/gitweb.cgi?p=glibc.git%3Ba=commit%3Bh=5bd80bfe9ca0d955bfbbc002781bc7b01b6bcb06", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2015-1473 - This is a classic buffer overflow vulnerability, where an attacker can manipulate the format string to inject arbitrary code and compromise the system. This technique demonstrates the importance of proper input validation and sanitization."}, {"techniqueID": "T1047", "comment": "CVE-2015-1473 - This technique highlights the importance of keeping software up-to-date, as the vulnerability was fixed in glibc 2.21. Regularly patching vulnerabilities can help prevent exploitation."}, {"techniqueID": "T1569", "comment": "CVE-2015-1473 - This technique showcases the potential of exploiting a vulnerable system to gain remote code execution. This emphasizes the need for robust intrusion detection systems (IDS) and incident response plans."}, {"techniqueID": "T1030", "comment": "CVE-2015-1473 - This technique illustrates the importance of secure software development practices, such as input validation and sanitization. This can help prevent exploitation and reduce the risk of data breaches."}, {"techniqueID": "T1056", "comment": "CVE-2015-1473 - This technique emphasizes the need for a strong defense-in-depth strategy, where multiple layers of security are implemented to prevent exploitation. This includes things like access controls, network segmentation, and intrusion detection systems."}], "stix_bundle": {"cybox": {"Initial_Configuration": {"system": {"platform": {"os": {"mappings": [{"name": "ubuntu", "version": "10.04", "release": "*"}, {"name": "ubuntu", "version": "12.04", "release": "*"}, {"name": "ubuntu", "version": "14.04", "release": "*"}, {"name": "ubuntu", "version": "14.10", "release": "*"}]}}}}, "Object": {"Vulnerability": {"id": "CVE-2015-1473", "name": "GNU C Library format string vulnerability", "description": "The GNU C Library format string vulnerability (CVE-2015-1473) allows attackers to inject arbitrary code by manipulating a format string in a wscanf call.", "score": 6.4, "source": "nvd@nist.gov", "type": "Primary", "cvss": {"vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:P"}}}, "Courses_of_Action": [{" id": "COA-1", " relevance": "This Course of Action (COA) addresses the vulnerability by patching the affected systems with the latest glibc version."}, {" id": "COA-2", " relevance": "This COA defends against the vulnerability by implementing WAF rules that block suspicious traffic."}, {" id": "COA-3", " relevance": "This COA mitigates the vulnerability by disabling the vulnerable functionality and replacing it with a secure alternative."}], "Defense_Strategies": [{" id": "DS-1", " relevance": "This Defense Strategy (DS) provides guidance on how to patch the vulnerable systems."}, {" id": "DS-2", " relevance": "This DS provides guidance on how to implement WAF rules that block suspicious traffic."}, {" id": "DS-3", " relevance": "This DS provides guidance on how to disable the vulnerable functionality and replace it with a secure alternative."}]}}, "technical_analysis": {"Introduction": "The GNU C Library format string vulnerability (CVE-2015-1473) is a buffer overflow vulnerability that allows attackers to inject arbitrary code by manipulating a format string in a wscanf call.", "Impact and Scope": "The vulnerability affects multiple Ubuntu versions, as well as glibc versions before 2.21. It has a CVSS score of 6.4, with a high impact and a low to moderate exploitability.", "Related MITRE ATT&CK Techniques": "T1190, T1047, T1569, T1030, T1056", "Technical Details": "The vulnerability occurs when the ADDW macro in stdio-common/vfscanf.c does not properly consider data-type size during a risk-management decision for use of the alloca function.", "Detection": "Detection can be achieved using intrusion detection systems (IDS) and security information and event management (SIEM) systems.", "Mitigation": "Mitigation strategies include patching the affected systems, implementing WAF rules, and disabling the vulnerable functionality.", "Conclusion": "The GNU C Library format string vulnerability is a significant threat to system security and requires immediate attention."}, "executive_analysis": {"Overview": "The GNU C Library format string vulnerability (CVE-2015-1473) is a critical vulnerability that affects multiple Ubuntu versions and glibc versions before 2.21.", "Business Impact": "The vulnerability can lead to remote code execution, data breaches, and system compromise, resulting in significant financial loss and reputational damage.", "Technical Impact": "The vulnerability's impact is severe, with a high potential for exploitation and a high sensitivity to the environment.", "Mitigation Strategies": "Implementing patching strategies, configuring WAF rules, and disabling vulnerable functionality can help mitigate the threat.", "Recommendations": "Executives are recommended to prioritize patching the affected systems, implement WAF rules, and disable vulnerable functionality to minimize the risk of exploitation.", "Conclusions": "In conclusion, the GNU C Library format string vulnerability is a critical threat that requires immediate attention and action to prevent exploitation and minimize potential damage."}}