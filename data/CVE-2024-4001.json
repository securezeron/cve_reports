{"id": "CVE-2024-4001", "sourceIdentifier": "security@wordfence.com", "published": "2024-06-05T11:15:08.490", "lastModified": "2024-06-11T17:27:53.637", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Download Manager plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'wpdm_modal_login_form' shortcode in all versions up to, and including, 3.2.93 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El complemento Download Manager para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del c\u00f3digo corto 'wpdm_modal_login_form' del complemento en todas las versiones hasta la 3.2.93 incluida debido a una sanitizaci\u00f3n de entrada insuficiente y a un escape de salida en los atributos proporcionados por el usuario. Esto hace posible que atacantes autenticados, con acceso de nivel de colaborador y superior, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wpdownloadmanager:download_manager:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "3.2.94", "matchCriteriaId": "D0F5D7DB-6E99-4648-B166-6E65DB8096C4"}]}]}], "references": [{"url": "https://plugins.trac.wordpress.org/changeset/3096459/", "source": "security@wordfence.com", "tags": ["Patch"]}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/b478d88d-1423-4a33-b8ef-08b9e66a5d98?source=cve", "source": "security@wordfence.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059.003", "comment": "This is a Stored Cross-Site Scripting (XSS) vulnerability, which allows attackers to inject malicious scripts into a website. This can be achieved through insufficient input sanitization and output escaping on user-supplied attributes. Defending against this attack involves implementing proper input validation and sanitization, as well as restricting access to sensitive areas of the website."}, {"techniqueID": "T1068", "comment": "Abuse of Functionality is relevant, as the vulnerability allows attackers to inject arbitrary web scripts into pages. Defending against this attack involves implementing proper access control mechanisms to prevent unauthorized users from injecting malicious code."}, {"techniqueID": "T1190", "comment": "Indicator Extraction is relevant, as the vulnerability allows attackers to inject scripts that can extract sensitive information from the website. Defending against this attack involves monitoring for suspicious network traffic and implementing web application firewalls to block malicious requests."}], "stix_bundle": {"object": {"type": "indicator", "id": "CVE-2024-4001", "created_by_ref": " analyst@company.com", "created": "2024-06-05T11:15:08.490Z", "modified": "2024-06-11T17:27:53.637Z", "name": "CVE-2024-4001: Stored Cross-Site Scripting in Download Manager Plugin", "description": "This indicator represents the stored cross-site scripting vulnerability in the Download Manager plugin for WordPress, which allows attackers to inject arbitrary web scripts into pages.", "labels": ["Vulnerability", "Cross-Site Scripting"], "relationships": [{"relationship": "related", "type": "object", "id": "T1059.003", "label": "MITRE ATT&CK Technique"}, {"relationship": "related", "type": "object", "id": "T1068", "label": "MITRE ATT&CK Technique"}, {"relationship": "related", "type": "object", "id": "T1190", "label": "MITRE ATT&CK Technique"}]}, "courses_of_action": [{"type": "note", "from": "identities@company.com", "to": " incident_response@company.com", "content": "Implement proper input validation and sanitization to prevent stored XSS attacks."}, {"type": "note", "from": "secpod@company.com", "to": " incident_response@company.com", "content": "Restrict access to sensitive areas of the website to prevent unauthorized users from injecting malicious code."}]}, "technical_analysis": {"Introduction": "This analysis provides an overview of the stored cross-site scripting vulnerability in the Download Manager plugin for WordPress, along with details on its technical implications and mitigation strategies.", "Impact and Scope": "The vulnerability has a CVSS score of 5.4, with a low attack vector. It allows attackers to inject arbitrary web scripts into pages, which can result in the theft of sensitive information.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to stored XSS, abuse of functionality, and indicator extraction techniques", "Technical Details": "The vulnerability is caused by insufficient input sanitization and output escaping on user-supplied attributes. Defending against this attack involves implementing proper input validation and sanitization, as well as restricting access to sensitive areas of the website.", "Detection": "Detection of this attack involves monitoring for suspicious network traffic and implementing web application firewalls to block malicious requests.", "Mitigation": "Mitigation strategies include implementing proper input validation and sanitization, restricting access to sensitive areas of the website, and monitoring for suspicious network traffic.", "Conclusion": "In conclusion, this analysis highlights the importance of proper input validation and sanitization in preventing stored XSS attacks."}, "executive_analysis": {"Overview": "This analysis provides an executive-level overview of the stored cross-site scripting vulnerability in the Download Manager plugin for WordPress, including its business and technical implications.", "Business Impact": "The vulnerability can result in the theft of sensitive information, which can have significant business consequences.", "Technical Impact": "The vulnerability allows attackers to inject arbitrary web scripts into pages, which can result in the theft of sensitive information.", "Mitigation Strategies": "Implementing proper input validation and sanitization, restricting access to sensitive areas of the website, and monitoring for suspicious network traffic are recommended.", "Recommendations": "Recommendations include implementing a web application firewall and conducting regular security assessments and penetration testing.", "Conclusions": "In conclusion, executives can mitigate this risk by implementing proper input validation and sanitization, restricting access to sensitive areas of the website, and monitoring for suspicious network traffic."}}