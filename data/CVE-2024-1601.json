{"id": "CVE-2024-1601", "sourceIdentifier": "security@huntr.dev", "published": "2024-04-16T00:15:09.597", "lastModified": "2024-04-16T13:24:07.103", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "An SQL injection vulnerability exists in the `delete_discussion()` function of the parisneo/lollms-webui application, allowing an attacker to delete all discussions and message data. The vulnerability is exploitable via a crafted HTTP POST request to the `/delete_discussion` endpoint, which internally calls the vulnerable `delete_discussion()` function. By sending a specially crafted payload in the 'id' parameter, an attacker can manipulate SQL queries to delete all records from the 'discussion' and 'message' tables. This issue is due to improper neutralization of special elements used in an SQL command."}, {"lang": "es", "value": "Existe una vulnerabilidad de inyecci\u00f3n SQL en la funci\u00f3n `delete_discussion()` de la aplicaci\u00f3n parisneo/lollms-webui, lo que permite a un atacante eliminar todas las discusiones y datos de mensajes. La vulnerabilidad se puede explotar a trav\u00e9s de una solicitud POST HTTP manipulada al endpoint `/delete_discussion`, que llama internamente a la funci\u00f3n vulnerable `delete_discussion()`. Al enviar un payload especialmente manipulado en el par\u00e1metro 'id', un atacante puede manipular consultas SQL para eliminar todos los registros de las tablas 'discusi\u00f3n' y 'mensaje'. Este problema se debe a una neutralizaci\u00f3n inadecuada de elementos especiales utilizados en un comando SQL."}], "metrics": {"cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "references": [{"url": "https://github.com/parisneo/lollms-webui/commit/f0bc8f2babdfd4770a5adbf3b60ec612e4f1db46", "source": "security@huntr.dev"}, {"url": "https://huntr.com/bounties/652a176e-6bd7-4161-8775-63a34ecc71d5", "source": "security@huntr.dev"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-1601 - SQL Injection using crafted HTTP POST request to manipulate database queries."}, {"techniqueID": "T1068", "comment": "CVE-2024-1601 - Web Application Exploitation through HTTP POST request manipulation, exploiting improper neutralization of special elements used in an SQL command."}], "stix_bundle": {"objects": [{"id": "Vulnerability:CVE-2024-1601", "type": "vulnerability", "description": "An SQL injection vulnerability exists in the `delete_discussion()` function of the parisneo/lollms-webui application..."}, {"id": "Tactic:T1059", "type": "attack-pattern", "description": "T1059: Command and Control - Command and Control - PowerStation", "related_object": {"id": "relationship:Vulnerability:CVE-2024-1601-T1059", "type": "relationship", "relationship_type": "uses", "start_node": "Vulnerability:CVE-2024-1601", "end_node": "Tactic:T1059"}}, {"id": "Tactic:T1068", "type": "attack-pattern", "description": "T1068: Web Application Exploitation", "related_object": {"id": "relationship:Vulnerability:CVE-2024-1601-T1068", "type": "relationship", "relationship_type": "uses", "start_node": "Vulnerability:CVE-2024-1601", "end_node": "Tactic:T1068"}}, {"id": "Course-of-Action:Mitigation-1", "type": "course-of-action", "title": "Apply proper sanitization and whitelisting for user input", "description": "Apply proper sanitization and whitelisting for user input to prevent SQL injection. Implement a web application firewall (WAF) to detect and block malicious requests.", "related_object": {"id": "relationship:Vulnerability:CVE-2024-1601-Course-of-Action:Mitigation-1", "type": "relationship", "relationship_type": "mitigates", "start_node": "Vulnerability:CVE-2024-1601", "end_node": "Course-of-Action:Mitigation-1"}}], "relationship": [{"id": "relationship:Vulnerability:CVE-2024-1601-T1059", "type": "relationship", "relationship_type": "uses", "start_node": "Vulnerability:CVE-2024-1601", "end_node": "Tactic:T1059"}, {"id": "relationship:Vulnerability:CVE-2024-1601-T1068", "type": "relationship", "relationship_type": "uses", "start_node": "Vulnerability:CVE-2024-1601", "end_node": "Tactic:T1068"}, {"id": "relationship:Vulnerability:CVE-2024-1601-Course-of-Action:Mitigation-1", "type": "relationship", "relationship_type": "mitigates", "start_node": "Vulnerability:CVE-2024-1601", "end_node": "Course-of-Action:Mitigation-1"}]}, "technical_analysis": {"Introduction": "The CVE-2024-1601 is a SQL injection vulnerability in the parisneo/lollms-webui application, which can be exploited through a crafted HTTP POST request.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5 (HIGH) and an attack vector of NETWORK.", "Related MITRE ATT&CK Techniques": "T1059: Command and Control - Command and Control - PowerStation and T1068: Web Application Exploitation.", "Technical Details": "The vulnerability is due to improper neutralization of special elements used in an SQL command, allowing an attacker to manipulate database queries.", "Detection": "Detection methods include monitoring for suspicious HTTP POST requests and monitoring for database query manipulation.", "Mitigation": "Mitigation strategies include applying proper sanitization and whitelisting for user input, implementing a web application firewall (WAF) to detect and block malicious requests, and monitoring for suspicious database queries.", "Conclusion": "The CVE-2024-1601 is a serious vulnerability that highlights the importance of proper input validation and sanitization in web applications."}, "executive_analysis": {"Overview": "The CVE-2024-1601 is a critical vulnerability in the parisneo/lollms-webui application, which can be exploited to manipulate database queries and potentially compromise sensitive data.", "Business Impact": "The vulnerability could potentially result in financial losses, reputational damage, and regulatory issues.", "Technical Impact": "The vulnerability could compromise sensitive data, disrupt critical systems, and allow unauthorized access to the application.", "Mitigation Strategies": "Immediate mitigation strategies include applying proper sanitization and whitelisting for user input, implementing a web application firewall (WAF) to detect and block malicious requests, and monitoring for suspicious database queries.", "Recommendations": "Recommendations for executives include conducting a vulnerability assessment, implementing a vulnerability management program, and ensuring proper incident response and crisis management procedures are in place.", "Conclusions": "The CVE-2024-1601 is a critical vulnerability that requires immediate attention and mitigation to protect sensitive data and prevent potential attacks."}}