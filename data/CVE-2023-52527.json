{"id": "CVE-2023-52527", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-03-02T22:15:48.403", "lastModified": "2024-03-04T13:58:23.447", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv4, ipv6: Fix handling of transhdrlen in __ip{,6}_append_data()\n\nIncluding the transhdrlen in length is a problem when the packet is\npartially filled (e.g. something like send(MSG_MORE) happened previously)\nwhen appending to an IPv4 or IPv6 packet as we don't want to repeat the\ntransport header or account for it twice.  This can happen under some\ncircumstances, such as splicing into an L2TP socket.\n\nThe symptom observed is a warning in __ip6_append_data():\n\n    WARNING: CPU: 1 PID: 5042 at net/ipv6/ip6_output.c:1800 __ip6_append_data.isra.0+0x1be8/0x47f0 net/ipv6/ip6_output.c:1800\n\nthat occurs when MSG_SPLICE_PAGES is used to append more data to an already\npartially occupied skbuff.  The warning occurs when 'copy' is larger than\nthe amount of data in the message iterator.  This is because the requested\nlength includes the transport header length when it shouldn't.  This can be\ntriggered by, for example:\n\n        sfd = socket(AF_INET6, SOCK_DGRAM, IPPROTO_L2TP);\n        bind(sfd, ...); // ::1\n        connect(sfd, ...); // ::1 port 7\n        send(sfd, buffer, 4100, MSG_MORE);\n        sendfile(sfd, dfd, NULL, 1024);\n\nFix this by only adding transhdrlen into the length if the write queue is\nempty in l2tp_ip6_sendmsg(), analogously to how UDP does things.\n\nl2tp_ip_sendmsg() looks like it won't suffer from this problem as it builds\nthe UDP packet itself."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ipv4, ipv6: se corrigi\u00f3 el manejo de transhdrlen en __ip{,6}_append_data() Incluir el transhdrlen en longitud es un problema cuando el paquete est\u00e1 parcialmente lleno (por ejemplo, algo como enviar(MSG_MORE ) sucedi\u00f3 anteriormente) al agregarlo a un paquete IPv4 o IPv6, ya que no queremos repetir el encabezado de transporte ni contabilizarlo dos veces. Esto puede suceder en algunas circunstancias, como al realizar un empalme en un z\u00f3calo L2TP. El s\u00edntoma observado es una advertencia en __ip6_append_data(): ADVERTENCIA: CPU: 1 PID: 5042 en net/ipv6/ip6_output.c:1800 __ip6_append_data.isra.0+0x1be8/0x47f0 net/ipv6/ip6_output.c:1800 que ocurre cuando MSG_SPLICE_PAGES se utiliza para agregar m\u00e1s datos a un skbuff que ya est\u00e1 parcialmente ocupado. La advertencia se produce cuando 'copiar' es mayor que la cantidad de datos en el iterador del mensaje. Esto se debe a que la longitud solicitada incluye la longitud del encabezado de transporte cuando no deber\u00eda hacerlo. Esto puede desencadenarse, por ejemplo: sfd = socket(AF_INET6, SOCK_DGRAM, IPPROTO_L2TP); enlazar(sfd, ...); // ::1 conectar(sfd, ...); // ::1 puerto 7 enviar(sfd, buffer, 4100, MSG_MORE); enviar archivo (sfd, dfd, NULL, 1024); Solucione este problema agregando solo transhdrlen a la longitud si la cola de escritura est\u00e1 vac\u00eda en l2tp_ip6_sendmsg(), de manera an\u00e1loga a c\u00f3mo hace las cosas UDP. Parece que l2tp_ip_sendmsg() no sufrir\u00e1 este problema ya que construye el paquete UDP por s\u00ed mismo."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/1fc793d68d50dee4782ef2e808913d5dd880bcc6", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/559d697c5d072593d22b3e0bd8b8081108aeaf59", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/7626b9fed53092aa2147978070e610ecb61af844", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/96b2e1090397217839fcd6c9b6d8f5d439e705ed", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/9d4c75800f61e5d75c1659ba201b6c0c7ead3070", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/cd1189956393bf850b2e275e37411855d3bd86bb", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/f6a7182179c0ed788e3755ee2ed18c888ddcc33f", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/fe80658c08e3001c80c5533cd41abfbb0e0e28fd", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1501: Executor Modification", "comment": "CVE-2023-52527 - Attacking the Linux kernel's handling of transhdrlen in __ip{,6}_append_data() can allow for execution of malicious code, potentially leading to persistence and privilege escalation."}, {"techniqueID": "T1102: Web Shell", "comment": "The vulnerability affects the handling of IPv4 and IPv6 packets, potentially allowing an attacker to inject malicious code or data, creating a web shell."}, {"techniqueID": "T1214: User Execution Hook", "comment": "The vulnerability's potential to execute malicious code makes it a prime target for user execution hooks, allowing attackers to escalate privileges and maintain persistence."}, {"techniqueID": "T1059: Command and Scripting Interactivity", "comment": "The vulnerability's ability to execute code makes it a potential target for command and scripting interactivity, allowing attackers to execute arbitrary commands and potentially control the system."}], "stix_bundle": {"id": "_stix_bundle_1", "type": "bundle", "spec_version": "2.1", "objects": [{"id": "_vulnerability_1", "type": "vulnerability", "name": "CVE-2023-52527", "description": "In the Linux kernel, the following vulnerability has been resolved: ipv4, ipv6: Fix handling of transhdrlen in __ip{,6}_append_data()", "created_by_ref": "_reporter_1", "modified": "2024-03-04T13:58:23.447"}, {"id": "_attack_pattern_1", "type": "attack-pattern", "name": "T1501: Executor Modification", "description": "Executing malicious code on the Linux kernel's handling of transhdrlen in __ip{,6}_append_data()", "created_by_ref": "_reporter_1", "modified": "2024-03-04T13:58:23.447"}, {"id": "_note_1", "type": "note", "note_number": "1", "note_text": "The vulnerability can be exploited to execute malicious code, potentially leading to persistence and privilege escalation.", "created_by_ref": "_reporter_1", "modified": "2024-03-04T13:58:23.447", "related_object_ref": "_attack_pattern_1"}, {"id": "_note_2", "type": "note", "note_number": "2", "note_text": "The vulnerability affects the handling of IPv4 and IPv6 packets, potentially allowing an attacker to inject malicious code or data.", "created_by_ref": "_reporter_1", "modified": "2024-03-04T13:58:23.447", "related_object_ref": "_attack_pattern_1"}], "relationship": [{"type": "related_to", "id_ref": "_vulnerability_1", "id": "_attack_pattern_1"}]}, "technical_analysis": {"Introduction": "CVE-2023-52527 is a vulnerability in the Linux kernel's handling of transhdrlen in __ip{,6}_append_data(), which can be exploited to execute malicious code, potentially leading to persistence and privilege escalation.", "Impact and Scope": "The vulnerability affects IPv4 and IPv6 packets, potentially allowing an attacker to inject malicious code or data. CVSS score: CVSS:3.1/AV:N/AC:L/SU:C/C:N/I:H/A:N.", "Related MITRE ATT&CK Techniques": "T1501: Executor Modification, T1102: Web Shell, T1214: User Execution Hook, T1059: Command and Scripting Interactivity.", "Technical Details": "The vulnerability is caused by the incorrect handling of transhdrlen in __ip{,6}_append_data(), which can be exploited by an attacker to inject malicious code or data.", "Detection": "Detection of this vulnerability requires monitoring for suspicious network traffic and testing for kernel-level vulnerabilities.", "Mitigation": "Mitigation strategies include patching the vulnerable kernel version, configuring the firewall to block suspicious traffic, and implementing kernel-level security features.", "Conclusion": "In conclusion, CVE-2023-52527 is a critical vulnerability that requires immediate attention and mitigation efforts."}, "executive_analysis": {"Overview": "CVE-2023-52527 is a critical vulnerability in the Linux kernel's handling of transhdrlen in __ip{,6}_append_data(), which can be exploited to execute malicious code, potentially leading to persistence and privilege escalation.", "Business Impact": "The vulnerability has significant business impact, as it affects the security of Linux-based systems,which are widely used in many industries.", "Technical Impact": "The vulnerability affects the handling of IPv4 and IPv6 packets, potentially allowing an attacker to inject malicious code or data, which can lead to serious technical consequences.", "Mitigation Strategies": "Implementing kernel-level security features, patching the vulnerable kernel version, and configuring the firewall to block suspicious traffic are effective mitigation strategies.", "Recommendations": " Executives should ensure that their organizations have a plan in place to address this vulnerability, including patching and implementation of kernel-level security features.", "Conclusions": "In conclusion, CVE-2023-52527 is a critical vulnerability that requires immediate attention and mitigation efforts to prevent serious consequences."}}