{"id": "CVE-2009-3890", "sourceIdentifier": "secalert@redhat.com", "published": "2009-11-17T18:30:00.313", "lastModified": "2017-11-21T18:10:54.840", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Unrestricted file upload vulnerability in the wp_check_filetype function in wp-includes/functions.php in WordPress before 2.8.6, when a certain configuration of the mod_mime module in the Apache HTTP Server is enabled, allows remote authenticated users to execute arbitrary code by posting an attachment with a multiple-extension filename, and then accessing this attachment via a direct request to a wp-content/uploads/ pathname, as demonstrated by a .php.jpg filename."}, {"lang": "es", "value": "Vulnerabilidad de subida de archivos sin restricci\u00f3n en la funci\u00f3n wp_check_filetype en wp-includes/functions.php en WordPress anteriores a v2.8.6, cuando cierta configuraci\u00f3n del modulo mod_mime en el servidor HTTP Apache esta activado, permite a usuarios remotos autenticados ejecutar c\u00f3digo arbitrario posteando un adjunto con un nombre de fichero con m\u00faltiples extensiones y luego accediendo a el a trav\u00e9s de una petici\u00f3n directa al nombre de ruta wp-content/uploads/, como se demuestra con el nombre de fichero .php.jpg."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 6.8, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.8.5", "matchCriteriaId": "E33698FD-9A82-413F-BADD-8E0719BB70A9"}]}]}], "references": [{"url": "http://archives.neohapsis.com/archives/fulldisclosure/2009-11/0142.html", "source": "secalert@redhat.com", "tags": ["Broken Link"]}, {"url": "http://archives.neohapsis.com/archives/fulldisclosure/2009-11/0149.html", "source": "secalert@redhat.com", "tags": ["Broken Link"]}, {"url": "http://archives.neohapsis.com/archives/fulldisclosure/2009-11/0153.html", "source": "secalert@redhat.com", "tags": ["Broken Link"]}, {"url": "http://core.trac.wordpress.org/ticket/11122", "source": "secalert@redhat.com", "tags": ["Issue Tracking", "Vendor Advisory"]}, {"url": "http://secunia.com/advisories/37332", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://wordpress.org/development/2009/11/wordpress-2-8-6-security-release/", "source": "secalert@redhat.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2009/11/15/2", "source": "secalert@redhat.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2009/11/15/3", "source": "secalert@redhat.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2009/11/16/1", "source": "secalert@redhat.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://www.osvdb.org/59958", "source": "secalert@redhat.com", "tags": ["Broken Link"]}], "techniques": [{"techniqueID": "T1059.005", "comment": "CVE-2009-3890 - Unrestricted file upload vulnerability in WordPress allows remote authenticated users to execute arbitrary code, demonstrating a potential attack vector for remote code execution."}, {"techniqueID": "T1177", "comment": "CVE-2009-3890 - Unsecured file upload functionality in WordPress can be exploited to upload malicious files, further demonstrating the need for secure file handling practices."}, {"techniqueID": "T1134.002", "comment": "CVE-2009-3890 - Lack of proper file extension filtering in WordPress can be exploited to execute malicious code, emphasizing the importance of accurate file type recognition."}], "stix_bundle": {"objects": [{"type": "indicator", "id": "indicator--a5e7d3f2-2a74-4b3f-87b0-b9abac4d5d1c", "name": "CVE-2009-3890 WordPress Unrestricted File Upload", "description": "Indicator for CVE-2009-3890 WordPress Unrestricted File Upload", "pattern": {"filters": [{"type": "Filter", "id": "filter--f4f7d7f4-5c55-49c6-8d1b-6b754c1ca9a3", "value": "/wp-content/uploads/", "pattern_type": "string"}]}}, {"type": "vulnerability", "id": "vulnerability--e3b1e1f0-c98f-4e9b-8a3e-3d59f9c6e5a8", "name": "CVE-2009-3890 WordPress Unrestricted File Upload", "description": "CVE-2009-3890 WordPress Unrestricted File Upload vulnerability", "severity": "Medium", "cvss_score": 6.0, "cvss_vector": "CVSS:2.0/AV:N/AC:M/Au:S/C:P/I:P/A:P", "references": [{"source": "secalert@redhat.com", "url": "http://archives.neohapsis.com/archives/fulldisclosure/2009-11/0142.html"}]}], "relations": [{"source_ref": "indicator--a5e7d3f2-2a74-4b3f-87b0-b9abac4d5d1c", "target_ref": "vulnerability--e3b1e1f0-c98f-4e9b-8a3e-3d59f9c6e5a8", "relationship_type": "related_to"}]}, "technical_analysis": {"Introduction": "CVE-2009-3890 is an unrestricted file upload vulnerability in WordPress that allows remote authenticated users to execute arbitrary code. This vulnerability can be exploited to inject malicious code into the server, leading to the dissemination of malware or other unwanted content.", "Impact and Scope": "The impact of this vulnerability is significant, as it allows for remote code execution with elevated privileges. The scope of the vulnerability is limited to WordPress installations with the affected version and configuration.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques include T1059.005: Command and Control - Web Shell, T1177: Kerberos Credential Theft, and T1134.002: File and Directory Discovery.", "Technical Details": "The vulnerability is caused by a lack of proper file extension filtering in WordPress, which allows attackers to upload malicious files with multiple extensions. The vulnerability can be exploited using simple web vulnerabilities, such as unauthenticated authentication and unvalidated input.", "Detection": "Detection of this vulnerability can be achieved through a combination of network traffic analysis, system logs, and vulnerability scanning. It is essential to implement a comprehensive detection and response strategy to mitigate the risk associated with this vulnerability.", "Mitigation": "Mitigation strategies for this vulnerability include implementing secure file handling practices, such as validating file extensions and MIME types, and restricting access to sensitive areas of the WordPress installation.", "Conclusion": "In conclusion, CVE-2009-3890 is a significant vulnerability that requires immediate attention. It is crucial to implement a comprehensive mitigation strategy to prevent exploitation and minimize the risk associated with this vulnerability."}, "executive_analysis": {"Overview": "CVE-2009-3890 is a major vulnerability that affects WordPress installations with a specific configuration. This vulnerability has a significant business impact, as it can potentially lead to the dissemination of malware or other unwanted content.", "Business Impact": "The business impact of this vulnerability is significant, as it can lead to reputational damage, financial losses, and compromised data. It is essential to take immediate action to mitigate this vulnerability and protect the business.", "Technical Impact": "The technical impact of this vulnerability is the potential for remote code execution with elevated privileges, which can lead to administrative access, data theft, and other malicious activities.", "Mitigation Strategies": "Mitigation strategies for this vulnerability include implementing secure file handling practices, restricting access to sensitive areas of the WordPress installation, and monitoring network traffic and system logs for signs of suspicious activity.", "Recommendations": "We recommend implementing a comprehensive vulnerability management program to identify and mitigate vulnerabilities like CVE-2009-3890. Additionally, we suggest conducting regular security assessments and penetration testing to identify and address vulnerabilities before they can be exploited.", "Conclusions": "In conclusion, CVE-2009-3890 is a significant vulnerability that requires immediate attention. It is essential to take a proactive approach to mitigate this vulnerability and protect the business."}}