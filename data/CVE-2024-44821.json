{"id": "CVE-2024-44821", "sourceIdentifier": "cve@mitre.org", "published": "2024-09-04T16:15:07.320", "lastModified": "2024-09-05T12:53:21.110", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "ZZCMS 2023 contains a vulnerability in the captcha reuse logic located in /inc/function.php. The checkyzm function does not properly refresh the captcha value after a failed validation attempt. As a result, an attacker can exploit this flaw by repeatedly submitting the same incorrect captcha response, allowing them to capture the correct captcha value through error messages."}, {"lang": "es", "value": "ZZCMS 2023 contiene una vulnerabilidad en la l\u00f3gica de reutilizaci\u00f3n de captcha ubicada en /inc/function.php. La funci\u00f3n checkyzm no actualiza correctamente el valor del captcha despu\u00e9s de un intento de validaci\u00f3n fallido. Como resultado, un atacante puede aprovechar esta falla enviando repetidamente la misma respuesta de captcha incorrecta, lo que le permite capturar el valor de captcha correcto a trav\u00e9s de mensajes de error."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-287"}]}], "references": [{"url": "https://github.com/gkdgkd123/codeAudit/blob/main/CVE-2024-44821%20ZZCMS2023%20%E9%AA%8C%E8%AF%81%E7%A0%81%E5%A4%8D%E7%94%A8%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E.md", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-44821 - An attacker could exploit this vulnerability by repeatedly submitting the same incorrect captcha response, allowing them to capture the correct captcha value through error messages. This technique could be used in conjunction with other tactics to bypass security measures and gain unauthorized access."}, {"techniqueID": "T1036", "comment": "CVE-2024-44821 - The vulnerability in the captcha reuse logic could be exploited to gain unauthorized access to the system. This technique could be used to execute arbitrary code, steal sensitive information, or disrupt system functionality."}], "stix_bundle": {"type": "bundle", "spec_version": "2.1", "objects": [{"type": "vulnerability", "id": "vuln-1", "created_by_ref": "identity-1", "modified": "2024-09-05T12:53:21.110", "vuln_status": "Awaiting Analysis", "description": "ZZCMS 2023 contains a vulnerability in the captcha reuse logic located in /inc/function.php.", "cve": "CVE-2024-44821", "metrics": {"cvss": {"vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}}, "weaknesses": [{"type": "weakness", "id": "weak-1", ".created_by_ref": "identity-1", "description": "CWE-287"}], "references": [{"type": "reference", "id": "ref-1", "reference_data_type": "URL", "url": "https://github.com/gkdgkd123/codeAudit/blob/main/CVE-2024-44821%20ZZCMS2023%20%E9%AA%8C%E8%AF%81%E7%A0%81%E5%A4%8D%E7%94%A8%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E.md"}]}, {"type": "relationship", "id": "rel-1", "start_object_ref": "vuln-1", "end_object_ref": "technique-1", "relationship_type": "uses"}, {"type": "relationship", "id": "rel-2", "start_object_ref": "vuln-1", "end_object_ref": "technique-2", "relationship_type": "uses"}, {"type": "technique", "id": "technique-1", "spec_version": "2.1", "technique_id": "T1190", "name": "Exploit public-facing application vulnerabilities", "description": "Exploit publicly disclosed vulnerabilities in applications"}, {"type": "technique", "id": "technique-2", "spec_version": "2.1", "technique_id": "T1036", "name": "Web Shell", "description": "Use a web shell to access and control the compromised system"}, {"type": "course_of_action", "id": "coa-1", "start_object_ref": "technique-1", "end_object_ref": "recommendation-1", "relationship_type": "mitigates"}, {"type": "course_of_action", "id": "coa-2", "start_object_ref": "technique-2", "end_object_ref": "recommendation-2", "relationship_type": "mitigates"}, {"type": "recommendation", "id": "recommendation-1", "spec_version": "2.1", "recommendation_id": "recommended-1", "name": "Regularly update and patch all application software", "description": "Regularly update and patch all application software to ensure the latest security patches are applied"}, {"type": "recommendation", "id": "recommendation-2", "spec_version": "2.1", "recommendation_id": "recommended-2", "name": "Use a web application firewall (WAF)", "description": "Use a web application firewall (WAF) to filter and block malicious traffic"}]}, "technical_analysis": {"Introduction": "The CVE-2024-44821 vulnerability in ZZCMS 2023 allows an attacker to capture the correct captcha value through error messages.", "Impact and Scope": "The vulnerability has a CVSS score of 5.3, with low attack complexity and nonzero attack vector.", "Related MITRE ATT&CK Techniques": "T1190 Exploit public-facing application vulnerabilities and T1036 Web Shell could be used to exploit the vulnerability.", "Technical Details": "The vulnerability is located in the /inc/function.php file and involves the reuse of captcha values.", "Detection": "Detection methods include monitoring application logs for suspicious activity and scanning for vulnerabilities.", "Mitigation": "Mitigation strategies include regular updates and patches, using a WAF, and implementing CAPTCHA mechanisms.", "Conclusion": "The CVE-2024-44821 vulnerability is a high-risk vulnerability that requires immediate attention."}, "executive_analysis": {"Overview": "The CVE-2024-44821 vulnerability in ZZCMS 2023 allows an attacker to capture the correct captcha value through error messages.", "Business Impact": "The vulnerability could allow an attacker to gain unauthorized access to sensitive information and credentials.", "Technical Impact": "The vulnerability could allow an attacker to execute arbitrary code, steal sensitive information, or disrupt system functionality.", "Mitigation Strategies": "Regular updates and patches, using a WAF, and implementing CAPTCHA mechanisms are recommended.", "Recommendations": "Executives are recommended to prioritize vulnerability patching and update application software regularly.", "Conclusions": "The CVE-2024-44821 vulnerability is a high-risk vulnerability that requires immediate attention and mitigation strategies."}}