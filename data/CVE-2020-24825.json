{"id": "CVE-2020-24825", "sourceIdentifier": "cve@mitre.org", "published": "2021-08-04T15:15:08.713", "lastModified": "2021-08-10T19:36:10.303", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "A vulnerability in the line_table::line_table function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file."}, {"lang": "es", "value": "Una vulnerabilidad en la funci\u00f3n line_table::line_table de Libelfin versi\u00f3n v0.3, permite a atacantes causar una denegaci\u00f3n de servicio (DOS) mediante un fallo de segmentaci\u00f3n por medio de un archivo ELF dise\u00f1ado"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-74"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:libelfin_project:libelfin:0.3:*:*:*:*:*:*:*", "matchCriteriaId": "B18704CF-84AF-4699-BA52-8974DFE68BC7"}]}]}], "references": [{"url": "https://github.com/aclements/libelfin/issues/46", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Third Party Advisory"]}, {"url": "https://github.com/xiaoxiongwang/function_bugs/tree/master/libelfin#segv-in-function-line_tableline_table-at-dwarflinecc104", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2020-24825 - DLL Side-Loading is a technique used by the attackers to load a malicious DLL into the application process. This can be mitigated by implementing proper DLL validation and whitelisting."}, {"techniqueID": "T1078", "comment": "CVE-2020-24825 - Registered Meterpreter Payloads is a technique used by the attackers to load a malicious payload into the target system. This can be mitigated by implementing proper payload validation and whitelisting."}, {"techniqueID": "T1077", "comment": "CVE-2020-24825 - Binary Padding is a technique used by the attackers to hide malicious code within a legitimate binary. This can be mitigated by implementing proper code analysis and validation."}], "stix_bundle": {"type": "bundle", "spec_version": "2.1", "id": "b1d6a9f7-5d3f-4d1c-89a5-94c94e174b44", "objects": [{"type": "vulnerability", "id": "d9a3c3e9-9a9f-494a-b9a0-0b35a3f3ac9f", "name": "CVE-2020-24825", "description": {"description": "An exploitable vulnerability in the line_table::line_table function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.", "lang": "en"}, "references": [{"relationship": "related", "id": "b18704cf-84af-4699-ba52-8974dfe68bc7", "type": "cpe", "name": "cpe:2.3:a:libelfin_project:libelfin:0.3:*:*:*:*:*:*:*"}], "exploit": {"type": "exploit", "id": "04c4d3d8-36e4-4473-8a54-6c39f345b1a7", "description": {"description": "A vulnerability in the libelfin library allows an attacker to execute arbitrary code by crafting a malicious ELF file.", "lang": "en"}}, "notes": [{"type": "note", "id": "f2a3c745-6a61-4f77-834b-8d25f2d4b745", "content": "Apply the patch released by the vendor to mitigate the vulnerability."}], "objects": [{"type": "course-of-action", "id": "e5a6a5c3-7c14-4b1f-8c98-76ecb9c8a4a3", "name": "Patch installation", "description": {"description": "Apply the patch released by the vendor to mitigate the vulnerability.", "lang": "en"}}]}, {"type": "technique", "id": "b1d6a9f7-5d3f-4d1c-89a5-94c94e174b44", "name": "DLL Side-Loading", "description": {"description": "The attackers use a malicious DLL to load a payload into the application process.", "lang": "en"}, "grouping": {"group_name": "T1190"}}]}, "technical_analysis": {"Introduction": "The vulnerability CVE-2020-24825 in Libelfin v0.3 allows an attacker to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.", "Impact and Scope": "The attack vector is LOCAL and requires user interaction.", "Related MITRE ATT&CK Techniques": "DLL Side-Loading", "Technical Details": "The vulnerability is located in the line_table::line_table function of Libelfin v0.3.", "Detection": "Monitor for segmentation faults and deny any malicious ELF files.", "Mitigation": "Apply the patch released by the vendor and implement proper code validation and paylaod analysis.", "Conclusion": "The vulnerability can be mitigated by implementing proper code validation and payload analysis."}, "executive_analysis": {"Overview": "The vulnerability CVE-2020-24825 in Libelfin v0.3 allows an attacker to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.", "Business Impact": "The vulnerability has a medium business impact.", "Technical Impact": "The vulnerability is technical in nature and requires a sophisticated understanding of the operating system and networking protocols to exploit.", "Mitigation Strategies": "Apply the patch released by the vendor and implement proper code validation and payload analysis.", "Recommendations": "Apply the patch as soon as possible and conduct regular vulnerability assessments.", "Conclusions": "The vulnerability can be mitigated by implementing proper code validation and payload analysis, and regular patching and vulnerability assessments."}}