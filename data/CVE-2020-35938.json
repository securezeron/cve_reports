{"id": "CVE-2020-35938", "sourceIdentifier": "cve@mitre.org", "published": "2021-01-01T02:15:13.567", "lastModified": "2021-07-21T11:39:23.747", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "PHP Object injection vulnerabilities in the Post Grid plugin before 2.0.73 for WordPress allow remote authenticated attackers to inject arbitrary PHP objects due to insecure unserialization of data supplied in a remotely hosted crafted payload in the source parameter via AJAX. The action must be set to post_grid_import_xml_layouts."}, {"lang": "es", "value": "Unas vulnerabilidades de inyecci\u00f3n de objetos PHP en el plugin Post Grid versiones anteriores a 2.0.73 para WordPress, permiten a atacantes autenticados remotos inyectar objetos PHP arbitrarios debido a una deserializaci\u00f3n no segura de los datos suministrados en una carga \u00fatil dise\u00f1ada hosteada remotamente en el par\u00e1metro source por medio de AJAX.&#xa0;La acci\u00f3n debe ser establecida en la funci\u00f3n post_grid_import_xml_layouts."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}, {"source": "cve@mitre.org", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.6, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 6.8, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-502"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:pickplugins:post_grid:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "2.0.73", "matchCriteriaId": "FB89EFE3-8042-47A9-B527-E8F112E112E7"}, {"vulnerable": true, "criteria": "cpe:2.3:a:pickplugins:team_showcase:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "1.22.16", "matchCriteriaId": "F83FA0F0-CD24-4248-A088-92DC516638AB"}]}]}], "references": [{"url": "https://www.wordfence.com/blog/2020/10/high-severity-vulnerabilities-in-post-grid-and-team-showcase-plugins/", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1127", "comment": "CVE-2020-35938 - Unvalidated serialized input can be used to inject malicious PHP objects, which can lead to arbitrary code execution. This is relevant for defense against PHP object injection attacks, which can be applied by validating all untrusted input and disabling serialization of sensitive data."}, {"techniqueID": "T1190", "comment": "CVE-2020-35938 - Unvalidated serialized input can be used to inject malicious PHP objects, which can lead to arbitrary code execution. This is relevant for defense against command and control techniques, which can be applied by monitoring system calls and network traffic, and by implementing strict access controls."}, {"techniqueID": "T1212", "comment": "CVE-2020-35938 - Unvalidated serialized input can be used to inject malicious PHP objects, which can lead to arbitrary code execution. This is relevant for defense against web application attacks, which can be applied by implementing a secure and validated authentication mechanism, and by frequently updating the WordPress core and plugins."}, {"techniqueID": "T1486", "comment": "CVE-2020-35938 - Unvalidated serialized input can be used to inject malicious PHP objects, which can lead to arbitrary code execution. This is relevant for defense against code injection, which can be applied by implementing a secure and validated input filtering mechanism, and by frequently updating the WordPress core and plugins."}], "stix_bundle": {"type": "bundle", "id": "urn:bundl:63d41c23-6fac-41db-8f13-e5b1d5d4f9d1", "objects": [{"type": "vulnerability", "id": "urn:vuln:3e09a2ce-95f7-4229-b8c5-02f6e5112b1c", "name": "CVE-2020-35938", "description": {"en": "PHP Object injection vulnerabilities in the Post Grid plugin before 2.0.73 for WordPress allow remote authenticated attackers to inject arbitrary PHP objects due to insecure unserialization of data supplied in a remotely hosted crafted payload in the source parameter via AJAX."}, "references": [{"url": "https://www.wordfence.com/blog/2020/10/high-severity-vulnerabilities-in-post-grid-and-team-showcase-plugins/", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}], "relationships": [{"type": "exploited_by", "id": "urn:rel:dfb01622-14b7-42c5-9b8a-415b10d7f1f5", "object_ref": "urn:vuln:3e09a2ce-95f7-4229-b8c5-02f6e5112b1c", "relationship_type": "exploited_by"}]}, {"type": "technique", "id": "urn:tct:1f85e1a0-8bbd-4521-9e01-81f4a4a3f7d5", "name": "T1127", "description": {"en": "Unvalidated serialized input can be used to inject malicious PHP objects."}, "mitigations": [{"type": "note", "id": "urn:nt:1af33a2f-6d48-48c1-ba4f-54c3b7c94f70", "object_ref": "urn:tct:1f85e1a0-8bbd-4521-9e01-81f4a4a3f7d5", "relationship_type": "mitigates", "note": "Validate all untrusted input and disable serialization of sensitive data."}]}, {"type": "technique", "id": "urn:tct:2c5e35ed-3ebd-4836-88c8-4f7ab3d55535", "name": "T1190", "description": {"en": "Command and control"}, "mitigations": [{"type": "note", "id": "urn:nt:7d0b9b6a-5a7c-4472-b4a1-6a1a55e7a8cc", "object_ref": "urn:tct:2c5e35ed-3ebd-4836-88c8-4f7ab3d55535", "relationship_type": "mitigates", "note": "Monitor system calls and network traffic, and implement strict access controls."}]}]}, "technical_analysis": {"Introduction": "The CVE-2020-35938 vulnerability is a PHP object injection vulnerability in the Post Grid plugin before 2.0.73 for WordPress.", "Impact and Scope": "The vulnerability allows remote authenticated attackers to inject arbitrary PHP objects, which can lead to arbitrary code execution. The CVSS score is 8.8 and the attack vector is NETWORK.", "Related MITRE ATT&CK Techniques": "T1127, T1190, T1212, T1486", "Technical Details": "The vulnerability occurs due to insecure unserialization of data supplied in a remotely hosted crafted payload in the source parameter via AJAX.", "Detection": "The vulnerability can be detected by monitoring system calls and network traffic, and by implementing a secure and validated input filtering mechanism.", "Mitigation": "The vulnerability can be mitigated by validating all untrusted input and disabling serialization of sensitive data.", "Conclusion": "Summary and conclusions."}, "executive_analysis": {"Overview": "The CVE-2020-35938 vulnerability is a PHP object injection vulnerability in the Post Grid plugin before 2.0.73 for WordPress, which can lead to arbitrary code execution.", "Business Impact": "The vulnerability can lead to unauthorized code execution, which can result in data theft or encryption, and reputational damage.", "Technical Impact": "The vulnerability can lead to arbitrary code execution, which can result in unauthorized access to sensitive data, and system compromise.", "Mitigation Strategies": "Implement a secure and validated input filtering mechanism, and disable serialization of sensitive data.", "Recommendations": "Recommendations for executives.", "Conclusions": "Final conclusions and next steps."}}