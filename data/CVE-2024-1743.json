{"id": "CVE-2024-1743", "sourceIdentifier": "contact@wpscan.com", "published": "2024-04-24T05:15:46.977", "lastModified": "2024-07-03T01:45:31.390", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The WooCommerce Customers Manager WordPress plugin before 29.8 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin"}, {"lang": "es", "value": "El complemento de WordPress WooCommerce Customers Manager anterior a la versi\u00f3n 29.8 no sanitiza ni escapa de varios par\u00e1metros antes de devolverlos a p\u00e1ginas y atributos, lo que genera Cross-Site Scripting Reflejado que podr\u00eda usarse contra usuarios con privilegios elevados, como administradores."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.5, "impactScore": 3.4}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://wpscan.com/vulnerability/3cb1f707-6093-42a7-a778-2b296bdf1735/", "source": "contact@wpscan.com"}], "techniques": [{"techniqueID": "T1052", "comment": "CVE-2024-1743 - The attack technique of Cross-Site Scripting (XSS) allows an attacker to inject malicious client-side code into a user's web browser, potentially leading to unauthorized access to sensitive data or system compromise. Defending against this involves implementing server-side input validation and sanitization, as well as using Content Security Policy (CSP) to restrict the types of scripts that can be executed."}, {"techniqueID": "T1130", "comment": "CVE-2024-1743 - Cross-Site Scripting (XSS) can also be used to steal sensitive information such as login credentials or credit card numbers. Defending against this involves implementing Secure Sockets Layer/Transport Layer Security (SSL/TLS) encryption to protect data in transit, as well as monitoring for suspicious activity and implementing incident response procedures."}, {"techniqueID": "T1190", "comment": "CVE-2024-1743 - Attackers may use Cross-Site Scripting (XSS) to distribute malware or other malicious software. Defending against this involves implementing strict web application security, including input validation, sanitization, and encoding, as well as conducting regular security testing and vulnerability assessments."}], "stix_bundle": {"@context": "https://raw.githubusercontent.com/stix-project/stix-assets/master/stix-context.json", "identity": {"type": "vacm_identity", "description": "Identity for CVE-2024-1743"}, "objects": [{"type": "vulnerability", "id": "https://example.com/CVE-2024-1743", "description": "The WooCommerce Customers Manager WordPress plugin before 29.8 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin", "contributors": [{"type": "identity", "id": "https://example.com/contact@wpscan.com", "name": "WPScan", "url": "https://wpscan.com"}], "properties": {"cve": {"type": "cve-2.3", "id": "CVE-2024-1743", "references": [{"type": "reference", "href": "https://wpscan.com/vulnerability/3cb1f707-6093-42a7-a778-2b296bdf1735/"}]}, "weaknesses": [{"type": "weakness", "id": "CWE-79", "description": "CWE-79: Cross-Site Scripting (XSS) - CVE-2024-1743"}]}}, {"type": "note", "id": "https://example.com/defense-1", "description": "Defend against Cross-Site Scripting (XSS) by implementing server-side input validation and sanitization, as well as using Content Security Policy (CSP) to restrict the types of scripts that can be executed."}, {"type": "note", "id": "https://example.com/defense-2", "description": "Monitor for suspicious activity and implement incident response procedures to detect and respond to Cross-Site Scripting (XSS) attacks."}, {"type": "relationship", "id": "https://example.com/relationship-1", "description": "The vulnerability CVE-2024-1743 is related to the technique T1052: Cross-Site Scripting (XSS)."}]}, "technical_analysis": {"Introduction": "The WooCommerce Customers Manager WordPress plugin before 29.8 is vulnerable to a Reflected Cross-Site Scripting (XSS) attack.", "Impact and Scope": "The vulnerability has a CVSS score of 5.9 with a version of 3.1, and an attack vector of LOCAL. This means that an attacker can exploit the vulnerability by tricking a high-privilege user into clicking on a malicious link.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to MITRE ATT&CK techniques T1052, T1130, and T1190.", "Technical Details": "The vulnerability occurs when the plugin does not properly sanitize and escape user-input data, allowing an attacker to inject malicious code into the page.", "Detection": "Defense against this vulnerability involves monitoring for suspicious activity and implementing incident response procedures.", "Mitigation": "Mitigation strategies include implementing server-side input validation and sanitization, as well as using Content Security Policy (CSP) to restrict the types of scripts that can be executed.", "Conclusion": "The WooCommerce Customers Manager WordPress plugin before 29.8 is vulnerable to a Reflected Cross-Site Scripting (XSS) attack, which can be exploited to steal sensitive information or compromise the system."}, "executive_analysis": {"Overview": "The WooCommerce Customers Manager WordPress plugin before 29.8 is vulnerable to a Reflected Cross-Site Scripting (XSS) attack, which can be exploited to steal sensitive information or compromise the system.", "Business Impact": "This vulnerability has the potential to compromise sensitive information or system access, which can lead to financial loss, reputational damage, or regulatory non-compliance.", "Technical Impact": "The vulnerability allows an attacker to inject malicious code into the system, which can be used to steal sensitive information or compromise system access.", "Mitigation Strategies": "We recommend implementing server-side input validation and sanitization, as well as using Content Security Policy (CSP) to restrict the types of scripts that can be executed.", "Recommendations": "We recommend conducting regular security testing and vulnerability assessments to identify and remediate vulnerabilities like this.", "Conclusions": "The WooCommerce Customers Manager WordPress plugin before 29.8 is vulnerable to a Reflected Cross-Site Scripting (XSS) attack, and we recommend implementing mitigation strategies to prevent exploitation."}}