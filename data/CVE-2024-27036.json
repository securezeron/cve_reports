{"id": "CVE-2024-27036", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-05-01T13:15:49.407", "lastModified": "2024-05-01T19:50:25.633", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Fix writeback data corruption\n\ncifs writeback doesn't correctly handle the case where\ncifs_extend_writeback() hits a point where it is considering an additional\nfolio, but this would overrun the wsize - at which point it drops out of\nthe xarray scanning loop and calls xas_pause().  The problem is that\nxas_pause() advances the loop counter - thereby skipping that page.\n\nWhat needs to happen is for xas_reset() to be called any time we decide we\ndon't want to process the page we're looking at, but rather send the\nrequest we are building and start a new one.\n\nFix this by copying and adapting the netfslib writepages code as a\ntemporary measure, with cifs writeback intending to be offloaded to\nnetfslib in the near future.\n\nThis also fixes the issue with the use of filemap_get_folios_tag() causing\nretry of a bunch of pages which the extender already dealt with.\n\nThis can be tested by creating, say, a 64K file somewhere not on cifs\n(otherwise copy-offload may get underfoot), mounting a cifs share with a\nwsize of 64000, copying the file to it and then comparing the original file\nand the copy:\n\n        dd if=/dev/urandom of=/tmp/64K bs=64k count=1\n        mount //192.168.6.1/test /mnt -o user=...,pass=...,wsize=64000\n        cp /tmp/64K /mnt/64K\n        cmp /tmp/64K /mnt/64K\n\nWithout the fix, the cmp fails at position 64000 (or shortly thereafter)."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: cifs: corrige la corrupci\u00f3n de datos de reescritura cifs writeback no maneja correctamente el caso en el que cifs_extend_writeback() llega a un punto en el que est\u00e1 considerando una publicaci\u00f3n adicional, pero esto sobrepasar\u00eda el tama\u00f1o de wsize - en momento en el que sale del ciclo de escaneo de xarray y llama a xas_pause(). El problema es que xas_pause() avanza el contador de bucle, omitiendo as\u00ed esa p\u00e1gina. Lo que debe suceder es que se llame a xas_reset() cada vez que decidamos que no queremos procesar la p\u00e1gina que estamos viendo, sino enviar la solicitud que estamos creando y comenzar una nueva. Solucione este problema copiando y adaptando el c\u00f3digo de escritura de netfslib como medida temporal, y la escritura diferida de cifs se descargar\u00e1 a netfslib en un futuro pr\u00f3ximo. Esto tambi\u00e9n soluciona el problema con el uso de filemap_get_folios_tag() que provocaba un reintento de un grupo de p\u00e1ginas que el extensor ya hab\u00eda tratado. Esto se puede probar creando, por ejemplo, un archivo de 64 K en alg\u00fan lugar que no est\u00e9 en cif (de lo contrario, la descarga de copia podr\u00eda complicarse), montando un recurso compartido cif con un tama\u00f1o de 64000, copiando el archivo en \u00e9l y luego comparando el archivo original y la copia. : dd if=/dev/urandom of=/tmp/64K bs=64k count=1 mount //192.168.6.1/test /mnt -o user=...,pass=...,wsize=64000 cp /tmp /64K /mnt/64K cmp /tmp/64K /mnt/64K Sin la correcci\u00f3n, el cmp falla en la posici\u00f3n 64000 (o poco despu\u00e9s)."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/65f2ced695982ccd516196d0a9447d85dbe2eed5", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/844b4e132f57f1333dc79feaa035075a096762e4", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/e45deec35bf7f1f4f992a707b2d04a8c162f2240", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/f3dc1bdb6b0b0693562c7c54a6c28bafa608ba3c", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-27036 - This technique is relevant as it involves a file corruption issue in the Linux kernel, which can be exploited by an attacker to achieve their goals. To defend against this, implement a robust file integrity check mechanism and ensure timely kernel updates."}, {"techniqueID": "T1210", "comment": "CVE-2024-27036 - This technique is relevant as it involves a code execution vulnerability in the Linux kernel, which can be exploited by an attacker to execute arbitrary code. To defend against this, implement a robust memory protection mechanism and ensure timely kernel updates."}, {"techniqueID": "T1501", "comment": "CVE-2024-27036 - This technique is relevant as it involves a data tampering vulnerability in the Linux kernel, which can be exploited by an attacker to manipulate data. To defend against this, implement a robust data integrity check mechanism and ensure timely kernel updates."}], "technical_analysis": {"Introduction": "CVE-2024-27036 is a vulnerability in the Linux kernel that affects the cifs file system. It is a file corruption issue that can be exploited by an attacker to achieve their goals.", "Impact and Scope": "The vulnerability has a CVSS score of 7.8 (V3.1) and an attack vector of LOCAL. It can be exploited by an attacker to execute arbitrary code, read sensitive data, and manipulate data.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques are T1190, T1210, and T1501. These techniques are relevant as they involve file corruption, code execution, and data tampering vulnerabilities.", "Technical Details": "The vulnerability occurs due to a flaw in the xas_pause() function in the Linux kernel. This function is used to handle file extensions and is responsible for pausing the file system when a file is being extended. The vulnerability allows an attacker to manipulate the file system and cause data corruption.", "Detection": "The vulnerability can be detected using a combination of system logs and network traffic analysis.", "Mitigation": "The vulnerability can be mitigated by implementing a robust file integrity check mechanism and ensuring timely kernel updates.", "Conclusion": "In conclusion, CVE-2024-27036 is a significant vulnerability in the Linux kernel that can be exploited by an attacker to achieve their goals. It is essential to implement robust security measures to prevent and detect this vulnerability."}, "executive_analysis": {"Overview": "CVE-2024-27036 is a critical vulnerability in the Linux kernel that can have significant business and technical impacts.", "Business Impact": "The vulnerability can allow an attacker to manipulate data and execute arbitrary code, which can compromise sensitive information and disrupt business operations.", "Technical Impact": "The vulnerability can also allow an attacker to exploit other vulnerabilities in the Linux kernel and gain a foothold in the system.", "Mitigation Strategies": "The recommended mitigation strategies are to implement a robust file integrity check mechanism, ensure timely kernel updates, and monitor system logs and network traffic.", "Recommendations": "The recommended actions for executives are to ensure timely kernel updates, implement robust security measures, and monitor system logs and network traffic.", "Conclusions": "In conclusion, CVE-2024-27036 is a critical vulnerability that requires immediate attention and mitigation. Executives should take immediate action to ensure the security and integrity of their systems."}}