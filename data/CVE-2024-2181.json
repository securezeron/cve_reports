{"id": "CVE-2024-2181", "sourceIdentifier": "security@wordfence.com", "published": "2024-04-09T19:15:28.957", "lastModified": "2024-04-10T13:23:38.787", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Beaver Builder Addons by WPZOOM plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the Button widget in all versions up to, and including, 1.3.4 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El complemento Beaver Builder Addons de WPZOOM para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del widget de bot\u00f3n en todas las versiones hasta la 1.3.4 incluida debido a una sanitizaci\u00f3n de entrada y un escape de salida insuficientes. Esto hace posible que atacantes autenticados, con acceso de nivel de colaborador y superior, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/changeset/3046905/wpzoom-addons-for-beaver-builder", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/6baa44c7-1c13-45ad-9fb5-da06933f3cd0?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-2181 - Stored Cross-Site Scripting vulnerability in the Beaver Builder Addons by WPZOOM plugin for WordPress, allowing authenticated attackers to inject arbitrary web scripts. Defend against this technique by sanitizing and escaping user input."}, {"techniqueID": "T1220", "comment": "CVE-2024-2181 - Insufficient validation and sanitization of user input in the Beaver Builder Addons by WPZOOM plugin for WordPress, making it vulnerable to Stored Cross-Site Scripting. Validate and sanitize user input to prevent unauthorized script injection."}], "technical_analysis": {"Introduction": "The Beaver Builder Addons by WPZOOM plugin for WordPress is vulnerable to Stored Cross-Site Scripting due to insufficient input sanitization and output escaping.", "Impact and Scope": "The vulnerability affects all versions of Beaver Builder Addons by WPZOOM plugin for WordPress up to and including 1.3.4, with a CVSS score of 6.4, attack vector of NETWORK, and attack complexity of LOW.", "Related MITRE ATT&CK Techniques": "T1190 - Exploit Public-Facing Application, T1220 - Cross-Site Scripting", "Technical Details": "The vulnerability occurs in the Button widget, allowing authenticated attackers to inject arbitrary web scripts.", "Detection": "Detect this vulnerability by monitoring for suspicious JavaScript code injection in web applications.", "Mitigation": "Mitigate this vulnerability by sanitizing and escaping user input, as well as validating and sanitizing input before storage.", "Conclusion": "The vulnerability in Beaver Builder Addons by WPZOOM plugin for WordPress requires immediate attention to prevent unauthorized script injection."}, "executive_analysis": {"Overview": "The Beaver Builder Addons by WPZOOM plugin for WordPress is vulnerable to Stored Cross-Site Scripting, allowing attackers to inject malicious code.", "Business Impact": "This vulnerability can result in significant financial losses, reputational damage, and potential legal consequences.", "Technical Impact": "The vulnerability allows attackers to inject malicious code, which can lead to data breaches, unauthorized access, and other security risks.", "Mitigation Strategies": "Implement input validation and sanitization, as well as output escaping to prevent unauthorized script injection.", "Recommendations": "Apply patches, update software, and implement additional security measures to prevent attacks.", "Conclusions": "Immediate action is required to mitigate this vulnerability and prevent potential attacks."}}