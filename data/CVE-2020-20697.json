{"id": "CVE-2020-20697", "sourceIdentifier": "cve@mitre.org", "published": "2023-06-20T15:15:10.537", "lastModified": "2023-06-27T20:46:57.530", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Cross Site Scripting vulnerability in khodakhah NodCMS v.3.0 allows a remote attacker to execute arbitrary code and gain access to senstivie information via a crafted script to the address parameter."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:nodcms:nodcms:3.0:*:*:*:*:*:*:*", "matchCriteriaId": "BDB187B4-9534-425E-8766-91D5BBC8CA78"}]}]}], "references": [{"url": "https://github.com/khodakhah/nodcms/issues/41", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2020-20697 - This is a Cross Site Scripting (XSS) vulnerability, where an attacker can execute arbitrary code and gain access to sensitive information. This technique can be used to execute malicious scripts and gain unauthorized access to systems."}, {"techniqueID": "T1190", "comment": "CVE-2020-20697 - This technique can be used to exploit the XSS vulnerability, where an attacker can inject malicious scripts into the system to execute arbitrary code and gain access to sensitive information."}, {"techniqueID": "T1212", "comment": "CVE-2020-20697 - This technique can be used to gain unauthorized access to systems by exploiting the XSS vulnerability, which allows an attacker to execute malicious scripts and gain access to sensitive information."}], "stix_bundle": "{\"bundle\":[{\"type\":\"bundle\",\"id\":\"bundle-1\",\"generated_by\":\"generated-by-1\",\"created_by\":\"created-by-1\",\"valid_from\":\"2023-06-20T15:15:10.537\",\"valid_until\":\"2023-06-27T20:46:57.530\",\"objects\":[{\"type\":\"vulnerability\",\"id\":\"vulnerability-1\",\"description\":{\"lang\":\"en\",\"value\":\"Cross Site Scripting vulnerability in khodakhah NodCMS v.3.0 allows a remote attacker to execute arbitrary code and gain access to senstivie information via a crafted script to the address parameter.\"},{\"type\":\"cve\",\"id\":\"CVE-2020-20697\",\"primary_status\":\"analyzed\"},{\"type\":\"cvss\",\"data\":{\"score\":{\"base\":4.8,\"version\":\"3.1\",\"attack_vector\":\"network\",\"attack_complexity\":\"low\",\"privileges_required\":\"high\",\"user_interaction_required\":\"required\",\"scope\":\"changed\",\"confidentiality_impact\":\"low\",\"integrity_impact\":\"low\",\"availability_impact\":\"none\",\"base_severity\":\"medium\"}}},{\"type\":\"indicator\",\"id\":\"indicator-1\",\"description\":{\"lang\":\"en\",\"value\":\"A crafted script to the address parameter in khodakhah NodCMS v.3.0\"},{\"type\":\"defense\",\"id\":\"defense-1\",\"label\":\"XSS Defense\",\"description\":{\"lang\":\"en\",\"value\":\"Implement a Content Security Policy (CSP) to prevent XSS attacks\"},{\"type\":\"relationship\",\"id\":\"relationship-1\",\"from\":\"vulnerability-1\",\"to\":\"indicator-1\",\"label\":\"indicated_by\"},{\"type\":\"relationship\",\"id\":\"relationship-2\",\"from\":\"vulnerability-1\",\"to\":\"defense-1\",\"label\":\"mitigated_by\"}]}]}", "technical_analysis": {"Introduction": "The CVE-2020-20697 is a Cross Site Scripting (XSS) vulnerability in khodakhah NodCMS v.3.0, which allows a remote attacker to execute arbitrary code and gain access to sensitive information.", "Impact and Scope": "The impact of this vulnerability is Low, with a cvss score of 4.8. The attack vector is Network, meaning an attacker can exploit this vulnerability remotely.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques for this vulnerability are T1059, T1190, and T1212, which are all related to Cross Site Scripting and exploitation.", "Technical Details": "The vulnerability is caused by a lack of sanitization of user input in the address parameter, allowing an attacker to inject malicious scripts.", "Detection": "Detection of this vulnerability can be done by monitoring for suspicious script execution and examining the address parameter for malicious scripts.", "Mitigation": "Mitigation strategies include implementing a Content Security Policy (CSP) to prevent XSS attacks and validating user input sanitization.", "Conclusion": "In conclusion, the CVE-2020-20697 is a Cross Site Scripting vulnerability that can be exploited to execute arbitrary code and gain access to sensitive information. Detection and mitigation strategies are necessary to prevent this vulnerability from being exploited."}, "executive_analysis": {"Overview": "The CVE-2020-20697 is a Cross Site Scripting vulnerability in khodakhah NodCMS v.3.0.", "Business Impact": "This vulnerability can allow an attacker to gain unauthorized access to sensitive information, which can result in financial and reputational losses.", "Technical Impact": "The technical impact of this vulnerability is the potential for an attacker to execute arbitrary code and gain access to sensitive information.", "Mitigation Strategies": "Implementing a Content Security Policy (CSP) and validating user input sanitization can help mitigate this vulnerability.", "Recommendations": "We recommend implementing a Content Security Policy (CSP) and validating user input sanitization to prevent this vulnerability from being exploited.", "Conclusions": "In conclusion, the CVE-2020-20697 is a critical vulnerability that requires immediate attention. Implementing a Content Security Policy (CSP) and validating user input sanitization can help prevent this vulnerability from being exploited."}}