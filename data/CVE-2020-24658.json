{"id": "CVE-2020-24658", "sourceIdentifier": "cve@mitre.org", "published": "2020-12-24T18:15:12.517", "lastModified": "2021-07-21T11:39:23.747", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Arm Compiler 5 through 5.06u6 has an error in a stack protection feature designed to help spot stack-based buffer overflows in local arrays. When this feature is enabled, a protected function writes a guard value to the stack prior to (above) any vulnerable arrays in the stack. The guard value is checked for corruption on function return; corruption leads to an error-handler call. In certain circumstances, the reference value that is compared against the guard value is itself also written to the stack (after any vulnerable arrays). The reference value is written to the stack when the function runs out of registers to use for other temporary data. If both the reference value and the guard value are written to the stack, then the stack protection will fail to spot corruption when both values are overwritten with the same value. For both the reference value and the guard value to be corrupted, there would need to be both a buffer overflow and a buffer underflow in the vulnerable arrays (or some other vulnerability that causes two separated stack entries to be corrupted)."}, {"lang": "es", "value": "Arm Compiler versiones 5 hasta 5.06u6, presenta un error en una funcionalidad de protecci\u00f3n de pila dise\u00f1ada para ayudar a detectar desbordamientos de b\u00fafer en la regi\u00f3n stack de la memoria ??en matrices locales.&#xa0;Cuando esta funcionalidad est\u00e1 habilitada, una funci\u00f3n protegida escribe un valor de protecci\u00f3n en la pila antes (arriba) de cualquier matriz vulnerable en la pila.&#xa0;El valor de protecci\u00f3n es comprobado en busca de da\u00f1os al devolver la funci\u00f3n;&#xa0;la corrupci\u00f3n conlleva a una llamada al controlador de errores.&#xa0;En determinadas circunstancias, el valor de referencia que se compara con el valor de protecci\u00f3n tambi\u00e9n se escribe en la pila (despu\u00e9s de las matrices vulnerables).&#xa0;El valor de referencia se escribe en la pila cuando la funci\u00f3n se queda sin registros para usar con otros datos temporales.&#xa0;Si tanto el valor de referencia como el valor de protecci\u00f3n se escriben en la pila, la protecci\u00f3n de la pila no detectar\u00e1 da\u00f1os cuando ambos valores se sobrescriban con el mismo valor. Para que tanto el valor de referencia como el valor de protecci\u00f3n se corrompan, es necesario que haya un desbordamiento del b\u00fafer y un subdesbordamiento del b\u00fafer en las matrices vulnerables (o alguna otra vulnerabilidad que cause la corrupci\u00f3n de dos entradas de pila separadas)"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.4}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.4, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-770"}, {"lang": "en", "value": "CWE-787"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:arm:arm_compiler:*:*:*:*:*:*:*:*", "versionStartIncluding": "5.01", "versionEndExcluding": "5.06", "matchCriteriaId": "C6223219-B104-40E4-9DBE-30BED587EB79"}, {"vulnerable": true, "criteria": "cpe:2.3:a:arm:arm_compiler:5.06:-:*:*:*:*:*:*", "matchCriteriaId": "A3E09952-2A1E-495F-B382-3F182CCBD05D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:arm:arm_compiler:5.06:update1:*:*:*:*:*:*", "matchCriteriaId": "4A308555-9090-487D-87A6-3CB4B843B37C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:arm:arm_compiler:5.06:update2:*:*:*:*:*:*", "matchCriteriaId": "AB0F39C4-B299-414F-AA2C-A07B2A15CC71"}, {"vulnerable": true, "criteria": "cpe:2.3:a:arm:arm_compiler:5.06:update3:*:*:*:*:*:*", "matchCriteriaId": "53201F64-80BF-4C84-9582-70EBFAE17DFA"}, {"vulnerable": true, "criteria": "cpe:2.3:a:arm:arm_compiler:5.06:update4:*:*:*:*:*:*", "matchCriteriaId": "560E23EA-E600-4122-84B3-CB0391D1FD61"}, {"vulnerable": true, "criteria": "cpe:2.3:a:arm:arm_compiler:5.06:update5:*:*:*:*:*:*", "matchCriteriaId": "A930F36A-ACAB-4A22-A301-F31CF892B564"}, {"vulnerable": true, "criteria": "cpe:2.3:a:arm:arm_compiler:5.06:update6:*:*:*:*:*:*", "matchCriteriaId": "ED8E0C72-04E5-466D-83E5-6560183F1B22"}, {"vulnerable": true, "criteria": "cpe:2.3:a:arm:arm_compiler:5.06:update7:*:*:*:*:*:*", "matchCriteriaId": "AEEC51A4-CA04-4E70-BD31-C5014A047E15"}]}]}], "references": [{"url": "https://developer.arm.com/support/arm-security-updates/arm-compiler-5-stack-protection", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}], "techniques": [{"techniqueID": "T1048", "comment": "CVE-2020-24658 - This vulnerability allows for the potential exploitation of a buffer overflow by an attacker, enabling them to execute arbitrary code. To defend against this, implement memory protection mechanisms, such as stack canaries, and regularly audit systems for signs of exploitation."}, {"techniqueID": "T1055", "comment": "CVE-2020-24658 - This vulnerability allows for the potential exploitation of a buffer overflow by an attacker, enabling them to execute arbitrary code. To defend against this, implement memory protection mechanisms, such as stack canaries, and regularly audit systems for signs of exploitation."}, {"techniqueID": "T1190", "comment": "CVE-2020-24658 - This vulnerability allows for the potential exploitation of a buffer overflow by an attacker, enabling them to execute arbitrary code. To defend against this, implement memory protection mechanisms, such as stack canaries, and regularly audit systems for signs of exploitation."}], "stix_bundle": {"type": "bundle", "id": "https://example.com/stix_bundle", "spec_version": "2.1", "metadata": {"created_by": "Example User", "created": "2020-12-24T18:15:12.517", "modified": "2021-07-21T11:39:23.747"}, "objects": {"vulnerability": {"id": "https://example.com/cve-2020-24658", "type": "vulnerability", "spec_version": "2.1", "created_by": "Example User", "created": "2020-12-24T18:15:12.517", "modified": "2021-07-21T11:39:23.747", "description": "Arm Compiler 5 through 5.06u6 has an error in a stack protection feature designed to help spot stack-based buffer overflows in local arrays.", "severity": "HIGH", "cve": "CVE-2020-24658", "cvss": {"vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "weaknesses": [{"type": "weakness", "id": "https://example.com/cwe-770", "description": "CWE-770: uninitialized Use of Memory Value"}]}, "indicator": {"id": "https://example.com/indicator-1", "type": "indicator", "spec_version": "2.1", "created_by": "Example User", "created": "2020-12-24T18:15:12.517", "modified": "2021-07-21T11:39:23.747", "description": "Indication of potential exploitation of CVE-2020-24658", "confidence": "HIGH"}, "relationship": {"type": "relationship", "id": "https://example.com/relationship-1", "spec_version": "2.1", "created_by": "Example User", "created": "2020-12-24T18:15:12.517", "modified": "2021-07-21T11:39:23.747", "start_time": "2020-12-24T18:15:12.517", "end_time": "2021-07-21T11:39:23.747", "object": "https://example.com/indicator-1", "relationship_type": "indicates", "object_id": "https://example.com/vulnerability-1"}, "course_of_action": {"id": "https://example.com/course_of_action-1", "type": "course_of_action", "spec_version": "2.1", "created_by": "Example User", "created": "2020-12-24T18:15:12.517", "modified": "2021-07-21T11:39:23.747", "description": "Implement memory protection mechanisms, such as stack canaries, and regularly audit systems for signs of exploitation", "mitigates": [{"type": "relationship", "id": "https://example.com/relationship-2", "spec_version": "2.1", "created_by": "Example User", "created": "2020-12-24T18:15:12.517", "modified": "2021-07-21T11:39:23.747", "start_time": "2020-12-24T18:15:12.517", "end_time": "2021-07-21T11:39:23.747", "object": "https://example.com/technique-1", "relationship_type": "mitigates", "object_id": "https://example.com/vulnerability-1"}]}}}, "technical_analysis": {"Introduction": "Introduction content.", "Impact and Scope": "Details on the impact and scope of the CVE, mention cvss score with version and attack vector.", "Related MITRE ATT&CK Techniques": "List of related MITRE ATT&CK Techniques and their relevance to the CVE.", "Technical Details": "In-depth technical details of the CVE.", "Detection": "Methods for detecting the CVE.", "Mitigation": "Mitigation strategies for the CVE.", "Conclusion": "Summary and conclusions."}, "executive_analysis": {"Overview": "Overview of the CVE.", "Business Impact": "Explanation of the business impact of the CVE.", "Technical Impact": "Explanation of the technical impact of the CVE.", "Mitigation Strategies": "High-level mitigation strategies.", "Recommendations": "Recommendations for executives.", "Conclusions": "Final conclusions and next steps."}}