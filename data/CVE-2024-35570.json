{"id": "CVE-2024-35570", "sourceIdentifier": "cve@mitre.org", "published": "2024-05-23T19:16:01.747", "lastModified": "2024-08-26T16:35:08.370", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "An arbitrary file upload vulnerability in the component \\controller\\ImageUploadController.class of inxedu v2.0.6 allows attackers to execute arbitrary code via uploading a crafted jsp file."}, {"lang": "es", "value": "Una vulnerabilidad de carga de archivos arbitrarios en el componente \\controller\\ImageUploadController.class de inxedu v2.0.6 permite a los atacantes ejecutar c\u00f3digo arbitrario cargando un archivo jsp manipulado."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-434"}]}], "references": [{"url": "https://github.com/KakeruJ/CVE/", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-35570 - The arbitrary file upload vulnerability allows attackers to execute arbitrary code, exploiting the lack of validation of file types. Defenders can implement strict validation and sanitization of file uploads, as well as monitoring and incident response for suspicious file uploads."}, {"techniqueID": "T1592", "comment": "CVE-2024-35570 - The vulnerability allows attackers to upload malicious JSP files, which can be executed as code. Defenders can monitor server logs for suspicious file uploads and implement restrictions on file types and sizes."}, {"techniqueID": "T1568.001", "comment": "CVE-2024-35570 - The vulnerability allows attackers to execute arbitrary code, potentially disclosing sensitive information. Defenders can implement secure coding practices, monitoring, and incident response for suspicious code execution."}], "stix_bundle": {"bundle": {"id": "example-bundle", "type": "bundle", "created_by_ref": "https://example.com/endpoint", "created": "2022-09-01T14:00:00.000Z", "modified": "2022-09-01T14:00:00.000Z", "bundles": [{"type": "indicator", "id": "Indicator:example-indicator", "description": "Arbitrary file upload vulnerability in inedxu v2.0.6", "created_by_ref": "https://example.com/endpoint", "created": "2022-09-01T14:00:00.000Z", "modified": "2022-09-01T14:00:00.000Z", "indicators": [{"type": "observables", "id": "Observable:example-observable", "value": "https://example.com/indxedu-v2.0.6/ImageUploadController.class"}]}], "objects": [{"type": "vulnerability", "id": "Vulnerability:CVE-2024-35570", "cve_id": "CVE-2024-35570", "description": "Arbitrary file upload vulnerability in inedxu v2.0.6", "impact_score": 5.9, "exploitability_score": 3.9, "base_severity": "CRITICAL", "base_score": 9.8, "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, {"type": "capec", "id": "CAPEC:example-capec", "description": "Arbitrary File Upload", "exploit_patterns": [{"id": "example-exploit-pattern", "description": "Upload a malicious JSP file", "techniques": [{"type": "technique", "id": "T1190"}]}]}], "objects_versions": [{"id": "Vulnerability:CVE-2024-35570", "schema_version": "2.1", "required_stix_version": "2.1"}]}}, "technical_analysis": {"Introduction": "The CVE-2024-35570 is an arbitrary file upload vulnerability in inedxu v2.0.6, which allows attackers to execute arbitrary code.", "Impact and Scope": "This vulnerability has a CVSS score of 9.8, indicating a critical severity, and has a high impact on the confidentiality, integrity, and availability of the affected system.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to MITRE ATT&CK techniques T1190, T1592, and T1568.001, which involve exploiting file upload vulnerabilities.", "Technical Details": "The vulnerability is caused by the lack of validation of file types in the inedxu v2.0.6 ImageUploadController.class. An attacker can upload a malicious JSP file, which can be executed as code, allowing them to execute arbitrary code.", "Detection": "Detection involves monitoring server logs for suspicious file uploads and implementing restrictions on file types and sizes.", "Mitigation": "Mitigation strategies include implementing strict validation and sanitization of file uploads, monitoring and incident response for suspicious file uploads, and secure coding practices.", "Conclusion": "The CVE-2024-35570 is a critical vulnerability that requires immediate attention. Defenders must implement mitigation strategies and monitor for suspicious activity."}, "executive_analysis": {"Overview": "The CVE-2024-35570 is a critical vulnerability in inedxu v2.0.6 that allows attackers to execute arbitrary code.", "Business Impact": "This vulnerability has the potential to impact the confidentiality, integrity, and availability of sensitive data, which could result in significant financial losses and reputational damage.", "Technical Impact": "The vulnerability is related to MITRE ATT&CK techniques T1190, T1592, and T1568.001, which involve exploiting file upload vulnerabilities. This vulnerability requires immediate attention and mitigation.", "Mitigation Strategies": "Mitigation strategies include implementing strict validation and sanitization of file uploads, monitoring and incident response for suspicious file uploads, and secure coding practices.", "Recommendations": "Recommendations for executives include implementing a DevOps pipeline with automated testing and validation, implementing a secure coding practices, and conducting regular security audits and vulnerability assessments.", "Conclusions": "The CVE-2024-35570 is a critical vulnerability that requires immediate attention and mitigation. Defenders must prioritize the development of mitigation strategies and maintain consistent monitoring and incident response."}}