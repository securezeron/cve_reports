{"id": "CVE-2020-23185", "sourceIdentifier": "cve@mitre.org", "published": "2021-07-02T18:15:08.327", "lastModified": "2021-07-06T12:29:31.880", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "A stored cross site scripting (XSS) vulnerability in /administration/setting_security.php of PHP-Fusion 9.03.60 allows authenticated attackers to execute arbitrary web scripts or HTML via a crafted payload."}, {"lang": "es", "value": "Una vulnerabilidad de tipo cross site scripting (XSS) almacenada en el archivo /administration/setting_security.php de PHP-Fusion versi\u00f3n 9.03.60, permite a atacantes autenticados ejecutar scripts web o HTML arbitrario por medio de una carga \u00fatil dise\u00f1ada"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:php-fusion:php-fusion:9.03.60:*:*:*:*:*:*:*", "matchCriteriaId": "A4375E88-4C03-4C87-9835-3AEC42937686"}]}]}], "references": [{"url": "https://github.com/phpfusion/PHPFusion/issues/2331", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059.003", "comment": "CVE-2020-23185: Stored Cross-Site Scripting (XSS) - This technique is relevant because an attacker can inject malicious JavaScript code. Defense against this technique includes ensuring proper input validation, encoding, and sanitization of user input, as well as configuring the web application to restrict file types and directories that can be accessed."}, {"techniqueID": "T1190", "comment": "CVE-2020-23185: Stored Cross-Site Scripting (XSS) - This technique is relevant because an attacker can inject malicious JavaScript code. Defense against this technique includes ensuring proper input validation, encoding, and sanitization of user input, as well as configuring the web application to restrict file types and directories that can be accessed."}, {"techniqueID": "T1068", "comment": "CVE-2020-23185: Stored Cross-Site Scripting (XSS) - This technique is relevant because an attacker can inject malicious JavaScript code. Defense against this technique includes ensuring proper input validation, encoding, and sanitization of user input, as well as configuring the web application to restrict file types and directories that can be accessed."}], "stix_bundle": {"type": "bundle", "id": "https://example.com/cve-2020-23185", "name": "CVE-2020-23185", "description": "", "created_by_ref": "https://example.com/author", "created": "2021-07-02T18:15:08.327", "modified": "2021-07-06T12:29:31.880", "vulnerabilities": [{"id": "CVE-2020-23185", "type": "vulnerability", "name": "CVE-2020-23185", "description": "", "severity": "medium", "cvssv3": {"vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "base_score": 5.4, "base_severity": "medium"}, "cvssv2": {"vector": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "base_score": 3.5, "base_severity": "low"}, "references": [{"id": "https://github.com/phpfusion/PHPFusion/issues/2331", "type": "reference", "name": "GitHub Issue 2331", "description": ""}]}], "courses_of_action": [{"id": "COA-CVE-2020-23185", "type": "course-of-action", "name": "COA-CVE-2020-23185", "description": "", "mitigates": [{"id": "T1059.003", "type": "technique", "name": "T1059.003: Command and Scripting Interperter", "description": ""}]}], "defensive_tools": [{"id": "Web Application Firewall", "type": "defensive_tool", "name": "Web Application Firewall", "description": ""}]}, "technical_analysis": {"Introduction": "The CVE-2020-23185 vulnerability is a stored cross-site scripting (XSS) vulnerability that allows an authenticated attacker to inject malicious JavaScript code into the affected web application.", "Impact and Scope": "The vulnerability has a CVSS score of 5.4 and an attack vector of 'NETWORK'.", "Related MITRE ATT&CK Techniques": "T1059.003, T1190, and T1068", "Technical Details": "The vulnerability is located in the /administration/setting_security.php file of PHP-Fusion 9.03.60.", "Detection": "The vulnerability can be detected by monitoring for suspicious JavaScript code injection attempts.", "Mitigation": "The vulnerability can be mitigated by ensuring proper input validation, encoding, and sanitization of user input, as well as configuring the web application to restrict file types and directories that can be accessed.", "Conclusion": "In conclusion, the CVE-2020-23185 vulnerability is a significant threat that can be mitigated by implementing appropriate input validation and sanitization measures."}, "executive_analysis": {"Overview": "The CVE-2020-23185 vulnerability is a stored cross-site scripting (XSS) vulnerability that can allow an authenticated attacker to inject malicious JavaScript code into the affected web application.", "Business Impact": "This vulnerability can result in significant business disruption and financial loss if exploited.", "Technical Impact": "The vulnerability can allow an attacker to inject malicious JavaScript code into the affected web application, which can result in sensitive data theft, unauthorized access, and compromise of the application's security.", "Mitigation Strategies": "Implementing proper input validation, encoding, and sanitization of user input, as well as configuring the web application to restrict file types and directories that can be accessed.", "Recommendations": "Patch the vulnerability as soon as possible, implement additional security measures such as web application firewalls and intrusion detection systems.", "Conclusions": "In conclusion, the CVE-2020-23185 vulnerability is a significant threat that requires immediate attention and mitigation to prevent business disruption and financial loss."}}