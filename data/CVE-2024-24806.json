{"id": "CVE-2024-24806", "sourceIdentifier": "security-advisories@github.com", "published": "2024-02-07T22:15:10.173", "lastModified": "2024-07-18T01:15:13.310", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "libuv is a multi-platform support library with a focus on asynchronous I/O. The `uv_getaddrinfo` function in `src/unix/getaddrinfo.c` (and its windows counterpart `src/win/getaddrinfo.c`), truncates hostnames to 256 characters before calling `getaddrinfo`. This behavior can be exploited to create addresses like `0x00007f000001`, which are considered valid by `getaddrinfo` and could allow an attacker to craft payloads that resolve to unintended IP addresses, bypassing developer checks. The vulnerability arises due to how the `hostname_ascii` variable (with a length of 256 bytes) is handled in `uv_getaddrinfo` and subsequently in `uv__idna_toascii`. When the hostname exceeds 256 characters, it gets truncated without a terminating null byte. As a result attackers may be able to access internal APIs or for websites (similar to MySpace) that allows users to have `username.example.com` pages. Internal services that crawl or cache these user pages can be exposed to SSRF attacks if a malicious user chooses a long vulnerable username. This issue has been addressed in release version 1.48.0. Users are advised to upgrade. There are no known workarounds for this vulnerability."}, {"lang": "es", "value": "libuv es una librer\u00eda de soporte multiplataforma centrada en E/S as\u00edncrona. La funci\u00f3n `uv_getaddrinfo` en `src/unix/getaddrinfo.c` (y su contraparte de Windows `src/win/getaddrinfo.c`), trunca los nombres de host a 256 caracteres antes de llamar a `getaddrinfo`. Este comportamiento se puede aprovechar para crear direcciones como `0x00007f000001`, que `getaddrinfo` considera v\u00e1lidas y podr\u00edan permitir a un atacante crear payloads que se resuelvan en direcciones IP no deseadas, evitando las comprobaciones de los desarrolladores. La vulnerabilidad surge debido a c\u00f3mo se maneja la variable `hostname_ascii` (con una longitud de 256 bytes) en `uv_getaddrinfo` y posteriormente en `uv__idna_toascii`. Cuando el nombre de host supera los 256 caracteres, se trunca sin un byte nulo final. Como resultado, los atacantes pueden acceder a API internas o a sitios web (similares a MySpace) que permiten a los usuarios tener p\u00e1ginas `nombre de usuario.ejemplo.com`. Los servicios internos que rastrean o almacenan en cach\u00e9 estas p\u00e1ginas de usuario pueden quedar expuestos a ataques SSRF si un usuario malintencionado elige un nombre de usuario largo y vulnerable. Este problema se solucion\u00f3 en la versi\u00f3n 1.48.0. Se recomienda a los usuarios que actualicen. No se conocen workarounds para esta vulnerabilidad."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 7.3, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.4}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 7.3, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.4}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-918"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:libuv:libuv:*:*:*:*:*:*:*:*", "versionStartIncluding": "1.24.0", "versionEndExcluding": "1.48.0", "matchCriteriaId": "7A5D8905-1DA8-45F4-886D-2FDAA3C722DF"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2024/02/08/2", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2024/02/11/1", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2024/03/11/1", "source": "security-advisories@github.com"}, {"url": "https://github.com/libuv/libuv/commit/0f2d7e784a256b54b2385043438848047bc2a629", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/libuv/libuv/commit/3530bcc30350d4a6ccf35d2f7b33e23292b9de70", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/libuv/libuv/commit/c858a147643de38a09dd4164758ae5b685f2b488", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/libuv/libuv/commit/e0327e1d508b8207c9150b6e582f0adf26213c39", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/libuv/libuv/security/advisories/GHSA-f74f-cvh7-c6q6", "source": "security-advisories@github.com", "tags": ["Exploit", "Vendor Advisory"]}, {"url": "https://gitlab.kitware.com/cmake/cmake/-/issues/26112", "source": "security-advisories@github.com"}, {"url": "https://lists.debian.org/debian-lts-announce/2024/03/msg00005.html", "source": "security-advisories@github.com"}, {"url": "https://security.netapp.com/advisory/ntap-20240605-0008/", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1047", "comment": "CVE-2024-24806 - This technique can be used to exploit the SSRF vulnerability in libuv. Attackers may be able to access internal APIs or internal websites that are not intended for external access."}, {"techniqueID": "T1190", "comment": "CVE-2024-24806 - This technique can be used to exploit the SSRF vulnerability in libuv. Attackers may be able to access internal APIs or internal websites that are not intended for external access."}, {"techniqueID": "T1505", "comment": "CVE-2024-24806 - This technique can be used to exploit the SSRF vulnerability in libuv. Attackers may be able to access internal APIs or internal websites that are not intended for external access."}], "technical_analysis": {"Introduction": "CVE-2024-24806 is a SSRF vulnerability in libuv that allows attackers to access internal APIs or internal websites that are not intended for external access.", "Impact and Scope": "The impact of this vulnerability is high, with a CVSS score of 7.3. The attack vector is network-based and requires no user interaction.", "Related MITRE ATT&CK Techniques": "T1047, T1190, T1505", "Technical Details": "The vulnerability arises due to how the `hostname_ascii` variable is handled in `uv_getaddrinfo` and subsequently in `uv__idna_toascii`. When the hostname exceeds 256 characters, it gets truncated without a terminating null byte.", "Detection": "Detecting this vulnerability requires monitoring network traffic for suspicious interactions with internal APIs or internal websites.", "Mitigation": "The vulnerability can be mitigated by upgrading to a patched version of libuv or by implementing a network segmentation solution.", "Conclusion": "In conclusion, CVE-2024-24806 is a significant vulnerability that requires immediate attention. It is essential to upgrade libuv to a patched version and implement network segmentation to prevent attackers from exploiting this vulnerability."}, "executive_analysis": {"Overview": "CVE-2024-24806 is a SSRF vulnerability in libuv that can allow attackers to access internal APIs or internal websites that are not intended for external access.", "Business Impact": "This vulnerability can potentially lead to data breaches, unauthorized access to internal systems, and reputational damage.", "Technical Impact": "The attack vector is network-based, and no user interaction is required. This makes it a high-risk vulnerability.", "Mitigation Strategies": "Upgrading to a patched version of libuv and implementing network segmentation are the recommended mitigation strategies.", "Recommendations": "It is recommended that organizations immediately upgrade libuv to a patched version and implement network segmentation to prevent attackers from exploiting this vulnerability.", "Conclusions": "In conclusion, CVE-2024-24806 is a significant vulnerability that requires immediate attention. It is essential to take swift action to mitigate this vulnerability and protect against potential attacks."}}