{"id": "CVE-2024-24560", "sourceIdentifier": "security-advisories@github.com", "published": "2024-02-02T17:15:11.720", "lastModified": "2024-02-12T15:23:42.867", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Vyper is a Pythonic Smart Contract Language for the Ethereum Virtual Machine. When calls to external contracts are made, we write the input buffer starting at byte 28, and allocate the return buffer to start at byte 0 (overlapping with the input buffer). When checking RETURNDATASIZE for dynamic types, the size is compared only to the minimum allowed size for that type, and not to the returned value's length. As a result, malformed return data can cause the contract to mistake data from the input buffer for returndata.  When the called contract returns invalid ABIv2 encoded data, the calling contract can read different invalid data (from the dirty buffer) than the called contract returned."}, {"lang": "es", "value": "Vyper es un lenguaje de contrato inteligente pit\u00f3nico para la m\u00e1quina virtual Ethereum. Cuando se realizan llamadas a contratos externos, escribimos el b\u00fafer de entrada comenzando en el byte 28 y asignamos el b\u00fafer de retorno para que comience en el byte 0 (superponi\u00e9ndose con el b\u00fafer de entrada). Al verificar RETURNDATASIZE para tipos din\u00e1micos, el tama\u00f1o se compara solo con el tama\u00f1o m\u00ednimo permitido para ese tipo y no con la longitud del valor devuelto. Como resultado, los datos de devoluci\u00f3n con formato incorrecto pueden hacer que el contrato confunda los datos del b\u00fafer de entrada con los datos de devoluci\u00f3n. Cuando el contrato llamado devuelve datos codificados ABIv2 no v\u00e1lidos, el contrato que llama puede leer datos no v\u00e1lidos diferentes (del b\u00fafer sucio) que los devueltos por el contrato llamado."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 3.7, "baseSeverity": "LOW"}, "exploitabilityScore": 2.2, "impactScore": 1.4}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-119"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:vyperlang:vyper:*:*:*:*:*:python:*:*", "versionEndIncluding": "0.3.10", "matchCriteriaId": "832C489D-4288-46B4-A29E-0E7168748042"}]}]}], "references": [{"url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-gp3w-2v2m-p686", "source": "security-advisories@github.com", "tags": ["Exploit", "Vendor Advisory"]}], "techniques": [{"techniqueID": "T1027", "comment": "CVE-2024-24560 - This vulnerability allows an attacker to manipulate the return data of a called contract, potentially leading to a wide range of attacks, such as contract privilege escalation and code injection. Defending against this vulnerability requires implementing proper contract input validation and limiting the privileges of called contracts."}, {"techniqueID": "T1210", "comment": "CVE-2024-24560 - An attacker can exploit this vulnerability by calling a contract with maliciously crafted input data, which can cause the contract to execute arbitrary code. Defending against this vulnerability requires implementing input validation and sanitization in called contracts."}, {"techniqueID": "T1505", "comment": "CVE-2024-24560 - An attacker can exploit this vulnerability by creating a malicious contract that calls a vulnerable contract with malformed input data. Defending against this vulnerability requires implementing proper contract input validation and limiting the privileges of called contracts."}], "stix_bundle": {"id": "CVE-2024-24560-STIX-Bundle", "description": "Vulnerability Analysis for CVE-2024-24560", "objects": [{"type": "incident", "id": "incident-id-1", "label": "Vulnerability Incident", "created_by_ref": "actor-id-1", "created": "2024-02-02T17:15:11.720", "modified": "2024-02-12T15:23:42.867", "categories": ["vulnerability", "incident"], "mitigations": ["patch", "config-change"], "attributed_relationships": [{"relationship": "attributed-to", "role": "actor", "object_ref": "actor-id-1"}], "_rels": {"includes": {"type": "vulnerability", "id": "vulnerability-id-1"}}}, {"type": "vulnerability", "id": "vulnerability-id-1", "label": "CVE-2024-24560", "description": "Vyper is a Pythonic Smart Contract Language for the Ethereum Virtual Machine. When calls to external contracts are made, we write the input buffer starting at byte 28, and allocate the return buffer to start at byte 0 (overlapping with the input buffer).", "published": "2024-02-02T17:15:11.720", "last_modified": "2024-02-12T15:23:42.867", "cwe": "CWE-119", "references": [{"type": "reference", "id": "reference-id-1", "label": "GitHub Security Advisory", "url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-gp3w-2v2m-p686"}]}], "_rels": {"includes": {"type": "actor", "id": "actor-id-1", "label": "Vulnerability Actor"}}}, "technical_analysis": {"Introduction": "CVE-2024-24560 is a vulnerability in the Vyper smart contract language that allows an attacker to manipulate the return data of a called contract, potentially leading to a wide range of attacks.", "Impact and Scope": "The vulnerability affects all Vyper smart contracts that call external contracts with malformed input data.", "Related MITRE ATT&CK Techniques": "T1027, T1210, T1505", "Technical Details": "The vulnerability is caused by the way Vyper handles return data in called contracts.", "Detection": "Detection methods include monitoring for suspicious contract calls and inspecting contract input data for malformed data.", "Mitigation": "Mitigation strategies include implementing proper contract input validation and limiting the privileges of called contracts.", "Conclusion": "CVE-2024-24560 is a serious vulnerability that requires immediate attention and mitigation to prevent exploitation."}, "executive_analysis": {"Overview": "CVE-2024-24560 is a critical vulnerability in the Vyper smart contract language that can lead to a wide range of attacks.", "Business Impact": "The vulnerability can have significant business impacts, including financial losses and reputational damage.", "Technical Impact": "The vulnerability affects the security and integrity of Vyper smart contracts.", "Mitigation Strategies": "Implementing proper contract input validation and limiting the privileges of called contracts can help mitigate the vulnerability.", "Recommendations": "We recommend that all Vyper smart contract developers implement the recommended mitigation strategies immediately.", "Conclusions": "CVE-2024-24560 is a significant vulnerability that requires immediate attention and mitigation to prevent exploitation."}}