{"id": "CVE-2024-44793", "sourceIdentifier": "cve@mitre.org", "published": "2024-08-26T20:15:08.007", "lastModified": "2024-09-05T18:28:42.687", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "A cross-site scripting (XSS) vulnerability in the component /managers/multiple_freeleech.php of Gazelle commit 63b3370 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the torrents parameter."}, {"lang": "es", "value": "Una vulnerabilidad de cross-site scripting (XSS) en el componente /managers/multiple_freeleech.php de Gazelle commit 63b3370 permite a los atacantes ejecutar scripts web o HTML arbitrarios a trav\u00e9s de un payload manipulado inyectado en el par\u00e1metro torrents."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:gazelle_project:gazelle:*:*:*:*:*:*:*:*", "versionEndExcluding": "2016-11-08", "matchCriteriaId": "032237DC-F7F0-436E-8AE6-00709E76A3A4"}]}]}], "references": [{"url": "http://gazelle.com", "source": "cve@mitre.org", "tags": ["Not Applicable"]}, {"url": "https://github.com/WhatCD/Gazelle", "source": "cve@mitre.org", "tags": ["Product"]}, {"url": "https://github.com/WhatCD/Gazelle/issues/131", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-44793 - Cross-site scripting (XSS) vulnerability allowing attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the torrents parameter"}, {"techniqueID": "T1046", "comment": "CVE-2024-44793 - Cross-site scripting (XSS) vulnerability can be exploited to execute malicious scripts, requiring user interaction to execute"}, {"techniqueID": "T1190", "comment": "CVE-2024-44793 - Cross-site scripting (XSS) vulnerability can be used to inject malicious scripts to compromise user sessions and hijack sensitive information"}], "stix_bundle": {"type": "bundle", "id": "CVE-2024-44793", "generated_at": "2024-09-05T18:28:42.687", "objects": [{"id": "msac-1", "type": "course-of-action", "relationship": "mitigates", "description": "Use of input validation and sanitization to prevent XSS attacks", "techniques": [{"idRef": "mitre-attack-t1241", "relationship": "used-by"}]}, {"id": "msac-2", "type": "course-of-action", "relationship": "mitigates", "description": "Patch the affected component /managers/multiple_freeleech.php", "techniques": []}, {"id": "d3fend-1", "type": "defense-technique", "description": "Web application firewall (WAF) configuration to block malicious requests", "techniques": [{"idRef": "mitre-attack-t1046", "relationship": "detects"}]}, {"id": "d3fend-2", "type": "defense-technique", "description": "Regular security audits and vulnerability scanning to identify and address potential vulnerabilities", "techniques": [{"idRef": "mitre-attack-t1059", "relationship": "detects"}]}], "relationships": [{"id": "msac-1", "type": "mitigates", "description": "This course of action mitigates the CVE-2024-44793 vulnerability by preventing XSS attacks", "objects": [{"idRef": "CVE-2024-44793", "relationship": "mitigated-by"}]}]}, "technical_analysis": {"Introduction": "This analysis discusses the Cross-site scripting (XSS) vulnerability in the /managers/multiple_freeleech.php component of Gazelle, allowing attackers to inject arbitrary web scripts or HTML.", "Impact and Scope": "The vulnerability has a CVSS score of 6.1, with an attack vector of NETWORK and attack complexity of LOW. It allows attackers to execute arbitrary web scripts or HTML, posing a moderate risk to affected systems.", "Related MITRE ATT&CK Techniques": "The following MITRE ATT&CK techniques are related to this vulnerability: T1059, T1046, and T1190.", "Technical Details": "The vulnerability occurs due to the absence of input validation and sanitization in the /managers/multiple_freeleech.php component, allowing attackers to inject malicious scripts or HTML.", "Detection": "Detection of the vulnerability can be done using Web Application Firewalls (WAFs) and regular security audits.", "Mitigation": "Mitigation strategies include patching the affected component, using input validation and sanitization, and configuring WAFs to block malicious requests.", "Conclusion": "In conclusion, this analysis highlights the importance of regular security audits, input validation, and sanitization to prevent Cross-site scripting (XSS) vulnerabilities."}, "executive_analysis": {"Overview": "This analysis discusses the Cross-site scripting (XSS) vulnerability in the /managers/multiple_freeleech.php component of Gazelle, highlighting the potential risks and mitigation strategies.", "Business Impact": "The vulnerability poses a moderate risk to affected systems, requiring immediate attention to prevent exploitation and potential data breaches.", "Technical Impact": "The vulnerability allows attackers to execute arbitrary web scripts or HTML, compromising user sessions and sensitive information.", "Mitigation Strategies": "Patch the affected component, use input validation and sanitization, and configure WAFs to block malicious requests.", "Recommendations": "Regular security audits, vulnerability scanning, and patching should be prioritized to prevent similar vulnerabilities in the future.", "Conclusions": "In conclusion, this analysis emphasizes the importance of proactive security measures to prevent Cross-site scripting (XSS) vulnerabilities and protect against potential attacks."}}