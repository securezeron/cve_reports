{"id": "CVE-2024-40975", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-07-12T13:15:19.007", "lastModified": "2024-07-12T16:34:58.687", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: x86-android-tablets: Unregister devices in reverse order\n\nNot all subsystems support a device getting removed while there are\nstill consumers of the device with a reference to the device.\n\nOne example of this is the regulator subsystem. If a regulator gets\nunregistered while there are still drivers holding a reference\na WARN() at drivers/regulator/core.c:5829 triggers, e.g.:\n\n WARNING: CPU: 1 PID: 1587 at drivers/regulator/core.c:5829 regulator_unregister\n Hardware name: Intel Corp. VALLEYVIEW C0 PLATFORM/BYT-T FFD8, BIOS BLADE_21.X64.0005.R00.1504101516 FFD8_X64_R_2015_04_10_1516 04/10/2015\n RIP: 0010:regulator_unregister\n Call Trace:\n  <TASK>\n  regulator_unregister\n  devres_release_group\n  i2c_device_remove\n  device_release_driver_internal\n  bus_remove_device\n  device_del\n  device_unregister\n  x86_android_tablet_remove\n\nOn the Lenovo Yoga Tablet 2 series the bq24190 charger chip also provides\na 5V boost converter output for powering USB devices connected to the micro\nUSB port, the bq24190-charger driver exports this as a Vbus regulator.\n\nOn the 830 (8\") and 1050 (\"10\") models this regulator is controlled by\na platform_device and x86_android_tablet_remove() removes platform_device-s\nbefore i2c_clients so the consumer gets removed first.\n\nBut on the 1380 (13\") model there is a lc824206xa micro-USB switch\nconnected over I2C and the extcon driver for that controls the regulator.\nThe bq24190 i2c-client *must* be registered first, because that creates\nthe regulator with the lc824206xa listed as its consumer. If the regulator\nhas not been registered yet the lc824206xa driver will end up getting\na dummy regulator.\n\nSince in this case both the regulator provider and consumer are I2C\ndevices, the only way to ensure that the consumer is unregistered first\nis to unregister the I2C devices in reverse order of in which they were\ncreated.\n\nFor consistency and to avoid similar problems in the future change\nx86_android_tablet_remove() to unregister all device types in reverse\norder."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: plataforma/x86: x86-android-tablets: cancelar el registro de dispositivos en orden inverso. No todos los subsistemas admiten la eliminaci\u00f3n de un dispositivo mientras todav\u00eda hay consumidores del dispositivo con una referencia al dispositivo. Un ejemplo de esto es el subsistema regulador. Si un regulador se da de baja mientras todav\u00eda hay controladores que tienen una referencia, se activa WARN() en drivers/regulator/core.c:5829, por ejemplo: ADVERTENCIA: CPU: 1 PID: 1587 en drivers/regulator/core.c:5829 regulator_unregister Nombre del hardware: Intel Corp. VALLEYVIEW C0 PLATFORM/BYT-T FFD8, BIOS BLADE_21.X64.0005.R00.1504101516 FFD8_X64_R_2015_04_10_1516 10/04/2015 RIP: 0010:regulator_unregister Seguimiento de llamada:  regulator_unregister i2c_device_remove  devres_release_group device_release_driver_internal  device_del device_unregister x86_android_tablet_remove En la serie Lenovo Yoga Tablet 2, el chip del cargador bq24190 tambi\u00e9n proporciona una salida de convertidor elevador de 5 V para alimentar dispositivos USB conectados al puerto micro USB; el controlador del cargador bq24190 lo exporta como un regulador Vbus. En los modelos 830 (8\") y 1050 (\"10\"), este regulador est\u00e1 controlado por un platform_device y x86_android_tablet_remove() elimina platform_device-s antes que i2c_clients para que el consumidor se elimine primero. Pero en el modelo 1380 (13\") hay un interruptor micro-USB lc824206xa conectado a trav\u00e9s de I2C y el controlador externo que controla el regulador. El cliente i2c bq24190 *debe* registrarse primero, porque eso crea el regulador con el lc824206xa listado como su consumidor. Si el regulador a\u00fan no se ha registrado, el controlador lc824206xa terminar\u00e1 obteniendo un regulador ficticio. Dado que en este caso tanto el proveedor del regulador como el consumidor son dispositivos I2C, la \u00fanica forma de garantizar que el consumidor cancele el registro primero es cancelar el registro de los dispositivos I2C en el orden inverso al que fueron creados. Para mantener la coherencia y evitar problemas similares en el futuro, cambie x86_android_tablet_remove() para cancelar el registro de todos los tipos de dispositivos en orden inverso."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/3de0f2627ef849735f155c1818247f58404dddfe", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/f0c982853d665597d17e4995ff479fbbf79a9cf6", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1087", "comment": "Mismatched data types - This vulnerability could potentially be exploited by an attacker to execute arbitrary code on the targeted Linux-based system and gain elevated privileges."}, {"techniqueID": "T1190", "comment": "Service exploitation - This vulnerability could potentially be exploited by an attacker to gain unauthorized access to the targeted system's resources and data."}, {"techniqueID": "TA0001: Initial Access", "comment": "Valid sequences and malleable protocol messages - This vulnerability could potentially be exploited by an attacker to gain initial access to the targeted system and establish a foothold for further exploitation."}, {"techniqueID": "TA0038: Evasion Techniques", "comment": "Code injection defense evasion - This vulnerability could potentially be exploited by an attacker to evade detection by injecting malicious code into the targeted system's memory."}], "stix_bundle": {"objects": [{"id": "http://example.com/vulns/1", "type": "vulnerability", "created_by_ref": "http://example.com/users/1", "modified": "2023-08-12T14:30:00.000Z", "name": "Linux Kernel x86-android-tablets Vulnerability", "description": "A vulnerability in the Linux kernel's x86-android-tablets subsystem allows an attacker to execute arbitrary code on the targeted system.", "vulnerable_products": [{"product_name": "Linux Kernel", "product_version": "5.18.0-2-amd64"}]}, {"id": "http://example.com/courses-of-action/1", "type": "course-of-action", "created_by_ref": "http://example.com/users/1", "modified": "2023-08-12T14:30:00.000Z", "name": "Apply Patch", "description": "Apply patch to fix the vulnerability.", "indicators": [{"indicator": "Patch applied successfully."}]}], "relationships": [{"relationship_type": "related_to", "source_ref": "http://example.com/vulns/1", "target_ref": "http://example.com/courses-of-action/1"}]}, "technical_analysis": {"Introduction": "The Linux kernel's x86-android-tablets subsystem contains a vulnerability that allows an attacker to execute arbitrary code on the targeted system.", "Impact and Scope": "The vulnerability affects the Linux kernel's x86-android-tablets subsystem, which is used in various devices and systems.", "Related MITRE ATT&CK Techniques": "The vulnerability could potentially be exploited using MITRE ATT&CK techniques such as T1087, T1190, TA0001, and TA0038.", "Technical Details": "The vulnerability in the Linux kernel's x86-android-tablets subsystem allows an attacker to execute arbitrary code on the targeted system by injecting malicious code into the targeted system's memory.", "Detection": "Detection of the vulnerability can be done by checking for the presence of the malicious code in the targeted system's memory.", "Mitigation": "The vulnerability can be mitigated by applying the patch to the targeted system.", "Conclusion": "In conclusion, the Linux kernel's x86-android-tablets subsystem contains a vulnerability that can be exploited to execute arbitrary code on the targeted system. The vulnerability can be mitigated by applying the patch to the targeted system."}, "executive_analysis": {"Overview": "The Linux kernel's x86-android-tablets subsystem contains a vulnerability that allows an attacker to execute arbitrary code on the targeted system.", "Business Impact": "The vulnerability could potentially impact the targeted system's security and data integrity.", "Technical Impact": "The vulnerability could potentially allow an attacker to gain unauthorized access to the targeted system's resources and data.", "Mitigation Strategies": "The vulnerability can be mitigated by applying the patch to the targeted system.", "Recommendations": "Recommendations include applying the patch to the targeted system and implementing additional security measures to prevent exploitation.", "Conclusions": "In conclusion, the vulnerability in the Linux kernel's x86-android-tablets subsystem presents a significant risk to the security and data integrity of the targeted system. Immediate action should be taken to mitigate the vulnerability."}}