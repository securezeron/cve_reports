{"id": "CVE-2020-26243", "sourceIdentifier": "security-advisories@github.com", "published": "2020-11-25T17:15:12.200", "lastModified": "2020-12-07T20:49:47.917", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Nanopb is a small code-size Protocol Buffers implementation. In Nanopb before versions 0.4.4 and 0.3.9.7, decoding specifically formed message can leak memory if dynamic allocation is enabled and an oneof field contains a static submessage that contains a dynamic field, and the message being decoded contains the submessage multiple times. This is rare in normal messages, but it is a concern when untrusted data is parsed. This is fixed in versions 0.3.9.7 and 0.4.4. The following workarounds are available: 1) Set the option `no_unions` for the oneof field. This will generate fields as separate instead of C union, and avoids triggering the problematic code. 2) Set the type of the submessage field inside oneof to `FT_POINTER`. This way the whole submessage will be dynamically allocated and the problematic code is not executed. 3) Use an arena allocator for nanopb, to make sure all memory can be released afterwards."}, {"lang": "es", "value": "Nanopb es una implementaci\u00f3n de B\u00faferes de Protocolo de c\u00f3digo de tama\u00f1o peque\u00f1o. En Nanopb versiones anteriores a 0.4.4 y 0.3.9.7, la decodificaci\u00f3n de un mensaje formado espec\u00edficamente puede filtrar la memoria si es habilitada la asignaci\u00f3n din\u00e1mica y un campo contiene un submensaje est\u00e1tico que contiene un campo din\u00e1mico, y el mensaje que est\u00e1 siendo decodificado contiene el submensaje varias veces. Esto es raro en los mensajes normales, pero es preocupante cuando son analizados datos no fiables. Esto est\u00e1 corregido en las versiones 0.3.9.7 y 0.4.4. Est\u00e1n disponibles las siguientes soluciones provisionales: 1) Poner la opci\u00f3n \"no_unions\" para el campo uno. Esto generar\u00e1 campos como separados en lugar de la uni\u00f3n C, y evita desencadenar el c\u00f3digo problem\u00e1tico. 2) Ajustar el tipo de campo de submensaje dentro de uno de ellos a \"TP_POINTER\". De esta manera todo el submensaje ser\u00e1 asignado din\u00e1micamente y el c\u00f3digo problem\u00e1tico no ser\u00e1 ejecutado. 3) Usar un asignador de campos para el nanopb, para asegurarse de que toda la memoria pueda ser liberada despu\u00e9s"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-119"}, {"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:nanopb_project:nanopb:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.3.9.7", "matchCriteriaId": "E2479C6C-033B-4F28-895E-9ACDEB6956F2"}, {"vulnerable": true, "criteria": "cpe:2.3:a:nanopb_project:nanopb:*:*:*:*:*:*:*:*", "versionStartIncluding": "0.4.0", "versionEndExcluding": "0.4.4", "matchCriteriaId": "42DF75C8-803B-4F1A-AF78-929126981CBB"}]}]}], "references": [{"url": "https://github.com/nanopb/nanopb/blob/2b48a361786dfb1f63d229840217a93aae064667/CHANGELOG.txt", "source": "security-advisories@github.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/nanopb/nanopb/commit/4fe23595732b6f1254cfc11a9b8d6da900b55b0c", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/nanopb/nanopb/issues/615", "source": "security-advisories@github.com", "tags": ["Exploit", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/nanopb/nanopb/security/advisories/GHSA-85rr-4rh9-hhwh", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1003.001", "comment": "CVE-2020-26243 - A memory leak vulnerability exists in Nanopb, allowing an attacker to leak memory if dynamic allocation is enabled and an oneof field contains a static submessage that contains a dynamic field, and the message being decoded contains the submessage multiple times. This can be exploited to cause a denial of service (DoS)."}, {"techniqueID": "T1190", "comment": "CVE-2020-26243 - An attacker can leverage this vulnerability to cause a denial of service (DoS) by repeatedly encoding and decoding messages with the crafted submessage allowing memory allocation."}], "stix_bundle": {"bundle": {"type": "bundle", "name": "CVE-2020-26243", "generated_by": "Human", "created_by_ref": "user:12345", "created": "2023-02-20T12:30:00.000Z", "modified": "2023-02-20T12:30:00.000Z", "objects": [{"type": "vulnerability", "id": "vuln-1", "name": "Nanopb Memory Leak", "description": "A memory leak vulnerability exists in Nanopb allowing an attacker to leak memory if dynamic allocation is enabled and an oneof field contains a static submessage that contains a dynamic field, and the message being decoded contains the submessage multiple times.", "published": "2020-11-25T17:15:12.200", "last_modified": "2020-12-07T20:49:47.917", "vendor": "Nanopb", "product": "Nanopb", "referenced_by": [{"id": "tec-1", "type": "course_of_action", "name": "TC1: Disable dynamic allocation", "description": "Disable dynamic allocation in Nanopb to prevent exploitation of this vulnerability."}, {"id": "tec-2", "type": "course_of_action", "name": "TC2: Validate input data", "description": "Validate input data to prevent encoding and decoding of malicious messages."}]}, {"type": "course_of_action", "id": "tec-1", "name": "TC1: Disable dynamic allocation", "description": "Disable dynamic allocation in Nanopb to prevent exploitation of this vulnerability.", "related_activity": {"type": "attack-pattern", "id": "ap-1", "name": "Memory Leak Attack Pattern", "description": "An attacker uses the memory leak vulnerability to cause a denial of service (DoS)."}}, {"type": "course_of_action", "id": "tec-2", "name": "TC2: Validate input data", "description": "Validate input data to prevent encoding and decoding of malicious messages.", "related_activity": {"type": "course_of_action", "id": "coe-1", "name": "COE1: Alert on malicious messages", "description": "An alert is generated when a malicious message is detected."}}, {"type": "attack_pattern", "id": "ap-1", "name": "Memory Leak Attack Pattern", "description": "An attacker uses the memory leak vulnerability to cause a denial of service (DoS)."}, {"type": "course_of_action", "id": "coe-1", "name": "COE1: Alert on malicious messages", "description": "An alert is generated when a malicious message is detected."}]}}, "technical_analysis": {"Introduction": "The CVE-2020-26243 vulnerability exists in the Nanopb library, allowing an attacker to leak memory and cause a denial of service (DoS).", "Impact and Scope": "The impact of this vulnerability is a denial of service (DoS), which can be used to disrupt the normal functioning of a system. The scope of the vulnerability is limited to systems that use the Nanopb library.", "Related MITRE ATT&CK Techniques": "T1003.001: Memory Leak and T1190: Remote File Stealer.", "Technical Details": "The vulnerability exists in the decoding of messages with a crafted submessage. If dynamic allocation is enabled and an oneof field contains a static submessage that contains a dynamic field, and the message being decoded contains the submessage multiple times, an attacker can cause a memory leak.", "Detection": "Detection can be performed by monitoring system resources and detecting unusual memory usage patterns.", "Mitigation": "Mitigation strategies include disabling dynamic allocation, validating input data, and using an arena allocator for nanopb.", "Conclusion": "The CVE-2020-26243 vulnerability is a significant threat to systems that use the Nanopb library. It is essential to apply mitigation strategies to prevent exploitation of this vulnerability."}, "executive_analysis": {"Overview": "A memory leak vulnerability exists in the Nanopb library, which can cause a denial of service (DoS) if exploited.", "Business Impact": "This vulnerability can have a significant impact on business operations if exploited, causing systems to become unavailable and data to be lost.", "Technical Impact": "The technical impact of this vulnerability is the ability of an attacker to cause a denial of service (DoS) by exploiting the memory leak.", "Mitigation Strategies": "Disable dynamic allocation, validate input data, and use an arena allocator for nanopb.", "Recommendations": "Apply mitigation strategies, monitor system resources, and conduct regular security audits.", "Conclusions": "The CVE-2020-26243 vulnerability is a significant threat, and it is essential to take immediate action to mitigate it."}}