{"id": "CVE-2024-42136", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-07-30T08:15:05.507", "lastModified": "2024-07-30T13:32:45.943", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ncdrom: rearrange last_media_change check to avoid unintentional overflow\n\nWhen running syzkaller with the newly reintroduced signed integer wrap\nsanitizer we encounter this splat:\n\n[  366.015950] UBSAN: signed-integer-overflow in ../drivers/cdrom/cdrom.c:2361:33\n[  366.021089] -9223372036854775808 - 346321 cannot be represented in type '__s64' (aka 'long long')\n[  366.025894] program syz-executor.4 is using a deprecated SCSI ioctl, please convert it to SG_IO\n[  366.027502] CPU: 5 PID: 28472 Comm: syz-executor.7 Not tainted 6.8.0-rc2-00035-gb3ef86b5a957 #1\n[  366.027512] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014\n[  366.027518] Call Trace:\n[  366.027523]  <TASK>\n[  366.027533]  dump_stack_lvl+0x93/0xd0\n[  366.027899]  handle_overflow+0x171/0x1b0\n[  366.038787] ata1.00: invalid multi_count 32 ignored\n[  366.043924]  cdrom_ioctl+0x2c3f/0x2d10\n[  366.063932]  ? __pm_runtime_resume+0xe6/0x130\n[  366.071923]  sr_block_ioctl+0x15d/0x1d0\n[  366.074624]  ? __pfx_sr_block_ioctl+0x10/0x10\n[  366.077642]  blkdev_ioctl+0x419/0x500\n[  366.080231]  ? __pfx_blkdev_ioctl+0x10/0x10\n...\n\nHistorically, the signed integer overflow sanitizer did not work in the\nkernel due to its interaction with `-fwrapv` but this has since been\nchanged [1] in the newest version of Clang. It was re-enabled in the\nkernel with Commit 557f8c582a9ba8ab (\"ubsan: Reintroduce signed overflow\nsanitizer\").\n\nLet's rearrange the check to not perform any arithmetic, thus not\ntripping the sanitizer."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: cdrom: reorganice la verificaci\u00f3n de last_media_change para evitar un desbordamiento involuntario. Al ejecutar syzkaller con el sanitizador de ajuste de enteros firmado recientemente reintroducido, nos encontramos con este s\u00edmbolo: [366.015950] UBSAN: desbordamiento de enteros firmados en .. /drivers/cdrom/cdrom.c:2361:33 [ 366.021089] -9223372036854775808 - 346321 no se puede representar en el tipo '__s64' (tambi\u00e9n conocido como 'long long') [ 366.025894] El programa syz-executor.4 est\u00e1 utilizando un ioctl SCSI obsoleto, convi\u00e9rtalo a SG_IO [366.027502] CPU: 5 PID: 28472 Comm: syz-executor.7 Not tainted 6.8.0-rc2-00035-gb3ef86b5a957 #1 [366.027512] Nombre de hardware: PC est\u00e1ndar QEMU (i440FX + PIIX, 1996) , BIOS 1.16.3-debian-1.16.3-2 01/04/2014 [ 366.027518] Seguimiento de llamadas: [ 366.027523]  [ 366.027533] dump_stack_lvl+0x93/0xd0 [ 366.027899] 1b0 [366.038787] ata1 .00: \u00bfmulti_count 32 no v\u00e1lido se ignora [366.043924] cdrom_ioctl+0x2c3f/0x2d10 [366.063932]? __pm_runtime_resume+0xe6/0x130 [ 366.071923] sr_block_ioctl+0x15d/0x1d0 [ 366.074624] ? __pfx_sr_block_ioctl+0x10/0x10 [ 366.077642] blkdev_ioctl+0x419/0x500 [ 366.080231] ? __pfx_blkdev_ioctl+0x10/0x10 ... Hist\u00f3ricamente, el sanitizador de desbordamiento de enteros con signo no funcionaba en el kernel debido a su interacci\u00f3n con `-fwrapv` pero desde entonces esto se ha cambiado [1] en la versi\u00f3n m\u00e1s reciente de Clang. Se volvi\u00f3 a habilitar en el kernel con el compromiso 557f8c582a9ba8ab (\"ubsan: reintroducir el sanitizadorde desbordamiento firmado\"). Reorganicemos la verificaci\u00f3n para no realizar ninguna aritm\u00e9tica y as\u00ed no activar el sanitizador."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/0c97527e916054acc4a46ffb02842988acb2e92b", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/3ee21e14c8c329168a0b66bab00ecd18f5d0dee3", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/e809bc112712da8f7e15822674c6562da6cdf24c", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/efb905aeb44b0e99c0e6b07865b1885ae0471ebf", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "TA0004", "comment": "This technique is relevant as it provides a viable method to bypass security controls and provide remote access to the system. The rearranged last_media_change check can be exploited by attackers to create a signed integer overflow, which can lead to arbitrary code execution. Defending against this attack requires implementing robust input validation and sanitization to prevent such overflows from occurring."}, {"techniqueID": "TA0005", "comment": "This technique is relevant as it provides a way to conceal malicious activity by using a deprecation warning. The use of depreciated SCSI ioctl can be exploited by attackers to conceal their malicious activity and bypass detection by security controls. Defending against this attack requires Implementing robust security controls and monitoring for suspicious activity."}], "stix_bundle": {"bundle_version": "2.1", "objects": [{"id": "cve-2024-42136", "type": "vulnerability", "name": "CVE-2024-42136", "description": ["In the Linux kernel, the following vulnerability has been resolved"], "cve_data_available": true, "cvss": {"base_score": "8.3", "vector": "AV:L/AC:H/Au:N/C:C/I:C/A:C", "score_text": "8.3 / 10", "access_vector": "Local", "access_complexity": "High", "authentication": "None", "confidentiality_impact": "Complete", "integrity_impact": "Complete", "availability_impact": "Complete"}, "references": [{"url": "https://git.kernel.org/stable/c/0c97527e916054acc4a46ffb02842988acb2e92b", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/3ee21e14c8c329168a0b66bab00ecd18f5d0dee3", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/e809bc112712da8f7e15822674c6562da6cdf24c", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/efb905aeb44b0e99c0e6b07865b1885ae0471ebf", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "related_objects": [{"id": "TA0004", "type": "attack-pattern", "name": "TA0004", "description": "Valid Technique ID"}, {"id": "TA0005", "type": "attack-pattern", "name": "TA0005", "description": "Valid Technique ID"}]}], "relationships": [{"relationship_type": "related_to", "from_id": "cve-2024-42136", "to_id": "TA0004"}, {"relationship_type": "related_to", "from_id": "cve-2024-42136", "to_id": "TA0005"}]}, "technical_analysis": {"Introduction": "This vulnerability has been resolved by rearranging the last_media_change check to avoid unintentional overflow.", "Impact and Scope": "The vulnerability allows for signed integer overflow, which can lead to arbitrary code execution. The impact is high, with a CVSS score of 8.3.", "Related MITRE ATT&CK Techniques": "TA0004 and TA0005", "Technical Details": "The vulnerability is caused by a signed integer overflow in the Linux kernel's cdrom driver. This can be exploited by attackers to create arbitrary code execution.", "Detection": "Detecting this vulnerability requires implementing robust security controls and monitoring for suspicious activity.", "Mitigation": "Implementing robust input validation and sanitization, as well as using depreciated SCSI ioctl, can provide defense against this attack.", "Conclusion": "This vulnerability has been resolved, but it is essential to continue implementing robust security controls and monitoring to detect and prevent similar attacks in the future."}, "executive_analysis": {"Overview": "This vulnerability has been resolved, but it is essential to continue implementing robust security controls and monitoring to detect and prevent similar attacks in the future.", "Business Impact": "The impact of this vulnerability is significant, as it can lead to arbitrary code execution and data breaches.", "Technical Impact": "The technical impact of this vulnerability is significant, as it allows attackers to exploit the Linux kernel's cdrom driver and create arbitrary code execution.", "Mitigation Strategies": "Implementing robust security controls and monitoring, as well as implementing robust input validation and sanitization, can provide defense against this attack.", "Recommendations": "It is recommended that organizations continue to implement and maintain robust security controls and monitoring to detect and prevent similar attacks in the future.", "Conclusions": "This vulnerability has been resolved, but it is essential to continue implementing and maintaining robust security controls and monitoring to ensure the security of the organization."}}