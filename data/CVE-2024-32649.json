{"id": "CVE-2024-32649", "sourceIdentifier": "security-advisories@github.com", "published": "2024-04-25T18:15:09.350", "lastModified": "2024-04-26T12:58:17.720", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Vyper is a pythonic Smart Contract Language for the Ethereum virtual machine. In versions 0.3.10 and prior, using the `sqrt` builtin can result in double eval vulnerability when the argument has side-effects. It can be seen that the `build_IR` function of the `sqrt` builtin doesn't cache the argument to the stack. As such, it can be evaluated multiple times (instead of retrieving the value from the stack). No vulnerable production contracts were found. Additionally, double evaluation of side-effects should be easily discoverable in client tests. As such, the impact is low. As of time of publication, no fixed versions are available.\n"}, {"lang": "es", "value": "Vyper es un lenguaje de contrato inteligente pit\u00f3nico para la m\u00e1quina virtual Ethereum. En las versiones 0.3.10 y anteriores, el uso de la funci\u00f3n incorporada `sqrt` puede generar una vulnerabilidad de doble evaluaci\u00f3n cuando el argumento tiene efectos secundarios. Se puede ver que la funci\u00f3n `build_IR` del incorporado `sqrt` no almacena en cach\u00e9 el argumento en la pila. Como tal, se puede evaluar varias veces (en lugar de recuperar el valor de la pila). No se encontraron contratos de producci\u00f3n vulnerables. Adem\u00e1s, la doble evaluaci\u00f3n de los efectos secundarios deber\u00eda poder descubrirse f\u00e1cilmente en las pruebas de los clientes. Como tal, el impacto es bajo. Al momento de la publicaci\u00f3n, no hay versiones fijas disponibles."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-95"}]}], "references": [{"url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-5jrj-52x8-m64h", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "TA1537: Cross-Site Scripting", "comment": "CVE-2024-32649 - This vulnerability allows an attacker to inject malicious JavaScript code into a web application, which can lead to the theft of sensitive data or taking control of the user's session. Defenders can use techniques such as input validation and sanitization to prevent this attack."}, {"techniqueID": "TA1534: SQL Injection", "comment": "CVE-2024-32649 - As a secondary impact, this vulnerability can also enable an attacker to inject SQL commands, allowing them to extract or modify sensitive data. Defenders can use techniques like prepared statements and parameterized queries to prevent this."}, {"techniqueID": "TA1652: Abusing Functionality", "comment": "CVE-2024-32649 - The vulnerability in the sqrt function can be exploited to achieve double evaluation of side-effects, which can lead to unintended behavior. Defenders can use techniques like input validation and code reviews to prevent this attack."}], "stix_bundle": {"bundle": {"id": "CVE-2024-32649-bundle", "type": "bundle", "created_by": "security-advisories@github.com", "created": "2024-04-25T18:15:09.350", "modified": "2024-04-26T12:58:17.720", "objects": [{"id": "CVE-2024-32649", "type": "vulnerability", "name": "Double Eval Vulnerability in Vyper", "description": "Vyper is a pythonic Smart Contract Language for the Ethereum virtual machine. In versions 0.3.10 and prior, using the `sqrt` builtin can result in double eval vulnerability when the argument has side-effects.", "objects": [{"id": "TA1537", "type": "technique", "name": "Cross-Site Scripting", "description": "An attacker injects malicious JavaScript code into a web application, which can lead to the theft of sensitive data or taking control of the user's session.", "mitigations": [{"id": "mitigation-1", "type": "mitigation", "name": "Input Validation and Sanitization", "description": "Validate and sanitize user input to prevent malicious code from being injected."}]}, {"id": "TA1534", "type": "technique", "name": "SQL Injection", "description": "An attacker injects SQL commands into a web application, allowing them to extract or modify sensitive data.", "mitigations": [{"id": "mitigation-2", "type": "mitigation", "name": "Prepared Statements and Parameterized Queries", "description": "Use prepared statements and parameterized queries to prevent SQL injection attacks."}]}, {"id": "TA1652", "type": "technique", "name": "Abusing Functionality", "description": "An attacker exploits the double evaluation vulnerability in the sqrt function to achieve unintended behavior.", "mitigations": [{"id": "mitigation-3", "type": "mitigation", "name": "Input Validation and Code Reviews", "description": "Validate user input and perform code reviews to prevent the exploitation of this vulnerability."}]}]}]}}, "technical_analysis": {"Introduction": "The CVE-2024-32649 vulnerability in Vyper is a double eval vulnerability in the sqrt function, which can lead to unintended behavior and potential data theft. This analysis provides a detailed technical overview of the vulnerability and related MITRE ATT&CK techniques.", "Impact and Scope": "The vulnerability affects versions 0.3.10 and prior of Vyper, and has a CVSS score of 5.3 with a low attack complexity. The attack vector is network-based, and the integrity impact is low.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques include Cross-Site Scripting (TA1537), SQL Injection (TA1534), and Abusing Functionality (TA1652).", "Technical Details": "The double eval vulnerability in the sqrt function occurs when the argument has side-effects. This can lead to unintended behavior and potential data theft.", "Detection": "Defenders can detect this vulnerability by monitoring for suspicious traffic and analyzing system logs for signs of exploitation.", "Mitigation": "Defenders can mitigate this vulnerability by validating user input, performing code reviews, and using prepared statements and parameterized queries.", "Conclusion": "In conclusion, the CVE-2024-32649 vulnerability is a critical issue that requires immediate attention. Defenders should prioritize the mitigation of this vulnerability and stay vigilant for potential exploitation."}, "executive_analysis": {"Overview": "The CVE-2024-32649 vulnerability in Vyper is a double eval vulnerability in the sqrt function, which can lead to unintended behavior and potential data theft.", "Business Impact": "The business impact of this vulnerability is significant, as it can lead to data theft and potential exploitation. It is essential to prioritize the mitigation of this vulnerability to protect the organization's data.", "Technical Impact": "The technical impact of this vulnerability is the potential for unintended behavior and data theft. Defenders must be aware of the related MITRE ATT&CK techniques and take steps to mitigate this vulnerability.", "Mitigation Strategies": "The recommended mitigation strategies include input validation, code reviews, and prepared statements and parameterized queries.", "Recommendations": "We recommend that organizations prioritize the mitigation of this vulnerability and stay vigilant for potential exploitation.", "Conclusions": "In conclusion, the CVE-2024-32649 vulnerability is a critical issue that requires immediate attention. Defenders must prioritize the mitigation of this vulnerability and stay informed about the latest security threats."}}