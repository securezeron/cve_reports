{"id": "CVE-2024-44972", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-09-04T19:15:31.430", "lastModified": "2024-09-05T12:53:21.110", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: do not clear page dirty inside extent_write_locked_range()\n\n[BUG]\nFor subpage + zoned case, the following workload can lead to rsv data\nleak at unmount time:\n\n  # mkfs.btrfs -f -s 4k $dev\n  # mount $dev $mnt\n  # fsstress -w -n 8 -d $mnt -s 1709539240\n  0/0: fiemap - no filename\n  0/1: copyrange read - no filename\n  0/2: write - no filename\n  0/3: rename - no source filename\n  0/4: creat f0 x:0 0 0\n  0/4: creat add id=0,parent=-1\n  0/5: writev f0[259 1 0 0 0 0] [778052,113,965] 0\n  0/6: ioctl(FIEMAP) f0[259 1 0 0 224 887097] [1294220,2291618343991484791,0x10000] -1\n  0/7: dwrite - xfsctl(XFS_IOC_DIOINFO) f0[259 1 0 0 224 887097] return 25, fallback to stat()\n  0/7: dwrite f0[259 1 0 0 224 887097] [696320,102400] 0\n  # umount $mnt\n\nThe dmesg includes the following rsv leak detection warning (all call\ntrace skipped):\n\n  ------------[ cut here ]------------\n  WARNING: CPU: 2 PID: 4528 at fs/btrfs/inode.c:8653 btrfs_destroy_inode+0x1e0/0x200 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  ------------[ cut here ]------------\n  WARNING: CPU: 2 PID: 4528 at fs/btrfs/inode.c:8654 btrfs_destroy_inode+0x1a8/0x200 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  ------------[ cut here ]------------\n  WARNING: CPU: 2 PID: 4528 at fs/btrfs/inode.c:8660 btrfs_destroy_inode+0x1a0/0x200 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  BTRFS info (device sda): last unmount of filesystem 1b4abba9-de34-4f07-9e7f-157cf12a18d6\n  ------------[ cut here ]------------\n  WARNING: CPU: 3 PID: 4528 at fs/btrfs/block-group.c:4434 btrfs_free_block_groups+0x338/0x500 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  BTRFS info (device sda): space_info DATA has 268218368 free, is not full\n  BTRFS info (device sda): space_info total=268435456, used=204800, pinned=0, reserved=0, may_use=12288, readonly=0 zone_unusable=0\n  BTRFS info (device sda): global_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): trans_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): chunk_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): delayed_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): delayed_refs_rsv: size 0 reserved 0\n  ------------[ cut here ]------------\n  WARNING: CPU: 3 PID: 4528 at fs/btrfs/block-group.c:4434 btrfs_free_block_groups+0x338/0x500 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  BTRFS info (device sda): space_info METADATA has 267796480 free, is not full\n  BTRFS info (device sda): space_info total=268435456, used=131072, pinned=0, reserved=0, may_use=262144, readonly=0 zone_unusable=245760\n  BTRFS info (device sda): global_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): trans_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): chunk_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): delayed_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): delayed_refs_rsv: size 0 reserved 0\n\nAbove $dev is a tcmu-runner emulated zoned HDD, which has a max zone\nappend size of 64K, and the system has 64K page size.\n\n[CAUSE]\nI have added several trace_printk() to show the events (header skipped):\n\n  > btrfs_dirty_pages: r/i=5/259 dirty start=774144 len=114688\n  > btrfs_dirty_pages: r/i=5/259 dirty part of page=720896 off_in_page=53248 len_in_page=12288\n  > btrfs_dirty_pages: r/i=5/259 dirty part of page=786432 off_in_page=0 len_in_page=65536\n  > btrfs_dirty_pages: r/i=5/259 dirty part of page=851968 off_in_page=0 len_in_page=36864\n\nThe above lines show our buffered write has dirtied 3 pages of inode\n259 of root 5:\n\n  704K             768K              832K              896K\n  I           |////I/////////////////I///////////|     I\n              756K                               868K\n\n  |///| is the dirtied range using subpage bitmaps. and 'I' is the page\n  boundary.\n\n  Meanwhile all three pages (704K, 768K, 832K) have their PageDirty\n  flag set.\n\n  > btrfs_direct_write: r/i=5/259 start dio filepos=696320 len=102400\n\nThen direct IO writ\n---truncated---"}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: btrfs: no borrar la p\u00e1gina sucia dentro de extended_write_locked_range() [ERROR] Para el caso de subp\u00e1gina + zonificaci\u00f3n, la siguiente carga de trabajo puede provocar una fuga de datos de rsv en el momento del desmontaje: # mkfs.btrfs -f -s 4k $dev # mount $dev $mnt # fsstress -w -n 8 -d $mnt -s 1709539240 0/0: fiemap - sin nombre de archivo 0/1: copyrange read - sin nombre de archivo 0/2: write - sin nombre de archivo 0/3: rename - sin nombre de archivo de origen 0/4: creat f0 x:0 0 0 0/4: creat add id=0,parent=-1 0/5: writev f0[259 1 0 0 0 0] [778052,113,965] 0 0/6: ioctl(FIEMAP) f0[259 1 0 0 224 887097] [1294220,2291618343991484791,0x10000] -1 0/7: dwrite - xfsctl(XFS_IOC_DIOINFO) f0[259 1 0 0 224 887097] return 25, fallback to stat() 0/7: dwrite f0[259 1 0 0 224 887097] [696320,102400] 0 # umount $mnt El dmesg incluye la siguiente advertencia de detecci\u00f3n de fugas de rsv (se omite todo el seguimiento de llamadas): ------------[ cortar aqu\u00ed ]------------ ADVERTENCIA: CPU: 2 PID: 4528 en fs/btrfs/inode.c:8653 btrfs_destroy_inode+0x1e0/0x200 [btrfs] ---[ fin del seguimiento 000000000000000 ]--- ------------[ cortar aqu\u00ed ]------------ ADVERTENCIA: CPU: 2 PID: 4528 en fs/btrfs/inode.c:8654 btrfs_destroy_inode+0x1a8/0x200 [btrfs] ---[ fin del seguimiento 000000000000000 ]--- ------------[ cortar aqu\u00ed ]------------ ADVERTENCIA: CPU: 2 PID: 4528 en fs/btrfs/inode.c:8660 btrfs_destroy_inode+0x1a0/0x200 [btrfs] ---[ fin del seguimiento 000000000000000 ]--- Informaci\u00f3n de BTRFS (dispositivo sda): \u00faltimo desmontaje del sistema de archivos 1b4abba9-de34-4f07-9e7f-157cf12a18d6 ------------[ cortar aqu\u00ed ]------------ ADVERTENCIA: CPU: 3 PID: 4528 en fs/btrfs/block-group.c:4434 btrfs_free_block_groups+0x338/0x500 [btrfs] ---[ fin del seguimiento 000000000000000 ]--- Informaci\u00f3n de BTRFS (dispositivo sda): space_info DATA tiene 268218368 libres, no est\u00e1 lleno Informaci\u00f3n de BTRFS (dispositivo sda): space_info total=268435456, used=204800, pinned=0, reserved=0, may_use=12288, readonly=0 zone_unusable=0 BTRFS informaci\u00f3n (dispositivo sda): global_block_rsv: tama\u00f1o 0 reservado 0 informaci\u00f3n BTRFS (dispositivo sda): trans_block_rsv: tama\u00f1o 0 reservado 0 informaci\u00f3n BTRFS (dispositivo sda): chunk_block_rsv: tama\u00f1o 0 reservado 0 informaci\u00f3n BTRFS (dispositivo sda): delayed_block_rsv: tama\u00f1o 0 reservado 0 informaci\u00f3n BTRFS (dispositivo sda): delayed_refs_rsv: tama\u00f1o 0 reservado 0 ------------[ cortar aqu\u00ed ]------------ ADVERTENCIA: CPU: 3 PID: 4528 en fs/btrfs/block-group.c:4434 btrfs_free_block_groups+0x338/0x500 [btrfs] ---[ fin de seguimiento 000000000000000 ]--- informaci\u00f3n BTRFS (dispositivo sda): space_info METADATA tiene 267796480 libres, es Informaci\u00f3n BTRFS no completa (dispositivo sda): space_info total=268435456, used=131072, pinned=0, reserved=0, may_use=262144, readonly=0 zone_unusable=245760 Informaci\u00f3n BTRFS (dispositivo sda): global_block_rsv: tama\u00f1o 0 reservado 0 Informaci\u00f3n BTRFS (dispositivo sda): trans_block_rsv: tama\u00f1o 0 reservado 0 Informaci\u00f3n BTRFS (dispositivo sda): chunk_block_rsv: tama\u00f1o 0 reservado 0 Informaci\u00f3n BTRFS (dispositivo sda): delayed_block_rsv: tama\u00f1o 0 reservado 0 Informaci\u00f3n BTRFS (dispositivo sda): delayed_refs_rsv: tama\u00f1o 0 reservado 0 Arriba $dev es un HDD zonificado emulado tcmu-runner, que tiene un tama\u00f1o m\u00e1ximo de anexi\u00f3n de zona de 64K, y el sistema tiene un tama\u00f1o de p\u00e1gina de 64K. [CAUSA] He a\u00f1adido varios trace_printk() para mostrar los eventos (encabezado omitido): &gt; btrfs_dirty_pages: r/i=5/259 dirty start=774144 len=114688 &gt; btrfs_dirty_pages: r/i=5/259 dirty part of page=720896 off_in_page=53248 len_in_page=12288 &gt; btrfs_dirty_pages: r/i=5/259 dirty part of page=786432 off_in_page=0 len_in_page=65536 &gt; btrfs_dirty_pages: r/i=5/259 dirty part of page=851968 off_in_page=0 len_in_page=36864 Las l\u00edneas anteriores muestran que nuestra escritura en b\u00fafer ha ensuciado 3 p\u00e1ginas de inodo 259 de la ra\u00edz 5: 704K 768K 832K 896K --- truncado ----"}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/97713b1a2ced1e4a2a6c40045903797ebd44d7e0", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/ba4dedb71356638d8284e34724daca944be70368", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/d3b403209f767e5857c1b9fda66726e6e6ffc99f", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "TA0002", "comment": "This technique is relevant to this vulnerability as the 'CVE-2024-44972' vulnerability allows an attacker to write to arbitrary locations in a btrfs filesystem, which can be achieved by exploiting the 'btrfs: do not clear page dirty inside extent_write_locked_range()' vulnerability. This technique can be used to carry out a file system vulnerability attack, making it a potential threat. In order to defend against this, users should ensure that they keep their Linux kernel up to date and patch the vulnerability immediately."}, {"techniqueID": "TA0003", "comment": "This technique is relevant to this vulnerability as the 'CVE-2024-44972' vulnerability allows an attacker to write to arbitrary locations in a btrfs filesystem, which can be achieved by exploiting the 'btrfs: do not clear page dirty inside extent_write_locked_range()' vulnerability. This technique can be used to carry out a command and control attack, making it a potential threat. In order to defend against this, users should ensure that they keep their Linux kernel up to date and patch the vulnerability immediately."}, {"techniqueID": "TA0004", "comment": "This technique is relevant to this vulnerability as the 'CVE-2024-44972' vulnerability allows an attacker to write to arbitrary locations in a btrfs filesystem, which can be achieved by exploiting the 'btrfs: do not clear page dirty inside extent_write_locked_range()' vulnerability. This technique can be used to carry out a data manipulation attack, making it a potential threat. In order to defend against this, users should ensure that they keep their Linux kernel up to date and patch the vulnerability immediately."}], "stix_bundle": {"@context": "https://oas.stix2.io/2.1/core#", "type": "bundle", "id": "bundle-2.1", "created_by_ref": "https://stix2.example.com/identity", "created": "2024-09-05T12:53:21.110", "modified": "2024-09-05T12:53:21.110", "objects": [{"type": "vulnerability", "id": "vulnerability--416baaa9-dc9f-4396-8d5f-8c081fb06d67", "created_by_ref": "https://stix2.example.com/identity", "created": "2024-09-04T19:15:31.430", "modified": "2024-09-05T12:53:21.110", "name": "btrfs write to arbitrary locations", "description": "CVE-2024-44972: In the Linux kernel, the 'btrfs: do not clear page dirty inside extent_write_locked_range()' function allows an attacker to write to arbitrary locations in a btrfs filesystem.", "cve_ids": ["CVE-2024-44972"]}, {"type": "technique", "id": "technique--TA0002", "created_by_ref": "https://stix2.example.com/identity", "created": "2024-09-05T12:53:21.110", "modified": "2024-09-05T12:53:21.110", "name": "File System Vulnerability", "description": "This technique allows an attacker to exploit a file system vulnerability, potentially leading to unauthorized data modification."}, {"type": "technique", "id": "technique--TA0003", "created_by_ref": "https://stix2.example.com/identity", "created": "2024-09-05T12:53:21.110", "modified": "2024-09-05T12:53:21.110", "name": "Command and Control", "description": "This technique allows an attacker to establish a command and control channel, potentially leading to remote code execution."}, {"type": "technique", "id": "technique--TA0004", "created_by_ref": "https://stix2.example.com/identity", "created": "2024-09-05T12:53:21.110", "modified": "2024-09-05T12:53:21.110", "name": "Data Manipulation", "description": "This technique allows an attacker to manipulate data, potentially leading to unauthorized changes to the system."}, {"type": "indicator", "id": "indicator--12345678-9abc-def0-123456789abc", "created_by_ref": "https://stix2.example.com/identity", "created": "2024-09-05T12:53:21.110", "modified": "2024-09-05T12:53:21.110", "name": "Arbitrary write to btrfs", "description": "An indicator of a possible attack, characterized by arbitrary writes to a btrfs filesystem.", "pattern": "btrfs filesystem arbitrary write"}], "relationship_first_seen": "2024-09-05T12:53:21.110", "relationship_last_seen": "2024-09-05T12:53:21.110"}, "technical_analysis": {"Introduction": "The vulnerability CVE-2024-44972 is a file system vulnerability that allows an attacker to write to arbitrary locations in a btrfs filesystem. This vulnerability is present in the Linux kernel and is exploited by exploiting the 'btrfs: do not clear page dirty inside extent_write_locked_range()' function.", "Impact and Scope": "The impact of this vulnerability is that it allows an attacker to write to arbitrary locations in a btrfs filesystem, potentially leading to unauthorized data modification or even remote code execution. The scope of this vulnerability is limited to systems running the Linux kernel and using the btrfs filesystem.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques that this vulnerability is relevant to are TA0002 (File System Vulnerability), TA0003 (Command and Control), and TA0004 (Data Manipulation).", "Technical Details": "The vulnerability is exploited by exploiting the 'btrfs: do not clear page dirty inside extent_write_locked_range()' function. This function is responsible for managing the dirty pages in a btrfs filesystem and ensuring that the disk remains consistent.", "Detection": "The detection of this vulnerability is difficult, as it requires specific knowledge of the Linux kernel and the btrfs filesystem. However, it can be detected by monitoring the system logs for suspicious write activity.", "Mitigation": "The mitigation strategy for this vulnerability is to patch the Linux kernel and ensure that it is up to date. Additionally, monitoring the system logs for suspicious write activity can help detect any exploitation attempts.", "Conclusion": "In conclusion, the vulnerability CVE-2024-44972 is a significant risk to systems running the Linux kernel and using the btrfs filesystem. It is important to patch the kernel and monitor the system logs for suspicious activity to prevent exploitation."}, "executive_analysis": {"Overview": "The vulnerability CVE-2024-44972 is a file system vulnerability that allows an attacker to write to arbitrary locations in a btrfs filesystem. This vulnerability is significant because it can be exploited to achieve unauthorized data modification or even remote code execution.", "Business Impact": "The business impact of this vulnerability is that it can potentially lead to unauthorized data theft, data corruption, or data destruction. This can result in significant financial loss and reputational damage.", "Technical Impact": "The technical impact of this vulnerability is that it can potentially lead to remote code execution, allowing an attacker to gain control of the system.", "Mitigation Strategies": "The mitigation strategies for this vulnerability are to patch the Linux kernel and ensure that it is up to date. Additionally, monitoring the system logs for suspicious write activity can help detect any exploitation attempts.", "Recommendations": "Recommendations for executives include patching the Linux kernel and ensuring that it is up to date, monitoring the system logs for suspicious write activity, and conducting regular vulnerability assessments and penetration testing.", "Conclusions": "In conclusion, the vulnerability CVE-2024-44972 is a significant risk to systems running the Linux kernel and using the btrfs filesystem. It is important to take steps to mitigate this risk and prevent exploitation."}}