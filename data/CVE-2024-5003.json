{"id": "CVE-2024-5003", "sourceIdentifier": "contact@wpscan.com", "published": "2024-06-07T06:15:12.000", "lastModified": "2024-07-18T16:18:33.020", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The WP Stacker WordPress plugin through 1.8.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack"}, {"lang": "es", "value": "El complemento WP Stacker de WordPress hasta la versi\u00f3n 1.8.5 no tiene verificaci\u00f3n CSRF en algunos lugares y le falta sanitizaci\u00f3n y escape, lo que podr\u00eda permitir a los atacantes hacer que el administrador registrado agregue payloads XSS almacenado a trav\u00e9s de un ataque CSRF."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.5}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jankarres:wp_stacker:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "1.8.5", "matchCriteriaId": "8FAA401E-1855-47AB-B575-F9FA64081727"}]}]}], "references": [{"url": "https://wpscan.com/vulnerability/1d7d0372-bbc5-40b2-a668-253c819415c4/", "source": "contact@wpscan.com", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-5003 - Cross-Site Request Forgery (CSRF) attacks are executed by tricking an authenticated user into performing a malicious action on a web application. This vulnerability in the WP Stacker WordPress plugin allows an attacker to add stored XSS payloads via a CSRF attack, highlighting importance of validating HTTP requests and implementing CSRF protection measures to prevent such attacks."}, {"techniqueID": "T1190", "comment": "CVE-2024-5003 - The lack of CSRF checks and sanitization in the WP Stacker WordPress plugin leaves it vulnerable to Cross-Site Request Forgery (CSRF) attacks. This vulnerabilities emphasizes the need for regular updates and patching of plugins to prevent exploitation."}], "technical_analysis": {"Introduction": "The CVE-2024-5003 vulnerability in the WP Stacker WordPress plugin allows for the addition of stored XSS payloads via Cross-Site Request Forgery (CSRF) attacks.", "Impact and Scope": "The vulnerability has a CVSS score of 5.4, with a moderate severity and a low attack complexity.", "Related MITRE ATT&CK Techniques": "T1059: Cross-Site Request Forgery and T1190: Cross-Site Request Forgery (Lateral Movement)", "Technical Details": "The vulnerability is due to the lack of CSRF checks and sanitization in the plugin, which allows an attacker to perform malicious actions on the web application.", "Detection": "Detection of this vulnerability involves monitoring for suspicious HTTP requests and analyzing web application logs for signs of CSRF attacks.", "Mitigation": "Mitigation strategies include implementing CSRF protection measures, such as validating HTTP requests and ensuring that plugins are regularly updated and patched.", "Conclusion": "The CVE-2024-5003 vulnerability highlights the importance of ensuring that web applications and plugins are properly secured against CSRF attacks."}, "executive_analysis": {"Overview": "The CVE-2024-5003 vulnerability in the WP Stacker WordPress plugin is a serious security issue that allows for the addition of stored XSS payloads via Cross-Site Request Forgery (CSRF) attacks.", "Business Impact": "The vulnerability has the potential to compromise sensitive data and disrupt business operations.", "Technical Impact": "The vulnerability affects the security and integrity of the web application, making it vulnerable to malicious attacks.", "Mitigation Strategies": "Regular updates and patching of plugins, implementing CSRF protection measures, and monitoring for suspicious HTTP requests.", "Recommendations": "Recommendations include prioritizing security patching and updates, conducting regular security audits, and educating users on the importance of security best practices.", "Conclusions": "The CVE-2024-5003 vulnerability emphasizes the importance of prioritizing security and transparency in software development and deployment."}}