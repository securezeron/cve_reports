{"id": "CVE-2020-16266", "sourceIdentifier": "cve@mitre.org", "published": "2020-08-12T13:15:10.613", "lastModified": "2020-08-17T18:29:13.543", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "An XSS issue was discovered in MantisBT before 2.24.2. Improper escaping on view_all_bug_page.php allows a remote attacker to inject arbitrary HTML into the page by saving it into a text Custom Field, leading to possible code execution in the browser of any user subsequently viewing the issue (if CSP settings allow it)."}, {"lang": "es", "value": "Se detect\u00f3 un problema de tipo XSS en MantisBT versiones anteriores a   2.24.2. Un escape inapropiado en el archivo view_all_bug_page.php permite a un atacante remoto inyectar HTML arbitrario en la p\u00e1gina al guardarlo en un Campo Personalizado de texto, conllevando a una posible ejecuci\u00f3n de c\u00f3digo en el navegador de cualquier usuario visualizando el problema posteriormente (si la configuraci\u00f3n CSP lo permite)"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.24.2", "matchCriteriaId": "0A66F9C7-671B-4C9B-8149-3FA37F428187"}]}]}], "references": [{"url": "https://mantisbt.org/blog/archives/mantisbt/665", "source": "cve@mitre.org", "tags": ["Release Notes", "Vendor Advisory"]}, {"url": "https://mantisbt.org/bugs/view.php?id=27056", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Patch", "Vendor Advisory"]}], "techniques": [{"techniqueID": "TA0027", "comment": "Cross-Site Scripting (XSS) - This technique is relevant as it allows an attacker to inject arbitrary HTML into a web page, which can lead to code execution. To defend against this, enable Content Security Policy (CSP) for the vulnerable web application."}, {"techniqueID": "TA0015", "comment": " exploitation of this vulnerability can be made using Cross-Site Scripting (XSS) to the victims. To defend against this, validate user inputs and sanitize the data to prevent malicious code injection, also use WAF to block XSS attacks"}], "stix_bundle": [{"type": "attack-pattern", "id": "ttp_ATTACK_PATTERN_1", "name": "Cross-Site Scripting (XSS) Attack", "description": "An attack pattern that injects arbitrary HTML into a web page, leading to code execution.", "object_marking_refs": [], "refs": [{"id": "cve@mitre.org/CVE-2020-16266", "url": "https://cve.mitre.org/data/definitions/2020-16266.cve"}]}, {"type": "attack-pattern", "id": "ttp_ATTACK_PATTERN_2", "name": "XSS using Cross-Site Request Forgery (CSRF)", "description": "An attack pattern that combines Cross-Site Scripting (XSS) with Cross-Site Request Forgery (CSRF) to compromise user data.", "object_marking_refs": [], "refs": [{"id": "cve@mitre.org/CVE-2020-16266", "url": "https://cve.mitre.org/data/definitions/2020-16266.cve"}]}, {"type": "indicator", "id": "indicator_INDIR_1", "name": "Malicious XSS Code Injection", "description": "An indicator that detects malicious XSS code injection attempts.", "pattern": "Search for malicious code injection requests.", "valid_from": "2020-08-12T13:15:10.613", "valid_to": "2020-08-17T18:29:13.543"}, {"type": "course-of-action", "id": "course-of-action_COURSE_OF_ACTION_1", "name": "Implement Content Security Policy (CSP)", "description": "A course of action that recommends implementing Content Security Policy (CSP) to prevent XSS attacks.", "mitigates": ["ttp_ATTACK_PATTERN_1"], "refs": [{"id": "nist.gov/800-61r2", "url": "https://nvlpubs.nist.gov/std/800-61r2/database/Draft-Volume2-AppendixA.pdf"}]}], "technical_analysis": {"Introduction": "Cross-Site Scripting (XSS) is a type of injection attack where an attacker injects malicious code into a web page to compromise user data.", "Impact and Scope": "This vulnerability has a CVSS score of 5.4, indicating a moderate risk to affected users. The impact of this vulnerability is high, as it allows an attacker to inject arbitrary HTML into a web page, leading to code execution.", "Related MITRE ATT&CK Techniques": "This vulnerability is related to the TA0027 - Cross-Site Scripting and TA0015 - Cross-Site Scripting exploitation.", "Technical Details": "This vulnerability occurs due to improper escaping on view_all_bug_page.php, allowing an attacker to inject arbitrary HTML into the page.", "Detection": "Detection methods include monitoring for suspicious network traffic and analyzing web application logs for signs of malicious activity.", "Mitigation": "Mitigation strategies include implementing Content Security Policy (CSP), validating user inputs, and sanitizing data to prevent malicious code injection.", "Conclusion": "In conclusion, this vulnerability poses a moderate risk to affected users and can be mitigated through the implementation of Content Security Policy (CSP), validating user inputs, and sanitizing data."}, "executive_analysis": {"Overview": "This vulnerability is a moderate risk to affected users and can be mitigated through the implementation of Content Security Policy (CSP), validating user inputs, and sanitizing data.", "Business Impact": "The business impact of this vulnerability is high, as it allows an attacker to compromise user data and systems.", "Technical Impact": "The technical impact of this vulnerability is high, as it allows an attacker to inject arbitrary HTML into a web page, leading to code execution.", "Mitigation Strategies": "Mitigation strategies include implementing Content Security Policy (CSP), validating user inputs, and sanitizing data to prevent malicious code injection.", "Recommendations": "The recommended course of action is to implement Content Security Policy (CSP) and continue to validate user inputs and sanitize data to prevent malicious code injection.", "Conclusions": "In conclusion, this vulnerability poses a moderate risk to affected users and can be mitigated through the implementation of Content Security Policy (CSP), validating user inputs, and sanitizing data."}}