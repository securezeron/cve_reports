{"id": "CVE-2015-5687", "sourceIdentifier": "cve@mitre.org", "published": "2015-10-05T14:59:00.093", "lastModified": "2015-10-06T23:50:43.107", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "system/session/drivers/cookie.php in Anchor CMS 0.9.x allows remote attackers to conduct PHP object injection attacks and execute arbitrary PHP code via a crafted serialized object in a cookie."}, {"lang": "es", "value": "system/session/drivers/cookie.php en Anchor CMS 0.9.x permite a atacantes remotos llevar a cabo ataques de inyecci\u00f3n de objetos PHP y ejecutar c\u00f3digo PHP arbitrario a trav\u00e9s de una cookie serializada manipulada."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:anchorcms:anchor_cms:0.9.1:*:*:*:*:*:*:*", "matchCriteriaId": "71B5C7B9-E50D-4231-9567-4D53112F4B79"}, {"vulnerable": true, "criteria": "cpe:2.3:a:anchorcms:anchor_cms:0.9.2:*:*:*:*:*:*:*", "matchCriteriaId": "E21AA5AA-8F8C-4B60-AD3E-0F74A0E834D4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:anchorcms:anchor_cms:0.9.3:*:*:*:*:*:*:*", "matchCriteriaId": "1BC7C9F2-8CEC-49C2-9682-644F202E290C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:anchorcms:anchor_cms:0.9.3:alpha:*:*:*:*:*:*", "matchCriteriaId": "5CC23692-C05F-4934-8DC7-6F4BE7732A1E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:anchorcms:anchor_cms:0.9.3:beta:*:*:*:*:*:*", "matchCriteriaId": "7EE15006-B9CF-4D1C-8B95-C1905E9D4376"}]}]}], "references": [{"url": "http://seclists.org/fulldisclosure/2015/Aug/76", "source": "cve@mitre.org"}, {"url": "http://seclists.org/fulldisclosure/2015/Aug/83", "source": "cve@mitre.org"}, {"url": "https://github.com/anchorcms/anchor-cms/pull/904", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2015-5687 - PHP Object Injection can be used to execute arbitrary code, which is relevant for potential exploitation. Defending against this involves using input validation and sanitization techniques to prevent injected objects from being executed."}, {"techniqueID": "T1204", "comment": "CVE-2015-5687 - Deserialization of untrusted data can lead to the execution of arbitrary code, which is relevant for potential exploitation. Defending against this involves validating and whitelisting the data being deserialized to prevent malicious code from being executed."}, {"techniqueID": "T1199", "comment": "CVE-2015-5687 - Unvalidated deserialization of user input can lead to code execution, which is relevant for potential exploitation. Defending against this involves validating and sanitizing user input to prevent malicious code from being executed."}, {"techniqueID": "T1222", "comment": "CVE-2015-5687 - The vulnerability can be exploited to inject and execute malicious code, which is relevant for potential exploitation. Defending against this involves using memory-safe coding practices and validating/sanitizing input to prevent memory corruption."}, {"techniqueID": "T1068", "comment": "CVE-2015-5687 - A PHP object injection vulnerability can be used to execute arbitrary code, which is relevant for potential exploitation. Defending against this involves validating and sanitizing user input to prevent malicious code from being executed."}], "stix_bundle": {"type": "bundle", "id": "CVE-2015-5687-bundle", "created_by_ref": "nb-a0ccbc09-92c9-456a-b1e9-d3b2fba38d3d", "created": "2021-12-01T14:59:00.000Z", "objects": [{"type": "vulnerability", "id": "nb-cve-2015-5687", "created_by_ref": "nb-a0ccbc09-92c9-456a-b1e9-d3b2fba38d3d", "created": "2021-12-01T14:59:00.000Z", "name": "CVE-2015-5687: PHP Object Injection Vulnerability", "description": "A PHP object injection vulnerability in the system/session/drivers/cookie.php file in Anchor CMS 0.9.x", "severity": "High", "cve": "CVE-2015-5687", "cvss_v2": {"base_score": 7.5, "exploitability_score": 10.0, "impact_score": 6.4, "vector_string": "AV:N/AC:L/Au:N/C:P/I:P/A:P"}, "references": [{"href": "http://seclists.org/fulldisclosure/2015/Aug/76", "id": "nbhttp://seclists.org/fulldisclosure/2015/Aug/76"}, {"href": "http://seclists.org/fulldisclosure/2015/Aug/83", "id": "nbhttp://seclists.org/fulldisclosure/2015/Aug/83"}, {"href": "https://github.com/anchorcms/anchor-cms/pull/904", "id": "nbhttps://github.com/anchorcms/anchor-cms/pull/904"}]}, {"type": "course-of-action", "id": "nb-ca-1", "created_by_ref": "nb-a0ccbc09-92c9-456a-b1e9-d3b2fba38d3d", "created": "2021-12-01T14:59:00.000Z", "name": "CA-1: Validate and Sanitize User Input", "description": "Validate and sanitize user input to prevent malicious code from being executed.", "mitigated_techniques": ["T1190", "T1204", "T1199", "T1222", "T1068"]}, {"type": "course-of-action", "id": "nb-ca-2", "created_by_ref": "nb-a0ccbc09-92c9-456a-b1e9-d3b2fba38d3d", "created": "2021-12-01T14:59:00.000Z", "name": "CA-2: Use Memory-Safe Coding Practices", "description": "Use memory-safe coding practices to prevent memory corruption.", "mitigated_techniques": ["T1222"]}], "relationships": [{"id": "nb-r-1", "source_ref": "nb-cve-2015-5687", "target_ref": "nb-ca-1", "label": "Vuln-to-CA"}, {"id": "nb-r-2", "source_ref": "nb-cve-2015-5687", "target_ref": "nb-ca-2", "label": "Vuln-to-CA"}]}, "technical_analysis": {"Introduction": "CVE-2015-5687 is an unauthenticated remote PHP object injection vulnerability in Anchor CMS 0.9.x. An attacker can inject and execute arbitrary PHP code to gain remote code execution.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5 and can lead to remote code execution.", "Related MITRE ATT&CK Techniques": "T1190, T1204, T1199, T1222, T1068", "Technical Details": "PHP objects are deserialized from user-input data without proper validation, allowing an attacker to inject and execute arbitrary PHP code.", "Detection": "Detecting this vulnerability involves monitoring for suspicious PHP object injection attempts.", "Mitigation": "Validate and sanitize user input, use memory-safe coding practices, and update to a patched version of Anchor CMS.", "Conclusion": "CVE-2015-5687 is a critical vulnerability that requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "CVE-2015-5687 is a high-severity vulnerability in Anchor CMS 0.9.x that enables remote code execution.", "Business Impact": "Exploitation of this vulnerability can lead to sensitive data theft, disruption of business operations, and reputational damage.", "Technical Impact": "The vulnerability allows an attacker to inject and execute arbitrary PHP code, enabling remote code execution.", "Mitigation Strategies": "Implement input validation and sanitization, and use memory-safe coding practices.", "Recommendations": "Immediately patch the vulnerability in Anchor CMS, validate and sanitize user input, and implement memory-safe coding practices.", "Conclusions": "CVE-2015-5687 is a critical vulnerability that requires immediate attention and mitigation to prevent exploitation and associated risks."}}