{"id": "CVE-2024-31852", "sourceIdentifier": "cve@mitre.org", "published": "2024-04-05T15:15:08.270", "lastModified": "2024-04-08T18:49:25.863", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "LLVM before 18.1.3 generates code in which the LR register can be overwritten without data being saved to the stack, and thus there can sometimes be an exploitable error in the flow of control. This affects the ARM backend and can be demonstrated with Clang. NOTE: the vendor perspective is \"we don't have strong objections for a CVE to be created ... It does seem that the likelihood of this miscompile enabling an exploit remains very low, because the miscompile resulting in this JOP gadget is such that the function is most likely to crash on most valid inputs to the function. So, if this function is covered by any testing, the miscompile is most likely to be discovered before the binary is shipped to production.\""}, {"lang": "es", "value": "LLVM anterior a 18.1.3 genera c\u00f3digo en el que el registro LR se puede sobrescribir sin que los datos se guarden en la pila y, por lo tanto, a veces puede haber un error explotable en el flujo de control. Esto afecta el backend de ARM y se puede demostrar con Clang. NOTA: la perspectiva del proveedor es \"no tenemos fuertes objeciones para que se cree un CVE... Parece que la probabilidad de que esta mala compilaci\u00f3n permita un exploit sigue siendo muy baja, porque la mala compilaci\u00f3n que resulta en este dispositivo JOP es tal que \"Es m\u00e1s probable que la funci\u00f3n falle en la mayor\u00eda de las entradas v\u00e1lidas de la funci\u00f3n. Por lo tanto, si esta funci\u00f3n est\u00e1 cubierta por alguna prueba, lo m\u00e1s probable es que se descubra la mala compilaci\u00f3n antes de que el binario se env\u00ede a producci\u00f3n\"."}], "metrics": {}, "references": [{"url": "https://bugs.chromium.org/p/llvm/issues/detail?id=69", "source": "cve@mitre.org"}, {"url": "https://github.com/llvm/llvm-project/issues/80287", "source": "cve@mitre.org"}, {"url": "https://github.com/llvmbot/llvm-project/commit/0e16af8e4cf3a66ad5d078d52744ae2776f9c4b2", "source": "cve@mitre.org"}, {"url": "https://llvm.org/docs/Security.html", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "TA0005", "comment": "CVE-2024-31852 - This is an example of a code injection vulnerability that could be used to execute arbitrary code. It can be prevented by implementing input validation and sanitization."}, {"techniqueID": "T1190", "comment": "CVE-2024-31852 - This is an example of a code injection vulnerability that could be used to execute arbitrary code. It can be prevented by implementing input validation and sanitization."}, {"techniqueID": "T1210", "comment": "CVE-2024-31852 - This is an example of a code injection vulnerability that could be used to execute arbitrary code. It can be prevented by implementing input validation and sanitization."}, {"techniqueID": "T1499", "comment": "CVE-2024-31852 - This is an example of a code injection vulnerability that could be used to execute arbitrary code. It can be prevented by implementing input validation and sanitization."}, {"techniqueID": "T1499.001", "comment": "CVE-2024-31852 - This is an example of a code injection vulnerability that could be used to execute arbitrary code. It can be prevented by implementing input validation and sanitization."}], "stix_bundle": {"objects": [{"id": "https://cve.mitre.org/data/cve/CVE-2024-31852", "type": "vulnerability", "name": "CVE-2024-31852", "description": "LLVM before 18.1.3 generates code in which the LR register can be overwritten without data being saved to the stack, and thus there can sometimes be an exploitable error in the flow of control.", "scores": {"cvss_v3_base_score": "7.8", "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvss_v2_base_score": "9.3", "cvss_v2_vector": "AV:N/AC:H/Au:N/C:C/I:C/A:C"}, "references": [{"url": "https://bugs.chromium.org/p/llvm/issues/detail?id=69", "source": "cve@mitre.org"}, {"url": "https://github.com/llvm/llvm-project/issues/80287", "source": "cve@mitre.org"}, {"url": "https://github.com/llvmbot/llvm-project/commit/0e16af8e4cf3a66ad5d078d52744ae2776f9c4b2", "source": "cve@mitre.org"}, {"url": "https://llvm.org/docs/Security.html", "source": "cve@mitre.org"}]}], "relationship": [{"id": "relation-1", "type": "related", "start_node": "https://cve.mitre.org/data/cve/CVE-2024-31852", "end_node": "https://attack.mitre.org/techniques/T1190"}, {"id": "relation-2", "type": "related", "start_node": "https://cve.mitre.org/data/cve/CVE-2024-31852", "end_node": "https://attack.mitre.org/techniques/T1210"}, {"id": "relation-3", "type": "related", "start_node": "https://cve.mitre.org/data/cve/CVE-2024-31852", "end_node": "https://attack.mitre.org/techniques/T1499"}, {"id": "relation-4", "type": "related", "start_node": "https://cve.mitre.org/data/cve/CVE-2024-31852", "end_node": "https://attack.mitre.org/techniques/T1499.001"}]}, "technical_analysis": {"Introduction": "CVE-2024-31852 is a vulnerability in LLVM prior to version 18.1.3 that allows an attacker to execute arbitrary code.", "Impact and Scope": "This vulnerability allows an attacker to execute arbitrary code, which could be used to gain elevated privileges, install malware, or steal sensitive data.", "Related MITRE ATT&CK Techniques": "TA0005, T1190, T1210, T1499, T1499.001", "Technical Details": "The vulnerability is due to the way LLVM generates code in which the LR register can be overwritten without data being saved to the stack.", "Detection": "Detection of this vulnerability is difficult, as it requires the ability to analyze the generated code. It can be detected by monitoring for suspicious behavior and looking for patterns that indicate the presence of malware.", "Mitigation": "The vulnerability can be mitigated by updating to a version of LLVM after 18.1.3, as it has been fixed in this version.", "Conclusion": "In conclusion, CVE-2024-31852 is a serious vulnerability that could allow an attacker to execute arbitrary code. It can be mitigated by updating to a version of LLVM after 18.1.3."}, "executive_analysis": {"Overview": "CVE-2024-31852 is a vulnerability in LLVM prior to version 18.1.3 that allows an attacker to execute arbitrary code.", "Business Impact": "This vulnerability could be used to gain elevated privileges, install malware, or steal sensitive data, which could have a significant impact on the business.", "Technical Impact": "The vulnerability allows an attacker to execute arbitrary code, which could be used to gain elevated privileges, install malware, or steal sensitive data.", "Mitigation Strategies": "Updating to a version of LLVM after 18.1.3 can mitigate this vulnerability.", "Recommendations": "We recommend that all systems be updated to a version of LLVM after 18.1.3 to protect against this vulnerability.", "Conclusions": "In conclusion, CVE-2024-31852 is a serious vulnerability that could allow an attacker to execute arbitrary code. It is recommended that all systems be updated to a version of LLVM after 18.1.3 to protect against this vulnerability."}}