{"id": "CVE-2023-7202", "sourceIdentifier": "contact@wpscan.com", "published": "2024-02-27T09:15:37.397", "lastModified": "2024-02-27T14:20:06.637", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Fatal Error Notify WordPress plugin before 1.5.3 does not have authorisation and CSRF checks in its test_error AJAX action, allowing any authenticated users, such as subscriber to call it and spam the admin email address with error messages. The issue is also exploitable via CSRF"}, {"lang": "es", "value": "El complemento Fatal Error Notify de WordPress anterior a 1.5.3 no tiene autorizaci\u00f3n y CSRF verifica su acci\u00f3n test_error AJAX, lo que permite a cualquier usuario autenticado, como un suscriptor, llamarlo y enviar spam a la direcci\u00f3n de correo electr\u00f3nico del administrador con mensajes de error. El problema tambi\u00e9n se puede explotar a trav\u00e9s de CSRF."}], "metrics": {}, "references": [{"url": "https://research.cleantalk.org/cve-2023-7202-fatal-error-notify-error-email-sending-csrf/", "source": "contact@wpscan.com"}, {"url": "https://wpscan.com/vulnerability/d923ba5b-1c20-40ee-ac69-cd0bb65b375a/", "source": "contact@wpscan.com"}], "techniques": [{"techniqueID": "TA0003", "comment": "CVE-2023-7202 - Phishing and Spear Phishing are possible as the plugin does not have proper authorization checks, allowing attackers to call the test_error AJAX action and send spam emails."}, {"techniqueID": "TA0005", "comment": "CVE-2023-7202 - This vulnerability allows the plugin to be exploited via CSRF, enabling attackers to call the test_error AJAX action and send spam emails without authentications checks."}, {"techniqueID": "TA0013", "comment": "CVE-2023-7202 - This vulnerability can be used for Command and Control, enabling attackers to use the plugin to send spam emails and potentially use it to spread malware."}, {"techniqueID": "TA0024", "comment": "CVE-2023-7202 - This vulnerability can be used for Data Stewardship, enabling attackers to use the plugin to send spam emails and potentially steal sensitive data."}, {"techniqueID": "TA0035", "comment": "CVE-2023-7202 - This vulnerability can be used for Defense Evasion, enabling attackers to use the plugin to send spam emails and potentially hide their tracks."}], "stix_bundle": {"type": "bundle", "spec_version": "2.1", "id": "CVE-2023-7202", "name": "CVE-2023-7202: Fatal Error Notify WordPress Plugin Vulnerability", "created_by_ref": "https://example.com/creator", "created": "2024-02-27T09:15:37.397", "modified": "2024-02-27T14:20:06.637", "objects": [{"type": "vulnerability", "id": "https://example.com/cve-2023-7202", "created_by_ref": "https://example.com/creator", "created": "2024-02-27T09:15:37.397", "modified": "2024-02-27T14:20:06.637", "name": "CVE-2023-7202", "description": "The Fatal Error Notify WordPress plugin before 1.5.3 does not have authorisation and CSRF checks in its test_error AJAX action, allowing any authenticated users, such as subscriber to call it and spam the admin email address with error messages.", "severity": "Medium", "published": "2024-02-27T09:15:37.397", "affected_by": [{"type": "software", "id": "https://example.com/plugin-1.5.3"}]}, {"type": "indicator", "id": "https://example.com/indicator-1", "created_by_ref": "https://example.com/creator", "created": "2024-02-27T09:15:37.397", "modified": "2024-02-27T14:20:06.637", "name": "Fatal Error Notify Plugin Spam", "description": "Spam emails sent by the Fatal Error Notify WordPress plugin due to CSRF exploitation.", "field": "Email", "value_type": "string", "value": ["spam@example.com"], "confidence": "High", " sighting": [{"type": "sighting", "id": "https://example.com/sighting-1"}]}, {"type": "course-of-action", "id": "https://example.com/coa-1", "created_by_ref": "https://example.com/creator", "created": "2024-02-27T09:15:37.397", "modified": "2024-02-27T14:20:06.637", "name": "Update Fatal Error Notify Plugin", "description": "Update the Fatal Error Notify WordPress plugin to version 1.5.3 or later to resolve the CSRF vulnerability.", "recommended_course_of_action": true, " threat_actor": [{"type": "actor", "id": "https://example.com/actor-1"}]}], "relationships": [{"type": "was_targeted_by", "id": "https://example.com/relationship-1", "source_ref": "https://example.com/vulnerability-1", "target_ref": "https://example.com/indicator-1"}, {"type": "mitigated_by", "id": "https://example.com/relationship-2", "source_ref": "https://example.com/course-of-action-1", "target_ref": "https://example.com/vulnerability-1"}]}, "technical_analysis": {"Introduction": "The Fatal Error Notify WordPress plugin before 1.5.3 is vulnerable to CSRF attacks due to a lack of authorization checks in its test_error AJAX action, allowing authenticated users to call the action and send spam emails.", "Impact and Scope": "The vulnerability can be exploited by authenticated users, such as subscribers, to send spam emails to the admin email address without any authorization checks.", "Related MITRE ATT&CK Techniques": "TA0003, TA0005, TA0013, TA0024, and TA0035", "Technical Details": "The vulnerability is due to a lack of authorization checks in the test_error AJAX action of the Fatal Error Notify WordPress plugin before 1.5.3, allowing authenticated users to call the action and send spam emails.", "Detection": " Detection of this vulnerability can be done by monitoring the plugin's activity and looking for suspicious error messages being sent to the admin email address.", "Mitigation": "The vulnerability can be mitigated by updating the Fatal Error Notify WordPress plugin to version 1.5.3 or later, or by implementing a plugin that monitors and blocks suspicious error messages sent to the admin email address.", "Conclusion": "This vulnerability is a significant threat to WordPress website security and requires immediate attention to prevent exploitation."}, "executive_analysis": {"Overview": "The Fatal Error Notify WordPress plugin before 1.5.3 is vulnerable to CSRF attacks due to a lack of authorization checks, allowing authenticated users to send spam emails to the admin email address without any authorization checks.", "Business Impact": "This vulnerability can significantly impact the business by causing a denial of service to the website's email system, causing potential downtime and revenue loss.", "Technical Impact": "The vulnerability is due to a technical flaw in the plugin's code, specifically the lack of authorization checks in the test_error AJAX action.", "Mitigation Strategies": "The most effective mitigation strategy is to update the Fatal Error Notify WordPress plugin to version 1.5.3 or later, or by implementing a plugin that monitors and blocks suspicious error messages sent to the admin email address.", "Recommendations": "Executives should recommend that developers immediately update the plugin to the latest version and implement additional security controls to prevent exploitation.", "Conclusions": "This vulnerability presents a significant threat to WordPress website security and requires immediate attention to prevent exploitation and minimize potential business impact."}}