{"id": "CVE-2024-43888", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-08-26T11:15:03.930", "lastModified": "2024-08-27T14:37:52.610", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: list_lru: fix UAF for memory cgroup\n\nThe mem_cgroup_from_slab_obj() is supposed to be called under rcu lock or\ncgroup_mutex or others which could prevent returned memcg from being\nfreed.  Fix it by adding missing rcu read lock.\n\nFound by code inspection.\n\n[songmuchun@bytedance.com: only grab rcu lock when necessary, per Vlastimil]\n  Link: https://lkml.kernel.org/r/20240801024603.1865-1-songmuchun@bytedance.com"}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mm: list_lru: corrige UAF para memoria cgroup Se supone que mem_cgroup_from_slab_obj() debe llamarse bajo rcu lock o cgroup_mutex u otros, lo que podr\u00eda impedir que se libere el memcg devuelto. Solucionarlo agregando el bloqueo de lectura rcu que falta. Encontrado mediante inspecci\u00f3n de c\u00f3digo. [songmuchun@bytedance.com: solo tome el bloqueo rcu cuando sea necesario, seg\u00fan Vlastimil] Enlace: https://lkml.kernel.org/r/20240801024603.1865-1-songmuchun@bytedance.com"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.8, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-416"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionStartIncluding": "6.8", "versionEndExcluding": "6.10.5", "matchCriteriaId": "48E239A0-A959-4FAB-8475-D045FED3DDA5"}, {"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:6.11:rc1:*:*:*:*:*:*", "matchCriteriaId": "8B3CE743-2126-47A3-8B7C-822B502CF119"}, {"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:6.11:rc2:*:*:*:*:*:*", "matchCriteriaId": "4DEB27E7-30AA-45CC-8934-B89263EF3551"}]}]}], "references": [{"url": "https://git.kernel.org/stable/c/4589f77c18dd98b65f45617b6d1e95313cf6fcab", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/5161b48712dcd08ec427c450399d4d1483e21dea", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "tags": ["Patch"]}], "techniques": [{"techniqueID": "T1036", "comment": "CVE-2024-43888 - Missing Locks - This is a valid example of a MITRE 1 Technique ID where we can hide a UAF vulnerability behind a missing lock. To defend against this, ensure that rcu read locks are properly implemented."}, {"techniqueID": "T1027", "comment": "CVE-2024-43888 - Access to Memory - This is a valid example of a MITRE 1 Technique ID where we can access memory after freeing. To defend against this, implement memory segmentation and memory-based access controls."}], "stix_bundle": {"type": "bundle", "id": "https://example.com/bundle/cve-2024-43888", "spec_version": "2.1", "title": "CVE-2024-43888 Bundle", "description": "A bundle containing all STIX objects related to CVE-2024-43888", "objects": [{"type": "incident", "id": "https://example.com/incident/cve-2024-43888", "created_by_ref": "https://example.com/user/admin", "created": "2024-08-26T11:15:03.930", "modified": "2024-08-27T14:37:52.610", "title": "CVE-2024-43888 Incident", "description": "A vulnerability in the Linux kernel allows for an attacker to access memory after it has been freed.", "labels": ["vulnerability", "cve-2024-43888"], "reports": [{"type": "artifact", "id": "https://example.com/artifact/cve-2024-43888-analysis", "content": "This is an analysis of the vulnerability and the technical details.", "labels": ["analysis", "vulnerability"]}]}, {"type": "incident", "id": "https://example.com/incident/cve-2024-43888-analysis", "created_by_ref": "https://example.com/user/admin", "created": "2024-08-26T11:15:03.930", "modified": "2024-08-27T14:37:52.610", "title": "CVE-2024-43888 Analysis Incident", "description": "An analysis of the vulnerability and potential defense strategies.", "labels": ["analysis", "vulnerability"], "reports": [{"type": "tactic", "id": "https://example.com/tactic/cve-2024-43888", "name": "Exploit Public-Facing Application", "description": "Exploiting public-facing applications to gain access to a system.", "labels": ["tactic", "exploit"]}]}]}, "technical_analysis": {"Introduction": "CVE-2024-43888 is a vulnerability in the Linux kernel that allows an attacker to access memory after it has been freed.", "Impact and Scope": "The vulnerability has a CVSS score of 7.8 with a high attack vector.", "Related MITRE ATT&CK Techniques": "T1036 - Missing Locks, T1027 - Access to Memory", "Technical Details": "The vulnerability is caused by missing locks in the Linux kernel, which allows an attacker to access memory after it has been freed.", "Detection": "The vulnerability can be detected by analyzing system logs for memory allocation and deallocation.", "Mitigation": "The vulnerability can be mitigated by implementing memory segmentation and memory-based access controls.", "Conclusion": "In conclusion, CVE-2024-43888 is a vulnerability in the Linux kernel that can be exploited to gain access to a system."}, "executive_analysis": {"Overview": "CVE-2024-43888 is a vulnerability in the Linux kernel that allows an attacker to access memory after it has been freed.", "Business Impact": "The vulnerability can have significant business impacts, such as data breaches and system compromise.", "Technical Impact": "The vulnerability can have significant technical impacts, such as system crashes and data corruption.", "Mitigation Strategies": "Implementing memory segmentation and memory-based access controls can mitigate the vulnerability.", "Recommendations": "Recommendations for executives include implementing vulnerability management programs and conducting regular security assessments.", "Conclusions": "In conclusion, CVE-2024-43888 is a significant vulnerability that requires immediate attention from executives and technical teams."}}