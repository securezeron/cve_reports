{"id": "CVE-2020-7239", "sourceIdentifier": "cve@mitre.org", "published": "2020-01-21T05:15:11.337", "lastModified": "2020-01-24T22:53:35.937", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The conversation-watson plugin before 0.8.21 for WordPress has a DOM-based XSS vulnerability that is executed when a chat message containing JavaScript is sent."}, {"lang": "es", "value": "El plugin conversation-watson versiones anteriores a 0.8.21 para WordPress, presenta una vulnerabilidad de tipo XSS basada en DOM que es ejecutada cuando un mensaje de chat que contiene JavaScript es enviado."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:ibm:chatbot_with_ibm_watson:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "0.8.21", "matchCriteriaId": "D02B1445-357E-4501-A535-084F1CA6A59B"}]}]}], "references": [{"url": "https://wordpress.org/plugins/conversation-watson/#developers", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://wpvulndb.com/vulnerabilities/10035", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.hooperlabs.xyz/disclosures/cve-2020-7239.php", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2020-7239 - Potential for DOM-based XSS vulnerability execution. This technique could be used to inject malicious JavaScript code to steal sensitive information, perform unauthorized actions, or conduct business email compromise attacks. Defenses include implementing Content Security Policy (CSP) and Secure Sockets Layer/Transport Layer Security (SSL/TLS) protocol upgrades."}, {"techniqueID": "T1059", "comment": "CVE-2020-7239 - Web Server Attack technique. Vulnerably open web servers may be exploited to inject malicious web content. This technique may be used to conduct cross-site scripting attacks or steal sensitive information. Defenses include implementing web application firewalls (WAFs), restricting HTTP methods, and monitoring for suspicious web traffic."}], "stix_bundle": {"bundle": {"type": "bundle", "id": "svcb-2020-7239", "created": "2020-01-21T05:15:11.337", "modified": "2020-01-24T22:53:35.937", "entities": [{"type": "vulnerability", "id": "CVE-2020-7239", "created": "2020-01-21T05:15:11.337", "modified": "2020-01-24T22:53:35.937", "name": "CVE-2020-7239 - Conversation-watson plugin DOM-based XSS vulnerability"}, {"type": "mitigation", "id": "mitigate-CVE-2020-7239", "created": "2020-01-21T05:15:11.337", "modified": "2020-01-24T22:53:35.937", "name": "Implement Content Security Policy (CSP) and Secure Sockets Layer/Transport Layer Security (SSL/TLS) protocol upgrades"}, {"type": "report", "id": "report-CVE-2020-7239", "created": "2020-01-21T05:15:11.337", "modified": "2020-01-24T22:53:35.937", "name": "CVE-2020-7239 - Technical and Executive Analysis"}], " relationships": [{"relationship_type": "affected_by", "from": {"id": "mitigate-CVE-2020-7239"}, "to": {"id": "CVE-2020-7239"}}, {"relationship_type": "part_of", "from": {"id": "report-CVE-2020-7239"}, "to": {"id": "Bundle-CVE-2020-7239"}}]}}, "technical_analysis": {"Introduction": "The conversation-watson plugin before 0.8.21 for WordPress has a DOM-based XSS vulnerability that can be executed when a chat message containing JavaScript is sent.", "Impact and Scope": "This vulnerability has a CVSS Score of 6.1 with a version and attack vector of CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N. It has a potential for significant impact on sensitive data and user interactions.", "Related MITRE ATT&CK Techniques": "T1190 - DOM-Based Flash Injection and T1059 - Web Server Attacks", "Technical Details": "The vulnerability is caused by the plugin's failure to properly sanitize user-input data, allowing attackers to inject JavaScript code into web pages. This can be exploited by sending a malicious chat message to a vulnerable plugin.", "Detection": "Detection of this vulnerability can be performed by using web application scanners, penetration testing, or manual testing.", "Mitigation": "Implementing Content Security Policy (CSP) and Secure Sockets Layer/Transport Layer Security (SSL/TLS) protocol upgrades can help prevent exploitation.", "Conclusion": "This vulnerability has significant potential for exploitation and should be prioritized for remediation."}, "executive_analysis": {"Overview": "The conversation-watson plugin before 0.8.21 for WordPress has a DOM-based XSS vulnerability that can be executed when a chat message containing JavaScript is sent.", "Business Impact": "This vulnerability has the potential to compromise sensitive data and user interactions, leading to potential financial loss or reputational damage.", "Technical Impact": "This vulnerability can be exploited to steal sensitive information, perform unauthorized actions, or conduct business email compromise attacks.", "Mitigation Strategies": "Implementing Content Security Policy (CSP) and Secure Sockets Layer/Transport Layer Security (SSL/TLS) protocol upgrades can help prevent exploitation.", "Recommendations": "Prioritize remediation of this vulnerability, implement web application firewalls (WAFs) and restrict HTTP methods to limit potential exploitation.", "Conclusions": "This vulnerability should be treated with high priority and remediated as soon as possible."}}