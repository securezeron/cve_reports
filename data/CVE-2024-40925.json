{"id": "CVE-2024-40925", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-07-12T13:15:15.343", "lastModified": "2024-07-12T16:34:58.687", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix request.queuelist usage in flush\n\nFriedrich Weber reported a kernel crash problem and bisected to commit\n81ada09cc25e (\"blk-flush: reuse rq queuelist in flush state machine\").\n\nThe root cause is that we use \"list_move_tail(&rq->queuelist, pending)\"\nin the PREFLUSH/POSTFLUSH sequences. But rq->queuelist.next == xxx since\nit's popped out from plug->cached_rq in __blk_mq_alloc_requests_batch().\nWe don't initialize its queuelist just for this first request, although\nthe queuelist of all later popped requests will be initialized.\n\nFix it by changing to use \"list_add_tail(&rq->queuelist, pending)\" so\nrq->queuelist doesn't need to be initialized. It should be ok since rq\ncan't be on any list when PREFLUSH or POSTFLUSH, has no move actually.\n\nPlease note the commit 81ada09cc25e (\"blk-flush: reuse rq queuelist in\nflush state machine\") also has another requirement that no drivers would\ntouch rq->queuelist after blk_mq_end_request() since we will reuse it to\nadd rq to the post-flush pending list in POSTFLUSH. If this is not true,\nwe will have to revert that commit IMHO.\n\nThis updated version adds \"list_del_init(&rq->queuelist)\" in flush rq\ncallback since the dm layer may submit request of a weird invalid format\n(REQ_FSEQ_PREFLUSH | REQ_FSEQ_POSTFLUSH), which causes double list_add\nif without this \"list_del_init(&rq->queuelist)\". The weird invalid format\nproblem should be fixed in dm layer."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: bloque: corrige el uso de request.queuelist en Flush Friedrich Weber inform\u00f3 un problema de falla del kernel y lo bisec\u00f3 para el commit 81ada09cc25e (\"blk-flush: reutilizar rq queuelist en la m\u00e1quina de estado de descarga\"). La causa principal es que usamos \"list_move_tail(&amp;rq-&gt;queuelist, pendiente)\" en las secuencias PREFLUSH/POSTFLUSH. Pero rq-&gt;queuelist.next == xxx ya que sali\u00f3 del plug-&gt;cached_rq en __blk_mq_alloc_requests_batch(). No inicializamos su lista de colas solo para esta primera solicitud, aunque se inicializar\u00e1 la lista de colas de todas las solicitudes emergentes posteriores. Solucionelo cambiando para usar \"list_add_tail(&amp;rq-&gt;queuelist, pendiente)\" para que no sea necesario inicializar rq-&gt;queuelist. Deber\u00eda estar bien ya que rq no puede estar en ninguna lista cuando PREFLUSH o POSTFLUSH, en realidad no tiene movimiento. Tenga en cuenta que el commit 81ada09cc25e (\"blk-flush: reutilizar rq queuelist en la m\u00e1quina de estado de descarga\") tambi\u00e9n tiene otro requisito de que ning\u00fan controlador toque rq-&gt;queuelist despu\u00e9s de blk_mq_end_request() ya que lo reutilizaremos para agregar rq al post-flush lista pendiente en POSTFLUSH. Si esto no es cierto, tendremos que revertir ese commit en mi humilde opini\u00f3n. Esta versi\u00f3n actualizada agrega \"list_del_init(&amp;rq-&gt;queuelist)\" en la devoluci\u00f3n de llamada de Flush rq ya que la capa dm puede enviar una solicitud de un formato extra\u00f1o no v\u00e1lido (REQ_FSEQ_PREFLUSH | REQ_FSEQ_POSTFLUSH), lo que provoca el doble list_add si no se tiene este \"list_del_init(&amp;rq-&gt;queuelist) \". El extra\u00f1o problema del formato no v\u00e1lido deber\u00eda solucionarse en la capa dm."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/87907bd69721a8506618a954d41a1de3040e88aa", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/d0321c812d89c5910d8da8e4b10c891c6b96ff70", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/fe1e395563ccb051e9dbd8fa99859f5caaad2e71", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "TA1518", "comment": "CVE-2024-40925 - This is a kernel vulnerability that can be used for privilege escalation, highlighting the importance of maintaining up-to-date kernel versions and implementing secure coding practices."}, {"techniqueID": "T1055", "comment": "CVE-2024-40925 - This is a kernel vulnerability that can be used for privilege escalation, emphasizing the need for robust authentication and authorization mechanisms to prevent unauthorized access."}, {"techniqueID": "T1077", "comment": "CVE-2024-40925 - This is a kernel vulnerability that can be used for privilege escalation, demonstrating the significance of implementing robust network segmentation and monitoring to detect and prevent lateral movement."}], "stix_bundle": {"@schema": "https://stix-project.github.io/XMLSchema/2.1/stix", "bundle": {"id": "bundle--2024-07-12T13:15:15.343--416baaa9-dc9f-4396-8d5f-8c081fb06d67", "created_by_ref": "identity--9c6e54a9-9e36-449c-8e18-8d4e50c73e9d", "created": "2024-07-12T13:15:15.343", "modified": "2024-07-12T16:34:58.687", "handling": [{"type": "mark-for-action"}], "includes": [{"vulnerability": {"id": "vulnerability--416baaa9-dc9f-4396-8d5f-8c081fb06d67", "title": "CVE-2024-40925", "description": "This is a kernel vulnerability that can be used for privilege escalation.", "published": "2024-07-12T13:15:15.343", "last_modified": "2024-07-12T16:34:58.687", "cve_ids": ["CVE-2024-40925"], "related_opaliases": ["416baaa9-dc9f-4396-8d5f-8c081fb06d67"], "references": [{"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "resource": "https://git.kernel.org/stable/c/87907bd69721a8506618a954d41a1de3040e88aa"}, {"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "resource": "https://git.kernel.org/stable/c/d0321c812d89c5910d8da8e4b10c891c6b96ff70"}, {"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "resource": "https://git.kernel.org/stable/c/fe1e395563ccb051e9dbd8fa99859f5caaad2e71"}]}}, {"course-of-action": {"id": "course-of-action--416baaa9-dc9f-4396-8d5f-8c081fb06d67", "description": "Apply the patch and update the kernel to the latest version.", "related t\u00e9cniques": ["TA1518", "T1055", "T1077"]}}]}}, "technical_analysis": {"Introduction": "CVE-2024-40925 is a kernel vulnerability that can be used for privilege escalation, affecting Linux systems.", "Impact and Scope": "CVSS score: 8.0, Attack Vector: Network, Impact: High", "Related MITRE ATT&CK Techniques": "TA1518, T1055, T1077", "Technical Details": "The vulnerability is caused by the misuse of the request queuelist in the block driver, which allows an attacker to gain elevated privileges.", "Detection": "Use intrusion detection systems to monitor for suspicious network traffic patterns.", "Mitigation": "Apply the patch and update the kernel to the latest version.", "Conclusion": "Conclusion: CVE-2024-40925 is a critical vulnerability that requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "CVE-2024-40925 is a kernel vulnerability that can be used for privilege escalation, affecting Linux systems.", "Business Impact": "High business impact, as it can allow an attacker to gain elevated privileges and access sensitive data.", "Technical Impact": "Technical impact: the vulnerability allows an attacker to gain elevated privileges, which can lead to unauthorized access and data compromise.", "Mitigation Strategies": "Apply the patch and update the kernel to the latest version.", "Recommendations": "Recommendations for executives.", "Conclusions": "Final conclusion: CVE-2024-40925 is a critical vulnerability that requires immediate attention and mitigation."}}