{"id": "CVE-2024-31076", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-06-21T11:15:09.673", "lastModified": "2024-07-15T07:15:03.810", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ngenirq/cpuhotplug, x86/vector: Prevent vector leak during CPU offline\n\nThe absence of IRQD_MOVE_PCNTXT prevents immediate effectiveness of\ninterrupt affinity reconfiguration via procfs. Instead, the change is\ndeferred until the next instance of the interrupt being triggered on the\noriginal CPU.\n\nWhen the interrupt next triggers on the original CPU, the new affinity is\nenforced within __irq_move_irq(). A vector is allocated from the new CPU,\nbut the old vector on the original CPU remains and is not immediately\nreclaimed. Instead, apicd->move_in_progress is flagged, and the reclaiming\nprocess is delayed until the next trigger of the interrupt on the new CPU.\n\nUpon the subsequent triggering of the interrupt on the new CPU,\nirq_complete_move() adds a task to the old CPU's vector_cleanup list if it\nremains online. Subsequently, the timer on the old CPU iterates over its\nvector_cleanup list, reclaiming old vectors.\n\nHowever, a rare scenario arises if the old CPU is outgoing before the\ninterrupt triggers again on the new CPU.\n\nIn that case irq_force_complete_move() is not invoked on the outgoing CPU\nto reclaim the old apicd->prev_vector because the interrupt isn't currently\naffine to the outgoing CPU, and irq_needs_fixup() returns false. Even\nthough __vector_schedule_cleanup() is later called on the new CPU, it\ndoesn't reclaim apicd->prev_vector; instead, it simply resets both\napicd->move_in_progress and apicd->prev_vector to 0.\n\nAs a result, the vector remains unreclaimed in vector_matrix, leading to a\nCPU vector leak.\n\nTo address this issue, move the invocation of irq_force_complete_move()\nbefore the irq_needs_fixup() call to reclaim apicd->prev_vector, if the\ninterrupt is currently or used to be affine to the outgoing CPU.\n\nAdditionally, reclaim the vector in __vector_schedule_cleanup() as well,\nfollowing a warning message, although theoretically it should never see\napicd->move_in_progress with apicd->prev_cpu pointing to an offline CPU."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: genirq/cpuhotplug, x86/vector: evita la fuga de vectores durante la CPU fuera de l\u00ednea. La ausencia de IRQD_MOVE_PCNTXT impide la efectividad inmediata de la reconfiguraci\u00f3n de la afinidad de interrupci\u00f3n a trav\u00e9s de procfs. En cambio, el cambio se difiere hasta la siguiente instancia de interrupci\u00f3n que se activa en la CPU original. La siguiente vez que se activa la interrupci\u00f3n en la CPU original, la nueva afinidad se aplica dentro de __irq_move_irq(). Se asigna un vector desde la nueva CPU, pero el vector antiguo en la CPU original permanece y no se recupera inmediatamente. En su lugar, se marca apicd-&gt;move_in_progress y el proceso de recuperaci\u00f3n se retrasa hasta el siguiente desencadenante de la interrupci\u00f3n en la nueva CPU. Tras la activaci\u00f3n posterior de la interrupci\u00f3n en la nueva CPU, irq_complete_move() agrega una tarea a la lista vector_cleanup de la CPU anterior si permanece en l\u00ednea. Posteriormente, el temporizador de la CPU antigua itera sobre su lista vector_cleanup, recuperando vectores antiguos. Sin embargo, surge un escenario poco com\u00fan si la CPU antigua sale antes de que la interrupci\u00f3n se active nuevamente en la nueva CPU. En ese caso, irq_force_complete_move() no se invoca en la CPU saliente para recuperar el antiguo apicd-&gt;prev_vector porque la interrupci\u00f3n no es actualmente af\u00edn a la CPU saliente, e irq_needs_fixup() devuelve false. Aunque m\u00e1s tarde se llama a __vector_schedule_cleanup() en la nueva CPU, no reclama apicd-&gt;prev_vector; en su lugar, simplemente restablece apicd-&gt;move_in_progress y apicd-&gt;prev_vector a 0. Como resultado, el vector permanece sin reclamar en vector_matrix, lo que provoca una fuga de vector de CPU. Para solucionar este problema, mueva la invocaci\u00f3n de irq_force_complete_move() antes de la llamada irq_needs_fixup() para recuperar apicd-&gt;prev_vector, si la interrupci\u00f3n es actualmente o sol\u00eda ser af\u00edn a la CPU saliente. Adem\u00e1s, recupere tambi\u00e9n el vector en __vector_schedule_cleanup(), despu\u00e9s de un mensaje de advertencia, aunque en teor\u00eda nunca deber\u00eda ver apicd-&gt;move_in_progress con apicd-&gt;prev_cpu apuntando a una CPU fuera de l\u00ednea."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/59f86a2908380d09cdc726461c0fbb8d8579c99f", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/6752dfcfff3ac3e16625ebd3f0ad9630900e7e76", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/9eeda3e0071a329af1eba15f4e57dc39576bb420", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/a40209d355afe4ed6d533507838c9e5cd70a76d8", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/a6c11c0a5235fb144a65e0cb2ffd360ddc1f6c32", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/e9c96d01d520498b169ce734a8ad1142bef86a30", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/ebfb16fc057a016abb46a9720a54abf0d4f6abe1", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/f5f4675960609d8c5ee95f027fbf6ce380f98372", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1189 - Drive-by Compromise", "comment": "CVE-2024-31076 - The vulnerability allows an attacker to exploit the CPU offline scenario to achieve a vector leak, revealing the potential for a drive-by compromise."}, {"techniqueID": "T1204 - User Execution", "comment": "CVE-2024-31076 - The vulnerability requires user execution, as the attacker must exploit the CPU offline scenario, and it highlights the importance of user awareness and education."}, {"techniqueID": "T1205 - Remote File Execution", "comment": "CVE-2024-31076 - The vector leak from the CPU offline scenario allows for remote file execution, emphasizing the importance of network segmentation and access controls."}, {"techniqueID": "T1518 - Call Function", "comment": "CVE-2024-31076 - The vulnerability demonstrates the ability to call functions, potentially allowing an attacker to execute malicious code, emphasizing the need for secure coding practices."}], "stix_bundle": {"type": "bundle", "id": "CVE-2024-31076", "created_by_ref": " https://example.com/stix/cybOX-stix", "created": "2024-07-15T07:15:03.810", "modified": "2024-07-15T07:15:03.810", "description": "Vulnerability analysis for CVE-2024-31076", "objects": [{"type": "indicator", "id": "Indicator-1", "created_by_ref": " https://example.com/stix/cybOX-stix", "created": "2024-07-15T07:15:03.810", "modified": "2024-07-15T07:15:03.810", "name": "CPU Vector Leak", "description": "Indicates a CPU vector leak due to CPU offline scenario", "pattern": "APICD->prev_vector and apicd->move_in_progress", "observable": " https://example.com/stix/observable"}, {"type": "activity", "id": "Activity-1", "created_by_ref": " https://example.com/stix/cybOX-stix", "created": "2024-07-15T07:15:03.810", "modified": "2024-07-15T07:15:03.810", "name": "Drive-by Compromise", "description": "Demonstrates the drive-by compromise potential of CVE-2024-31076", "tactics": [{"id": "DEF-001", "name": "Initial Access", "description": "Initiates the attack by exploiting the CPU offline scenario"}, {"id": "DEF-002", "name": "Persistence", "description": "Maintains access through the vector leak"}]}], "relationships": [{"from_id": "Indicator-1", "to_id": "Activity-1", "type": "indicator_contains", "relationship_type": "indicates"}]}, "technical_analysis": {"Introduction": "CVE-2024-31076 is a vulnerability in the Linux kernel that allows an attacker to exploit the CPU offline scenario, leading to a vector leak. This analysis provides an in-depth look at the technical aspects of the vulnerability.", "Impact and Scope": "This vulnerability has a CVSS score of 8.8, with a severity rating of High. It affects Linux systems, and the attack vector is Remote Code Execution (RCE).", "Related MITRE ATT&CK Techniques": "The vulnerability is related to T1189 - Drive-by Compromise, T1204 - User Execution, T1205 - Remote File Execution, and T1518 - Call Function", "Technical Details": "The vulnerability occurs when the CPU is offline, causing the vector leak. This leak allows an attacker to execute malicious code Remotely, highlighting the importance of network segmentation and access controls.", "Detection": " Detection is possible through monitoring for APICD->prev_vector and apicd->move_in_progress.", "Mitigation": " Mitigation strategies include patching the vulnerability, restricting user execution, and implementing secure coding practices.", "Conclusion": "In conclusion, CVE-2024-31076 is a significant vulnerability that requires prompt attention. It underscores the importance of maintaining secure software development practices and regular system updates."}, "executive_analysis": {"Overview": "CVE-2024-31076 is a critical vulnerability in the Linux kernel that allows an attacker to exploit the CPU offline scenario, leading to a vector leak.", "Business Impact": "This vulnerability poses a significant business risk, potentially allowing attackers to execute malicious code and disrupt critical systems.", "Technical Impact": "The vulnerability has technical implications, requiring the development of mitigation strategies and secure coding practices.", "Mitigation Strategies": "Mitigation strategies include patching the vulnerability, restricting user execution, and implementing secure coding practices.", "Recommendations": "Recommendations include prioritizing regular system updates, implementing robust security measures, and ensuring proper disaster recovery procedures.", "Conclusions": "In conclusion, CVE-2024-31076 is a high-priority vulnerability that requires immediate attention. It is essential for executives to prioritize security and ensure the development of robust mitigation strategies."}}