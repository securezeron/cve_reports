{"id": "CVE-2024-6254", "sourceIdentifier": "security@wordfence.com", "published": "2024-08-08T04:17:06.983", "lastModified": "2024-08-08T13:04:18.753", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Brizy \u2013 Page Builder plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 2.5.1. This is due to missing or incorrect nonce validation on form submissions. This makes it possible for unauthenticated attackers to submit forms intended for public use as another user via a forged request granted they can trick a site administrator into performing an action such as clicking on a link. On sites where unfiltered_html is enabled, this can lead to the admin unknowingly adding a Stored Cross-Site Scripting payload."}, {"lang": "es", "value": "El complemento Brizy \u2013 Page Builder para WordPress es vulnerable a Cross-Site Request Forgery en todas las versiones hasta la 2.5.1 incluida. Esto se debe a una validaci\u00f3n nonce faltante o incorrecta en los env\u00edos de formularios. Esto hace posible que atacantes no autenticados env\u00eden formularios destinados a uso p\u00fablico como otro usuario a trav\u00e9s de una solicitud falsificada, siempre que puedan enga\u00f1ar al administrador del sitio para que realice una acci\u00f3n como hacer clic en un enlace. En sitios donde unfiltered_html est\u00e1 habilitado, esto puede llevar a que el administrador agregue, sin saberlo, un payload de Cross Site Scripting (XSS) Almacenado."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}]}, "weaknesses": [{"source": "security@wordfence.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-20"}]}], "references": [{"url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=3129495%40brizy%2Ftrunk&old=3125955%40brizy%2Ftrunk&sfp_email=&sfph_mail=", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/75ec04f1-8bea-4514-b1d0-da5b305219d7?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1200: Exploit Public-Facing Application", "comment": "CVE-2024-6254 - This technique is relevant as it describes the exploitation of a publicly-facing application, which is vulnerable to Cross-Site Request Forgery. Defending against this technique involves implementing proper nonce validation and rate limiting on form submissions."}, {"techniqueID": "T1190: Exploit, Validate Encodings, and Leverage ANSI/ASCII", "comment": "CVE-2024-6254 - This technique is relevant as it describes the exploitation of unvalidated user input, which could lead to a Cross-Site Request Forgery. Defending against this technique involves validating and sanitizing user input to prevent malicious payloads."}, {"techniqueID": "T1075: Brute Force", "comment": "CVE-2024-6254 - This technique is relevant as it describes the potential for attackers to brute-force form submissions, which could be used to exploit the Cross-Site Request Forgery vulnerability. Defending against this technique involves implementing rate limiting and IP blocking."}, {"techniqueID": "T1203: Data Staged", "comment": "CVE-2024-6254 - This technique is relevant as it describes the potential for attackers to stage data, which could be used to exploit the Cross-Site Request Forgery vulnerability. Defending against this technique involves monitoring for suspicious data staging activity."}, {"techniqueID": "T1036: Upload and Execute Files", "comment": "CVE-2024-6254 - This technique is relevant as it describes the potential for attackers to upload and execute malicious files, which could be used to exploit the Cross-Site Request Forgery vulnerability. Defending against this technique involves monitoring for suspicious file uploads and execution."}], "technical_analysis": {"Introduction": "The vulnerability CVE-2024-6254 is a Cross-Site Request Forgery (CSRF) vulnerability in the Brizy \u2013 Page Builder plugin for WordPress. This vulnerability allows an attacker to tricks a user into performing unintended actions, such as submitting a form.", "Impact and Scope": "The vulnerability has a CVSS score of 4.3, with a base severity of MEDIUM. The attack vector is NETWORK, and the user interaction is REQUIRED.", "Related MITRE ATT&CK Techniques": "The techniques associated with this CVE include Exploit Public-Facing Application, Exploit, Validate Encodings, and Leverage ANSI/ASCII, Brute Force, Data Staged, and Upload and Execute Files.", "Technical Details": "The vulnerability occurs due to missing or incorrect nonce validation on form submissions. This allows an attacker to submit a form intended for public use as another user via a forged request. On sites where unfiltered_html is enabled, this could lead to the admin unknowingly adding a Stored Cross-Site Scripting payload.", "Detection": "Detection involves monitoring for suspicious form submissions and payload execution. Additionally, monitoring for anomalies in the application's behavior, such as unexpected form submissions or payload execution.", "Mitigation": "Mitigation strategies include implementing proper nonce validation and rate limiting on form submissions, validating and sanitizing user input, and monitoring for suspicious data staging and file uploads.", "Conclusion": "In conclusion, the vulnerability CVE-2024-6254 is a significant security risk that can be exploited by attackers. Implementing proper security measures, such as proper nonce validation and rate limiting, can help mitigate the risk of this vulnerability."}, "executive_analysis": {"Overview": "The vulnerability CVE-2024-6254 is a Cross-Site Request Forgery (CSRF) vulnerability in the Brizy \u2013 Page Builder plugin for WordPress.", "Business Impact": "The vulnerability has the potential to disrupt business operations, compromise sensitive data, and put users at risk.", "Technical Impact": "The vulnerability has a significant technical impact, as it can be exploited by attackers to perform unintended actions, such as submitting forms or executing code.", "Mitigation Strategies": "The recommended mitigation strategies include implementing proper nonce validation and rate limiting on form submissions, validating and sanitizing user input, and monitoring for suspicious data staging and file uploads.", "Recommendations": "Key recommendations include implementing proper security measures, conducting regular vulnerability assessments, and staying up-to-date with the latest security patches.", "Conclusions": "In conclusion, the vulnerability CVE-2024-6254 is a significant security risk that requires immediate attention and remediation. Executives should prioritize addressing this vulnerability to protect their organization's data and reputation."}}