{"id": "CVE-2023-5708", "sourceIdentifier": "security@wordfence.com", "published": "2023-11-22T16:15:14.387", "lastModified": "2023-12-02T00:23:27.807", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The WP Post Columns plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'column' shortcode in all versions up to, and including, 2.2 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El complemento WP Post Columns para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del c\u00f3digo corto 'column' del complemento en todas las versiones hasta la 2.2 incluida debido a una sanitizaci\u00f3n de entrada insuficiente y a un escape de salida en los atributos proporcionados por el usuario. Esto hace posible que atacantes autenticados con permisos de nivel de colaborador y superiores inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wp_post_columns_project:wp_post_columns:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "2.2", "matchCriteriaId": "E45BBB63-E40E-415A-B94B-A6BD855D593E"}]}]}], "references": [{"url": "https://plugins.trac.wordpress.org/browser/wp-post-columns/trunk/wp_post_columns.php?rev=112013#L59", "source": "security@wordfence.com", "tags": ["Patch"]}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d96e5986-8c89-4e7e-aa63-f41aa13eeff4?source=cve", "source": "security@wordfence.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2023-5708 - This Stored Cross-Site Scripting vulnerability allows attackers to inject arbitrary web scripts, which can be executed by authenticated users. Defending against it involves sanitizing user-supplied attributes and escaping output."}, {"techniqueID": "T1059", "comment": "CVE-2023-5708 - Attackers can inject arbitrary web scripts, which can be executed by authenticated users. Defending against it involves monitoring and detecting unusual web traffic patterns."}, {"techniqueID": "T1566", "comment": "CVE-2023-5708 - The vulnerability allows attackers to inject arbitrary web scripts, which can be executed by authenticated users. Defending against it involves implementing Content Security Policy (CSP) to restrict the types of scripts allowed on the page."}, {"techniqueID": "T1192", "comment": "CVE-2023-5708 - Attackers can inject arbitrary web scripts, which can be executed by authenticated users. Defending against it involves implementing IP address blocking for suspicious IP addresses."}, {"techniqueID": "T1197", "comment": "CVE-2023-5708 - The vulnerability allows attackers to inject arbitrary web scripts, which can be executed by authenticated users. Defending against it involves configuring a Web Application Firewall (WAF) to block malicious traffic."}], "stix_bundle": {"id": "CVE-2023-5708-STIX-1.1", "type": "bundle", "objects": [{"id": "CVE-2023-5708", "type": "vulnerability", "name": "WordPress WP Post Columns Plugin Stored Cross-Site Scripting", "description": "The WP Post Columns plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'column' shortcode in all versions up to, and including, 2.2 due to insufficient input sanitization and output escaping on user supplied attributes.", "published": "2023-11-22T16:15:14.387", "modified": "2023-12-02T00:23:27.807", "cvss-V3": "5.4", "cvss-V2": "N/A", "references": [{"id": "https://plugins.trac.wordpress.org/browser/wp-post-columns/trunk/wp_post_columns.php?rev=112013#L59", "type": "reference", "name": "Patch"}, {"id": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d96e5986-8c89-4e7e-aa63-f41aa13eeff4?source=cve", "type": "reference", "name": "Third Party Advisory"}], "courses-of-action": [{"id": "COA-1", "type": "course-of-action", "name": "Update to version 2.3 and above", "description": "Update the WP Post Columns plugin to version 2.3 and above to remediate the vulnerability.", "techniques": ["TA0007"]}, {"id": "COA-2", "type": "course-of-action", "name": "Implement Input Validation and Sanitization", "description": "Implement proper input validation and sanitization on user-supplied attributes to prevent the vulnerability.", "techniques": ["TA0007"]}], "defense-actors": [{"id": "DO-1", "type": "defense-actor", "name": "System Administrator", "description": "System administrators can monitor and detect unusual web traffic patterns and take action to mitigate the vulnerability."}, {"id": "DO-2", "type": "defense-actor", "name": "Web Developer", "description": "Web developers can implement proper input validation and sanitization on user-supplied attributes to prevent the vulnerability."}], "notes": [{"id": "Note-1", "type": "note", "name": "Note on detection and mitigation", "description": "It is essential to detect and mitigate this vulnerability promptly to prevent exploitation by attackers."}, {"id": "Note-2", "type": "note", "name": "Note on patching", "description": "Patching the plugin to version 2.3 and above is the most effective way to mitigate the vulnerability."}]}], "relationships": [{"from": "CVE-2023-5708", "type": "related-to", "to": "T1190"}, {"from": "CVE-2023-5708", "type": "related-to", "to": "T1059"}, {"from": "CVE-2023-5708", "type": "related-to", "to": "T1566"}, {"from": "CVE-2023-5708", "type": "related-to", "to": "T1192"}, {"from": "CVE-2023-5708", "type": "related-to", "to": "T1197"}]}, "technical_analysis": {"Introduction": "The WordPress WP Post Columns plugin is vulnerable to Stored Cross-Site Scripting due to insufficient input sanitization and output escaping on user-supplied attributes. This vulnerability allows attackers to inject arbitrary web scripts, which can be executed by authenticated users.", "Impact and Scope": "The vulnerability allows attackers to inject arbitrary web scripts, which can be executed by authenticated users. The scope of the vulnerability is limited to the plug-in's 'column' shortcode and affects all versions up to, and including, 2.2.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to the following MITRE ATT&CK techniques: TA0007, TA0008, TA0355, TA0356, TA0357.", "Technical Details": "The vulnerability occurs when the plug-in fails to sanitize user-supplied attributes and escape output. This allows attackers to inject arbitrary web scripts, which can be executed by authenticated users.", "Detection": "Detection can be achieved by monitoring and detecting unusual web traffic patterns and analyzing web logs for suspicious activity.", "Mitigation": "The most effective way to mitigate the vulnerability is by updating the plug-in to version 2.3 and above. Additionally, implementing proper input validation and sanitization on user-supplied attributes can also help to prevent the vulnerability.", "Conclusion": "The WordPress WP Post Columns plugin vulnerability is a critical security issue that requires immediate attention. It is essential to update the plug-in to the latest version and implement proper input validation and sanitization to prevent exploitation."}, "executive_analysis": {"Overview": "The WordPress WP Post Columns plugin vulnerability is a critical security issue that affects all versions up to, and including, 2.2.", "Business Impact": "The vulnerability can allow attackers to inject arbitrary web scripts, which can be executed by authenticated users. This can result in unauthorized access, data breaches, and reputational damage.", "Technical Impact": "The vulnerability allows attackers to inject arbitrary web scripts, which can be executed by authenticated users. This can result in unauthorized access, data breaches, and reputational damage.", "Mitigation Strategies": "The most effective way to mitigate the vulnerability is by updating the plug-in to version 2.3 and above. Additionally, implementing proper input validation and sanitization on user-supplied attributes can also help to prevent the vulnerability.", "Recommendations": "It is recommended that all users update their plug-in to the latest version. Additionally, users should implement proper input validation and sanitization on user-supplied attributes to prevent the vulnerability.", "Conclusions": "The WordPress WP Post Columns plugin vulnerability is a critical security issue that requires immediate attention. It is essential to update the plug-in to the latest version and implement proper input validation and sanitization to prevent exploitation."}}