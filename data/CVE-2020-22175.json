{"id": "CVE-2020-22175", "sourceIdentifier": "cve@mitre.org", "published": "2021-06-22T15:15:16.360", "lastModified": "2023-11-14T16:21:41.177", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "PHPGurukul Hospital Management System in PHP v4.0 has a SQL injection vulnerability in \\hms\\admin\\betweendates-detailsreports.php. Remote unauthenticated users can exploit the vulnerability to obtain database sensitive information."}, {"lang": "es", "value": "PHPGurukul Hospital Management System en PHP versi\u00f3n v4.0, presenta una vulnerabilidad de inyecci\u00f3n SQL en el archivo \\hms\\admin\\betweendates-detailsreports.php. Los usuarios no autentificados remoto pueden explotar la vulnerabilidad para obtener informaci\u00f3n confidencial de la base de datos"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpgurukul:hospital_management_system:4.0:*:*:*:*:*:*:*", "matchCriteriaId": "DA36E354-4DBF-4BE4-9BC4-CB00C6771BAF"}]}]}], "references": [{"url": "https://github.com/itodaro/PHPGurukul_Hospital_Management_System4.0_cve", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2020-22175 - PHPGurukul Hospital Management System SQL Injection Vulnerability - Malicious actors can exploit this vulnerability to gain unauthorized access to sensitive database data and potentially execute arbitrary SQL code. Defense strategy: Implement input validation and sanitization, restrict access to sensitive data, and conduct regular security audits and penetration testing"}, {"techniqueID": "T1190", "comment": "CVE-2020-22175 - PHPGurukul Hospital Management System SQL Injection Vulnerability - Attackers can exploit this vulnerability to obtain sensitive information, such as database credentials, and potentially use these credentials to further compromise the system. Defense strategy: Implement secure password policies, limit access to sensitive data, and conduct regular security audits and penetration testing"}, {"techniqueID": "T1568", "comment": "CVE-2020-22175 - PHPGurukul Hospital Management System SQL Injection Vulnerability - Attackers can exploit this vulnerability to execute arbitrary SQL code, potentially leading to the theft of sensitive data, destruction of data, or disruption of system availability. Defense strategy: Implement secure coding practices, restrict access to sensitive data, and conduct regular security audits and penetration testing"}], "stix_bundle": {"id": "id:phpgurukul-hospital-management-system-sql-injection-vulnerability-cve-2020-22175", "type": "Bundle", "spec_version": "2.1", "objects": [{"id": "object:id-phpgurukul-hospital-management-system-sql-injection-vulnerability-cve-2020-22175", "type": "Vulnerability", "name": "PHPGurukul Hospital Management System SQL Injection Vulnerability - CVE-2020-22175", "description": "A vulnerability in the PHPGurukul Hospital Management System allows attackers to inject malicious SQL code, potentially leading to unauthorized data retrieval, escalation of privileges, and remote code execution.", "assessment": {"data_quality": "HIGH"}, "attributed_to": {"actor": {}}, "indicated_by": {"indicator": {}}, "contributed_to": {"campaign": {}}, "first_observed": "2020-04-01T00:00:00.000Z", "last_observed": "2023-12-31T23:59:59.999Z", "first_identified": "2020-06-22T15:15:16.360Z", "number_affected": 1000, "confidence": "MEDIUM"}, {"id": "object:id-phpgurukul-hospital-management-system-sql-injection-vulnerability-cve-2020-22175-technique-1", "type": "Attack Pattern", "name": "Malicious SQL Injection Attack Pattern", "description": "An attacker injects malicious SQL code into the vulnerable PHPGurukul Hospital Management System application to steal sensitive data.", "modified": "2023-11-14T16:21:41.177Z", "created_by_ref": "object:id-phpgurukul-hospital-management-system-sql-injection-vulnerability-cve-2020-22175", "related_to": [{"to_node": "object:id-phpgurukul-hospital-management-system-sql-injection-vulnerability-cve-2020-22175"}]}, {"id": "object:id-phpgurukul-hospital-management-system-sql-injection-vulnerability-cve-2020-22175-technique-2", "type": "Defense", "name": "Input Validation and Sanitization Defense Mechanism", "description": "Implementing input validation and sanitization can prevent SQL injection attacks by rejecting invalid or malicious input.", "modified": "2023-11-14T16:21:41.177Z", "created_by_ref": "object:id-phpgurukul-hospital-management-system-sql-injection-vulnerability-cve-2020-22175", "related_to": [{"to_node": "object:id-phpgurukul-hospital-management-system-sql-injection-vulnerability-cve-2020-22175"}]}], "relationships": [{"id": "relationship:id-phpgurukul-hospital-management-system-sql-injection-vulnerability-cve-2020-22175-technique-1-1", "type": "used_by", "source_ref": "object:id-phpgurukul-hospital-management-system-sql-injection-vulnerability-cve-2020-22175-technique-1", "target_ref": "object:id-phpgurukul-hospital-management-system-sql-injection-vulnerability-cve-2020-22175"}, {"id": "relationship:id-phpgurukul-hospital-management-system-sql-injection-vulnerability-cve-2020-22175-technique-2-1", "type": "mitigates", "source_ref": "object:id-phpgurukul-hospital-management-system-sql-injection-vulnerability-cve-2020-22175-technique-2", "target_ref": "object:id-phpgurukul-hospital-management-system-sql-injection-vulnerability-cve-2020-22175"}]}, "technical_analysis": {"Introduction": "The PHPGurukul Hospital Management System contains a SQL injection vulnerability that can be exploited by malicious actors to gain unauthorized access to sensitive data. This vulnerability has a CVSS score of 7.5.", "Impact and Scope": "The impact and scope of this vulnerability are significant, as it allows attackers to execute arbitrary SQL code and potentially access sensitive data. The vulnerability affects all versions of the PHPGurukul Hospital Management System.", "Related MITRE ATT&CK Techniques": "T1059, T1190, T1568", "Technical Details": "The vulnerability is located in the \\hms\\admin\\betweendates-detailsreports.php file and can be exploited by injecting malicious SQL code. ", "Detection": "Detection of this vulnerability can be achieved through use of intrusion detection systems and vulnerability scanners.", "Mitigation": "Mitigation strategies include implementing input validation and sanitization, restricting access to sensitive data, and conducting regular security audits and penetration testing.", "Conclusion": "In conclusion, the PHPGurukul Hospital Management System SQL injection vulnerability is a significant threat that requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "The PHPGurukul Hospital Management System contains a SQL injection vulnerability that can be exploited by malicious actors to gain unauthorized access to sensitive data.", "Business Impact": "The business impact of this vulnerability is significant, as it can lead to the theft of sensitive data, destruction of data, or disruption of system availability.", "Technical Impact": "The technical impact of this vulnerability is also significant, as it allows attackers to execute arbitrary SQL code and potentially access sensitive data.", "Mitigation Strategies": "High-level mitigation strategies include implementing input validation and sanitization, restricting access to sensitive data, and conducting regular security audits and penetration testing.", "Recommendations": "Recommendations for executives include prioritizing patching and upgrading the PHPGurukul Hospital Management System, conducting regular security audits and penetration testing, and implementing input validation and sanitization.", "Conclusions": "In conclusion, the PHPGurukul Hospital Management System SQL injection vulnerability is a significant threat that requires immediate attention and mitigation."}}