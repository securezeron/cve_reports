{"id": "CVE-2020-0456", "sourceIdentifier": "security@android.com", "published": "2020-12-14T23:15:11.750", "lastModified": "2020-12-15T17:20:33.437", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "There is a possible out of bounds write due to a missing bounds check.Product: AndroidVersions: Android SoCAndroid ID: A-170378843"}, {"lang": "es", "value": "Se presenta una posible escritura fuera de l\u00edmites debido a una falta de comprobaci\u00f3n de l\u00edmites. Producto: Android, Versiones: Android SoC, Android ID: A-170378843"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-787"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:google:android:-:*:*:*:*:*:*:*", "matchCriteriaId": "F8B9FEC8-73B6-43B8-B24E-1F7C20D91D26"}]}]}], "references": [{"url": "https://source.android.com/security/bulletin/2020-12-01", "source": "security@android.com", "tags": ["Vendor Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2020-0456 - The missing bounds check in Android SoC allows an attacker to write data outside the expected range, leading to arbitrary code execution. This is an example of an exploitation of memory corruption vulnerability in a software library."}, {"techniqueID": "T1191", "comment": "CVE-2020-0456 - An attacker can use the out-of-bounds write vulnerability to inject arbitrary data into the memory, allowing for code injection and execution. This is an example of exploitation of code injection vulnerability in a software application."}, {"techniqueID": "T1192", "comment": "CVE-2020-0456 - The vulnerability can be exploited to permit unauthorized changes to the system's memory, leading to privilege escalation. This is an example of exploitation of privilege escalation vulnerability in a software application."}, {"techniqueID": "T1193", "comment": "CVE-2020-0456 - The missing bounds check can be used to leak sensitive information from the memory, which can lead to information disclosure. This is an example of exploitation of information disclosure vulnerability in a software application."}], "stix_bundle": "stub", "technical_analysis": {"Introduction": "The vulnerability CVE-2020-0456 is a missing bounds check in Android SoC, which allows an attacker to write data outside the expected range.", "Impact and Scope": "The impact of this vulnerability is high, with a CVSS score of 9.8. The attack vector is network-based, and the scope is unchanged.", "Related MITRE ATT&CK Techniques": "This vulnerability is related to exploitation of memory corruption, code injection, privilege escalation, and information disclosure vulnerabilities.", "Technical Details": "The vulnerability occurs in the Android SoC's libraries, which are used by multiple Android applications. The missing bounds check allows an attacker to write data outside the expected range, leading to arbitrary code execution.", "Detection": "Detection methods include monitoring for unusual network activity, monitoring for memory access violations, and monitoring for changes to the system's memory.", "Mitigation": "Mitigation strategies include patching the affected libraries, implementing memory protection mechanisms, and monitoring for suspicious activity.", "Conclusion": "The vulnerability CVE-2020-0456 is a high-severity vulnerability that can be exploited to achieve arbitrary code execution, privilege escalation, and information disclosure."}, "executive_analysis": {"Overview": "The vulnerability CVE-2020-0456 is a serious vulnerability that can be exploited to achieve arbitrary code execution, privilege escalation, and information disclosure.", "Business Impact": "The business impact of this vulnerability is significant, as it can be exploited by attackers to gain unauthorized access to sensitive data and systems.", "Technical Impact": "The technical impact is high, with a CVSS score of 9.8. The attack vector is network-based, and the scope is unchanged.", "Mitigation Strategies": "Mitigation strategies include patching the affected libraries, implementing memory protection mechanisms, and monitoring for suspicious activity.", "Recommendations": "Recommendations for executives include prioritizing patching, implementing memory protection mechanisms, and monitoring for suspicious activity.", "Conclusions": "In conclusion, the vulnerability CVE-2020-0456 is a high-severity vulnerability that requires immediate attention and mitigation."}}