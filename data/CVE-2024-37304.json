{"id": "CVE-2024-37304", "sourceIdentifier": "security-advisories@github.com", "published": "2024-06-12T15:15:52.910", "lastModified": "2024-06-13T18:36:09.010", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "NuGet Gallery is a package repository that powers nuget.org. The NuGetGallery has a security vulnerability related to its handling of autolinks in Markdown content. While the platform properly filters out JavaScript from standard links, it does not adequately sanitize autolinks. This oversight allows attackers to exploit autolinks as a vector for Cross-Site Scripting (XSS) attacks. When a user inputs a Markdown autolink such as `<javascript:alert(1)>`, the link is rendered without proper sanitization. This means that the JavaScript code within the autolink can be executed by the browser, leading to an XSS attack. Version 2024.05.28 contains a patch for this issue."}, {"lang": "es", "value": "NuGet Gallery es un repositorio de paquetes que impulsa nuget.org. NuGetGallery tiene una vulnerabilidad de seguridad relacionada con el manejo de enlaces autom\u00e1ticos en el contenido de Markdown. Si bien la plataforma filtra adecuadamente JavaScript de los enlaces est\u00e1ndar, no sanitiza adecuadamente los enlaces autom\u00e1ticos. Esta supervisi\u00f3n permite a los atacantes explotar los enlaces autom\u00e1ticos como vector para ataques de cross-site scripting (XSS). Cuando un usuario ingresa un enlace autom\u00e1tico de Markdown como ``, el enlace se representa sin la sanitizaci\u00f3n adecuada. Esto significa que el navegador puede ejecutar el c\u00f3digo JavaScript dentro del enlace autom\u00e1tico, lo que provoca un ataque XSS. La versi\u00f3n 2024.05.28 contiene un parche para este problema."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://github.com/NuGet/NuGetGallery/commit/c52b023659f4ad7b626874c1063f2b5e878a4fe0", "source": "security-advisories@github.com"}, {"url": "https://github.com/NuGet/NuGetGallery/pull/9836", "source": "security-advisories@github.com"}, {"url": "https://github.com/NuGet/NuGetGallery/security/advisories/GHSA-gwjh-c548-f787", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1190", "comment": "Cross-Site Scripting (XSS) is a technique used to inject malicious client-side code into a vulnerable web application. In this case, the NuGet Gallery is vulnerable to XSS attacks due to its improper sanitization of autolinks in Markdown content."}, {"techniqueID": "T1059", "comment": "Cross-Site Request Forgery (CSRF) is a technique used to trick users into performing unintended actions on a web application. While the CVE itself is an XSS vulnerability, the use of CSRF could be seen as a lateral movement technique as it could be used to bypass the vulnerability."}, {"techniqueID": "T1628", "comment": "Web Shell is a technique used to establish a backdoor on a web server. In this case, the vulnerability could be used to elevate privileges and create a web shell for malicious activities."}], "stix_bundle": {"objects": [{"id": "cve-2024-37304", "type": "vulnerability", "name": "NuGet Gallery Markdown Autolink XSS", "description": "A vulnerability in the NuGet Gallery allows for Cross-Site Scripting (XSS) attacks by improper sanitization of autolinks in Markdown content.", " severity": "Medium", " cvss": {"vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "references": [{"idref": "CVE-2024-37304", "url": "https://github.com/NuGet/NuGetGallery/commit/c52b023659f4ad7b626874c1063f2b5e878a4fe0", "type": "source"}]}, {"id": "t1190", "type": "attack-pattern", "name": "Cross-Site Scripting (XSS)", "description": "A technique used to inject malicious client-side code into a vulnerable web application.", "relation": {"type": "related-to", "object_ref": "cve-2024-37304"}}, {"id": "t1059", "type": "attack-pattern", "name": "Cross-Site Request Forgery (CSRF)", "description": "A technique used to trick users into performing unintended actions on a web application.", "relation": {"type": "related-to", "object_ref": "cve-2024-37304"}}, {"id": "t1628", "type": "attack-pattern", "name": "Web Shell", "description": "A technique used to establish a backdoor on a web server.", "relation": {"type": "related-to", "object_ref": "cve-2024-37304"}}]}, "technical_analysis": {"Introduction": "The NuGet Gallery is a package repository that powers nuget.org. The NuGetGallery has a security vulnerability related to its handling of autolinks in Markdown content.", "Impact and Scope": "The vulnerability is in the NuGet Gallery's handling of autolinks in Markdown content. It allows for Cross-Site Scripting (XSS) attacks and has a CVSS score of 6.1.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques include T1190, T1059, and T1628.", "Technical Details": "The vulnerability occurs when a user inputs a Markdown autolink such as `<javascript:alert(1)>`, the link is rendered without proper sanitization.", "Detection": "Methods for detecting this vulnerability include monitoring for abnormal activity on the NuGet Gallery and monitoring for Cross-Site Scripting (XSS) attacks.", "Mitigation": "Mitigation strategies include updating the NuGet Gallery to the patched version and implementing input validation and sanitization.", "Conclusion": "In conclusion, the NuGet Gallery vulnerability is a critical issue that needs to be addressed as soon as possible."}, "executive_analysis": {"Overview": "The NuGet Gallery has a security vulnerability related to its handling of autolinks in Markdown content.", "Business Impact": "The impact of this vulnerability is critical, as it could allow for Cross-Site Scripting (XSS) attacks and compromise user data.", "Technical Impact": "The technical impact is significant, as it highlights the importance of proper input validation and sanitization in web applications.", "Mitigation Strategies": "Mitigation strategies include updating the NuGet Gallery to the patched version and implementing input validation and sanitization.", "Recommendations": "Recommendations for executives include paying attention to the patch level of the NuGet Gallery and implementing proper input validation and sanitization in web applications.", "Conclusions": "In conclusion, the executives need to take immediate action to mitigate this vulnerability and ensure that it does not compromise user data."}}