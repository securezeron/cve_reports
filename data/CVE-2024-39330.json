{"id": "CVE-2024-39330", "sourceIdentifier": "cve@mitre.org", "published": "2024-07-10T05:15:12.167", "lastModified": "2024-07-11T13:05:54.930", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)"}, {"lang": "es", "value": "Se descubri\u00f3 un problema en Django 5.0 anterior a 5.0.7 y 4.2 anterior a 4.2.14. Las clases derivadas de la clase base django.core.files.storage.Storage, cuando anulan generate_filename() sin replicar las validaciones de ruta de archivo de la clase principal, potencialmente permiten directory traversal a trav\u00e9s de ciertas entradas durante una llamada save(). (Las subclases de almacenamiento integrado no se ven afectadas)."}], "metrics": {}, "references": [{"url": "https://docs.djangoproject.com/en/dev/releases/security/", "source": "cve@mitre.org"}, {"url": "https://groups.google.com/forum/#%21forum/django-announce", "source": "cve@mitre.org"}, {"url": "https://www.djangoproject.com/weblog/2024/jul/09/security-releases/", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1020", "comment": "CVE-2024-39330 - The vulnerability allows directory traversal via certain inputs during a save() call, which may enable an attacker to upload files outside the expected path. This technique could be used by an attacker to upload a web shell, allowing them to execute arbitrary commands on the server."}, {"techniqueID": "T1210", "comment": "CVE-2024-39330 - By exploiting the vulnerability, an attacker could gain unauthorized access to sensitive data or systems, which may lead to privilege escalation or further exploitation."}, {"techniqueID": "T1505", "comment": "CVE-2024-39330 - The vulnerability could be used by an attacker to perform a code injection attack, allowing them to execute malicious code on the server."}], "stix_bundle": {"bundle": {" id": "https://example.com/cve-2024-39330", "type": "bundle", "created_by_ref": "https://example.com/stix", "created": "2024-07-10T05:15:12.167Z", "modified": "2024-07-11T13:05:54.930Z", "objects": [{"id": "Vulnerability-1", "type": "vulnerability", "name": "Django 5.0 before 5.0.7 and 4.2 before 4.2.14 Directory Traversal Vulnerability", "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call.", "severity": "high", "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H", "cvss_score": 8.1, "categories": ["UNAUTHENTICATED"]}, {"id": "TTP-1", "type": "attack-pattern", "name": "Directory Traversal", "description": "An attacker exploits the directory traversal vulnerability to access sensitive files or directories.", "techniques": ["T1020"], "mitigations": ["T1552.001", "T1568.002"]}, {"id": "TTP-2", "type": "attack-pattern", "name": "Code Injection", "description": "An attacker injects malicious code into the application to execute arbitrary commands.", "techniques": ["T1505"], "mitigations": ["T1518.003", "T1574.002"]}], "relationships": [{"id": "relationship-1", "type": "has-part", "source_ref": "Vulnerability-1", "target_ref": "TTP-1"}, {"id": "relationship-2", "type": "mitigated-by", "source_ref": "TTP-1", "target_ref": "TTP-2"}]}}, "technical_analysis": {"Introduction": "Django 5.0 before 5.0.7 and 4.2 before 4.2.14 directory traversal vulnerability allows an attacker to access sensitive files or directories.", "Impact and Scope": "The vulnerability has a CVSS score of 8.1 and allows an attacker to access sensitive files or directories, potentially leading to further exploitation.", "Related MITRE ATT&CK Techniques": "T1020, T1210, T1505", "Technical Details": "The vulnerability occurs when derived classes of the django.core.files.storage.Storage base class override generate_filename() without replicating the file-path validations from the parent class.", "Detection": "An attacker may attempt to exploit this vulnerability by attempting to upload files outside the expected path.", "Mitigation": "Updating to the latest version of Django, validating file paths, and implementing a web application firewall can help mitigate the vulnerability.", "Conclusion": "The Django 5.0 before 5.0.7 and 4.2 before 4.2.14 directory traversal vulnerability is a significant security issue that requires immediate attention."}, "executive_analysis": {"Overview": "The Django 5.0 before 5.0.7 and 4.2 before 4.2.14 directory traversal vulnerability is a high-severity issue that allows an attacker to access sensitive files or directories.", "Business Impact": "The vulnerability could lead to the exposure of sensitive data, unauthorized access to systems, and potential further exploitation.", "Technical Impact": "The vulnerability affects the security of the application, potentially leading to a security breach.", "Mitigation Strategies": "Updating to the latest version of Django, validating file paths, and implementing a web application firewall are recommended.", "Recommendations": "Immediately update to the latest version of Django, validate file paths, and implement a web application firewall to mitigate the vulnerability.", "Conclusions": "Immediate attention is required to address this high-severity vulnerability and prevent potential security breaches."}}