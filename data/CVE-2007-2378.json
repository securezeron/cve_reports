{"id": "CVE-2007-2378", "sourceIdentifier": "cve@mitre.org", "published": "2007-04-30T23:19:00.000", "lastModified": "2024-02-14T01:17:43.863", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Google Web Toolkit (GWT) framework exchanges data using JavaScript Object Notation (JSON) without an associated protection scheme, which allows remote attackers to obtain the data via a web page that retrieves the data through a URL in the SRC attribute of a SCRIPT element and captures the data using other JavaScript code, aka \"JavaScript Hijacking.\""}, {"lang": "es", "value": "El marco de desarrollo de intercambio de datos Google Web Toolkit (GWT) utilizando JavaScript Object Notation (JSON) sin un esquema de protecci\u00f3n asociado, podr\u00eda permitir a atacantes remotos obtener los datos a trav\u00e9s de una p\u00e1gina web que recupere los datos a trav\u00e9s de una URL en el atributo SRC de un elemento SCRIPT y capture los datos utilizando otros c\u00f3digos JavaScript, tambi\u00e9n conocido como \"secuestro JavaScript\""}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-Other"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:google:web_toolkit:*:*:*:*:*:*:*:*", "matchCriteriaId": "784F5178-B96E-4BD0-81A1-37AC8D7842CD"}]}]}], "references": [{"url": "http://osvdb.org/43321", "source": "cve@mitre.org"}, {"url": "http://www.fortifysoftware.com/servlet/downloads/public/JavaScript_Hijacking.pdf", "source": "cve@mitre.org", "tags": ["URL Repurposed"]}], "techniques": [{"techniqueID": "T1120", "comment": "CVE-2007-2378 - The vulnerability allows an attacker to steal JSON data by getting it to generate JSON data and using it to make unauthorized API calls. It is relevant to defend against it by validating and sanitizing user-input data and ensuring that the application does not generate JSON data in response to unauthorized requests."}, {"techniqueID": "T1190", "comment": "CVE-2007-2378 - The vulnerability can be used to steal JSON data by crafting a malicious URL and getting the user to visit it. It is relevant to defend against it by validating and sanitizing user-input data and ensuring that the application does not generate JSON data in response to unauthorized requests."}, {"techniqueID": "T1555", "comment": "CVE-2007-2378 - The vulnerability can be used to steal JSON data by crafting a malicious JavaScript code and embedding it in a web page. It is relevant to defend against it by validating and sanitizing user-input data and ensuring that the application does not generate JSON data in response to unauthorized requests."}], "stix_bundle": {"bundle": {"id": "CVE-2007-2378", "minimized_cwe_id": "CWE-Other", "extent": 1, "required_TTPs": [{"idref": "intrusion_into_system"}], "recommended_actions": [{"idref": "update_software"}, {"idref": "validate_and_sanitize_data"}, {"idref": "ensure_authorization"}], "weaknesses": [{"idref": "json_data_vulnerability"}]}, "objects": [{"id": "CVE-2007-2378", "type": "vulnerability", "name": "Jonathan Leitschuh / CVE-2007-2378", "description": [{"lang": "en", "value": "CVE-2007-2378: The Google Web Toolkit (GWT) framework exchanges data using JavaScript Object Notation (JSON) without an associated protection scheme, which allows remote attackers to obtain the data via a web page that retrieves the data through a URL in the SRC attribute of a SCRIPT element and captures the data using other JavaScript code, aka \"JavaScript Hijacking.\""}]}, {"id": "T1234", "type": "attack_pattern", "name": "JSON Data Stealing", "description": [{"lang": "en", "value": "T1234: The attacker crafts a malicious URL and gets the user to visit it, allowing them to steal JSON data."}]}, {"id": "VUL001", "type": "vulnerability", "name": "JSON Data Vulnerability", "description": [{"lang": "en", "value": "VUL001: The Google Web Toolkit (GWT) framework exchanges data using JavaScript Object Notation (JSON) without an associated protection scheme."}]}], "relationships": [{"relationship_type": "vulnerable_to", "source_ref": "CVE-2007-2378", "target_ref": "VUL001"}, {"relationship_type": "uses", "source_ref": "T1234", "target_ref": "VUL001"}]}, "technical_analysis": {"Introduction": "The vulnerability is a CWE-Other weakness in the Google Web Toolkit (GWT) framework that exchanges data using JavaScript Object Notation (JSON) without an associated protection scheme.", "Impact and Scope": "The vulnerability allows an attacker to steal JSON data by getting the user to visit a malicious URL.", "Related MITRE ATT&CK Techniques": "T1120, T1190, T1555", "Technical Details": "The vulnerability arises from the use of JSON data without an associated protection scheme.", "Detection": "Detection of the vulnerability can be achieved by monitoring for suspicious URL requests and verifying the security of JSON data.", "Mitigation": "Mitigation of the vulnerability can be achieved by validating and sanitizing user-input data, ensuring that the application does not generate JSON data in response to unauthorized requests, and validating the security of JSON data.", "Conclusion": "The vulnerability highlights the importance of ensuring the security of JSON data and the need for thorough validation and sanitization of user-input data."}, "executive_analysis": {"Overview": "The vulnerability affects the Google Web Toolkit (GWT) framework, allowing attackers to steal JSON data.", "Business Impact": "The vulnerability can result in data theft, compromising business operations and financial security.", "Technical Impact": "The vulnerability affects the security of JSON data, allowing attackers to steal sensitive information.", "Mitigation Strategies": "Implementing thorough validation and sanitization of user-input data, ensuring the security of JSON data, and updating the software to the latest version can mitigate the vulnerability.", "Recommendations": "It is recommended that organizations implement comprehensive security measures to protect against data theft and ensure the integrity of JSON data.", "Conclusions": "The vulnerability emphasizes the importance of thorough validation and sanitization of user-input data and the need for ongoing security measures to protect against data theft."}}