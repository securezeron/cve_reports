{"id": "CVE-2023-6626", "sourceIdentifier": "contact@wpscan.com", "published": "2024-01-22T20:15:47.697", "lastModified": "2024-01-26T19:58:01.737", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Product Enquiry for WooCommerce WordPress plugin before 3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"}, {"lang": "es", "value": "El complemento Product Inquiry for WooCommerce de WordPress anterior a 3.1 no sanitiza ni escapa a algunas de sus configuraciones, lo que podr\u00eda permitir a usuarios con privilegios elevados, como el administrador, realizar ataques de Cross-Site Scripting Almacenado incluso cuando la capacidad unfiltered_html no est\u00e1 permitida (por ejemplo, en una configuraci\u00f3n multisitio)."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:gravitymaster:product_enquiry_for_woocommerce:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "3.1", "matchCriteriaId": "15AFDBE1-3380-49CB-A16E-518D8FE4ED40"}]}]}], "references": [{"url": "https://wpscan.com/vulnerability/327ae124-79eb-4e07-b029-e4f543cbd356/", "source": "contact@wpscan.com", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "Cross-Site Scripting (CWE-79) - Attackers can inject malicious scripts to perform Stored Cross-Site Scripting attacks. Defenses should focus on sanitizing and escaping user-input data."}, {"techniqueID": "T1036", "comment": "File and Directory Discovery (Not a CVE-specific technique, but relevant to the vulnerability) - Attackers can use this technique to discover files and directories on the system, which can be used to identify potential vulnerabilities."}, {"techniqueID": "T1568", "comment": "Web Shell (Not a CVE-specific technique, but relevant to the vulnerability) - Attackers can use this technique to create a web shell on the system, which can be used to execute arbitrary code."}, {"techniqueID": "T1210", "comment": "Command and Control (Not a CVE-specific technique, but relevant to the vulnerability) - Attackers can use this technique to establish a command and control channel to the system, which can be used to execute further attacks."}], "stix_bundle": {"$schema": "https://docs.oasis-open.org/ostc-sct/stix/2.1/stix-core/v2.1/stix-core.xsd", "type": "bundle", "id": "CVE-2023-6626-Bundle", "objects": [{"type": "incident", "id": "INC-2023-6626", "created": "2024-01-22T20:15:47.697", "modified": "2024-01-26T19:58:01.737", "description": [{"lang": "en", "value": "The Product Enquiry for WooCommerce WordPress plugin before 3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"}], "analyzed": true, "tags": [{"value": "Stored Cross-Site Scripting", "type": "mitre-technique"}], "object_refs": [{"ref_id": "CVE-2023-6626", "ref_type": "vulnerability"}]}, {"type": "vulnerability", "id": "CVE-2023-6626", "created": "2024-01-22T20:15:47.697", "modified": "2024-01-26T19:58:01.737", "description": [{"lang": "en", "value": "The Product Enquiry for WooCommerce WordPress plugin before 3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"}], "cvssv3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N"}, "weakness": [{"type": "CWE-79", "description": [{"lang": "en", "value": "CWE-79"}]}]}]}, "technical_analysis": {"Introduction": "The Product Enquiry for WooCommerce WordPress plugin before 3.1 is vulnerable to Cross-Site Scripting attacks due to insufficient sanitization and escaping of user-input data.", "Impact and Scope": "An attacker with high privileges can perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.", "Related MITRE ATT&CK Techniques": "T1190, T1036, T1568, and T1210", "Technical Details": "The vulnerability allows attackers to inject malicious scripts that can be executed on the system.", "Detection": "Monitoring for suspicious JavaScript code and verifying user input data can help detect this vulnerability.", "Mitigation": "Sanitizing and escaping user-input data can help prevent this vulnerability.", "Conclusion": "The Product Enquiry for WooCommerce WordPress plugin before 3.1 is vulnerable to Cross-Site Scripting attacks. Proper sanitization and escaping of user-input data is essential to prevent this vulnerability."}, "executive_analysis": {"Overview": "The Product Enquiry for WooCommerce WordPress plugin before 3.1 is vulnerable to Cross-Site Scripting attacks due to insufficient sanitization and escaping of user-input data.", "Business Impact": "An attacker with high privileges can perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed, which can have severe business and reputational implications.", "Technical Impact": "The vulnerability allows attackers to inject malicious scripts that can be executed on the system, which can lead to unauthorized system access and data breaches.", "Mitigation Strategies": "Implementing proper sanitization and escaping of user-input data, monitoring for suspicious JavaScript code, and verifying user input data can help prevent this vulnerability.", "Recommendations": "Update the Product Enquiry for WooCommerce WordPress plugin to version 3.1 or later, ensure proper sanitization and escaping of user-input data, and monitor for suspicious JavaScript code.", "Conclusions": "The vulnerability is a high-priority issue that requires immediate attention. Implementing the recommended mitigation strategies can help prevent this vulnerability and protect your organization from potential attacks."}}