{"id": "CVE-2020-27540", "sourceIdentifier": "cve@mitre.org", "published": "2021-01-26T18:15:46.113", "lastModified": "2021-02-02T18:53:05.450", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Bash injection vulnerability and bypass of signature verification in Rostelecom CS-C2SHW 5.0.082.1. The camera reads firmware update configuration from SD card file vc\\version.json. fw-sign parameter and from this configuration is directly inserted into a bash command. Firmware update is run automatically if there is special file on the inserted SD card."}, {"lang": "es", "value": "Vulnerabilidad de inyecci\u00f3n Bash y omisi\u00f3n de la verificaci\u00f3n de firmas en Rostelecom CS-C2SHW versi\u00f3n 5.0.082.1.&#xa0;La c\u00e1mara lee la configuraci\u00f3n de actualizaci\u00f3n del firmware del archivo de la tarjeta SD vc\\version.json.&#xa0;El par\u00e1metro fw-sign y desde esta configuraci\u00f3n es insertado directamente en un comando bash.&#xa0;La actualizaci\u00f3n del firmware se ejecuta autom\u00e1ticamente si existe un archivo especial en la tarjeta SD insertada"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-347"}]}], "configurations": [{"operator": "AND", "nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:company:cs-c2shw_firmware:5.0.082.1:*:*:*:*:*:*:*", "matchCriteriaId": "DA2108A4-A3BF-4ECE-99E7-9EE9233063EB"}]}, {"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": false, "criteria": "cpe:2.3:h:company:cs-c2shw:-:*:*:*:*:*:*:*", "matchCriteriaId": "C1CC4768-6258-44B3-9290-AF21DDB6E728"}]}]}], "references": [{"url": "https://dil4rd.medium.com/groundhog-day-in-iot-valley-or-5-cves-in-1-camera-7dc1d2864707", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1086", "comment": "CVE-2020-27540 - A command injection vulnerability allows an attacker to execute arbitrary commands, potentially allowing for code execution, data theft, and other malicious activities."}, {"techniqueID": "T1036", "comment": "CVE-2020-27540 - The vulnerability allows an attacker to bypass signature verification, potentially allowing for the installation of malicious firmware or manipulation of the camera's settings."}, {"techniqueID": "T1078", "comment": "CVE-2020-27540 - The vulnerability can be exploited by an attacker to execute arbitrary commands, potentially allowing for lateral movement within the network."}, {"techniqueID": "T1508", "comment": "CVE-2020-27540 - The vulnerability can be exploited by an attacker to read or write files, potentially allowing for data theft or data tampering."}, {"techniqueID": "T1133", "comment": "CVE-2020-27540 - The vulnerability can be exploited by an attacker to execute arbitrary code, potentially allowing for code execution, data theft, and other malicious activities."}], "stix_bundle": {"stixBundle": {"id": "CVE-2020-27540", "version": "1.0", "created": "2021-01-26T18:15:46.113", "modified": "2021-02-02T18:53:05.450", "description": [{"lang": "en", "value": "Bash injection vulnerability and bypass of signature verification in Rostelecom CS-C2SHW 5.0.082.1."}], "indicators": [{"type": "File", "value": "vc\\version.json"}], "objects": [{"id": "technique1", "type": "attack-pattern", "description": [{"lang": "en", "value": "Command injection vulnerability exploitation"}], ".kill_chain_phases": [{"phase_id": "initial_access", "phase_name": "Initial Access"}], "affected_score": "9.8", "base_score": "9.8", "exploit_summary": "This technique involves exploiting the command injection vulnerability in the camera's firmware to execute arbitrary commands.", "mitigation": [{"description": [{"lang": "en", "value": "Use a secure coding practice to prevent command injection vulnerabilities"}]}]}, {"id": "technique2", "type": "attack-pattern", "description": [{"lang": "en", "value": "Bypass of signature verification"}], "kill_chain_phases": [{"phase_id": "lateral_movement", "phase_name": "Lateral Movement"}], "affected_score": "9.8", "base_score": "9.8", "exploit_summary": "This technique involves bypassing the signature verification mechanism to execute arbitrary code.", "mitigation": [{"description": [{"lang": "en", "value": "Use a secure firmware update mechanism to prevent bypass of signature verification"}]}]}]}}, "technical_analysis": {"Introduction": "The vulnerability in Rostelecom CS-C2SHW 5.0.082.1 allows an attacker to execute arbitrary commands, potentially allowing for code execution, data theft, and other malicious activities.", "Impact and Scope": "The vulnerability has a CVSS score of 9.8 and allows an attacker to execute arbitrary commands, potentially allowing for lateral movement within the network.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to MITRE ATT&CK techniques T1086, T1036, T1078, T1508, and T1133.", "Technical Details": "The vulnerability involves a bash injection vulnerability in the firmware update mechanism.", "Detection": "Detection can be achieved by monitoring system logs for suspicious commands and monitoring the network for unusual traffic.", "Mitigation": "Mitigation strategies include using a secure coding practice to prevent command injection vulnerabilities and using a secure firmware update mechanism to prevent bypass of signature verification.", "Conclusion": "The vulnerability is a critical risk and should be addressed as soon as possible."}, "executive_analysis": {"Overview": "The vulnerability in Rostelecom CS-C2SHW 5.0.082.1 allows an attacker to execute arbitrary commands, potentially allowing for code execution, data theft, and other malicious activities.", "Business Impact": "The vulnerability has significant business impact as it allows an attacker to execute arbitrary commands, potentially allowing for data theft and other malicious activities.", "Technical Impact": "The vulnerability has significant technical impact as it allows an attacker to execute arbitrary commands, potentially allowing for lateral movement within the network.", "Mitigation Strategies": "Mitigation strategies include using a secure coding practice to prevent command injection vulnerabilities and using a secure firmware update mechanism to prevent bypass of signature verification.", "Recommendations": "Recommendations for executives include prioritizing the patching of vulnerabilities and implementing secure coding practices.", "Conclusions": "The vulnerability is a critical risk and should be addressed as soon as possible."}}