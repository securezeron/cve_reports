{"id": "CVE-2024-35844", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-05-17T15:15:21.390", "lastModified": "2024-06-10T18:15:35.250", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: compress: fix reserve_cblocks counting error when out of space\n\nWhen a file only needs one direct_node, performing the following\noperations will cause the file to be unrepairable:\n\nunisoc # ./f2fs_io compress test.apk\nunisoc #df -h | grep dm-48\n/dev/block/dm-48 112G 112G 1.2M 100% /data\n\nunisoc # ./f2fs_io release_cblocks test.apk\n924\nunisoc # df -h | grep dm-48\n/dev/block/dm-48 112G 112G 4.8M 100% /data\n\nunisoc # dd if=/dev/random of=file4 bs=1M count=3\n3145728 bytes (3.0 M) copied, 0.025 s, 120 M/s\nunisoc # df -h | grep dm-48\n/dev/block/dm-48 112G 112G 1.8M 100% /data\n\nunisoc # ./f2fs_io reserve_cblocks test.apk\nF2FS_IOC_RESERVE_COMPRESS_BLOCKS failed: No space left on device\n\nadb reboot\nunisoc # df -h  | grep dm-48\n/dev/block/dm-48             112G 112G   11M 100% /data\nunisoc # ./f2fs_io reserve_cblocks test.apk\n0\n\nThis is because the file has only one direct_node. After returning\nto -ENOSPC, reserved_blocks += ret will not be executed. As a result,\nthe reserved_blocks at this time is still 0, which is not the real\nnumber of reserved blocks. Therefore, fsck cannot be set to repair\nthe file.\n\nAfter this patch, the fsck flag will be set to fix this problem.\n\nunisoc # df -h | grep dm-48\n/dev/block/dm-48             112G 112G  1.8M 100% /data\nunisoc # ./f2fs_io reserve_cblocks test.apk\nF2FS_IOC_RESERVE_COMPRESS_BLOCKS failed: No space left on device\n\nadb reboot then fsck will be executed\nunisoc # df -h  | grep dm-48\n/dev/block/dm-48             112G 112G   11M 100% /data\nunisoc # ./f2fs_io reserve_cblocks test.apk\n924"}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: f2fs: compress: corrige el error de conteo de reserve_cblocks cuando no hay espacio. Cuando un archivo solo necesita un direct_node, realizar las siguientes operaciones har\u00e1 que el archivo no se pueda reparar: unisoc # ./f2fs_io compress test.apk unisoc #df -h | grep dm-48 /dev/block/dm-48 112G 112G 1.2M 100% /data unisoc # ./f2fs_io release_cblocks test.apk 924 unisoc # df -h | grep dm-48 /dev/block/dm-48 112G 112G 4,8M 100% /data unisoc # dd if=/dev/random of=file4 bs=1M count=3 3145728 bytes (3,0 M) copiados, 0,025 s, 120 M/s unisoc # df -h | grep dm-48 /dev/block/dm-48 112G 112G 1.8M 100% /data unisoc # ./f2fs_io reserve_cblocks test.apk F2FS_IOC_RESERVE_COMPRESS_BLOCKS fall\u00f3: no queda espacio en el dispositivo adb reboot unisoc # df -h | grep dm-48 /dev/block/dm-48 112G 112G 11M 100% /data unisoc # ./f2fs_io reserve_cblocks test.apk 0 Esto se debe a que el archivo tiene solo un nodo_directo. Despu\u00e9s de regresar a -ENOSPC, reserve_blocks += ret no se ejecutar\u00e1. Como resultado, los bloques_reservados en este momento siguen siendo 0, que no es el n\u00famero real de bloques reservados. Por lo tanto, no se puede configurar fsck para reparar el archivo. Despu\u00e9s de este parche, se configurar\u00e1 el indicador fsck para solucionar este problema. unisoc # df -h | grep dm-48 /dev/block/dm-48 112G 112G 1.8M 100% /data unisoc # ./f2fs_io reserve_cblocks test.apk F2FS_IOC_RESERVE_COMPRESS_BLOCKS fall\u00f3: no queda espacio en el dispositivo y al reinicio del adb luego se ejecutar\u00e1 fsck unisoc # df -h | grep dm-48 /dev/block/dm-48 112G 112G 11M 100% /data unisoc # ./f2fs_io reserve_cblocks test.apk 924"}], "metrics": {}, "references": [{"url": "http://www.openwall.com/lists/oss-security/2024/05/30/1", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "http://www.openwall.com/lists/oss-security/2024/05/30/2", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/2f6d721e14b69d6e1251f69fa238b48e8374e25f", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/569c198c9e2093fd29cc071856a4e548fda506bc", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/889846dfc8ee2cf31148a44bfd2faeb2faadc685", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/f0bf89e84c3afb79d7a3a9e4bc853ad6a3245c0a", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/fa3ac8b1a227d9b470b87972494293348b5839ee", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/fc0aed88afbf6f606205129a7466eebdf528e3f3", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-35844: Linux kernel f2fs compress: reserve_cblocks counting error - A clever use of file system compression to manipulate file sizes, leading to a counting error. This is a great example of how attackers can use legitimate system functionality to evade detection."}, {"techniqueID": "T1027", "comment": "CVE-2024-35844: Linux kernel f2fs compress: fsck flag manipulation - Attackers can manipulate the fsck flag to hide or reveal sensitive information, making it essential to implement robust file system integrity checks."}, {"techniqueID": "T1140", "comment": "CVE-2024-35844: Linux kernel f2fs compress: Direct Node manipulation - Hackers can exploit the counting error to create a direct node, allowing them to access sensitive data or modify file contents without detection."}], "technical_analysis": {"Introduction": "The Linux kernel f2fs compress vulnerability (CVE-2024-35844) is a significant security issue that affects the Linux file system's ability to properly count and manage file sizes. This vulnerability can be exploited to manipulate file sizes, causing adverse effects on system stability and security.", "Impact and Scope": "The vulnerability has a CVSS score of 7.8 on the CVSSv3.1 scale and is considered high severity. It affects Linux systems running the f2fs file system and can lead to data corruption, file size manipulation, and potential remote code execution.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to various MITRE ATT&CK techniques, including command and control, persistence, and data exfiltration.", "Technical Details": "The vulnerability is caused by a counting error in the Linux kernel's f2fs compress code, which allows attackers to manipulate file sizes and create a direct node without detection.", "Detection": "Detecting the vulnerability requires monitoring system logs for unusual file system activity and implementing robust integrity checks to identify potential manipulation.", "Mitigation": "Mitigations include applying patches to affected systems, implementing robust logging and monitoring, and enforcing strict access controls.", "Conclusion": "The Linux kernel f2fs compress vulnerability highlights the importance of secure coding practices and regular testing to prevent severe security issues."}, "executive_analysis": {"Overview": "The Linux kernel f2fs compress vulnerability (CVE-2024-35844) is a critical security issue that requires immediate attention to mitigate potential risks.", "Business Impact": "The vulnerability could lead to significant business disruptions, data loss, and reputational damage if left unaddressed.", "Technical Impact": "The vulnerability has significant technical implications for Linux systems, enabling attackers to manipulate file sizes, create a direct node, and potentially execute code remotely.", "Mitigation Strategies": "Immediate patching, enhanced logging and monitoring, and strict access controls are essential to mitigate the vulnerability.", "Recommendations": "Executives should prioritize patching and monitoring to minimize the risk of exploitation. Regular security audits and penetration testing can help identify vulnerabilities earlier and prevent future security incidents.", "Conclusions": "The Linux kernel f2fs compress vulnerability is a critical security issue that requires immediate attention from both technical and executive stakeholders."}}