{"id": "CVE-2007-3909", "sourceIdentifier": "cve@mitre.org", "published": "2007-07-19T17:30:00.000", "lastModified": "2017-07-29T01:32:36.893", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "Multiple SQL injection vulnerabilities in Bandersnatch 0.4 allow remote attackers to execute arbitrary SQL commands via the (1) date and (2) limit parameters to index.php, and other unspecified vectors."}, {"lang": "es", "value": "M\u00faltiples vulnerabilidades de inyecci\u00f3n SQL en el Bandersnatch 0.4 permiten a atacantes remotos ejecutar comandos SQL de su elecci\u00f3n a trav\u00e9s de los par\u00e1metros  (1) date y (2) limit del index.php y otros vectores sin especificar."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:bandersnatch:bandersnatch:0.4:*:*:*:*:*:*:*", "matchCriteriaId": "45F3F222-97C9-41BE-93A5-D2DE872B64B4"}]}]}], "references": [{"url": "http://secunia.com/advisories/26202", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "http://www.osvdb.org/38268", "source": "cve@mitre.org"}, {"url": "http://www.portcullis-security.com/uplds/advisories/Bandersnatch%20-%2007-006.txt", "source": "cve@mitre.org"}, {"url": "http://www.securityfocus.com/bid/25094", "source": "cve@mitre.org"}, {"url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/35406", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "TA0003", "comment": "CVE-2007-3909 - The use of SQL injection techniques to manipulate the data in the database. This technique can be used by an attacker to inject malicious SQL code into the database, allowing them to extract or modify sensitive data."}, {"techniqueID": "T1190", "comment": "CVE-2007-3909 - The using of web-based application vulnerabilities to gain access to the system. This technique can be used to exploit the SQL injection vulnerability in the Bandersnatch 0.4 application."}, {"techniqueID": "T1050", "comment": "CVE-2007-3909 - The use of command and control (C2) to communicate with the attacker. This technique can be used by an attacker to exfiltrate data from the system."}], "stix_bundle": {"objects": [{"type": "indicator", "id": "indicator--dfb8c88a-daaf-45f7-87b4-0f47af4a133a", "name": "SQL Injection Vulnerability in Bandersnatch 0.4", "description": "This indicator is used to identify the presence of the SQL injection vulnerability in the Bandersnatch 0.4 application.", "created_by_ref": "identity--a4af89ad-7ce2-47df-b6c7-8e1741e16c51"}, {"type": "intrusion-set", "id": "intrusion-set--6f5e9f1c-ae63-4ccf-9319-fa8c5ac68f3d", "name": "Unknown", "description": "This intrusion set is used to group similar attack patterns together."}, {"type": "course-of-action", "id": "course-of-action--c98d4f8d-3150-4b83-987a-531db38f3f17", "name": "Mitigate the SQL Injection Vulnerability", "description": "This course of action is used to mitigate the SQL injection vulnerability in the Bandersnatch 0.4 application.", "related_tactic": "TA0003", "notes": ["Use input validation and sanitization to prevent SQL injection attacks"]}], "relationships": [{"type": "has_member", "relationship_id": "relationship--6f5e9f1c-ae63-4ccf-9319-fa8c5ac68f3d", "source_ref": "intrusion-set--6f5e9f1c-ae63-4ccf-9319-fa8c5ac68f3d", "target_ref": "indicator--dfb8c88a-daaf-45f7-87b4-0f47af4a133a"}, {"type": "part_of", "relationship_id": "relationship--c98d4f8d-3150-4b83-987a-531db38f3f17", "source_ref": "course-of-action--c98d4f8d-3150-4b83-987a-531db38f3f17", "target_ref": "intrusion-set--6f5e9f1c-ae63-4ccf-9319-fa8c5ac68f3d"}]}, "technical_analysis": {"Introduction": "The Bandersnatch 0.4 application is vulnerable to SQL injection attacks, which can allow an attacker to extract or modify sensitive data.", "Impact and Scope": "The impact of this vulnerability is high, with a CVSS score of 7.5. The scope of the vulnerability is limited to the Bandersnatch 0.4 application.", "Related MITRE ATT&CK Techniques": "The vulnerability can be exploited using the TA0003 SQL injection technique.", "Technical Details": "The vulnerability is caused by a failure to properly sanitize user input, allowing an attacker to inject malicious SQL code into the database.", "Detection": "The vulnerability can be detected using a combination of logs and network traffic analysis.", "Mitigation": "The vulnerability can be mitigated by using input validation and sanitization to prevent SQL injection attacks.", "Conclusion": "The Bandersnatch 0.4 application is vulnerable to SQL injection attacks, which can be mitigated using input validation and sanitization."}, "executive_analysis": {"Overview": "The Bandersnatch 0.4 application is vulnerable to SQL injection attacks, which can allow an attacker to extract or modify sensitive data.", "Business Impact": "The impact of this vulnerability is significant, with potential financial and reputational damage.", "Technical Impact": "The vulnerability can be exploited using the TA0003 SQL injection technique, which can allow an attacker to gain access to sensitive data.", "Mitigation Strategies": "Input validation and sanitization can be used to prevent SQL injection attacks.", "Recommendations": "Recommendations include patching the application, conducting regular security assessments, and implementing input validation and sanitization.", "Conclusions": "The Bandersnatch 0.4 application is vulnerable to SQL injection attacks, which can be mitigated using input validation and sanitization."}}