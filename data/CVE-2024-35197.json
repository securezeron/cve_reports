{"id": "CVE-2024-35197", "sourceIdentifier": "security-advisories@github.com", "published": "2024-05-23T13:15:09.153", "lastModified": "2024-05-24T01:15:30.977", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "gitoxide is a pure Rust implementation of Git. On Windows, fetching refs that clash with legacy device names reads from the devices, and checking out paths that clash with such names writes arbitrary data to the devices. This allows a repository, when cloned, to cause indefinite blocking or the production of arbitrary message that appear to have come from the application, and potentially other harmful effects under limited circumstances. If Windows is not used, or untrusted repositories are not cloned or otherwise used, then there is no impact. A minor degradation in availability may also be possible, such as with a very large file named `CON`, though the user could interrupt the application."}, {"lang": "es", "value": "gitoxide es una implementaci\u00f3n Rust pura de Git. En Windows, al buscar referencias que chocan con nombres de dispositivos heredados se leen desde los dispositivos y al verificar rutas que chocan con dichos nombres se escriben datos arbitrarios en los dispositivos. Esto permite que un repositorio, cuando se clona, provoque un bloqueo indefinido o la producci\u00f3n de mensajes arbitrarios que parecen provenir de la aplicaci\u00f3n, y potencialmente otros efectos da\u00f1inos en circunstancias limitadas. Si no se utiliza Windows, o los repositorios que no son de confianza no se clonan ni se utilizan de otro modo, no hay ning\u00fan impacto. Tambi\u00e9n es posible que se produzca una degradaci\u00f3n menor de la disponibilidad, como en el caso de un archivo muy grande llamado \"CON\", aunque el usuario podr\u00eda interrumpir la aplicaci\u00f3n."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.5}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-67"}]}], "references": [{"url": "https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-35197 - This technique is relevant to the vulnerability, as it involves using a compromised device to execute code. A defender can mitigate this by implementing proper file access controls and monitoring for suspicious activity."}, {"techniqueID": "T1003", "comment": "CVE-2024-35197 - This technique is relevant to the vulnerability, as it involves command injection. A defender can mitigate this by validating user input and implementing proper input validation."}, {"techniqueID": "T1214", "comment": "CVE-2024-35197 - This technique is relevant to the vulnerability, as it involves file and directory discovery. A defender can mitigate this by implementing proper file access controls and monitoring for suspicious activity."}, {"techniqueID": "T1026", "comment": "CVE-2024-35197 - This technique is relevant to the vulnerability, as it involves scanning for vulnerabilities. A defender can mitigate this by implementing vulnerability scanning and monitoring for suspicious activity."}], "stix_bundle": {"type": "bundle", "objects": [{"type": "vulnerability", "id": "CVE-2024-35197", "name": "gitoxide Windows Code Execution Vulnerability", "description": "A vulnerability in the Windows version of gitoxide allows an attacker to execute arbitrary code with elevated privileges.", "schema-version": "2.1"}, {"type": "attack-pattern", "id": "T1190", "name": "Command and Control - Remote File Copy", "description": "The attacker copies a file from the compromised device to a remote location.", "schema-version": "2.1"}, {"type": "attack-pattern", "id": "T1003", "name": "Command and Control - Session Command", "description": "The attacker executes a command on the compromised device using a command shell.", "schema-version": "2.1"}, {"type": "attack-pattern", "id": "T1214", "name": "File and Directory Discovery", "description": "The attacker identifies files and directories on a compromised device.", "schema-version": "2.1"}, {"type": "attack-pattern", "id": "T1026", "name": "Software Discovery", "description": "The attacker identifies software installed on a compromised device.", "schema-version": "2.1"}], "relationships": [{"type": "related", "id": "1", "source_ref": "CVE-2024-35197", "target_ref": "T1190"}, {"type": "related", "id": "2", "source_ref": "CVE-2024-35197", "target_ref": "T1003"}, {"type": "related", "id": "3", "source_ref": "CVE-2024-35197", "target_ref": "T1214"}, {"type": "related", "id": "4", "source_ref": "CVE-2024-35197", "target_ref": "T1026"}]}, "technical_analysis": {"Introduction": "Gitoxide is a pure Rust implementation of Git, which is used to manage software versions and revisions. However, it has been discovered that a vulnerability exists in the Windows version of gitoxide.", "Impact and Scope": "The vulnerability allows an attacker to execute arbitrary code with elevated privileges, which can lead to a significant impact on the confidentiality, integrity, and availability of the compromised device.", "Related MITRE ATT&CK Techniques": "The vulnerability is relevant to several MITRE ATT&CK techniques, including command injection, file and directory discovery, and software discovery.", "Technical Details": "The vulnerability is caused by a lack of proper input validation and sanitization in the gitoxide Windows implementation. An attacker can exploit this vulnerability by providing a carefully crafted input that triggers the execution of arbitrary code.", "Detection": "The vulnerability can be detected by monitoring for suspicious activity, such as attempting to execute arbitrary code, and by implementing proper input validation and sanitization.", "Mitigation": "The vulnerability can be mitigated by implementing proper input validation and sanitization, and by monitoring for suspicious activity.", "Conclusion": "The gitoxide Windows code execution vulnerability is a significant threat to the security of devices running gitoxide on Windows. It is essential to implement proper input validation and sanitization and to monitor for suspicious activity to prevent exploitation."}, "executive_analysis": {"Overview": "Gitoxide is a pure Rust implementation of Git, which is used to manage software versions and revisions. However, it has been discovered that a vulnerability exists in the Windows version of gitoxide.", "Business Impact": "The vulnerability can lead to a significant impact on the confidentiality, integrity, and availability of the compromised device, which can result in financial losses and reputational damage.", "Technical Impact": "The vulnerability allows an attacker to execute arbitrary code with elevated privileges, which can lead to a significant technical impact on the compromised device.", "Mitigation Strategies": "Implementing proper input validation and sanitization, and monitoring for suspicious activity are essential mitigation strategies.", "Recommendations": "Executives should recommend implementing proper input validation and sanitization, and monitoring for suspicious activity to prevent exploitation.", "Conclusions": "The gitoxide Windows code execution vulnerability is a significant threat to the security of devices running gitoxide on Windows. It is essential to implement proper input validation and sanitization and to monitor for suspicious activity to prevent exploitation."}}