{"id": "CVE-2020-7998", "sourceIdentifier": "cve@mitre.org", "published": "2020-01-28T05:15:11.523", "lastModified": "2020-02-04T15:25:00.940", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "An arbitrary file upload vulnerability has been discovered in the Super File Explorer app 1.0.1 for iOS. The vulnerability is located in the developer path that is accessible and hidden next to the root path. By default, there is no password set for the FTP or Web UI service."}, {"lang": "es", "value": "Se ha detectado una vulnerabilidad de carga de archivo arbitraria en la aplicaci\u00f3n Super File Explorer versi\u00f3n 1.0.1 para iOS. La vulnerabilidad se presenta en la ruta del desarrollador que es accesible y oculta al lado de la ruta root. Por defecto, no existe una contrase\u00f1a establecida para el servicio FTP o la Interfaz de Usuario Web."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 9.0}, "baseSeverity": "HIGH", "exploitabilityScore": 8.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-434"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:super_file_explorer_project:super_file_explorer:1.0.1:*:*:*:*:iphone_os:*:*", "matchCriteriaId": "71A824C6-9BA9-46A2-826D-1933B7FD5826"}]}]}], "references": [{"url": "https://apps.apple.com/us/app/super-file-explorer-file-viewer-file-manager/id1101973946", "source": "cve@mitre.org", "tags": ["Product", "Third Party Advisory"]}, {"url": "https://gist.github.com/adeshkolte/9e60b2483d2f20d1951beac0fc917c6f", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1210", "comment": "An arbitrary file upload vulnerability has been discovered in the Super File Explorer app 1.0.1 for iOS. This technique demonstrates how the attacker can exploit this vulnerability by uploading malicious files which can allow for the server to be compromised. - CVE-2020-7998 - Defend against this technique by implementing strict file validation and sanitization, as well as limiting access to upload functionality."}, {"techniqueID": "T1075", "comment": "The vulnerability allows an attacker to upload a file without proper file validation, which can lead to server-side code execution. This technique demonstrates how an attacker can exploit this vulnerability by uploading a malicious file which can execute arbitrary code on the server. - CVE-2020-7998 - Defend against this technique by implementing strict file validation and sanitization, as well as limiting access to upload functionality."}, {"techniqueID": "T1002", "comment": "The vulnerability can be used to upload a file which can be executed on the server, allowing the attacker to exploit the system. This technique demonstrates how an attacker can exploit this vulnerability by uploading a malicious file which can be executed on the server. - CVE-2020-7998 - Defend against this technique by implementing strict file validation and sanitization, as well as limiting access to upload functionality."}, {"techniqueID": "T1190", "comment": "The vulnerability can be used to upload a file which can be used for exfiltration, allowing the attacker to steal sensitive information. This technique demonstrates how an attacker can exploit this vulnerability by uploading a malicious file which can be used for exfiltration. - CVE-2020-7998 - Defend against this technique by implementing strict file validation and sanitization, as well as limiting access to upload functionality."}], "technical_analysis": {"Introduction": "An arbitrary file upload vulnerability has been discovered in the Super File Explorer app 1.0.1 for iOS, allowing an attacker to potentially upload malicious files and execute arbitrary code on the server.", "Impact and Scope": "The vulnerability has a CVSS score of 8.8 and is rated as HIGH severity. The attack vector is NETWORK and the privileges required are LOW.", "Related MITRE ATT&CK Techniques": "The following MITRE ATT&CK techniques are related to this vulnerability: T1210, T1075, T1002, and T1190.", "Technical Details": "The vulnerability is located in the developer path that is accessible and hidden next to the root path. By default, there is no password set for the FTP or Web UI service.", "Detection": "Detection of this vulnerability involves monitoring for suspicious file uploads and looking for signs of malicious activity on the server.", "Mitigation": "Mitigation strategies include implementing strict file validation and sanitization, as well as limiting access to upload functionality.", "Conclusion": "In conclusion, this vulnerability has the potential to be exploited by an attacker to upload malicious files and execute arbitrary code on the server."}, "executive_analysis": {"Overview": "An arbitrary file upload vulnerability has been discovered in the Super File Explorer app 1.0.1 for iOS, which has the potential to allow an attacker to upload malicious files and execute arbitrary code on the server.", "Business Impact": "The business impact of this vulnerability is the potential for sensitive information to be stolen and the potential for the server to be compromised.", "Technical Impact": "The technical impact of this vulnerability is the potential for an attacker to execute arbitrary code on the server and the potential for sensitive information to be stolen.", "Mitigation Strategies": "The mitigation strategies for this vulnerability include implementing strict file validation and sanitization, as well as limiting access to upload functionality.", "Recommendations": "Recommendations for executives include ensuring that the vulnerability is fixed as soon as possible and implementing additional security measures to prevent exploitation.", "Conclusions": "In conclusion, this vulnerability has significant business and technical implications and should be addressed promptly."}}