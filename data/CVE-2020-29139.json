{"id": "CVE-2020-29139", "sourceIdentifier": "cve@mitre.org", "published": "2021-02-15T21:15:12.907", "lastModified": "2021-02-22T18:01:46.267", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "A SQL injection vulnerability in interface/main/finder/patient_select.php from library/patient.inc in OpenEMR before 5.0.2.5 allows a remote authenticated attacker to execute arbitrary SQL commands via the searchFields parameter."}, {"lang": "es", "value": "Una vulnerabilidad de inyecci\u00f3n SQL en el archivo interface/main/finder/ patient_select.php de library/patient.inc en OpenEMR versiones anteriores a 5.0.2.5 permite que un atacante autenticado remotamente ejecute comandos SQL arbitrarios por medio del par\u00e1metro searchFields"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.2, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.2, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:open-emr:openemr:*:*:*:*:*:*:*:*", "versionEndExcluding": "5.0.2.5", "matchCriteriaId": "17AE6404-703C-4195-9F50-63BBFE524BDB"}]}]}], "references": [{"url": "https://community.open-emr.org/t/openemr-6-0-0-has-been-released/15732", "source": "cve@mitre.org", "tags": ["Release Notes", "Vendor Advisory"]}, {"url": "https://murat.one/?p=70", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://nitroteam.kz/index.php?action=researches&slug=OpenEMR--9035", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://www.open-emr.org/wiki/index.php/OpenEMR_Downloads", "source": "cve@mitre.org", "tags": ["Release Notes", "Vendor Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2020-29139 - demonstrates the importance of proper input validation and sanitization to prevent SQL injection attacks"}, {"techniqueID": "T1027", "comment": "CVE-2020-29139 - reveals the risk of data leakage when unvalidated user input is used to construct SQL queries"}, {"techniqueID": "T1190", "comment": "CVE-2020-29139 - highlights the need for regular vulnerability scanning and patch management to identify and remediate SQL injection vulnerabilities"}], "technical_analysis": {"Introduction": "OpenEMR before 5.0.2.5 is vulnerable to a SQL injection attack due to insufficient input validation and sanitization.", "Impact and Scope": "The vulnerability allows an authenticated attacker to execute arbitrary SQL commands, affecting confidentiality, integrity, and availability of patient data."}, "executive_analysis": {"Overview": "OpenEMR 5.0.2.5 and earlier versions are vulnerable to SQL injection attacks due to insufficient input validation and sanitization.", "Business Impact": "The vulnerability can lead to unauthorized data access, data alteration, and system compromise, which can compromise the availability of patient data and the trust of patients and customers.", "Mitigation Strategies": "Regularly patch and update OpenEMR versions to the latest available patches, and implement additional security measures, such as input validation and sanitization, to prevent SQL injection attacks."}}