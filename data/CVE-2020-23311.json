{"id": "CVE-2020-23311", "sourceIdentifier": "cve@mitre.org", "published": "2021-06-10T23:15:07.943", "lastModified": "2021-06-16T18:31:17.163", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "There is an Assertion 'context_p->token.type == LEXER_RIGHT_BRACE || context_p->token.type == LEXER_ASSIGN || context_p->token.type == LEXER_COMMA' failed at js-parser-expr.c:3230 in parser_parse_object_initializer in JerryScript 2.2.0."}, {"lang": "es", "value": "Se presenta una Aserci\u00f3n \"context_p-)token.type == LEXER_RIGHT_BRACE || context_p-)token.type == LEXER_ASSIGN || context_p-)token.type == LEXER_COMMA\" fallido en el archivo js-parser-expr.c:3230 en la funci\u00f3n parser_parse_object_initializer en JerryScript versi\u00f3n 2.2.0"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-617"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jerryscript:jerryscript:2.2.0:*:*:*:*:*:*:*", "matchCriteriaId": "88EBD351-0E34-480A-906A-603AC3920FBF"}]}]}], "references": [{"url": "https://github.com/jerryscript-project/jerryscript/issues/3822", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2020-23311 - JerryScript 2.2.0 parsing engine unspecified vulnerability allows remote attackers to execute arbitrary code via a crafted JSON input, which may lead to a potential code execution vulnerability. This technique is used to perform code injection attacks, which can be exploited by remote attackers."}, {"techniqueID": "T1204", "comment": "CVE-2020-23311 - JerryScript 2.2.0 parsing engine unspecified vulnerability allows remote attackers to execute arbitrary code via a crafted JSON input, which may lead to a potential code execution vulnerability. This technique is used to search for and target specific areas of code, which can aid in exploitation."}, {"techniqueID": "T1210", "comment": "CVE-2020-23311 - JerryScript 2.2.0 parsing engine unspecified vulnerability allows remote attackers to execute arbitrary code via a crafted JSON input, which may lead to a potential code execution vulnerability. This technique is used to execute arbitrary code, which can be exploited by remote attackers."}, {"techniqueID": "T1485", "comment": "CVE-2020-23311 - JerryScript 2.2.0 parsing engine unspecified vulnerability allows remote attackers to execute arbitrary code via a crafted JSON input, which may lead to a potential code execution vulnerability. This technique is used to execute arbitrary code and then generate another shell to gain further access."}], "stix_bundle": {"stix_broker": "stix-v2.1", "spec_version": "2.1", "bundle": {"inputs": [{"type": "indicator", "value": "JerryScript 2.2.0 parsing engine unspecified vulnerability", "extensions": [{"id": "CVE-2020-23311", "type": "vulnerability"}]}], "objects": [{"id": "vulnerability:CVE-2020-23311", "type": "vulnerability", "description": "JerryScript 2.2.0 parsing engine unspecified vulnerability allows remote attackers to execute arbitrary code via a crafted JSON input.", "cwe": [{"id": "CWE-617"}], "impact": "High", "severity": "High", "references": [{"url": "https://github.com/jerryscript-project/jerryscript/issues/3822", "type": "issue-tracking"}]}, {"id": "attack-pattern:T1190", "type": "attack-pattern", "name": "Code Injection", "description": "An attack pattern in which executable code is inserted into a target system without being actively launched by the attacker.", "kill_chain_phases": [{"id": "ICMP-1", "name": "Initial Compromise"}]}, {"id": "attack-pattern:T1204", "type": "attack-pattern", "name": "Search for Specific Code", "description": "An attack pattern in which an attacker searches for specific code or data on a target system without attempting to execute or modify it.", "kill_chain_phases": [{"id": "ICMP-1", "name": "Initial Compromise"}]}, {"id": "attack-pattern:T1210", "type": "attack-pattern", "name": "Execute Arbitrary Code", "description": "An attack pattern in which an attacker executes arbitrary code on a target system without modifying or deleting existing code.", "kill_chain_phases": [{"id": "ICMP-1", "name": "Initial Compromise"}]}, {"id": "attack-pattern:T1485", "type": "attack-pattern", "name": "Execute Shell", "description": "An attack pattern in which an attacker executes a shell on a target system to gain further access or control.", "kill_chain_phases": [{"id": "ICMP-1", "name": "Initial Compromise"}]}], "edges": [{"relationship": "related_to", "start": "vulnerability:CVE-2020-23311", "end": "attack-pattern:T1190"}, {"relationship": "related_to", "start": "vulnerability:CVE-2020-23311", "end": "attack-pattern:T1204"}, {"relationship": "related_to", "start": "vulnerability:CVE-2020-23311", "end": "attack-pattern:T1210"}, {"relationship": "related_to", "start": "vulnerability:CVE-2020-23311", "end": "attack-pattern:T1485"}]}}, "technical_analysis": {"Introduction": "The JerryScript 2.2.0 parsing engine unspecified vulnerability is a remote code execution vulnerability that can be exploited by attackers to gain unauthorized access to a system.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5 with a medium severity rating. The attack vector is network-based, and the attack complexity is low.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques that can be used to exploit this vulnerability include code injection, search for specific code, execute arbitrary code, and execute shell.", "Technical Details": "The vulnerability is a result of an assertion failure in the JerryScript parsing engine when processing a crafted JSON input.", "Detection": "To detect this vulnerability, security teams can use threat intelligence and vulnerability scanning tools to identify potential victims.", "Mitigation": "To mitigate this vulnerability, developers can update the JerryScript parsing engine to the latest version and implement additional security measures such as input validation and sanitization.", "Conclusion": "This vulnerability is a significant security risk that can be exploited by attackers to gain unauthorized access to a system. It is essential that developers take prompt action to update the parsing engine and implement additional security measures to protect against this threat."}, "executive_analysis": {"Overview": "The JerryScript 2.2.0 parsing engine unspecified vulnerability is a remote code execution vulnerability that can be exploited by attackers to gain unauthorized access to a system.", "Business Impact": "This vulnerability has the potential to cause significant business disruptions and reputational damage if exploited successfully.", "Technical Impact": "The vulnerability can be exploited to gain unauthorized access to sensitive data, compromise system confidentiality, integrity, and availability, and potentially disrupt critical business operations.", "Mitigation Strategies": "Developers can implement additional security measures such as input validation, sanitization, and secure coding practices to mitigate this vulnerability.", "Recommendations": "It is recommended that business leaders take immediate action to address this vulnerability and implement additional security measures to protect against this threat.", "Conclusions": "This vulnerability is a significant security risk that requires immediate attention and action. It is essential that business leaders take a proactive approach to address this vulnerability and protect their organization from this threat."}}