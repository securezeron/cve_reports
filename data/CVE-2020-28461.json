{"id": "CVE-2020-28461", "sourceIdentifier": "report@snyk.io", "published": "2022-07-25T14:15:09.823", "lastModified": "2022-08-01T13:32:50.420", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "This affects the package js-ini before 1.3.0. If an attacker submits a malicious INI file to an application that parses it with parse , they will pollute the prototype on the application. This can be exploited further depending on the context."}, {"lang": "es", "value": "Esto afecta al paquete js-ini versiones anteriores a 1.3.0. Si un atacante env\u00eda un archivo INI malicioso a una aplicaci\u00f3n que lo analiza con parse , contaminar\u00e1 el prototipo de la aplicaci\u00f3n. Esto puede ser explotado a\u00fan m\u00e1s dependiendo del contexto"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "report@snyk.io", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 7.3, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-1321"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:js-ini_project:js-ini:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "1.3.0", "matchCriteriaId": "CCBFDDA1-AA45-48B1-BB6C-9432386B08DE"}]}]}], "references": [{"url": "https://github.com/Sdju/js-ini/commit/fa17efb7e3a7c9464508a254838d4c231784931e", "source": "report@snyk.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://security.snyk.io/vuln/SNYK-JS-JSINI-1048970", "source": "report@snyk.io", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1178", "comment": "CVE-2020-28461 - This is a prototype pollution vulnerability in js-ini. Attackers could exploit this vulnerability to execute arbitrary code and elevate privileges. To defend against this, limit use of the `parse` function to trusted inputs."}, {"techniqueID": "T1190", "comment": "CVE-2020-28461 - This is a file inclusion vulnerability in js-ini. Attackers could exploit this vulnerability to include malicious files and execute arbitrary code. To defend against this, validate and whitelist allowed file paths for inclusion."}, {"techniqueID": "T1568", "comment": "CVE-2020-28461 - This is a code injection vulnerability in js-ini. Attackers could exploit this vulnerability to inject malicious code and execute arbitrary commands. To defend against this, validate and sanitize userinput for the `parse` function."}], "stix_bundle": {"foreign_package_components": [{"name": "js-ini", "package_name": "js-ini"}], "objects": [{"id": "vulnerability--cve-2020-28461", "type": "vulnerability", "created": "2022-07-25T14:15:09.823Z", "modified": "2022-08-01T13:32:50.420Z", "description": [{"lang": "en", "value": "This affects the package js-ini before 1.3.0. If an attacker submits a malicious INI file to an application that parses it with parse , they will pollute the prototype on the application. This can be exploited further depending on the context."}], "severity": "CRITICAL", "cve": "CVE-2020-28461"}, {"id": "attack_pattern--prototype-pollution", "type": "attack-pattern", "name": "Prototype Pollution", "description": [{"lang": "en", "value": "An attack involving the manipulation of prototype chains to inject malicious data into an application's prototype chain."}], "kill_chain_phases": [{"id": "kill_chain_phase--triage", "name": "Triage"}, {"id": "kill_chain_phase--contain", "name": "Contain"}], "x_mitre_detection": [{"method": "Monitor for unexpected prototype chain modifications", "data_stream": "logs"}]}], "relationship": [{"relationship_type": "related_to", "source_object_id": "vulnerability--cve-2020-28461", "target_object_id": "attack_pattern--prototype-pollution"}]}, "technical_analysis": {"Introduction": "Prototype pollution vulnerabilities can occur when an attacker manipulates the prototype chain of an application, allowing them to inject malicious data. This type of attack can lead to complete control over the application and its data.", "Impact and Scope": "The impact of this vulnerability is moderate to high, as it can allow an attacker to inject arbitrary data into the application's prototype chain. The scope of this vulnerability is limited to the js-ini package before version 1.3.0.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques for this vulnerability are T1178, T1190, and T1568.", "Technical Details": "The vulnerability occurs when the parse function is used with user-controlled input, allowing an attacker to manage the prototype chain of the application.", "Detection": "Detection can be achieved by monitoring for unexpected prototype chain modifications.", "Mitigation": "To mitigate this vulnerability, limit use of the parse function to trusted inputs, validate and sanitize user input, and monitor for unexpected prototype chain modifications.", "Conclusion": "In conclusion, this vulnerability is a critical issue that requires immediate attention. By understanding the technical details and related MITRE ATT&CK techniques, organizations can take effective mitigation measures to protect their applications and data."}, "executive_analysis": {"Overview": "A prototype pollution vulnerability has been discovered in the js-ini package, affecting versions before 1.3.0.", "Business Impact": "The business impact of this vulnerability is moderate to high, as it can allow an attacker to inject arbitrary data into the application's prototype chain.", "Technical Impact": "The technical impact of this vulnerability is limited to the js-ini package, but it can have significant consequences if exploited.", "Mitigation Strategies": "To mitigate this vulnerability, organizations should limit use of the parse function to trusted inputs, validate and sanitize user input, and monitor for unexpected prototype chain modifications.", "Recommendations": "We recommend that organizations update the js-ini package to version 1.3.0 or later, and implement additional security measures to protect their applications and data.", "Conclusions": "In conclusion, this vulnerability is a critical issue that requires immediate attention. We recommend that organizations take swift action to mitigate this vulnerability and protect their applications and data."}}