{"id": "CVE-2024-29273", "sourceIdentifier": "cve@mitre.org", "published": "2024-03-22T04:15:11.857", "lastModified": "2024-08-27T21:35:20.250", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "There is Stored Cross-Site Scripting (XSS) in dzzoffice 2.02.1 SC UTF8 in uploadfile to index.php, with the XSS payload in an SVG document."}, {"lang": "es", "value": "Hay cross-site scripting almacenadas (XSS) en dzzoffice 2.02.1 SC UTF8 en el archivo de carga en index.php, con el payload XSS en un documento SVG."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://github.com/zyx0814/dzzoffice/issues/244", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1046", "comment": "CVE-2024-29273 - Stored Cross-Site Scripting (XSS) in dzzoffice 2.02.1 SC UTF8 allows attacker-controlled SVG documents to inject malicious JavaScript, which can be used for sensitive information disclosure, webshell deployment, and/or persistent backdoors."}, {"techniqueID": "T1190", "comment": "CVE-2024-29273 - The stored XSS vulnerability can be exploited by an attacker to steal sensitive information, upload malware, and execute arbitrary JavaScript code, which can lead to a range of malicious activities."}, {"techniqueID": "T1505", "comment": "CVE-2024-29273 - The vulnerable 'uploadfile' function in dzzoffice 2.02.1 SC UTF8 makes it easy for an attacker to inject malicious SVG documents, which can be used for persistent backdoors, webshell deployment, or sensitive information disclosure."}], "stix_bundle": {"type": "bundle", "objects": [{"type": "incident", "id": "incident--76e4ce7f-23e5-4da0-9ec4-2f4db92c0a7f", "created_by_ref": "identity--e69c9a7f-43ef-4175-8d9c-4d2a34af3e7a", "modified": "2024-08-27T21:35:20.250Z", "first_seen": "2024-03-22T04:15:11.857Z", "last_seen": "2024-08-27T21:35:20.250Z", "severity": "medium", "description": "Stored Cross-Site Scripting (XSS) in dzzoffice 2.02.1 SC UTF8 allows attacker-controlled SVG documents to inject malicious JavaScript, which can be used for sensitive information disclosure, webshell deployment, and/or persistent backdoors."}, {"type": "analyzer", "id": "analyzer--a1a1a1a1-1111-1111-1111-111111111111", "description": "This analyzer detects Stored Cross-Site Scripting (XSS) in dzzoffice 2.02.1 SC UTF8 by analyzing incoming SVG documents for malicious JavaScript payload."}, {"type": "course_of_action", "id": "course_of_action--9999-9999-9999-9999-999999999999", "description": "To minimize the risk of exploitation, implement the following COA:", "related_object": {"relationship": "relates_to", "target_ref": "technique--technique--T1046"}}], "relationships": [{"relationship": "related_to", "source_ref": "incident--76e4ce7f-23e5-4da0-9ec4-2f4db92c0a7f", "target_ref": "technique--technique--T1046"}, {"relationship": "related_to", "source_ref": "incident--76e4ce7f-23e5-4da0-9ec4-2f4db92c0a7f", "target_ref": "technique--technique--T1190"}, {"relationship": "related_to", "source_ref": "incident--76e4ce7f-23e5-4da0-9ec4-2f4db92c0a7f", "target_ref": "technique--technique--T1505"}, {"relationship": "uses", "source_ref": "analyzer--a1a1a1a1-1111-1111-1111-111111111111", "target_ref": "incident--76e4ce7f-23e5-4da0-9ec4-2f4db92c0a7f"}, {"relationship": "mitigates", "source_ref": "course_of_action--9999-9999-9999-9999-999999999999", "target_ref": "technique--technique--T1046"}]}, "technical_analysis": {"Introduction": "The Stored Cross-Site Scripting (XSS) vulnerability in dzzoffice 2.02.1 SC UTF8 allows an attacker to inject malicious JavaScript payload in SVG documents, which can lead to a range of malicious activities.", "Impact and Scope": "The vulnerability has a CVSS score of 6.1, with an attack vector of NETWORK, attack complexity of LOW, privileges required of NONE, user interaction of REQUIRED, and a scope of CHANGED, confidentiality impact of LOW, integrity impact of LOW, and availability impact of NONE.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to T1046, T1190, and T1505, as described above.", "Technical Details": "The vulnerability is located in the 'uploadfile' function in dzzoffice 2.02.1 SC UTF8.", "Detection": "Detection of this vulnerability can be done by analyzing incoming SVG documents for malicious JavaScript payload.", "Mitigation": "To mitigate this vulnerability, implement a web application firewall (WAF) to block malicious SVG documents, and ensure that JavaScript is validated and sanitized before execution.", "Conclusion": "In conclusion, the Stored Cross-Site Scripting (XSS) vulnerability in dzzoffice 2.02.1 SC UTF8 is a significant security risk and should be addressed promptly."}, "executive_analysis": {"Overview": "The Stored Cross-Site Scripting (XSS) vulnerability in dzzoffice 2.02.1 SC UTF8 is a high-severity security risk that could result in sensitive information disclosure, webshell deployment, and/or persistent backdoors.", "Business Impact": "The business impact of this vulnerability is significant, as it could result in unauthorized access to sensitive data, disruption of business operations, and reputational damage.", "Technical Impact": "The technical impact of this vulnerability is that it compromises the security of the dzzoffice application, allowing an attacker to inject malicious JavaScript payload.", "Mitigation Strategies": "Mitigation strategies for this vulnerability include implementing a WAF to block malicious SVG documents, validating and sanitizing JavaScript before execution, and ensuring that all web applications are patched and up-to-date.", "Recommendations": "We recommend that you take immediate action to patch and update your dzzoffice application, and implement the mitigation strategies outlined above.", "Conclusions": "In conclusion, the Stored Cross-Site Scripting (XSS) vulnerability in dzzoffice 2.02.1 SC UTF8 is a significant threat to the security of your organization, and immediate action is required to mitigate this risk."}}