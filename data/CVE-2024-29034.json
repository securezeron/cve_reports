{"id": "CVE-2024-29034", "sourceIdentifier": "security-advisories@github.com", "published": "2024-03-24T20:15:07.770", "lastModified": "2024-03-25T01:51:01.223", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "CarrierWave is a solution for file uploads for Rails, Sinatra and other Ruby web frameworks. The vulnerability CVE-2023-49090 wasn't fully addressed. This vulnerability is caused by the fact that when uploading to object storage, including Amazon S3, it is possible to set a Content-Type value that is interpreted by browsers to be different from what's allowed by `content_type_allowlist`, by providing multiple values separated by commas. This bypassed value can be used to cause XSS. Upgrade to 3.0.7 or 2.2.6.\n"}, {"lang": "es", "value": "CarrierWave es una soluci\u00f3n para carga de archivos para Rails, Sinatra y otros frameworks web Ruby. La vulnerabilidad CVE-2023-49090 no se solucion\u00f3 por completo. Esta vulnerabilidad se debe al hecho de que al cargar objetos en el almacenamiento, incluido Amazon S3, es posible establecer un valor de tipo de contenido que los navegadores interpretan como diferente de lo permitido por \"content_type_allowlist\", al proporcionar m\u00faltiples valores separados por comas. Este valor omitido se puede utilizar para provocar XSS. Actualice a 3.0.7 o 2.2.6."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 6.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 4.0}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-436"}, {"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477", "source": "security-advisories@github.com"}, {"url": "https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1059.006", "comment": "CVE-2024-29034 - This vulnerability allows for Cross-Site Scripting (XSS) attacks, which can be caused by providing multiple Content-Type values separated by commas. Defending against this involves validating user input and ensuring that Content-Type values are properly sanitized."}, {"techniqueID": "T1222", "comment": "CVE-2024-29034 - This vulnerability allows for Supply Chain Compromise, as CarrierWave does not properly validate content types when uploading files. Defending against this involves verifying the integrity of uploaded files and ensuring that they are properly sanitized."}, {"techniqueID": "T1196", "comment": "CVE-2024-29034 - This vulnerability allows for Server-Side Request Forgery (SSRF), as CarrierWave does not properly validate the URL of the uploaded file. Defending against this involves validating the URL of the uploaded file and ensuring that it is properly sanitized."}], "technical_analysis": {"Introduction": "CarrierWave, a Ruby gem for file uploads, contains a vulnerability that allows for Cross-Site Scripting (XSS) and Supply Chain Compromise.", "Impact and Scope": "The vulnerability has a CVSS score of 6.8 with a version of 3.1, an attack vector of NETWORK, and the scope is CHANGED. It affects CarrierWave versions 2.2.5 and below, and 3.0.6 and below.", "Related MITRE ATT&CK Techniques": "T1059.006, T1222, and T1196", "Technical Details": "The vulnerability occurs when CarrierWave allows the upload of files with content types not specified in the content_type_allowlist, which can be exploited to inject malicious code.", "Detection": "The vulnerability can be detected by monitoring application logs for suspicious requests and by conducting regular code reviews.", "Mitigation": "The vulnerability can be mitigated by upgrading to CarrierWave 3.0.7 or 2.2.6, and by validating user input and ensuring that content types are properly sanitized.", "Conclusion": "The vulnerability in CarrierWave affects the integrity and confidentiality of sensitive data and can lead to severe consequences if exploited."}, "executive_analysis": {"Overview": "CarrierWave, a Ruby gem for file uploads, contains a vulnerability that can lead to Cross-Site Scripting (XSS) and Supply Chain Compromise.", "Business Impact": "The vulnerability can compromise the integrity and confidentiality of sensitive data, leading to financial and reputational damage.", "Technical Impact": "The vulnerability can be exploited to inject malicious code and compromise the security of the application.", "Mitigation Strategies": "Upgrading to the latest CarrierWave version, validating user input, and sanitizing content types are the recommended mitigation strategies.", "Recommendations": "Executives are recommended to take immediate action to mitigate the vulnerability.", "Conclusions": "The vulnerability in CarrierWave affects the security and integrity of sensitive data and requires immediate attention."}}