{"id": "CVE-2024-35825", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-05-17T14:15:18.227", "lastModified": "2024-06-27T12:15:25.373", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: ncm: Fix handling of zero block length packets\n\nWhile connecting to a Linux host with CDC_NCM_NTB_DEF_SIZE_TX\nset to 65536, it has been observed that we receive short packets,\nwhich come at interval of 5-10 seconds sometimes and have block\nlength zero but still contain 1-2 valid datagrams present.\n\nAccording to the NCM spec:\n\n\"If wBlockLength = 0x0000, the block is terminated by a\nshort packet. In this case, the USB transfer must still\nbe shorter than dwNtbInMaxSize or dwNtbOutMaxSize. If\nexactly dwNtbInMaxSize or dwNtbOutMaxSize bytes are sent,\nand the size is a multiple of wMaxPacketSize for the\ngiven pipe, then no ZLP shall be sent.\n\nwBlockLength= 0x0000 must be used with extreme care, because\nof the possibility that the host and device may get out of\nsync, and because of test issues.\n\nwBlockLength = 0x0000 allows the sender to reduce latency by\nstarting to send a very large NTB, and then shortening it when\nthe sender discovers that there\u2019s not sufficient data to justify\nsending a large NTB\"\n\nHowever, there is a potential issue with the current implementation,\nas it checks for the occurrence of multiple NTBs in a single\ngiveback by verifying if the leftover bytes to be processed is zero\nor not. If the block length reads zero, we would process the same\nNTB infintely because the leftover bytes is never zero and it leads\nto a crash. Fix this by bailing out if block length reads zero."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: usb: gadget: ncm: corregido el manejo de paquetes de longitud de bloque cero Al conectarnos a un host Linux con CDC_NCM_NTB_DEF_SIZE_TX configurado en 65536, se ha observado que recibimos paquetes cortos, que vienen en intervalo de 5 a 10 segundos a veces y tiene una longitud de bloque cero, pero a\u00fan contiene 1 o 2 datagramas v\u00e1lidos presentes. Seg\u00fan la especificaci\u00f3n NCM: \"Si wBlockLength = 0x0000, el bloque finaliza con un paquete corto. En este caso, la transferencia USB a\u00fan debe ser m\u00e1s corta que dwNtbInMaxSize o dwNtbOutMaxSize. Si se env\u00edan exactamente bytes dwNtbInMaxSize o dwNtbOutMaxSize, y el tama\u00f1o es un m\u00faltiplo de wMaxPacketSize para la pipe dada, entonces no se enviar\u00e1 ning\u00fan ZLP. wBlockLength= 0x0000 debe usarse con extremo cuidado, debido a la posibilidad de que el host y el dispositivo no est\u00e9n sincronizados y debido a problemas de prueba con wBlockLength = 0x0000. permite al remitente reducir la latencia comenzando a enviar un NTB muy grande y luego acort\u00e1ndolo cuando el remitente descubre que no hay datos suficientes para justificar el env\u00edo de un NTB grande\". Sin embargo, existe un problema potencial con la implementaci\u00f3n actual, ya que verifica para la aparici\u00f3n de m\u00faltiples NTB en una sola devoluci\u00f3n verificando si los bytes sobrantes a procesar son cero o no. Si la longitud del bloque es cero, procesar\u00edamos el mismo NTB infinitamente porque los bytes sobrantes nunca son cero y provocan un bloqueo. Solucione este problema rescatando si la longitud del bloque es cero."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/6b2c73111a252263807b7598682663dc33aa4b4c", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/7664ee8bd80309b90d53488b619764f0a057f2b7", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/92b051b87658df7649ffcdef522593f21a2b296b", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/a0f77b5d6067285b8eca0ee3bd1e448a6258026f", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/a766761d206e7c36d7526e0ae749949d17ca582c", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/e2dbfea520e60d58e0c498ba41bde10452257779", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/ef846cdbd100f7f9dc045e8bcd7fe4b3a3713c03", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/f90ce1e04cbcc76639d6cba0fdbd820cd80b3c70", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-35825 - This vulnerability allows an attacker to indefinitely process zero-length NTB packets, which can lead to a denial-of-service (DoS) condition. Defending against this technique involves implementing proper NTB packet handling and validating block lengths."}, {"techniqueID": "T1204", "comment": " CVE-2024-35825 - This vulnerability can be exploited by an attacker to send zero-length NTB packets, which can cause the system to enter an infinite loop. Defending against this technique involves validating NTB packet lengths and preventing infinite loops."}, {"techniqueID": "T1562", "comment": " CVE-2024-35825 - This vulnerability can be exploited by an attacker to send arbitrary data, including zero-length packets, which can cause the system to behave incorrectly. Defending against this technique involves validating and sanitizing incoming data."}], "stix_bundle": {"$schema": "https://stix2.io/schema/2.1(stix-core)v1", "type": "bundle", "id": "https://example.com/CVE-2024-35825", "title": "CVE-2024-35825 Bundle", "description": "This STIX 2.1 bundle provides information on the CVE-2024-35825 vulnerability, including related techniques, risks, and defense strategies.", "objects": [{"type": "indicator", "id": "https://example.com/CVE-2024-35825/indicator", "title": "CVE-2024-35825 Indicator", "description": "This indicator represents the CVE-2024-35825 vulnerability."}, {"type": "vulnerability", "id": "https://example.com/CVE-2024-35825/vulnerability", "title": "CVE-2024-35825 Vulnerability", "description": "This vulnerability represents the CVE-2024-35825 vulnerability.", "objects": [{"type": "technique", "id": "https://example.com/CVE-2024-35825/T1190", "title": "T1190: Data Staging", "description": "This technique represents the exploitation of CVE-2024-35825 by staging data for transmission."}, {"type": "technique", "id": "https://example.com/CVE-2024-35825/T1204", "title": "T1204: Data Encoding", "description": "This technique represents the exploitation of CVE-2024-35825 by encoding data for transmission."}, {"type": "technique", "id": "https://example.com/CVE-2024-35825/T1562", "title": "T1562: Impair Processes", "description": "This technique represents the exploitation of CVE-2024-35825 by impairing system processes."}]}, {"type": "course-of-action", "id": "https://example.com/CVE-2024-35825/course-of-action", "title": "CVE-2024-35825 Course of Action", "description": "This course of action represents the recommended response to the CVE-2024-35825 vulnerability."}], "relations": [{"type": "indicated-by", "from": "https://example.com/CVE-2024-35825/indicator", "to": "https://example.com/CVE-2024-35825/vulnerability"}, {"type": " exploits", "from": "https://example.com/CVE-2024-35825/vulnerability", "to": "https://example.com/CVE-2024-35825/T1190"}, {"type": "exploits", "from": "https://example.com/CVE-2024-35825/vulnerability", "to": "https://example.com/CVE-2024-35825/T1204"}, {"type": "exploits", "from": "https://example.com/CVE-2024-35825/vulnerability", "to": "https://example.com/CVE-2024-35825/T1562"}, {"type": "decreases", "from": "https://example.com/CVE-2024-35825/vulnerability", "to": "https://example.com/CVE-2024-35825/course-of-action"}]}, "technical_analysis": {"Introduction": "The CVE-2024-35825 vulnerability is a Linux kernel vulnerability that allows an attacker to indefinitely process zero-length NTB packets, which can lead to a denial-of-service (DoS) condition.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5 and can be exploited remotely. It affects Linux kernel version 5.17 and later.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to MITRE ATT&CK techniques T1190, T1204, and T1562.", "Technical Details": "The vulnerability is caused by a lack of validation of NTB packet lengths, which can allow an attacker to send zero-length packets and cause the system to enter an infinite loop.", "Detection": "Detection of this vulnerability involves monitoring for unusual network traffic patterns and system performance issues.", "Mitigation": "Mitigation strategies include updating the Linux kernel to a patched version, validating NTB packet lengths, and implementing network traffic filtering.", "Conclusion": "The CVE-2024-35825 vulnerability is a serious issue that can be exploited by attackers to cause a denial-of-service condition. It is essential to update the Linux kernel and implement proper mitigation strategies to prevent exploitation."}, "executive_analysis": {"Overview": "The CVE-2024-35825 vulnerability is a critical vulnerability in the Linux kernel that can be exploited by attackers to cause a denial-of-service condition.", "Business Impact": "This vulnerability can cause significant business disruptions and losses due to service downtime and data loss.", "Technical Impact": "The vulnerability can also cause technical issues, such as system crashes and data corruption, which can lead to further complications.", "Mitigation Strategies": "The most effective mitigation strategy is to update the Linux kernel to a patched version. Additionally, implementing network traffic filtering and validating NTB packet lengths can help prevent exploitation.", "Recommendations": "We recommend that all organizations take immediate action to update their Linux kernels and implement proper mitigation strategies to prevent exploitation.", "Conclusions": "In conclusion, the CVE-2024-35825 vulnerability is a critical issue that requires immediate attention and action. It is essential to update the Linux kernel and implement proper mitigation strategies to prevent exploitation and ensure business continuity."}}