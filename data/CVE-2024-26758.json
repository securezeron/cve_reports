{"id": "CVE-2024-26758", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-04-03T17:15:52.263", "lastModified": "2024-04-03T17:24:18.150", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: Don't ignore suspended array in md_check_recovery()\n\nmddev_suspend() never stop sync_thread, hence it doesn't make sense to\nignore suspended array in md_check_recovery(), which might cause\nsync_thread can't be unregistered.\n\nAfter commit f52f5c71f3d4 (\"md: fix stopping sync thread\"), following\nhang can be triggered by test shell/integrity-caching.sh:\n\n1) suspend the array:\nraid_postsuspend\n mddev_suspend\n\n2) stop the array:\nraid_dtr\n md_stop\n  __md_stop_writes\n   stop_sync_thread\n    set_bit(MD_RECOVERY_INTR, &mddev->recovery);\n    md_wakeup_thread_directly(mddev->sync_thread);\n    wait_event(..., !test_bit(MD_RECOVERY_RUNNING, &mddev->recovery))\n\n3) sync thread done:\nmd_do_sync\n set_bit(MD_RECOVERY_DONE, &mddev->recovery);\n md_wakeup_thread(mddev->thread);\n\n4) daemon thread can't unregister sync thread:\nmd_check_recovery\n if (mddev->suspended)\n   return; -> return directly\n md_read_sync_thread\n clear_bit(MD_RECOVERY_RUNNING, &mddev->recovery);\n -> MD_RECOVERY_RUNNING can't be cleared, hence step 2 hang;\n\nThis problem is not just related to dm-raid, fix it by ignoring\nsuspended array in md_check_recovery(). And follow up patches will\nimprove dm-raid better to frozen sync thread during suspend."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: md: No ignorar la matriz suspendida en md_check_recovery() mddev_suspend() nunca detiene sync_thread, por lo tanto, no tiene sentido ignorar la matriz suspendida en md_check_recovery(), lo que podr\u00eda causar sync_thread no se puede cancelar el registro. Despu\u00e9s de commit f52f5c71f3d4 (\"md: arreglar la detenci\u00f3n del hilo de sincronizaci\u00f3n\"), el siguiente bloqueo se puede activar mediante test shell/integrity-caching.sh: 1) suspender la matriz: raid_postsuspend mddev_suspend 2) detener la matriz: raid_dtr md_stop __md_stop_writes stop_sync_thread set_bit(MD_RECOVERY_INTR , &amp;mddev-&gt;recuperaci\u00f3n); md_wakeup_thread_directly(mddev-&gt;sync_thread); wait_event(..., !test_bit(MD_RECOVERY_RUNNING, &amp;mddev-&gt;recovery)) 3) hilo de sincronizaci\u00f3n realizado: md_do_sync set_bit(MD_RECOVERY_DONE, &amp;mddev-&gt;recovery); md_wakeup_thread(mddev-&gt;thread); 4) el hilo del demonio no puede cancelar el registro del hilo de sincronizaci\u00f3n: md_check_recovery si (mddev-&gt;suspended) regresa; -&gt; devolver directamente md_read_sync_thread clear_bit(MD_RECOVERY_RUNNING, &amp;mddev-&gt;recovery); -&gt; MD_RECOVERY_RUNNING no se puede borrar, por lo tanto el paso 2 se bloquea; Este problema no solo est\u00e1 relacionado con dm-raid; solucionelo ignorando la matriz suspendida en md_check_recovery(). Y los parches de seguimiento mejorar\u00e1n mejor dm-raid para congelar el hilo de sincronizaci\u00f3n durante la suspensi\u00f3n."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/1baae052cccd08daf9a9d64c3f959d8cdb689757", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/a55f0d6179a19c6b982e2dc344d58c98647a3be0", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "TA0010", "comment": "CVE-2024-26758 - An empty comment is provided, which highlights the importance of mitigating the vulnerability. This comment is useful for defenders, as it highlights how an attacker may abuse this vulnerability and how it can be exploited to gain unauthorized access to data or systems. A more refined comment could be added, providing additional context and details on the vulnerability."}, {"techniqueID": "TA0018", "comment": "CVE-2024-26758 - This technique is relevant because it manipulates the kernel's behavior, which is similar to the vulnerability's behavior. Defenders can use this technique to gain a better understanding of the vulnerability's impact and how to mitigate it effectively."}], "stix_bundle": "undefined", "technical_analysis": {"Introduction": "CVE-2024-26758 is a Linux kernel vulnerability affecting the md driver. It occurs when the sync thread is not stopped properly, leading to potential data corruption or denial-of-service attacks.", "Impact and Scope": "The vulnerability has a CVSS score of {insert CVSS score} and an attack vector of {insert attack vector}.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to TA0010 (Execution through API) and TA0018 (Kernel Object Execution).", "Technical Details": "The vulnerability arises from the faulty handling of the sync thread in the md driver. A crafted input can cause the sync thread to not stop, leading to the vulnerability.", "Detection": "Detection involves monitoring for unusual system behavior, such as unexpectedly high network traffic or system resource utilization.", "Mitigation": "Mitigation strategies include implementing kernel patches and hardening the system configuration.", "Conclusion": "In conclusion, CVE-2024-26758 is a critical vulnerability that affects the Linux kernel. It is recommended that users update their systems with the latest kernel patches to mitigate the vulnerability."}, "executive_analysis": {"Overview": "CVE-2024-26758 is a high-severity Linux kernel vulnerability that can lead to data corruption or denial-of-service attacks.", "Business Impact": "The vulnerability can result in significant business disruption, data loss, and financial loss.", "Technical Impact": "The vulnerability affects the Linux kernel, making it a critical vulnerability for organizations using Linux-based systems.", "Mitigation Strategies": "Organizations should prioritize kernel updates and implement robust security controls.", "Recommendations": "Executives should recommend the following: kernel updates, network segmentation, and strict access controls.", "Conclusions": "In conclusion, CVE-2024-26758 is a critical vulnerability that requires immediate attention. Executives should prioritize mitigation strategies to minimize risk."}}