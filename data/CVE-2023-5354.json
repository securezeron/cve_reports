{"id": "CVE-2023-5354", "sourceIdentifier": "contact@wpscan.com", "published": "2023-11-06T21:15:09.790", "lastModified": "2023-11-14T15:32:26.917", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Awesome Support WordPress plugin before 6.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."}, {"lang": "es", "value": "El complemento Awesome Support de WordPress anterior a 6.1.5 no sanitiza ni escapa un par\u00e1metro antes de devolverlo a la p\u00e1gina, lo que genera un Cross-Site Scripting (XSS) Reflejado que podr\u00eda usarse contra usuarios con privilegios elevados, como el administrador."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:getawesomesupport:awesome_support:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "6.1.5", "matchCriteriaId": "F8F880F9-BBFE-4602-8E50-AC0EF7CAEF05"}]}]}], "references": [{"url": "https://wpscan.com/vulnerability/aa380524-031d-4e49-9d0b-96e62d54557f", "source": "contact@wpscan.com", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059 - Command and Scripting Interpolation", "comment": "The Awesome Support WordPress plugin before 6.1.5 does not sanitise and escape a parameter before outputting it back in the page, making it vulnerable to Reflected Cross-Site Scripting. An attacker could exploit this to execute malicious code on high privilege users' browsers"}, {"techniqueID": "T1190 - Exploit Public-Facing Application", "comment": "The mentioned vulnerability in the Awesome Support WordPress plugin (CVE-2023-5354) is a common issue that could be exploited by an attacker to gain access to the affected systems, highlighting the importance of proper security measures"}, {"techniqueID": "T1068 - Exploitation of Removable Storage Device", "comment": "The vulnerability could also be exploited by an attacker to execute malware on a removable storage device, which could then be used to spread the attack further"}, {"techniqueID": "T1192 - DevOps Automation", "comment": "An attacker could use this vulnerability to automate the attack, making it more powerful and harder to detect"}, {"techniqueID": "T1030 - Service Windows", "comment": "Before exploiting the vulnerability, an attacker could gather information about the targeted system by utilizing the service windows, increasing their chances of a successful attack"}], "technical_analysis": {"Introduction": "The Awesome Support WordPress plugin before 6.1.5 suffered from a Reflected Cross-Site Scripting vulnerability (CVE-2023-5354), which could have allowed an attacker to execute malicious code on high privilege users' browsers.", "Impact and Scope": "The attack vector is through the 'Network' and requires the victim to interact with the malicious script. The CVSS score is 6.1, with a base severity of 'MEDIUM'.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques for this vulnerability are T1059, T1190, T1068, T1192, and T1030.", "Technical Details": "The vulnerability was caused by the plugin not sanitizing and escaping the input parameter before outputting it back in the page. This allowed an attacker to inject malicious script code into the page.", "Detection": "Detection methods for this vulnerability include Web Application Scanners and Human Exploitation Techniques.", "Mitigation": "Mitigation strategies for this vulnerability include updating the Awesome Support WordPress plugin to version 6.1.5, validating and sanitizing user input, and implementing proper security measures.", "Conclusion": "In conclusion, the Awesome Support WordPress plugin vulnerability highlights the importance of proper security measures and regular updates to prevent exploits."}, "executive_analysis": {"Overview": "The Awesome Support WordPress plugin suffered from a Reflected Cross-Site Scripting vulnerability (CVE-2023-5354), which could have allowed an attacker to execute malicious code on high privilege users' browsers.", "Business Impact": "This vulnerability could have had significant business impact by allowing an attacker to execute malicious code, potentially disrupting business operations and exposing sensitive data.", "Technical Impact": "The technical impact of this vulnerability includes the potential for an attacker to execute malicious code, potentially leading to data theft, privilege escalation, and system compromise.", "Mitigation Strategies": "Mitigation strategies include updating the Awesome Support WordPress plugin, validating and sanitizing user input, and implementing proper security measures.", "Recommendations": "Recommendations for executives include implementing a regular patch management process, conducting regular security assessments, and ensuring proper incident response planning.", "Conclusions": "In conclusion, the Awesome Support WordPress plugin vulnerability highlights the importance of regular updates, proper security measures, and incident response planning to prevent exploits."}, "stix_bundle": {"objects": [{"id": "http://stix.example.com/objects/123456", "type": "vulnerability", "created_by_ref": "http://stix.example.com/objects/123456", "modified": "2023-11-14T15:32:26.917", "name": "Awesome Support WordPress Plugin Vulnerability", "description": "The Awesome Support WordPress plugin before 6.1.5 does not sanitise and escape a parameter before outputting it back in the page, making it vulnerable to Reflected Cross-Site Scripting.", "cve": {"@id": "CVE-2023-5354", "@type": "CVE"}}, {"id": "http://stix.example.com/objects/123457", "type": "attack-pattern", "created_by_ref": "http://stix.example.com/objects/123456", "modified": "2023-11-14T15:32:26.917", "name": "Reflected Cross-Site Scripting Attack", "description": "An attack that injects malicious script code into a web page, allowing the attacker to execute code on the victim's browser.", "mitigations": [{"@id": "http://stix.example.com/objects/123458", "@type": "mitigation"}]}, {"id": "http://stix.example.com/objects/123458", "type": "mitigation", "created_by_ref": "http://stix.example.com/objects/123456", "modified": "2023-11-14T15:32:26.917", "name": "Update Awesome Support WordPress Plugin", "description": "Updating the Awesome Support WordPress plugin to version 6.1.5 or later can help mitigate the Reflected Cross-Site Scripting vulnerability."}, {"id": "http://stix.example.com/objects/123459", "type": "indicator", "created_by_ref": "http://stix.example.com/objects/123456", "modified": "2023-11-14T15:32:26.917", "name": "JavaScript Injection", "description": "Indicates the presence of JavaScript injection", "score": 6.1}], "relationship": [{"type": "related", "source_ref": "http://stix.example.com/objects/123456", "target_ref": "http://stix.example.com/objects/123457"}, {"type": "mitigates", "source_ref": "http://stix.example.com/objects/123457", "target_ref": "http://stix.example.com/objects/123458"}, {"type": "indicates", "source_ref": "http://stix.example.com/objects/123459", "target_ref": "http://stix.example.com/objects/123456"}]}}