{"id": "CVE-2024-35784", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-05-17T13:15:58.270", "lastModified": "2024-05-17T18:35:35.070", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix deadlock with fiemap and extent locking\n\nWhile working on the patchset to remove extent locking I got a lockdep\nsplat with fiemap and pagefaulting with my new extent lock replacement\nlock.\n\nThis deadlock exists with our normal code, we just don't have lockdep\nannotations with the extent locking so we've never noticed it.\n\nSince we're copying the fiemap extent to user space on every iteration\nwe have the chance of pagefaulting.  Because we hold the extent lock for\nthe entire range we could mkwrite into a range in the file that we have\nmmap'ed.  This would deadlock with the following stack trace\n\n[<0>] lock_extent+0x28d/0x2f0\n[<0>] btrfs_page_mkwrite+0x273/0x8a0\n[<0>] do_page_mkwrite+0x50/0xb0\n[<0>] do_fault+0xc1/0x7b0\n[<0>] __handle_mm_fault+0x2fa/0x460\n[<0>] handle_mm_fault+0xa4/0x330\n[<0>] do_user_addr_fault+0x1f4/0x800\n[<0>] exc_page_fault+0x7c/0x1e0\n[<0>] asm_exc_page_fault+0x26/0x30\n[<0>] rep_movs_alternative+0x33/0x70\n[<0>] _copy_to_user+0x49/0x70\n[<0>] fiemap_fill_next_extent+0xc8/0x120\n[<0>] emit_fiemap_extent+0x4d/0xa0\n[<0>] extent_fiemap+0x7f8/0xad0\n[<0>] btrfs_fiemap+0x49/0x80\n[<0>] __x64_sys_ioctl+0x3e1/0xb50\n[<0>] do_syscall_64+0x94/0x1a0\n[<0>] entry_SYSCALL_64_after_hwframe+0x6e/0x76\n\nI wrote an fstest to reproduce this deadlock without my replacement lock\nand verified that the deadlock exists with our existing locking.\n\nTo fix this simply don't take the extent lock for the entire duration of\nthe fiemap.  This is safe in general because we keep track of where we\nare when we're searching the tree, so if an ordered extent updates in\nthe middle of our fiemap call we'll still emit the correct extents\nbecause we know what offset we were on before.\n\nThe only place we maintain the lock is searching delalloc.  Since the\ndelalloc stuff can change during writeback we want to lock the extent\nrange so we have a consistent view of delalloc at the time we're\nchecking to see if we need to set the delalloc flag.\n\nWith this patch applied we no longer deadlock with my testcase."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: btrfs: soluciona el punto muerto con fiemap y bloqueo de extensi\u00f3n Mientras trabajaba en el conjunto de parches para eliminar el bloqueo de extensi\u00f3n, obtuve un lockdep splat con fiemap y pagefaulting con mi nuevo bloqueo de reemplazo de bloqueo de extensi\u00f3n. Este punto muerto existe con nuestro c\u00f3digo normal, simplemente no tenemos anotaciones de bloqueo con el bloqueo de extensi\u00f3n, por lo que nunca lo hemos notado. Dado que copiamos la extensi\u00f3n del mapa de archivos al espacio del usuario en cada iteraci\u00f3n, tenemos la posibilidad de que se produzcan errores de p\u00e1gina. Debido a que mantenemos el bloqueo de extensi\u00f3n para todo el rango, podemos escribir en un rango en el archivo que hemos asignado. Esto se bloquear\u00eda con el siguiente seguimiento de pila [&lt;0&gt;] lock_extent+0x28d/0x2f0 [&lt;0&gt;] btrfs_page_mkwrite+0x273/0x8a0 [&lt;0&gt;] do_page_mkwrite+0x50/0xb0 [&lt;0&gt;] do_fault+0xc1/0x7b0 [&lt; 0&gt;] __handle_mm_fault+0x2fa/0x460 [&lt;0&gt;] handle_mm_fault+0xa4/0x330 [&lt;0&gt;] do_user_addr_fault+0x1f4/0x800 [&lt;0&gt;] exc_page_fault+0x7c/0x1e0 [&lt;0&gt;] asm_exc_page_fault+0x26/0x30 [&lt; 0&gt;] rep_movs_alternative+0x33/0x70 [&lt;0&gt;] _copy_to_user+0x49/0x70 [&lt;0&gt;] fiemap_fill_next_extent+0xc8/0x120 [&lt;0&gt;] emit_fiemap_extent+0x4d/0xa0 [&lt;0&gt;] extend_fiemap+0x7f8/0xad0 [&lt; 0&gt;] btrfs_fiemap+0x49/0x80 [&lt;0&gt;] __x64_sys_ioctl+0x3e1/0xb50 [&lt;0&gt;] do_syscall_64+0x94/0x1a0 [&lt;0&gt;] Entry_SYSCALL_64_after_hwframe+0x6e/0x76 Escrib\u00ed un fstest para reproducir este interbloqueo sin mi bloqueo de reemplazo y verifiqu\u00e9 que existe un punto muerto con nuestro bloqueo existente. Para solucionar este problema, simplemente no utilice el bloqueo de extensi\u00f3n durante toda la duraci\u00f3n del mapa de archivos. En general, esto es seguro porque realizamos un seguimiento de d\u00f3nde estamos cuando buscamos en el \u00e1rbol, por lo que si una extensi\u00f3n ordenada se actualiza en medio de nuestra llamada a fiemap, seguiremos emitiendo las extensiones correctas porque sabemos en qu\u00e9 desplazamiento est\u00e1bamos. antes. El \u00fanico lugar donde mantenemos el bloqueo es buscando en delalloc. Dado que las cosas de delalloc pueden cambiar durante la reescritura, queremos bloquear el rango de extensi\u00f3n para tener una vista consistente de delalloc en el momento en que verificamos si necesitamos configurar el indicador delalloc. Con este parche aplicado ya no nos estancamos con mi caso de prueba."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/89bca7fe6382d61e88c67a0b0e7bce315986fb8b", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/b0ad381fa7690244802aed119b478b4bdafc31dd", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/ded566b4637f1b6b4c9ba74e7d0b8493e93f19cf", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1543", "comment": "CVE-2024-35784 - The deadlock vulnerability in the Linux kernel's btrfs subsystem allows an attacker to create a deadlock by manipulating the extent locking and fiemap system calls. This technique is relevant as it allows an attacker to gain control over the system."}], "stix_bundle": {"type": "bundle", "id": "CVE-2024-35784-bundle", "description": "Structured Threat Information eXpression (STIX) 2.1 bundle for CVE-2024-35784", "objects": [{"type": "vulnerability", "id": "vulnerability-CVE-2024-35784", "description": "CVE-2024-35784 - Deadlock vulnerability in the Linux kernel's btrfs subsystem"}, {"type": "attack-pattern", "id": "attack-pattern-T1543", "description": "Deadlock vulnerability in the Linux kernel's btrfs subsystem"}, {"type": "course-of-action", "id": "course-of-action-mitigation-1", "description": "Do not use the extent lock for the entire duration of the fiemap system call", "related_sbo": "attack-pattern-T1543"}, {"type": "note", "id": "note-detection-1", "description": "Monitor system calls for suspicious EXTLOCK and FIEMAP activity", "related_sbo": "course-of-action-mitigation-1"}], " relationships": [{"type": "has_author", "relationship": "has_author", "object": "vulnerability-CVE-2024-35784", "id": "author- relationship-1"}, {"type": "uses_attack_pattern", "relationship": "uses_attack_pattern", "object": "course-of-action-mitigation-1", "attack_pattern": "attack-pattern-T1543", "id": "uses_attack_pattern-relationship-1"}]}, "technical_analysis": {"Introduction": "The CVE-2024-35784 is a deadlock vulnerability in the Linux kernel's btrfs subsystem.", "Impact and Scope": "The vulnerability allows an attacker to create a deadlock by manipulating the extent locking and fiemap system calls, which can potentially lead to a system crash or denial-of-service.", "Related MITRE ATT&CK Techniques": "T1543 - Deadlock and Denial of Service", "Technical Details": "The vulnerability exists in the btrfs subsystem of the Linux kernel, specifically in the extent locking and fiemap system calls.", "Detection": "Monitor system calls for suspicious EXTLOCK and FIEMAP activity.", "Mitigation": "Do not use the extent lock for the entire duration of the fiemap system call.", "Conclusion": "The CVE-2024-35784 is a serious vulnerability that can be exploited by attackers to create a deadlock and potentially lead to a system crash or denial-of-service."}, "executive_analysis": {"Overview": "The CVE-2024-35784 is a deadlock vulnerability in the Linux kernel's btrfs subsystem.", "Business Impact": "The vulnerability can potentially lead to system crashes, denial-of-service, and data loss.", "Technical Impact": "The vulnerability exists in the btrfs subsystem of the Linux kernel, which is used by many Linux distributions.", "Mitigation Strategies": "Implement mitigations such as not using the extent lock for the entire duration of the fiemap system call.", "Recommendations": "Recommendations include updating the Linux kernel to the latest version, applying patches, and monitoring system calls for suspicious activity.", "Conclusions": "The CVE-2024-35784 is a serious vulnerability that requires immediate attention and action to mitigate its effects."}}