{"id": "CVE-2024-37300", "sourceIdentifier": "security-advisories@github.com", "published": "2024-06-12T16:15:12.097", "lastModified": "2024-06-13T18:36:09.010", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "OAuthenticator is software that allows OAuth2 identity providers to be plugged in and used with JupyterHub. JupyterHub < 5.0, when used with `GlobusOAuthenticator`, could be configured to allow all users from a particular institution only. This worked fine prior to JupyterHub 5.0, because `allow_all` did not take precedence over `identity_provider`. Since JupyterHub 5.0, `allow_all` does take precedence over `identity_provider`. On a hub with the same config, now all users will be allowed to login, regardless of `identity_provider`. `identity_provider` will basically be ignored. This is a documented change in JupyterHub 5.0, but is likely to catch many users by surprise. OAuthenticator 16.3.1 fixes the issue with JupyterHub 5.0, and does not affect previous versions. As a workaround, do not upgrade to JupyterHub 5.0 when using `GlobusOAuthenticator` in the prior configuration."}, {"lang": "es", "value": "OAuthenticator es un software que permite conectar y utilizar proveedores de identidad OAuth2 con JupyterHub. JupyterHub &lt; 5.0, cuando se usa con `GlobusOAuthenticator`, se puede configurar para permitir solo a todos los usuarios de una instituci\u00f3n en particular. Esto funcion\u00f3 bien antes de JupyterHub 5.0, porque \"allow_all\" no ten\u00eda prioridad sobre \"identity_provider\". Desde JupyterHub 5.0, \"allow_all\" tiene prioridad sobre \"identity_provider\". En un centro con la misma configuraci\u00f3n, ahora todos los usuarios podr\u00e1n iniciar sesi\u00f3n, independientemente del `identity_provider`. B\u00e1sicamente, `identity_provider` ser\u00e1 ignorado. Este es un cambio documentado en JupyterHub 5.0, pero es probable que tome por sorpresa a muchos usuarios. OAuthenticator 16.3.1 soluciona el problema con JupyterHub 5.0 y no afecta a las versiones anteriores. Como workaround, no actualice a JupyterHub 5.0 cuando utilice `GlobusOAuthenticator` en la configuraci\u00f3n anterior."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.2}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-863"}]}], "references": [{"url": "https://github.com/jupyterhub/oauthenticator/commit/d1aea05fa89f2beae15ab0fa0b0d071030f79654", "source": "security-advisories@github.com"}, {"url": "https://github.com/jupyterhub/oauthenticator/security/advisories/GHSA-gprj-3p75-f996", "source": "security-advisories@github.com"}, {"url": "https://jupyterhub.readthedocs.io/en/stable/howto/upgrading-v5.html#authenticator-allow-all-and-allow-existing-users", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1078", "comment": "CVE-2024-37300 - JupyterHub OAuthenticator authentication bypass, use of GlobusOAuthenticator to allow all users to login, potentially allowing unauthorized access"}], "technical_analysis": {"Introduction": "JupyterHub OAuthenticator, a software that allows OAuth2 identity providers to be plugged in and used with JupyterHub, has a vulnerability that allows all users to login regardless of `identity_provider`. This vulnerability affects JupyterHub versions less than 5.0 and is mitigated with OAuthenticator 16.3.1.", "Impact and Scope": "The vulnerability has a CVSS score of 8.1 (HIGH) with a network attack vector, low complexity, and low privileges required. It allows for unauthorized access and has a high impact on confidentiality and integrity.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to 'Valid Accounts' technique T1078, 'Account Manipulation' technique T1107, and ' Authentication Bypass' technique T1101.", "Technical Details": "The vulnerability occurs when using GlobusOAuthenticator with JupyterHub versions less than 5.0, allowing all users to login regardless of `identity_provider`. This is due to `allow_all` taking precedence over `identity_provider` in JupyterHub 5.0.", "Detection": "Detection involves monitoring authentication logs for unauthorized login attempts and inspecting configurations for use of GlobusOAuthenticator and JupyterHub versions less than 5.0.", "Mitigation": "Mitigation involves updating to JupyterHub 5.0 or later, using OAuthenticator 16.3.1, or configuring JupyterHub to not use `GlobusOAuthenticator`.", "Conclusion": "The vulnerability is a serious issue and requires immediate attention. Implementing the above mitigation measures will help prevent unauthorized access and improve security."}, "executive_analysis": {"Overview": "A vulnerability in JupyterHub OAuthenticator allows all users to login regardless of `identity_provider`, potentially allowing unauthorized access.", "Business Impact": "The vulnerability has a high business impact, as it allows unauthorized access and could lead to data breaches or unauthorized system modifications.", "Technical Impact": "The vulnerability requires an update to JupyterHub 5.0 or later, or implementing alternative authentication methods.", "Mitigation Strategies": "Implementing the above mitigation measures is crucial to prevent unauthorized access and ensure compliance with security requirements.", "Recommendations": "Executives should prioritize addressing this vulnerability and ensure that all JupyterHub instances are updated to the latest version.", "Conclusions": "Immediate attention is required to mitigate this vulnerability and ensure the security of JupyterHub instances."}}