{"id": "CVE-2024-29105", "sourceIdentifier": "audit@patchstack.com", "published": "2024-03-19T16:15:14.120", "lastModified": "2024-03-19T16:33:58.680", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Timersys WP Popups allows Stored XSS.This issue affects WP Popups: from n/a through 2.1.5.5.\n\n"}, {"lang": "es", "value": "La vulnerabilidad de neutralizaci\u00f3n inadecuada de la entrada durante la generaci\u00f3n de p\u00e1ginas web ('Cross-site Scripting') en Timersys WP Popups permite almacenar XSS. Este problema afecta a WP Popups: desde n/a hasta 2.1.5.5."}], "metrics": {"cvssMetricV31": [{"source": "audit@patchstack.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 3.7}]}, "weaknesses": [{"source": "audit@patchstack.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://patchstack.com/database/vulnerability/wp-popups-lite/wordpress-wp-popups-wordpress-popup-builder-plugin-2-1-5-5-cross-site-scripting-xss-vulnerability?_s_id=cve", "source": "audit@patchstack.com"}], "techniques": [{"techniqueID": "T1059.007", "comment": "CVE-2024-29105 - Cross-site scripting (XSS) vulnerability allows an attacker to inject malicious scripts into a website, leading to various attacks. Defend against it by using Content Security Policy (CSP), validating all user input, and implementing a Web Application Firewall (WAF)."}, {"techniqueID": "T1190", "comment": "CVE-2024-29105 - Stored XSS vulnerability allows an attacker to inject malicious scripts into a website, leading to further attacks. Defend against it by using Output Encoding, Validating User Input, and Implementing a WAF."}, {"techniqueID": "T1062", "comment": "CVE-2024-29105 - Cross-site scripting (XSS) vulnerability allows an attacker to steal sensitive information. Defend against it by using Secure Sockets Layer (SSL)/Transport Layer Security (TLS), Validating User Input, and Implementing a WAF."}, {"techniqueID": "T1086", "comment": "CVE-2024-29105 - Stored XSS vulnerability allows an attacker to inject malicious scripts into a website, leading to various attacks. Defend against it by using Output Encoding, Validating User Input, and Implementing a WAF."}], "stix_bundle": {"type": "bundle", "spec_version": "2.1", "id": "CVE-2024-29105-STIX-2.1", "objects": [{"type": "vulnerability", "id": "CVE-2024-29105", "name": "CVE-2024-29105: Cross-site scriptin vulnertability in WP Popups", "description": "Cross-site scripting (XSS) vulnerability in WordPress WP Popups allows Stored XSS.", "objects": [{"type": "technique", "id": "T1059.007", "name": "Cross-site scripting (XSS) injection", "description": "Cross-site scripting (XSS) injection is a tactic used by attackers to inject malicious scripts into a website."}, {"type": "technique", "id": "T1190", "name": "Storing data leaked using third-party search functionality", "description": "Storing data leaked using third-party search functionality is a tactic used by attackers to store sensitive information."}, {"type": "technique", "id": "T1062", "name": "FTP and SSH", "description": "FTP and SSH is a tactic used by attackers to access sensitive information."}, {"type": "technique", "id": "T1086", "name": "Indirect command", "description": "Indirect command is a tactic used by attackers to inject malicious scripts into a website."}], "relationships": [{"type": "has-technique", "id": "has-T1059.007", "object_id": "CVE-2024-29105", "object": {"type": "technique", "id": "T1059.007"}}, {"type": "has-technique", "id": "has-T1190", "object_id": "CVE-2024-29105", "object": {"type": "technique", "id": "T1190"}}, {"type": "has-technique", "id": "has-T1062", "object_id": "CVE-2024-29105", "object": {"type": "technique", "id": "T1062"}}, {"type": "has-technique", "id": "has-T1086", "object_id": "CVE-2024-29105", "object": {"type": "technique", "id": "T1086"}}]}]}, "technical_analysis": {"Introduction": "Cross-site scripting (XSS) vulnerability in WordPress WP Popups allows Stored XSS.", "Impact and Scope": "The vulnerability allows an attacker to inject malicious scripts into a website, leading to various attacks. The CVSS score is 5.9 with a version of CVSS 3.1.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to T1059.007, T1190, T1062, and T1086.", "Technical Details": "The vulnerability is caused by improper neutralization of input during web page generation.", "Detection": "Detection methods include analyzing web traffic for suspicious script injections and monitoring user input for malicious code.", "Mitigation": "Mitigation strategies include implementing a Content Security Policy (CSP), validating all user input, and implementing a Web Application Firewall (WAF).", "Conclusion": "The vulnerability is a serious threat to web applications and should be addressed promptly."}, "executive_analysis": {"Overview": "The vulnerability in WordPress WP Popups allows an attacker to inject malicious scripts into a website, leading to various attacks.", "Business Impact": "The vulnerability can lead to loss of sensitive information, financial loss, and damage to reputation.", "Technical Impact": "The vulnerability can lead to unauthorized access to sensitive information, data breaches, and disruption of business operations.", "Mitigation Strategies": "Mitigation strategies include implementing a Content Security Policy (CSP), validating all user input, and implementing a Web Application Firewall (WAF).", "Recommendations": "Recommendations include patching the vulnerability, validating all user input, and implementing a Web Application Firewall (WAF).", "Conclusions": "The vulnerability is a serious threat to web applications and should be addressed promptly."}}