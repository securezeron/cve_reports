{"id": "CVE-2024-1787", "sourceIdentifier": "security@wordfence.com", "published": "2024-03-20T02:15:08.323", "lastModified": "2024-03-20T13:00:16.367", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Contests by Rewards Fuel plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'update_rewards_fuel_api_key' parameter in all versions up to, and including, 2.0.64 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3051990%40contests-from-rewards-fuel&new=3051990%40contests-from-rewards-fuel&sfp_email=&sfph_mail=", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/9eeec949-e440-4df3-8c26-db92498cada3?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-1787 - The Contests by Rewards Fuel plugin for WordPress is vulnerable to Stored Cross-Site Scripting, which is a common technique used by attackers to inject malicious scripts into web applications, allowing them to steal sensitive information or take control of the system."}, {"techniqueID": "T1078", "comment": "CVE-2024-1787 - Insufficient input sanitization and output escaping in the 'update_rewards_fuel_api_key' parameter allows attackers to inject arbitrary web scripts, which can be used to conduct further attacks."}, {"techniqueID": "T1133", "comment": "CVE-2024-1787 - The vulnerability can be exploited by authenticated attackers with contributor-level access and above, which is a common technique used by attackers to gain privileges and conduct further attacks."}], "technical_analysis": {"Introduction": "The Contests by Rewards Fuel plugin for WordPress is vulnerable to Stored Cross-Site Scripting due to insufficient input sanitization and output escaping.", "Impact and Scope": "The vulnerability affects all versions of the plugin up to and including 2.0.64, and is exploitable by authenticated attackers with contributor-level access and above.", "Related MITRE ATT&CK Techniques": "T1059, T1078, T1133", "Technical Details": "The vulnerability occurs due to the lack of proper input validation and output encoding in the 'update_rewards_fuel_api_key' parameter.", "Detection": "Detection is challenging due to the lack of obvious indicators; however, monitoring for unusual traffic patterns and unauthorized access to sensitive data can be effective.", "Mitigation": "Applying the latest patch or updating to a safer version of the plugin, restrictions on editor access, and implementing additional security measures such as web application firewalls.", "Conclusion": "The vulnerability is a critical issue that requires prompt attention to prevent further exploitation."}, "executive_analysis": {"Overview": "The Contests by Rewards Fuel plugin for WordPress has a critical vulnerability that allows attackers to inject malicious scripts, compromising the confidentiality, integrity, and availability of the system.", "Business Impact": "The vulnerability has the potential to result in significant financial losses through unauthorized access to sensitive data, theft of intellectual property, and reputational damage.", "Technical Impact": "The vulnerability has technical implications for the security of the system, including the potential for further exploitation and spread of malware.", "Mitigation Strategies": "Implementing a patch management program, restricting editor access, and monitoring for unusual traffic patterns.", "Recommendations": "Executives should prioritize the patching of vulnerabilities, implement additional security measures, and regularly monitor for signs of compromise.", "Conclusions": "The vulnerability highlights the importance of regular software updates, implementation of additional security measures, and proactive monitoring to prevent further exploitation."}}