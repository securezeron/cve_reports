{"id": "CVE-2023-52836", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-05-21T16:15:21.090", "lastModified": "2024-05-21T16:53:56.550", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nlocking/ww_mutex/test: Fix potential workqueue corruption\n\nIn some cases running with the test-ww_mutex code, I was seeing\nodd behavior where sometimes it seemed flush_workqueue was\nreturning before all the work threads were finished.\n\nOften this would cause strange crashes as the mutexes would be\nfreed while they were being used.\n\nLooking at the code, there is a lifetime problem as the\ncontrolling thread that spawns the work allocates the\n\"struct stress\" structures that are passed to the workqueue\nthreads. Then when the workqueue threads are finished,\nthey free the stress struct that was passed to them.\n\nUnfortunately the workqueue work_struct node is in the stress\nstruct. Which means the work_struct is freed before the work\nthread returns and while flush_workqueue is waiting.\n\nIt seems like a better idea to have the controlling thread\nboth allocate and free the stress structures, so that we can\nbe sure we don't corrupt the workqueue by freeing the structure\nprematurely.\n\nSo this patch reworks the test to do so, and with this change\nI no longer see the early flush_workqueue returns."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: lock/ww_mutex/test: soluciona una posible corrupci\u00f3n de la cola de trabajo. En algunos casos, al ejecutar el c\u00f3digo test-ww_mutex, ve\u00eda un comportamiento extra\u00f1o en el que a veces parec\u00eda que flush_workqueue regresaba antes que todos los subprocesos de trabajo. hemos terminado. A menudo, esto causar\u00eda fallas extra\u00f1as ya que los mutex se liberar\u00edan mientras se estaban usando. Al observar el c\u00f3digo, hay un problema de duraci\u00f3n, ya que el subproceso de control que genera el trabajo asigna las estructuras de \"estr\u00e9s de estructura\" que se pasan a los subprocesos de la cola de trabajo. Luego, cuando los subprocesos de la cola de trabajo finalizan, liberan la estructura de tensi\u00f3n que se les pas\u00f3. Desafortunadamente, el nodo work_struct de la cola de trabajo est\u00e1 en la estructura de estr\u00e9s. Lo que significa que work_struct se libera antes de que regrese el hilo de trabajo y mientras descarga_workqueue est\u00e1 esperando. Parece una mejor idea que el subproceso de control asigne y libere las estructuras de tensi\u00f3n, de modo que podamos estar seguros de no corromper la cola de trabajo al liberar la estructura prematuramente. Entonces, este parche reelabora la prueba para hacerlo, y con este cambio ya no veo los primeros retornos de Flush_workqueue."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/304a2c4aad0fff887ce493e4197bf9cbaf394479", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/9ed2d68b3925145f5f51c46559484881d6082f75", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/bccdd808902f8c677317cec47c306e42b93b849e", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/c56df79d68677cf062da1b6e3b33e74299a92dfc", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/d4d37c9e6a4dbcca958dabd99216550525c7e389", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/d8267cabbe1bed15ccf8b0e684c528bf8eeef715", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/dcd85e3c929368076a7592b27f541e0da8b427f5", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/e36407713163363e65566e7af0abe207d5f59a0c", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/e89d0ed45a419c485bae999426ecf92697cbdda3", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T11", "comment": "CVE-2023-52836 - Use of workqueue corruption exploit to execute arbitrary code. It is a local privilege escalation vulnerability in the Linux kernel that could be exploited to gain elevated privileges."}, {"techniqueID": "T16", "comment": "CVE-2023-52836 - Use of workqueue corruption to execute arbitrary code. The vulnerability allows local attackers to corrupt the workqueue, which could be used to execute arbitrary code with elevated privileges."}, {"techniqueID": "T37", "comment": "CVE-2023-52836 - Use of workqueue corruption exploit to crash the system. The vulnerability could be used by attackers to crash the system, which could lead to a denial-of-service condition."}, {"techniqueID": "T1047", "comment": "CVE-2023-52836 - Use of workqueue corruption exploit to execute arbitrary code. The vulnerability could be used by attackers to execute arbitrary code with elevated privileges, allowing for a wide range of malicious activities."}], "stix_bundle": {"@stix_bundle": "Android_Malware_Intelligence", "title": "Android Malware Intelligence", "created_by": "Example", "created": "2022-03-21T12:00:00.000Z", "modified": "2022-03-21T12:00:00.000Z", "id": "example:Android_Malware_Intelligence", "type": "stix_bundle", "description": "Android Malware Intelligence Bundle", "objects": [{"@object": "vulnerability", "id": "example:Software_Vulnerability_1", "type": "software", "description": "Workqueue corruption vulnerability in the Linux kernel.", "score": 8.0, "attack_vector": "LOCAL", "attack_complexity": "LOW", "privileges_required": "HIGH", "sensitivity": "HIGH", "relation": "part_of", "target_id": "example:Android_Malware_Intelligence"}, {"@object": "course_of_action", "id": "example:Security_Course_of_Action_1", "type": "course_of_action", "description": "Apply the latest kernel patches to prevent workqueue corruption.", "relation": "mitigates", "target_id": "example:Software_Vulnerability_1"}]}, "technical_analysis": {"Introduction": "The CVE-2023-52836 vulnerability is a local privilege escalation vulnerability in the Linux kernel.", "Impact and Scope": "The vulnerability has a high score of 8.0 and an attack vector of LOCAL.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques are T11, T16, T37, and T1047.", "Technical Details": "The vulnerability is caused by the use of workqueue corruption, which can be exploited to gain elevated privileges.", "Detection": "The vulnerability can be detected by monitoring system logs for signs of workqueue corruption.", "Mitigation": "Applying the latest kernel patches can help prevent workqueue corruption and mitigate the vulnerability.", "Conclusion": "The CVE-2023-52836 vulnerability is a critical local privilege escalation vulnerability in the Linux kernel."}, "executive_analysis": {"Overview": "The CVE-2023-52836 vulnerability is a critical local privilege escalation vulnerability in the Linux kernel.", "Business Impact": "The vulnerability could allow attackers to gain elevated privileges, which could lead to a range of malicious activities.", "Technical Impact": "The vulnerability is caused by the use of workqueue corruption, which can be exploited to gain elevated privileges.", "Mitigation Strategies": "Applying the latest kernel patches is a recommended mitigation strategy to prevent workqueue corruption.", "Recommendations": "Executive approval is required to apply the latest kernel patches to prevent workqueue corruption.", "Conclusions": "The CVE-2023-52836 vulnerability is a critical vulnerability that requires immediate attention and mitigation."}}