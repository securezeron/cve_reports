{"id": "CVE-2024-1872", "sourceIdentifier": "security@wordfence.com", "published": "2024-03-29T07:15:43.213", "lastModified": "2024-03-29T12:45:02.937", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Button plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 1.1.28 via deserialization of untrusted input in the button_shortcode function. This makes it possible for authenticated attackers, with contributor-level access and above, to inject a PHP Object. No known POP chain is present in the vulnerable plugin. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code."}, {"lang": "es", "value": "El complemento Button de WordPress es vulnerable a la inyecci\u00f3n de objetos PHP en todas las versiones hasta la 1.1.28 incluida a trav\u00e9s de la deserializaci\u00f3n de entradas que no son de confianza en la funci\u00f3n button_shortcode. Esto hace posible que atacantes autenticados, con acceso de nivel de colaborador y superior, inyecten un objeto PHP. No hay ninguna cadena POP conocida presente en el complemento vulnerable. Si hay una cadena POP presente a trav\u00e9s de un complemento o tema adicional instalado en el sistema de destino, podr\u00eda permitir al atacante eliminar archivos arbitrarios, recuperar datos confidenciales o ejecutar c\u00f3digo."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}]}, "references": [{"url": "https://plugins.trac.wordpress.org/browser/button/trunk/inc/shortcode.php#L22", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d3d26aa4-8bea-48e8-ad14-513690a31831?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-1872 - PHP Object Injection vulnerability allows authenticated attackers to inject a PHP object, which can be used to delete arbitrary files, retrieve sensitive data, or execute code."}, {"techniqueID": "T1190", "comment": "CVE-2024-1872 - Deserialization of untrusted input in the button_shortcode function allows attackers to inject a PHP object, potentially leading to arbitrary code execution."}, {"techniqueID": "T1082", "comment": "CVE-2024-1872 - Unauthorized PHP object injection in the Button plugin for WordPress allows attackers to gain unauthorized access and potentially execute arbitrary code."}, {"techniqueID": "T1210", "comment": "CVE-2024-1872 - Insufficient input validation in the button_shortcode function allows attackers to inject malicious code, leading to arbitrary code execution."}, {"techniqueID": "T1364", "comment": "CVE-2024-1872 - Use After Free vulnerability in the Button plugin for WordPress allows attackers to inject a PHP object, potentially leading to arbitrary code execution."}, {"techniqueID": "T1249", "comment": "CVE-2024-1872 - PHP object injection vulnerability in the Button plugin for WordPress allows attackers to inject a PHP object, potentially leading to arbitrary code execution."}, {"techniqueID": "T1204", "comment": "CVE-2024-1872 - Data Staged vulnerability in the Button plugin for WordPress allows attackers to inject a PHP object, potentially leading to arbitrary code execution."}, {"techniqueID": "T1088", "comment": "CVE-2024-1872 - System Services vulnerability in the Button plugin for WordPress allows attackers to inject a PHP object, potentially leading to arbitrary code execution."}], "stix_bundle": {"@type": "stix:Bundle", "id": "vulnerability_bundle1", "name": "CVE-2024-1872 Mitre ATT&CK and D3FEND Bundle", "description": "Mitre ATT&CK and D3FEND bundle for CVE-2024-1872 PHP Object Injection vulnerability", "objects": [{"@type": "stix:Vulnerability", "id": "vulnerability:CVE-2024-1872", "name": "CVE-2024-1872", "description": "PHP Object Injection vulnerability in the Button plugin for WordPress", "identifiers": [{"scheme": "CVE", "value": "CVE-2024-1872"}], "objects": [{"@type": "stix:Campaign", "id": "campaign:campaign1", "name": "Button Plugin Campaign", "description": "Campaign exploiting CVE-2024-1872 PHP Object Injection vulnerability", "objects": [{"@type": "stix:AttackPattern", "id": "attack_pattern:T1059", "name": "T1059", "description": "PHP Object Injection", "relationships": [{"label": "uses", "objectRef": "stix:Vulnerability:CVE-2024-1872"}]}, {"@type": "stix:AttackPattern", "id": "attack_pattern:T1190", "name": "T1190", "description": "Deserialization of Untrusted Data", "relationships": [{"label": "uses", "objectRef": "stix:Vulnerability:CVE-2024-1872"}]}, {"@type": "stix:CourseOfAction", "id": "course_of_action:defend_by_updating_plugin", "name": "Defend by Updating the Plugin", "description": "Update the Button plugin to a version that is not vulnerable to the PHP Object Injection vulnerability", "relationships": [{"label": "mitigates", "objectRef": "stix:AttackPattern:T1059"}]}]}]}]}, "technical_analysis": {"Introduction": "The CVE-2024-1872 PHP Object Injection vulnerability in the Button plugin for WordPress allows authenticated attackers to inject a PHP object, which can be used to delete arbitrary files, retrieve sensitive data, or execute code.", "Impact and Scope": "The vulnerability has a CVSS score of 8.8 and an attack complexity of LOW. It affects all versions of the Button plugin up to and including 1.1.28, and requires contributor-level access and above.", "Related MITRE ATT&CK Techniques": "T1059, T1190, T1082, T1210, T1364, T1249, T1204, T1088", "Technical Details": "The vulnerability is caused by the deserialization of untrusted input in the button_shortcode function, which allows attackers to inject a PHP object.", "Detection": "Detection methods include monitoring for suspicious API calls and analyzing system logs for signs of PHP object injection.", "Mitigation": "Mitigation strategies include updating the Button plugin to a version that is not vulnerable to the PHP Object Injection vulnerability, disabling unknown PHP objects, and restricting system access to authorized users.", "Conclusion": "In conclusion, the CVE-2024-1872 PHP Object Injection vulnerability in the Button plugin for WordPress is a serious threat that requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "The CVE-2024-1872 PHP Object Injection vulnerability in the Button plugin for WordPress is a critical security threat that can compromise the confidentiality, integrity, and availability of sensitive data.", "Business Impact": "The vulnerability can result in the unauthorized deletion of files, retrieval of sensitive data, or execution of arbitrary code, which can have significant business implications.", "Technical Impact": "The vulnerability affects the security and integrity of the Button plugin and potentially other system components, making it a high-priority issue for technical teams.", "Mitigation Strategies": "Mitigation strategies should include updates to the Button plugin, system hardening, and employee education.", "Recommendations": "Recommendations for executives include prioritizing security, investing in regular security audits, and providing adequate training for employees.", "Conclusions": "In conclusion, the CVE-2024-1872 PHP Object Injection vulnerability in the Button plugin for WordPress requires immediate attention and mitigation to ensure the security and integrity of sensitive data."}}