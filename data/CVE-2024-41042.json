{"id": "CVE-2024-41042", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-07-29T15:15:12.647", "lastModified": "2024-08-19T05:15:06.733", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: prefer nft_chain_validate\n\nnft_chain_validate already performs loop detection because a cycle will\nresult in a call stack overflow (ctx->level >= NFT_JUMP_STACK_SIZE).\n\nIt also follows maps via ->validate callback in nft_lookup, so there\nappears no reason to iterate the maps again.\n\nnf_tables_check_loops() and all its helper functions can be removed.\nThis improves ruleset load time significantly, from 23s down to 12s.\n\nThis also fixes a crash bug. Old loop detection code can result in\nunbounded recursion:\n\nBUG: TASK stack guard page was hit at ....\nOops: stack guard page: 0000 [#1] PREEMPT SMP KASAN\nCPU: 4 PID: 1539 Comm: nft Not tainted 6.10.0-rc5+ #1\n[..]\n\nwith a suitable ruleset during validation of register stores.\n\nI can't see any actual reason to attempt to check for this from\nnft_validate_register_store(), at this point the transaction is still in\nprogress, so we don't have a full picture of the rule graph.\n\nFor nf-next it might make sense to either remove it or make this depend\non table->validate_state in case we could catch an error earlier\n(for improved error reporting to userspace)."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: netfilter: nf_tables: prefiere nft_chain_validate nft_chain_validate ya realiza detecci\u00f3n de bucle porque un ciclo resultar\u00e1 en un desbordamiento de la pila de llamadas (ctx-&gt;level &gt;= NFT_JUMP_STACK_SIZE). Tambi\u00e9n sigue los mapas a trav\u00e9s de -&gt;validate callback en nft_lookup, por lo que no parece haber raz\u00f3n para iterar los mapas nuevamente. nf_tables_check_loops() y todas sus funciones auxiliares se pueden eliminar. Esto mejora significativamente el tiempo de carga del conjunto de reglas, de 23 a 12 segundos. Esto tambi\u00e9n corrige un error de bloqueo. El c\u00f3digo de detecci\u00f3n de bucle antiguo puede provocar una recursividad ilimitada: ERROR: La p\u00e1gina de protecci\u00f3n de pila de TAREA fue visitada en... Vaya: p\u00e1gina de protecci\u00f3n de pila: 0000 [#1] PREEMPT SMP KASAN CPU: 4 PID: 1539 Comm: nft No contaminado 6.10. 0-rc5+ #1 [..] con un conjunto de reglas adecuado durante la validaci\u00f3n de los almacenes de registros. No veo ninguna raz\u00f3n real para intentar verificar esto desde nft_validate_register_store(); en este punto, la transacci\u00f3n a\u00fan est\u00e1 en progreso, por lo que no tenemos una imagen completa del gr\u00e1fico de reglas. Para nf-next, podr\u00eda tener sentido eliminarlo o hacer que esto dependa de table-&gt;validate_state en caso de que podamos detectar un error antes (para mejorar el informe de errores al espacio de usuario)."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/1947e4c3346faa8ac7e343652c0fd3b3e394202f", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/31c35f9f89ef585f1edb53e17ac73a0ca4a9712b", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/717c91c6ed73e248de6a15bc53adefb81446c9d0", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/8246b7466c8da49d0d9e85e26cbd69dd6d3e3d1e", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/9df785aeb7dcc8efd1d4110bb27d26005298ebae", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/b6b6e430470e1c3c5513311cb35a15a205595abe", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/cd4348e0a50286282c314ad6d2b0740e7c812c24", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/cff3bd012a9512ac5ed858d38e6ed65f6391008c", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-41042 - The vulnerability in the Linux kernel's nf_tables module allows an attacker to cause a denial-of-service (DoS) by sending a specially crafted network packet. This can be mitigated by implementing rate limiting on incoming network traffic."}, {"techniqueID": "T1199", "comment": "CVE-2024-41042 - The vulnerability in the Linux kernel's nf_tables module allows an attacker to crash the system by sending a specially crafted network packet. This can be mitigated by implementing a crash dump mechanism and configuring the system to automatically restart after a crash."}, {"techniqueID": "T1005", "comment": "CVE-2024-41042 - The vulnerability in the Linux kernel's nf_tables module allows an attacker to gain elevated privileges by exploiting a race condition in the module's implementation. This can be mitigated by implementing a race condition detection mechanism and configuring the system to automatically restart after a detection."}], "technical_analysis": {"Introduction": "CVE-2024-41042 is a denial-of-service vulnerability in the Linux kernel's nf_tables module that allows an attacker to cause a denial-of-service (DoS) by sending a specially crafted network packet.", "Impact and Scope": "The vulnerability affects the Linux kernel version 6.10.0-rc5+, and the CVSS score is 8.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H).", "Related MITRE ATT&CK Techniques": "The techniques related to this vulnerability are T1190, T1199, and T1005.", "Technical Details": "The vulnerability occurs due to a race condition in the nf_tables module's implementation, which allows an attacker to send a specially crafted network packet that causes the system to crash or become unresponsive.", "Detection": "The vulnerability can be detected by monitoring system logs for crashes or unexpected restarts, and by implementing a rate limiting mechanism to detect and prevent unusual network traffic patterns.", "Mitigation": "The vulnerability can be mitigated by implementing rate limiting on incoming network traffic, configuring the system to automatically restart after a crash, and implementing a crash dump mechanism to aid in debugging and analysis.", "Conclusion": "CVE-2024-41042 is a denial-of-service vulnerability in the Linux kernel's nf_tables module that can be mitigated by implementing rate limiting on incoming network traffic and configuring the system to automatically restart after a crash."}, "executive_analysis": {"Overview": "CVE-2024-41042 is a denial-of-service vulnerability in the Linux kernel's nf_tables module that allows an attacker to cause a denial-of-service (DoS) by sending a specially crafted network packet.", "Business Impact": "The vulnerability has a significant business impact, as it can cause a denial-of-service (DoS) and disrupt business operations.", "Technical Impact": "The vulnerability has a significant technical impact, as it can cause a denial-of-service (DoS) and compromise system security.", "Mitigation Strategies": "Mitigation strategies include implementing rate limiting on incoming network traffic, configuring the system to automatically restart after a crash, and implementing a crash dump mechanism to aid in debugging and analysis.", "Recommendations": "We recommend that system administrators implement the mitigation strategies outlined above to prevent and detect the vulnerability.", "Conclusions": "CVE-2024-41042 is a denial-of-service vulnerability in the Linux kernel's nf_tables module that requires immediate attention and mitigation."}}