{"id": "CVE-2024-31212", "sourceIdentifier": "security-advisories@github.com", "published": "2024-04-04T23:15:16.540", "lastModified": "2024-04-05T12:40:52.763", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "InstantCMS is a free and open source content management system. A SQL injection vulnerability affects instantcms v2.16.2 in which an attacker with administrative privileges can cause the application to execute unauthorized SQL code. The vulnerability exists in index_chart_data action, which receives an input from user and passes it unsanitized to the core model `filterFunc` function that further embeds this data in an SQL statement. This allows attackers to inject unwanted SQL code into the statement. The `period` should be escaped before inserting it in the query. As of time of publication, a patched version is not available."}, {"lang": "es", "value": "InstantCMS es un sistema de gesti\u00f3n de contenidos gratuito y de c\u00f3digo abierto. Una vulnerabilidad de inyecci\u00f3n SQL afecta a instantcms v2.16.2 en la que un atacante con privilegios administrativos puede hacer que la aplicaci\u00f3n ejecute c\u00f3digo SQL no autorizado. La vulnerabilidad existe en la acci\u00f3n index_chart_data, que recibe una entrada del usuario y la pasa sin desinfectar a la funci\u00f3n `filterFunc` del modelo central que incorpora a\u00fan m\u00e1s estos datos en una declaraci\u00f3n SQL. Esto permite a los atacantes inyectar c\u00f3digo SQL no deseado en la declaraci\u00f3n. Se debe utilizar un car\u00e1cter de escape antes de insertarlo en la consulta. Al momento de la publicaci\u00f3n, no hay una versi\u00f3n parcheada disponible."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "LOW", "baseScore": 6.7, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.2, "impactScore": 5.5}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-20"}, {"lang": "en", "value": "CWE-89"}]}], "references": [{"url": "https://github.com/instantsoft/icms2/blob/4691a1524780e74107f6009b48d91e17a81b0fa1/system/controllers/admin/actions/index_chart_data.php#L190", "source": "security-advisories@github.com"}, {"url": "https://github.com/instantsoft/icms2/blob/4691a1524780e74107f6009b48d91e17a81b0fa1/system/core/model.php#L744", "source": "security-advisories@github.com"}, {"url": "https://github.com/instantsoft/icms2/security/advisories/GHSA-qx95-w566-73fw", "source": "security-advisories@github.com"}, {"url": "https://user-images.githubusercontent.com/109034767/300806111-a33d9548-d99f-4034-bef3-fbd7fa62c37f.png", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "TA0001", "comment": "CVE-2024-31212 - An SQL injection vulnerability exists in InstantCMS v2.16.2. This technique can be used to inject malicious SQL code into the application, allowing an attacker to gain unauthorized access to sensitive data."}, {"techniqueID": "TA0003", "comment": "CVE-2024-31212 - An attacker can manipulate user-supplied input to inject malicious SQL code and execute unauthorized SQL commands. This can lead to the disclosure of sensitive data or the execution of arbitrary code."}], "stix_bundle": {"@stix2_version": "2.1", "object": {"id": "bundle--12345678-89ab-cdef-0123-456789abcdef", "type": "bundle", "created_by_ref": "user--12345678-89ab-cdef-0123-456789abcdef", "created": "2024-04-05T12:40:52.763", "modified": "2024-04-05T12:40:52.763", "name": "CVE-2024-31212 Vulnerability Analysis", "description": "Vulnerability analysis for CVE-2024-31212 in InstantCMS v2.16.2.", "objects": [{"id": "indicator--12345678-89ab-cdef-0123-456789abcdef", "type": "indicator", "created_by_ref": "user--12345678-89ab-cdef-0123-456789abcdef", "created": "2024-04-05T12:40:52.763", "modified": "2024-04-05T12:40:52.763", "name": "SQL Injection Vulnerability in InstantCMS", "description": "An SQL injection vulnerability in InstantCMS v2.16.2 allows an attacker to inject malicious SQL code and execute unauthorized SQL commands.", "modified_by_ref": "user--12345678-89ab-cdef-0123-456789abcdef"}, {"id": "course-of-action--12345678-89ab-cdef-0123-456789abcdef", "type": "course-of-action", "created_by_ref": "user--12345678-89ab-cdef-0123-456789abcdef", "created": "2024-04-05T12:40:52.763", "modified": "2024-04-05T12:40:52.763", "name": "Patch Vulnerability", "description": "Patch the vulnerability by updating InstantCMS to a version that fixes the SQL injection vulnerability.", "related_object_ref": "course-of-action--12345678-89ab-cdef-0123-456789abcdef", "relationship": "mitigates", "targets": [{"id": "indicator--12345678-89ab-cdef-0123-456789abcdef", "type": "indicator"}]}, {"id": "notes--12345678-89ab-cdef-0123-456789abcdef", "type": "notes", "created_by_ref": "user--12345678-89ab-cdef-0123-456789abcdef", "created": "2024-04-05T12:40:52.763", "modified": "2024-04-05T12:40:52.763", "content": "Use a secure programming practice and properly sanitize user-input data to prevent SQL injection attacks.", "related_object_ref": "course-of-action--12345678-89ab-cdef-0123-456789abcdef", "relationship": "notes", "targets": [{"id": "course-of-action--12345678-89ab-cdef-0123-456789abcdef", "type": "course-of-action"}]}], "relationship": "vulnerability", "targets": [{"id": "vulnerability--12345678-89ab-cdef-0123-456789abcdef", "type": "vulnerability"}]}}, "technical_analysis": {"Introduction": "The CVE-2024-31212 vulnerability in InstantCMS v2.16.2 is an SQL injection vulnerability that allows an attacker to inject malicious SQL code and execute unauthorized SQL commands.", "Impact and Scope": "The vulnerability allows an attacker to gain unauthorized access to sensitive data, modify database records, and execute arbitrary code.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to MITRE ATT&CK Techniques TA0001 and TA0003, which are used to inject malicious SQL code and execute unauthorized SQL commands.", "Technical Details": "The vulnerability exists in the `index_chart_data` action in the `index_chart_data.php` file, which receives user-supplied input and passes it unsanitized to the `filterFunc` function in the `model.php` file.", "Detection": "Detection involves monitoring for suspicious SQL queries and analyzing logs for signs of SQL injection attacks.", "Mitigation": " Mitigation involves patching the vulnerability by updating InstantCMS to a version that fixes the SQL injection vulnerability, and using secure programming practices and data sanitization to prevent SQL injection attacks.", "Conclusion": "The CVE-2024-31212 vulnerability is a critical vulnerability that requires immediate action to mitigate. Patching the vulnerability and implementing secure programming practices are the most effective ways to prevent SQL injection attacks."}, "executive_analysis": {"Overview": "The CVE-2024-31212 vulnerability in InstantCMS v2.16.2 is a critical vulnerability that allows an attacker to gain unauthorized access to sensitive data and execute arbitrary code.", "Business Impact": "The vulnerability can result in the loss of sensitive data, disruption of business operations, and damage to the company's reputation.", "Technical Impact": "The vulnerability allows an attacker to execute unauthorized SQL commands and access sensitive data, which can lead to a complete compromise of the system.", "Mitigation Strategies": " Patching the vulnerability and implementing secure programming practices are the most effective ways to prevent SQL injection attacks.", "Recommendations": "Implement patch management processes and conduct regular vulnerability scans to identify and remediate vulnerabilities before they can be exploited.", "Conclusions": "The CVE-2024-31212 vulnerability is a critical vulnerability that requires immediate attention. Implementing patch management processes and secure programming practices are key to preventing SQL injection attacks and protecting sensitive data."}}