{"id": "CVE-2024-2967", "sourceIdentifier": "security@wordfence.com", "published": "2024-05-02T17:15:21.117", "lastModified": "2024-05-02T18:00:37.360", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Guest posting / Frontend Posting wordpress plugin \u2013 WP Front User Submit / Front Editor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via form settings in all versions up to, and including, 4.4.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled."}, {"lang": "es", "value": "El complemento Guest posting / Frontend Posting wordpress plugin \u2013 WP Front User Submit / Front Editor para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s de la configuraci\u00f3n del formulario en todas las versiones hasta la 4.4.1 incluida debido a una sanitizaci\u00f3n de entrada y un escape de salida insuficientes. Esto hace posible que atacantes autenticados, con permisos de nivel de administrador y superiores, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada. Esto solo afecta a las instalaciones multisitio y a las instalaciones en las que se ha deshabilitado unfiltered_html."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.3, "impactScore": 2.7}]}, "references": [{"url": "https://wordpress.org/plugins/front-editor/", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/82eb759f-e8d5-40c6-998f-f6981d9d6644?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1059.007", "comment": "CVE-2024-2967 - This technique demonstrates how an attacker can leverage a stored XSS vulnerability to inject malicious scripts, as seen in this WordPress plugin vulnerability."}, {"techniqueID": "T1190", "comment": "CVE-2024-2967 - This technique shows how an attacker can use a legitimate authentication mechanism to gain access to the vulnerable application, as demonstrated in this plugin vulnerability."}, {"techniqueID": "T1027", "comment": "CVE-2024-2967 - This technique highlights the importance of input sanitization and output escaping in preventing a stored XSS vulnerability, as demonstrated in this plugin vulnerability."}], "stix_bundle": {"@schema": "https://stix.io/XMLSchema", "objects": [{"@type": "vulnerability", "@id": "vulnerability-CVE-2024-2967", "name": "CVE-2024-2967 - Stored Cross-Site Scripting in WordPress Plugin", "description": "The Guest posting / Frontend Posting wordpress plugin \u2013 WP Front User Submit / Front Editor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via form settings in all versions up to, and including, 4.4.1 due to insufficient input sanitization and output escaping.", "references": [{"@type": "reference", "source": "security@wordfence.com", "url": "https://wordpress.org/plugins/front-editor/"}, {"@type": "reference", "source": "security@wordfence.com", "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/82eb759f-e8d5-40c6-998f-f6981d9d6644?source=cve"}], "related_components": [{"@type": "related_component", "relationship": "isaffectedby", "component": {"@type": "software_system", "@id": "software-system-wordpress", "name": "WordPress"}}, {"@type": "related_component", "relationship": "isaffectedby", "component": {"@type": "software_system", "@id": "software-system-wordpress-plugin-guest-posting", "name": "Guest Posting / Frontend Posting WordPress Plugin"}}]}, {"@type": "course_of_action", "@id": "course-of-action-CVE-2024-2967-1", "name": "Apply the latest patch", "description": "Apply the latest patch for the vulnerable WordPress plugin to mitigate this vulnerability.", "mitigates": [{"@type": "mitigates", "relationship": "mitigates", "technique": {"@type": "technique", "@id": "T1040"}}]}, {"@type": "course_of_action", "@id": "course-of-action-CVE-2024-2967-2", "name": "Disable unfiltered_html", "description": "Disable unfiltered_html in WordPress to prevent the injection of malicious scripts.", "mitigates": [{"@type": "mitigates", "relationship": "mitigates", "technique": {"@type": "technique", "@id": "T1027"}}]}], "relationships": [{"@type": "relationship", "source": {"@type": "vulnerability", "@id": "vulnerability-CVE-2024-2967"}, "target": {"@type": "course_of_action", "@id": "course-of-action-CVE-2024-2967-1"}, "relationship": "mitigates"}, {"@type": "relationship", "source": {"@type": "vulnerability", "@id": "vulnerability-CVE-2024-2967"}, "target": {"@type": "course_of_action", "@id": "course-of-action-CVE-2024-2967-2"}, "relationship": "mitigates"}]}, "technical_analysis": {"Introduction": "The CVE-2024-2967 vulnerability is a stored cross-site scripting (XSS) vulnerability in the Guest posting / Frontend Posting WordPress plugin, which allows attackers to inject malicious scripts into vulnerable pages.", "Impact and Scope": "The impact of this vulnerability is moderate, with a CVSS score of 4.4. It affects multi-site installations and installations where unfiltered_html has been disabled, and it requires administrator-level permissions to exploit.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques are T1059.007, T1190, and T1027.", "Technical Details": "The vulnerability is caused by insufficient input sanitization and output escaping in the plugin's form settings. Attackers can inject arbitrary web scripts into pages, which will execute whenever a user accesses the injected page.", "Detection": "Detection for this vulnerability involves monitoring for suspicious JavaScript code execution in vulnerable pages and analyzing system logs for signs of exploitation.", "Mitigation": "Mitigation strategies include applying the latest patch, disabling unfiltered_html, and monitoring for suspicious JavaScript code execution.", "Conclusion": "In conclusion, the CVE-2024-2967 vulnerability is a moderate-risk vulnerability that can be mitigated through a combination of.patching and disabling unfiltered_html."}, "executive_analysis": {"Overview": "The CVE-2024-2967 vulnerability is a stored XSS vulnerability in the Guest posting / Frontend Posting WordPress plugin that allows attackers to inject malicious scripts into vulnerable pages.", "Business Impact": "The business impact of this vulnerability is moderate, with potential for data breaches and reputation damage.", "Technical Impact": "The technical impact of this vulnerability is moderate, with potential for exploitation by attackers with administrator-level permissions.", "Mitigation Strategies": "Mitigation strategies for this vulnerability include applying the latest patch, disabling unfiltered_html, and monitoring for suspicious JavaScript code execution.", "Recommendations": "Recommendations for executives include prioritizing patching, disabling unfiltered_html, and implementing additional security measures to prevent exploitation of this vulnerability.", "Conclusions": "In conclusion, the CVE-2024-2967 vulnerability is a moderate-risk vulnerability that requires immediate attention and action to prevent exploitation."}}