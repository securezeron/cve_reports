{"id": "CVE-2024-25592", "sourceIdentifier": "audit@patchstack.com", "published": "2024-03-15T14:15:07.550", "lastModified": "2024-03-15T16:26:49.320", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in WPMU DEV Broken Link Checker allows Stored XSS.This issue affects Broken Link Checker: from n/a through 2.2.3.\n\n"}, {"lang": "es", "value": "La vulnerabilidad de neutralizaci\u00f3n inadecuada de la entrada durante la generaci\u00f3n de p\u00e1ginas web ('cross-site Scripting') en WPMU DEV Broken Link Checker permite almacenar XSS. Este problema afecta a Broken Link Checker: desde n/a hasta 2.2.3."}], "metrics": {"cvssMetricV31": [{"source": "audit@patchstack.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 3.7}]}, "weaknesses": [{"source": "audit@patchstack.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://patchstack.com/database/vulnerability/broken-link-checker/wordpress-broken-link-checker-plugin-2-2-3-cross-site-scripting-xss-vulnerability?_s_id=cve", "source": "audit@patchstack.com"}], "techniques": [{"techniqueID": "T1059.001", "comment": "CVE-2024-25592 - Cross-site scripting vulnerability allows an attacker to inject malicious scripts. This technique is relevant as it allows the attacker to execute arbitrary code on the compromised system."}, {"techniqueID": "T1210", "comment": "CVE-2024-25592 - Insufficient input validation allows an attacker to inject malicious scripts. This technique is relevant as it allows the attacker to bypass security restrictions and execute unauthorized code."}, {"techniqueID": "T1062.002", "comment": "CVE-2024-25592 - Storing data injected by an attacker allows an attacker to persist malicious scripts. This technique is relevant as it allows the attacker to maintain persistence on the compromised system."}, {"techniqueID": "T1040", "comment": "CVE-2024-25592 - Cookie extraction allows an attacker to steal sensitive data. This technique is relevant as it allows the attacker to exfiltrate sensitive data from the compromised system."}], "stix_bundle": {"$schema": "https://raw.githubusercontent.com/oasis-open/cti-stix/v2.1/stix-csdf/stix-schema.json", "@graph": [{"id": "https://example.com/cve-2024-25592", "type": ["Vulnerability", "Associated-Capability", "Related-Application", "Discovered-Capability"], "name": "WordPress Broken Link Checker Plugin 2.2.3 Cross-Site Scripting (XSS) Vulnerability", "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in WPMU DEV Broken Link Checker allows Stored XSS.", "created_by_ref": "https://example.com/user1", "modified": "2024-03-15T16:26:49.320", "related_apply_pattern": "https://example.com/apply-pattern1", "related_attack_pattern": "https://example.com/attack-pattern1", "related_capability": "https://example.com/capability1", "related_operating_system": "https://example.com/os1", "related_tool": "https://example.com/tool1", "vulnerability": {"$ref": "https://example.com/cve-2024-25592/vulnerability"}}, {"id": "https://example.com/apply-pattern1", "type": "Apply-Pattern", "name": "Cross-Site Scripting (XSS) Attack", "description": "An attacker injects malicious scripts into a web page."}, {"id": "https://example.com/attack-pattern1", "type": "Attack-Pattern", "name": "Cross-Site Scripting (XSS) Attack", "description": "An attacker injects malicious scripts into a web page."}, {"id": "https://example.com/capability1", "type": "Capability", "name": "Cross-Site Scripting (XSS) Injection", "description": "The capability to inject malicious scripts into a web page."}, {"id": "https://example.com/os1", "type": "Operating-System", "name": "WordPress", "description": "WordPress is a popular web content management system."}, {"id": "https://example.com/tool1", "type": "Tool", "name": "Burp Suite", "description": "Burp Suite is a web application security testing tool."}]}, "technical_analysis": {"Introduction": "The WordPress Broken Link Checker Plugin 2.2.3 Cross-Site Scripting (XSS) vulnerability allows an attacker to inject malicious scripts into a web page, which can then be executed by the victim's browser.", "Impact and Scope": "The vulnerability has a CVSS score of 5.9 (Medium) with an attack vector of Network and requires user interaction.", "Related MITRE ATT&CK Techniques": "T1059.001, T1210, T1062.002, T1040", "Technical Details": "The vulnerability is caused by insufficient input validation in the Broken Link Checker plugin, which allows an attacker to inject malicious scripts into a web page.", "Detection": "The vulnerability can be detected by analyzing network traffic for suspicious patterns and searching for known indicators of compromise (IOCs).", "Mitigation": "The vulnerability can be mitigated by updating the Broken Link Checker plugin to the latest version and implementing web application firewalls (WAFs) to block malicious traffic.", "Conclusion": "The WordPress Broken Link Checker Plugin 2.2.3 Cross-Site Scripting (XSS) vulnerability is a significant threat to web security and should be treated with urgency. Updates should be applied promptly and additional security measures should be taken to prevent exploitation."}, "executive_analysis": {"Overview": "The WordPress Broken Link Checker Plugin 2.2.3 Cross-Site Scripting (XSS) vulnerability is a significant threat to web security and requires immediate attention.", "Business Impact": "Unauthorized access to sensitive data and compromised user authentication can result in financial losses, reputational damage, and compliance issues.", "Technical Impact": "The vulnerability allows an attacker to inject malicious scripts into a web page, which can then be executed by the victim's browser, resulting in unauthorized access to sensitive data and compromised user authentication.", "Mitigation Strategies": "Update the Broken Link Checker plugin to the latest version and implement web application firewalls (WAFs) to block malicious traffic.", "Recommendations": "Immediate action should be taken to address this vulnerability, including updating the Broken Link Checker plugin and implementing additional security measures.", "Conclusions": "The WordPress Broken Link Checker Plugin 2.2.3 Cross-Site Scripting (XSS) vulnerability is a significant threat to web security and requires immediate attention. Prompt action should be taken to mitigate this vulnerability to prevent exploitation."}}