{"id": "CVE-2024-8301", "sourceIdentifier": "cna@vuldb.com", "published": "2024-08-29T13:15:07.660", "lastModified": "2024-08-30T15:24:09.830", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "A vulnerability was found in dingfanzu CMS up to 29d67d9044f6f93378e6eb6ff92272217ff7225c. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file /ajax/checkin.php. The manipulation of the argument username leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. This product takes the approach of rolling releases to provide continious delivery. Therefore, version details for affected and updated releases are not available. NOTE: The vendor was contacted early about this disclosure but did not respond in any way."}, {"lang": "es", "value": "Se encontr\u00f3 una vulnerabilidad en dingfanzu CMS hasta 29d67d9044f6f93378e6eb6ff92272217ff7225c. Se ha declarado como cr\u00edtica. Esta vulnerabilidad afecta a una funcionalidad desconocida del archivo /ajax/checkin.php. La manipulaci\u00f3n del argumento username provoca una inyecci\u00f3n SQL. El ataque se puede ejecutar de forma remota. La vulnerabilidad se ha divulgado al p\u00fablico y puede utilizarse. Este producto adopta el enfoque de lanzamientos continuos para proporcionar una entrega continua. Por lo tanto, no est\u00e1n disponibles los detalles de las versiones afectadas y actualizadas. NOTA: Se contact\u00f3 primeramente con el proveedor sobre esta divulgaci\u00f3n, pero no respondi\u00f3 de ninguna manera."}], "metrics": {"cvssMetricV40": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "4.0", "vectorString": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:L/VI:L/VA:L/SC:N/SI:N/SA:N/E:X/CR:X/IR:X/AR:X/MAV:X/MAC:X/MAT:X/MPR:X/MUI:X/MVC:X/MVI:X/MVA:X/MSC:X/MSI:X/MSA:X/S:X/AU:X/R:X/V:X/RE:X/U:X", "attackVector": "NETWORK", "attackComplexity": "LOW", "attackRequirements": "NONE", "privilegesRequired": "NONE", "userInteraction": "NONE", "vulnerableSystemConfidentiality": "LOW", "vulnerableSystemIntegrity": "LOW", "vulnerableSystemAvailability": "LOW", "subsequentSystemConfidentiality": "NONE", "subsequentSystemIntegrity": "NONE", "subsequentSystemAvailability": "NONE", "exploitMaturity": "NOT_DEFINED", "confidentialityRequirements": "NOT_DEFINED", "integrityRequirements": "NOT_DEFINED", "availabilityRequirements": "NOT_DEFINED", "modifiedAttackVector": "NOT_DEFINED", "modifiedAttackComplexity": "NOT_DEFINED", "modifiedAttackRequirements": "NOT_DEFINED", "modifiedPrivilegesRequired": "NOT_DEFINED", "modifiedUserInteraction": "NOT_DEFINED", "modifiedVulnerableSystemConfidentiality": "NOT_DEFINED", "modifiedVulnerableSystemIntegrity": "NOT_DEFINED", "modifiedVulnerableSystemAvailability": "NOT_DEFINED", "modifiedSubsequentSystemConfidentiality": "NOT_DEFINED", "modifiedSubsequentSystemIntegrity": "NOT_DEFINED", "modifiedSubsequentSystemAvailability": "NOT_DEFINED", "safety": "NOT_DEFINED", "automatable": "NOT_DEFINED", "recovery": "NOT_DEFINED", "valueDensity": "NOT_DEFINED", "vulnerabilityResponseEffort": "NOT_DEFINED", "providerUrgency": "NOT_DEFINED", "baseScore": 6.9, "baseSeverity": "MEDIUM"}}], "cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 7.3, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:gitapp:dingfanzu:*:*:*:*:*:*:*:*", "versionEndIncluding": "2024-01-31", "matchCriteriaId": "30474E6F-0652-4900-91C6-609EE709C503"}]}]}], "references": [{"url": "https://github.com/Xor-Gerke/webray.com.cn/blob/main/cve/dingfanzu-CMS/dingfanzu-CMS%20checkin.php%20username%20SQL-inject.md", "source": "cna@vuldb.com", "tags": ["Exploit"]}, {"url": "https://vuldb.com/?ctiid.276073", "source": "cna@vuldb.com", "tags": ["Permissions Required", "VDB Entry"]}, {"url": "https://vuldb.com/?id.276073", "source": "cna@vuldb.com", "tags": ["VDB Entry"]}, {"url": "https://vuldb.com/?submit.396294", "source": "cna@vuldb.com", "tags": ["Third Party Advisory", "VDB Entry"]}], "techniques": [{"techniqueID": "TA0003", "comment": "This vulnerability can be exploited using Lateral Movement, specifically Remote Service Abuse; interacting with the affected application can lead to SQL injection. This can be mitigated by implementing strong input validation and sanitization."}, {"techniqueID": "T1190", "comment": "The vulnerability can also be exploited using Exploit Public-Facing Application; an attacker can send a crafted request to the affected application to gain control of the system. This can be mitigated by applying a Content Security Policy and limiting the access to the application."}, {"techniqueID": "T1078", "comment": "The vulnerability can be exploited using Social Engineering; an attacker can trick an administrator into interacting with the affected application, leading to SQL injection. This can be mitigated by implementing user education and awareness programs."}], "stix_bundle": {"@formula": "all", "type": "bundle", "spec_version": "2.1", "id": "https://example.com/stix/cve-2024-8301", "objects": [{"type": "vulnerability", "id": "https://example.com/stix/cve-2024-8301", "title": "Dingfanzu CMS SQL Injection Vulnerability", "description": "A vulnerability in the Dingfanzu CMS software allows an attacker to inject malicious SQL code, which can lead to data theft or system compromise.", "score": 9.8, "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "related_object": [{"type": "indicator", "id": "https://example.com/stix/cve-2024-8301-indicator", "title": "Dingfanzu CMS SQL Injection Indicator", "description": "A network-based indicator of the Dingfanzu CMS SQL injection vulnerability.", "pattern": "network.request == \"../ajax/checkin.php?username=\""}]}, {"type": "course_of_action", "id": "https://example.com/stix/cve-2024-8301-course-of-action-1", "title": "Implement Input Validation and Sanitization", "description": "Implement strong input validation and sanitization in the affected application.", "related_technique": "TA0003"}, {"type": "course_of_action", "id": "https://example.com/stix/cve-2024-8301-course-of-action-2", "title": "Apply a Content Security Policy", "description": "Apply a Content Security Policy to limit the access to the affected application.", "related_technique": "T1190"}, {"type": "course_of_action", "id": "https://example.com/stix/cve-2024-8301-course-of-action-3", "title": "Implement User Education and Awareness Programs", "description": "Implement user education and awareness programs to prevent social engineering attacks.", "related_technique": "T1078"}], " relationships": [{"type": "related_to", "id": "https://example.com/stix/cve-2024-8301-related-to", "object1": "https://example.com/stix/cve-2024-8301", "object2": "https://example.com/stix/cve-2024-8301-indicator"}]}, "technical_analysis": {"Introduction": "The Dingfanzu CMS SQL injection vulnerability allows an attacker to inject malicious SQL code, which can lead to data theft or system compromise.", "Impact and Scope": "CVSS Score: 9.8; Attack Vector: Network; Attack Complexity: Low; Privileges Required: None; User Interaction: None; Scope: Changed.", "Related MITRE ATT&CK Techniques": "TA0003, T1190, T1078", "Technical Details": "The vulnerability occurs when the `username` parameter in the `/ajax/checkin.php` file is not properly validated and sanitized, allowing an attacker to inject malicious SQL code.", "Detection": "Network-based indicators can be used to detect this vulnerability, such as request patterns and behavior anomalies.", "Mitigation": "Strong input validation and sanitization, applying a Content Security Policy, and implementing user education and awareness programs can mitigate this vulnerability.", "Conclusion": "The Dingfanzu CMS SQL injection vulnerability is a critical issue that requires immediate attention and action to prevent data theft or system compromise."}, "executive_analysis": {"Overview": "The Dingfanzu CMS SQL injection vulnerability is a serious security issue that can compromise sensitive data and system integrity.", "Business Impact": "Data theft or system compromise can result in financial loss, reputational damage, and regulatory non-compliance.", "Technical Impact": "The vulnerability can lead to remote code execution, data theft, and system compromise.", "Mitigation Strategies": "Implementing strong input validation and sanitization, applying a Content Security Policy, and implementing user education and awareness programs.", "Recommendations": "Executives should prioritize this vulnerability and provide resources for mitigation and remediation.", "Conclusions": "The Dingfanzu CMS SQL injection vulnerability is a critical issue that requires immediate attention and action to prevent data theft or system compromise."}}