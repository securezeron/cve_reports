{"id": "CVE-2024-5604", "sourceIdentifier": "contact@wpscan.com", "published": "2024-07-19T06:15:03.480", "lastModified": "2024-08-01T13:59:54.710", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Bug Library WordPress plugin before 2.1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"}, {"lang": "es", "value": "El complemento Bug Library de WordPress anterior a 2.1.2 no sanitiza ni escapa a algunas de sus configuraciones, lo que podr\u00eda permitir a usuarios con privilegios elevados, como el administrador, realizar ataques de Cross-Site Scripting Almacenado incluso cuando la capacidad unfiltered_html no est\u00e1 permitida (por ejemplo, en una configuraci\u00f3n multisitio)."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 3.7}]}, "references": [{"url": "https://wpscan.com/vulnerability/29985150-8d49-4a3f-8411-5d7263b424d8/", "source": "contact@wpscan.com"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-5604 - Cross-Site Scripting (XSS) attacks are possible when an attacker injects malicious JavaScript code into a web application, potentially leading to sensitive data exposure and privilege escalation. This technique is relevant as it leverages the plugin's vulnerability in sanitizing and escaping settings, allowing an attacker to inject malicious code. Defending against this requires implementing input validation and sanitization, as well as limiting privileges for high-privileged users."}, {"techniqueID": "T1190", "comment": "CVE-2024-5604 - This technique is relevant as it allows an attacker to inject malicious code, which can lead to exfiltration of sensitive data or privilege escalation. Defending against this requires implementing Web Application Firewalls (WAFs) and intrusion detection systems (IDS) to detect and block malicious traffic."}, {"techniqueID": "T1568", "comment": "CVE-2024-5604 - This technique is relevant as it allows an attacker to exploit the plugin's vulnerability, leading to Stored Cross-Site Scripting attacks. Defending against this requires implementing secure coding practices, such as input validation and sanitization, as well as regular security updates and patches to prevent exploitation."}], "stix_bundle": ""}