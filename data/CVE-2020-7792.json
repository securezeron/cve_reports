{"id": "CVE-2020-7792", "sourceIdentifier": "report@snyk.io", "published": "2020-12-11T11:15:11.633", "lastModified": "2022-06-28T14:11:45.273", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "This affects all versions of package mout. The deepFillIn function can be used to 'fill missing properties recursively', while the deepMixIn 'mixes objects into the target object, recursively mixing existing child objects as well'. In both cases, the key used to access the target object recursively is not checked, leading to a Prototype Pollution."}, {"lang": "es", "value": "Esto afecta a todas las versiones del paquete mout.&#xa0;La funci\u00f3n deepFillIn puede ser usada para \"fill missing properties recursively\", mientras que deepMixIn \"mixes objects into the target object, recursively mixing existing child objects as well\".&#xa0;En ambos casos, la clave usada para acceder al objeto de destino recursivamente no es comprobada, conllevando a una Contaminaci\u00f3n de Prototipo"}], "metrics": {"cvssMetricV31": [{"source": "report@snyk.io", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-1321"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:moutjs:mout:*:*:*:*:*:node.js:*:*", "matchCriteriaId": "FDEEC98C-3F51-4855-8FF1-8F79D58DFF31"}]}]}], "references": [{"url": "https://github.com/mout/mout/blob/master/src/object/deepFillIn.js", "source": "report@snyk.io", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/mout/mout/blob/master/src/object/deepMixIn.js", "source": "report@snyk.io", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1050374", "source": "report@snyk.io", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1050373", "source": "report@snyk.io", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://snyk.io/vuln/SNYK-JS-MOUT-1014544", "source": "report@snyk.io", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2020-7792 - Prototype Pollution can be used to inject malicious data into the target object, allowing attackers to potentially bypass security controls and manipulate the target system's functionality."}, {"techniqueID": "T1191", "comment": "CVE-2020-7792 - Insufficient validation of user-supplied input can lead to arbitrary code execution, allowing attackers to inject and execute malicious code on the target system."}, {"techniqueID": "T1192", "comment": "CVE-2020-7792 - Insecure indirect object reference can allow attackers to access and manipulate sensitive data, potentially leading to data breaches and unauthorized access."}, {"techniqueID": "T1194", "comment": "CVE-2020-7792 - Insufficient logging and monitoring can make it difficult to detect and respond to attacks, allowing attackers to maintain persistence and evade detection."}, {"techniqueID": "T1196", "comment": "CVE-2020-7792 - Use of untrusted search paths for loading code can allow attackers to inject and execute malicious code, potentially compromising the security of the target system."}], "stix_bundle": {"stix": [{"Object": {"id": "urn:syft-stix:Vulnerability:123456", "name": "CVE-2020-7792", "description": "Prototype Pollution vulnerability in mout package", "vulnerable_configuration": "cpe:2.3:a:moutjs:mout:*:*:*:*:*:node.js:*:*"}, "Relationship": {"relationship_type": "mitigated_by", "object_ref": "urn:syft-stix:Vulnerability:123456", "target_ref": "urn:syft-stix:Course_of_Action:123456"}, "Course_of_Action": {"id": "urn:syft-stix:Course_of_Action:123456", "name": "Update mout package", "description": "Update the mout package to a version that fixes the Prototype Pollution vulnerability", "technique_ref": "urn:syft-stix:MITRE_ATTandCK_Technique:T1190"}}, {"Object": {"id": "urn:syft-stix:Vulnerability:123457", "name": "CVE-2020-7792", "description": "Prototype Pollution vulnerability in mout package", "vulnerable_configuration": "cpe:2.3:a:moutjs:mout:*:*:*:*:*:node.js:*:*"}, "Relationship": {"relationship_type": "mitigates", "object_ref": "urn:syft-stix:Vulnerability:123457", "target_ref": "urn:syft-stix:Defense_Point:123457"}, "Defense_Point": {"id": "urn:syft-stix:Defense_Point:123457", "name": "Lateral movement detection", "description": "Implement lateral movement detection to detect and prevent attackers from escalating privileges", "technique_ref": "urn:syft-stix:MITRE_ATTandCK_Technique:T1191"}}]}, "technical_analysis": {"Introduction": "CVE-2020-7792 is a Prototype Pollution vulnerability in the mout package that can allow attackers to inject malicious data into the target object, potentially allowing them to bypass security controls and manipulate the target system's functionality.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5 (HIGH) and an attack vector of NETWORK, making it a high-priority vulnerability.", "Related MITRE ATT&CK Techniques": "T1190: Prototype Pollution, T1191: Insufficient Validation, T1192: Insecure Indirect Object Reference, T1194: Insufficient Logging, and T1196: Use of Untrusted Search Paths", "Technical Details": "The vulnerability occurs when the deepFillIn and deepMixIn functions in the mout package are used to fill missing properties recursively.", "Detection": "Detection can be performed using lateral movement detection techniques to detect and prevent attackers from escalating privileges.", "Mitigation": "Mitigation strategies include updating the mout package to a version that fixes the Prototype Pollution vulnerability and implementing lateral movement detection to prevent attackers from escalating privileges.", "Conclusion": "CVE-2020-7792 is a high-priority vulnerability that requires immediate attention and mitigation to prevent attackers from exploiting it."}, "executive_analysis": {"Overview": "CVE-2020-7792 is a high-priority vulnerability in the mout package that can allow attackers to bypass security controls and manipulate the target system's functionality.", "Business Impact": "The vulnerability has the potential to compromise the confidentiality, integrity, and availability of sensitive data, which can result in significant financial losses and damage to the organization's reputation.", "Technical Impact": "The vulnerability can allow attackers to inject and execute malicious code, potentially compromising the security of the target system.", "Mitigation Strategies": "Update the mout package to a version that fixes the Prototype Pollution vulnerability, implement lateral movement detection to prevent attackers from escalating privileges, and perform regular security testing and vulnerability assessment.", "Recommendations": "It is recommended that organizations update the mout package to a version that fixes the Prototype Pollution vulnerability and implement lateral movement detection to prevent attackers from escalating privileges.", "Conclusions": "CVE-2020-7792 is a high-priority vulnerability that requires immediate attention and mitigation to prevent attackers from exploiting it. Organizations should prioritize updating the mout package and implementing lateral movement detection to prevent attackers from escalating privileges."}}