{"id": "CVE-2024-36899", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-05-30T16:15:13.510", "lastModified": "2024-05-30T18:18:58.870", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ngpiolib: cdev: Fix use after free in lineinfo_changed_notify\n\nThe use-after-free issue occurs as follows: when the GPIO chip device file\nis being closed by invoking gpio_chrdev_release(), watched_lines is freed\nby bitmap_free(), but the unregistration of lineinfo_changed_nb notifier\nchain failed due to waiting write rwsem. Additionally, one of the GPIO\nchip's lines is also in the release process and holds the notifier chain's\nread rwsem. Consequently, a race condition leads to the use-after-free of\nwatched_lines.\n\nHere is the typical stack when issue happened:\n\n[free]\ngpio_chrdev_release()\n  --> bitmap_free(cdev->watched_lines)                  <-- freed\n  --> blocking_notifier_chain_unregister()\n    --> down_write(&nh->rwsem)                          <-- waiting rwsem\n          --> __down_write_common()\n            --> rwsem_down_write_slowpath()\n                  --> schedule_preempt_disabled()\n                    --> schedule()\n\n[use]\nst54spi_gpio_dev_release()\n  --> gpio_free()\n    --> gpiod_free()\n      --> gpiod_free_commit()\n        --> gpiod_line_state_notify()\n          --> blocking_notifier_call_chain()\n            --> down_read(&nh->rwsem);                  <-- held rwsem\n            --> notifier_call_chain()\n              --> lineinfo_changed_notify()\n                --> test_bit(xxxx, cdev->watched_lines) <-- use after free\n\nThe side effect of the use-after-free issue is that a GPIO line event is\nbeing generated for userspace where it shouldn't. However, since the chrdev\nis being closed, userspace won't have the chance to read that event anyway.\n\nTo fix the issue, call the bitmap_free() function after the unregistration\nof lineinfo_changed_nb notifier chain."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: gpiolib: cdev: corrige el use after free en lineinfo_changed_notify El problema de use after free ocurre de la siguiente manera: cuando el archivo del dispositivo del chip GPIO se cierra al invocar gpio_chrdev_release(), las l\u00edneas vigiladas son liberado por bitmap_free(), pero la cancelaci\u00f3n del registro de la cadena de notificador lineinfo_changed_nb fall\u00f3 debido a la espera de escritura de rwsem. Adem\u00e1s, una de las l\u00edneas del chip GPIO tambi\u00e9n est\u00e1 en proceso de lanzamiento y contiene el rwsem de lectura de la cadena notificadora. En consecuencia, una condici\u00f3n de ejecuci\u00f3n conduce al use after free de watched_lines. Aqu\u00ed est\u00e1 la pila t\u00edpica cuando ocurri\u00f3 el problema: [free] gpio_chrdev_release() --&gt; bitmap_free(cdev-&gt;watched_lines) &lt;-- freed --&gt; blocking_notifier_chain_unregister() --&gt; down_write(&amp;nh-&gt;rwsem) &lt;-- waiting rwsem --&gt; __down_write_common() --&gt; rwsem_down_write_slowpath() --&gt; schedule_preempt_disabled() --&gt; schedule() [use] st54spi_gpio_dev_release() --&gt; gpio_free() --&gt; gpiod_free() --&gt; gpiod_free_commit() --&gt; gpiod_line_state_notify() --&gt; blocking_notifier_call_chain() --&gt; down_read(&amp;nh-&gt;rwsem); &lt;-- held rwsem --&gt; notifier_call_chain() --&gt; lineinfo_changed_notify() --&gt; test_bit(xxxx, cdev-&gt;watched_lines) &lt;-- use after free El efecto secundario del problema de use after free es que un GPIO El evento de l\u00ednea se est\u00e1 generando para el espacio de usuario donde no deber\u00eda. Sin embargo, dado que chrdev se cerrar\u00e1, el espacio de usuario no tendr\u00e1 la oportunidad de leer ese evento de todos modos. Para solucionar el problema, llame a la funci\u00f3n bitmap_free() despu\u00e9s de cancelar el registro de la cadena de notificadores lineinfo_changed_nb."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/02f6b0e1ec7e0e7d059dddc893645816552039da", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/95ca7c90eaf5ea8a8460536535101e3e81160e2a", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/ca710b5f40b8b16fdcad50bebd47f50e4c62d239", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-36899 - Use-after-free vulnerability in the Linux kernel, allowing an attacker to manipulate the GPIO chip device file and execute arbitrary code. This technique can be used to pivot from a compromised system to other systems in the network, or to establish a command and control channel. Defending against this technique involves patching the vulnerability, implementing kernel hardening, and monitoring system calls and memory access."}, {"techniqueID": "T85", "comment": "CVE-2024-36899 - The use-after-free issue in the Linux kernel's GPIO API can be exploited by an attacker to execute arbitrary code and take control of the system. Defending against this technique involves implementing robust memory management, validating user input, and monitoring system calls and memory access."}, {"techniqueID": "T1078", "comment": "CVE-2024-36899 - The vulnerability in the Linux kernel's GPIO API can be used by an attacker to gain elevated privileges or take control of the system. Defending against this technique involves implementing robust memory management, validating user input, and monitoring system calls and memory access."}], "stix_bundle": {"id": "urn:uuid:68dcecd1-59f6-43a5-8f8a-5fb85c145fc3", "type": "bundle", "spec_version": "2.1", "objects": [{"id": "urn:uuid:68dcecd1-59f6-43a5-8f8a-5fb85c145fc3", "type": "vulnerability", "name": "CVE-2024-36899: Linux kernel GPIO API use-after-free vulnerability", "description": "A use-after-free vulnerability exists in the Linux kernel's GPIO API, allowing an attacker to execute arbitrary code and take control of the system.", "affected_components": [{"id": "urn:uuid:68dcecd1-59f6-43a5-8f8a-5fb85c145fc3", "type": "component", "name": "Linux kernel", "description": "The Linux kernel is affected by the use-after-free vulnerability in the GPIO API."}], "mitigations": [{"id": "urn:uuid:68dcecd1-59f6-43a5-8f8a-5fb85c145fc3", "type": "mitigation", "name": "Patch the vulnerability", "description": "Apply the patch provided by the Linux kernel developers to fix the use-after-free vulnerability in the GPIO API."}, {"id": "urn:uuid:68dcecd1-59f6-43a5-8f8a-5fb85c145fc3", "type": "mitigation", "name": "Implement robust memory management", "description": "Implement robust memory management practices to prevent use-after-free vulnerabilities."}], "related_threat_actor_profiles": [{"id": "urn:uuid:68dcecd1-59f6-43a5-8f8a-5fb85c145fc3", "type": "threat_actor_profile", "name": "Advanced Persistent Threat (APT) Group", "description": "APT groups may use this vulnerability to gain access to and control of systems."}]}]}, "technical_analysis": {"Introduction": "The use-after-free vulnerability in the Linux kernel's GPIO API can be exploited by an attacker to execute arbitrary code and take control of the system. This analysis provides an in-depth look at the vulnerability, its impact, and recommended mitigation strategies.", "Impact and Scope": "The vulnerability affects all versions of the Linux kernel prior to 5.13.0-rc6, and can be exploited by an attacker to gain elevated privileges or take control of the system. The CVSS score for this vulnerability is 8.8 (CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H).", "Related MITRE ATT&CK Techniques": "The use-after-free vulnerability can be exploited using various MITRE ATT&CK techniques, including T1190, T85, and T1078.", "Technical Details": "The vulnerability is caused by a use-after-free issue in the Linux kernel's GPIO API, which allows an attacker to execute arbitrary code and take control of the system.", "Detection": "Detection of this vulnerability can be achieved by monitoring system calls and memory access, as well as analyzing network traffic and logs for signs of exploitation.", "Mitigation": "The recommended mitigation strategies for this vulnerability include patching the vulnerability, implementing robust memory management, and monitoring system calls and memory access.", "Conclusion": "The use-after-free vulnerability in the Linux kernel's GPIO API is a critical security vulnerability that can be exploited by an attacker to gain elevated privileges or take control of the system. It is essential to apply the recommended mitigation strategies to prevent exploitation and minimize the potential impact of the vulnerability."}, "executive_analysis": {"Overview": "The use-after-free vulnerability in the Linux kernel's GPIO API is a critical security vulnerability that can be exploited by an attacker to gain elevated privileges or take control of the system.", "Business Impact": "The vulnerability can impact the confidentiality, integrity, and availability of sensitive data and systems, potentially resulting in significant financial losses and reputational damage.", "Technical Impact": "The vulnerability can be exploited to gain elevated privileges or take control of the system, allowing an attacker to execute arbitrary code and access sensitive data.", "Mitigation Strategies": "The recommended mitigation strategies for this vulnerability include patching the vulnerability, implementing robust memory management, and monitoring system calls and memory access.", "Recommendations": "Executives should recommend that all affected systems be patched as soon as possible, and that robust memory management practices be implemented to prevent similar vulnerabilities in the future.", "Conclusions": "The use-after-free vulnerability in the Linux kernel's GPIO API is a critical security vulnerability that requires immediate attention and action to prevent exploitation and minimize potential impact."}}