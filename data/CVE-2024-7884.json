{"id": "CVE-2024-7884", "sourceIdentifier": "6b35d637-e00f-4228-858c-b20ad6e1d07b", "published": "2024-09-05T13:15:11.390", "lastModified": "2024-09-05T17:45:07.877", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "When a canister method is called via ic_cdk::call* , a new Future CallFuture\u00a0is created  and can be awaited by the caller to get the execution result. Internally, the state of the Future is tracked and stored in a struct called CallFutureState.  A bug in the polling implementation of the CallFuture allows multiple references to be held for this internal state and not all references were dropped before the Future\u00a0is resolved. Since we have unaccounted references held, a copy of the internal state ended up being persisted in the canister's heap and thus causing a memory leak. \nImpact\u00a0Canisters built in Rust with ic_cdk\u00a0and ic_cdk_timers\u00a0are affected. If these canisters call a canister method, use timers or heartbeat, they will likely leak a small amount of memory on every such operation. In the worst case, this could lead to heap memory exhaustion triggered by an attacker. Motoko based canisters are not affected by the bug.\nPatchesThe patch has been backported to all minor versions between >= 0.8.0, <= 0.15.0. The patched versions available are 0.8.2, 0.9.3, 0.10.1, 0.11.6, 0.12.2, 0.13.5, 0.14.1, 0.15.1 and their previous versions have been yanked. WorkaroundsThere are no known workarounds at the moment. Developers are recommended to upgrade their canister as soon as possible to the latest available patched version of ic_cdk\u00a0to avoid running out of Wasm heap memory. \nUpgrading the canisters (without updating `ic_cdk`) also frees the leaked memory but it's only a temporary solution."}], "metrics": {"cvssMetricV31": [{"source": "6b35d637-e00f-4228-858c-b20ad6e1d07b", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "6b35d637-e00f-4228-858c-b20ad6e1d07b", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-401"}]}], "references": [{"url": "https://docs.rs/ic-cdk/latest/ic_cdk/", "source": "6b35d637-e00f-4228-858c-b20ad6e1d07b"}, {"url": "https://github.com/dfinity/cdk-rs/pull/509", "source": "6b35d637-e00f-4228-858c-b20ad6e1d07b"}, {"url": "https://internetcomputer.org/docs/current/references/ic-interface-spec", "source": "6b35d637-e00f-4228-858c-b20ad6e1d07b"}], "techniques": [{"techniqueID": "TA0005", "comment": "CVE-2024-7884 - The attacker may use the unpatched variant of ic-cdk to exploit this vulnerability, therefore it is necessary to apply the relevant patches and update the ic-cdk version to the latest one."}, {"techniqueID": "T1002", "comment": "CVE-2024-7884 - The vulnerability allows an attacker to create a memory leak, which can be used to exploit this vulnerability, therefore it is necessary to monitor and control memory usage."}], "technical_analysis": {"Introduction": "The vulnerabilityCVE-2024-7884 in ic-cdk allows an attacker to cause a memory leak, which can be used to exploit this vulnerability.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5, with an attack complexity of LOW and a availability impact of HIGH.", "Related MITRE ATT&CK Techniques": "The vulnerability can be exploited using techniques such as TA0005 and T1002.", "Technical Details": "The vulnerability is caused by a bug in the polling implementation of the CallFuture, which allows multiple references to the internal state of the Future to be held, leading to a memory leak.", "Detection": "Detection can be achieved by monitoring memory usage and tracking changes to the heap memory.", "Mitigation": "The vulnerability can be mitigated by applying the relevant patches and updating the ic-cdk version to the latest one.", "Conclusion": "In conclusion, the vulnerability CVE-2024-7884 allows an attacker to cause a memory leak, which can be used to exploit this vulnerability, and it is necessary to apply the relevant patches and update the ic-cdk version to the latest one."}, "executive_analysis": {"Overview": "The vulnerability CVE-2024-7884 in ic-cdk allows an attacker to cause a memory leak, which can be used to exploit this vulnerability.", "Business Impact": "The vulnerability can lead to a memory exhaustion, which can cause a denial-of-service to the affected canisters.", "Technical Impact": "The vulnerability can be exploited using techniques such as TA0005 and T1002, and it requires a patch update to the ic-cdk version.", "Mitigation Strategies": "Apply the relevant patches and update the ic-cdk version to the latest one.", "Recommendations": "Recommend to apply the relevant patches and update the ic-cdk version to the latest one.", "Conclusions": "In conclusion, the vulnerability CVE-2024-7884 requires a patch update to the ic-cdk version to mitigate this vulnerability, and it is necessary to apply the relevant patches and update the ic-cdk version to the latest one."}}