{"id": "CVE-2007-5099", "sourceIdentifier": "cve@mitre.org", "published": "2007-09-26T22:17:00.000", "lastModified": "2017-10-19T01:30:10.630", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "PHP remote file inclusion vulnerability in show.php in David Watters Helplink 0.1.0 allows remote attackers to execute arbitrary PHP code via a URL in the file parameter."}, {"lang": "es", "value": "Vulnerabilidad de inclusi\u00f3n remota de archivo en PHP en show.php de David Watters Helplink 0.1.0 permite a atacantes remotos ejecutar c\u00f3digo PHP de su elecci\u00f3n mediante un URL en el par\u00e1metro file."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:david_watters:helplink:0.1.0:*:*:*:*:*:*:*", "matchCriteriaId": "3D453134-B669-41CF-9CC4-CCE5936E6F49"}]}]}], "references": [{"url": "http://osvdb.org/37225", "source": "cve@mitre.org"}, {"url": "http://secunia.com/advisories/26910", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "http://www.securityfocus.com/bid/25782", "source": "cve@mitre.org"}, {"url": "http://www.vupen.com/english/advisories/2007/3253", "source": "cve@mitre.org"}, {"url": "https://www.exploit-db.com/exploits/4448", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2007-5099 - This is a remote file inclusion vulnerability that can be used to execute arbitrary PHP code. It is a good example of a command and control (C2) technique and could be used by an attacker to upload and execute malware on a vulnerable system."}, {"techniqueID": "T1548", "comment": "CVE-2007-5099 - File inclusion vulnerabilities can be used to upload and execute malicious files, which is a common technique used by adversaries to expand their foothold on a compromised system."}], "stix_bundle": "{\"stix_bundle\":{\"bundle\":{\"id\":\"urn:uuid:6f01143e-0c37-4d3a-b03d-cc0e40a1b6f0\",\"objects\":{\"Object\":{\"@type\":\"marking-definition\",\"id\":\"urn:uuid:b83de17f-2b4a-4ae6-b1f6-c87e18f231ef\",\"description\":\"A valid STIX 2.1 bundle expressing all the related techniques, risks and defense strategies for this CVE. This should be in proper relation and should visualize properly. This should be a valid JSON STIX 2.1 bundle. This STIX bundle must have the vulnerabiliity as the main object and all other other parts as individual objects with relations added to the main object. There should be no hanging nodes, and all relationships should be meaningful and to the correct entity with the correct label. All courses of action are to be linked properly with the correct technique they mitigate and all the defense points must be added as notes\",\"label\":\"CWE-94: CWE-94 - Cross-Site Scripting (XSS), CVE-2007-5099 and D3FEND-001 - D3FEND-001 - D3FEND-001 - D3FEND-001 - D3FEND-001\",\"created\":\"2022-05-12T00:00:00.000\",\"modified\":\"2022-05-13T00:00:00.000\",\"links\":{\"canonical\":{\"href\":\"https://example.com/CWE-94/CVE-2022-1234\",\"mediaType\":\"application/stix+json\",\"type\":\"link\"},\"derived-from\":{\"href\":\"https://example.com/CWE-94/CVE-2022-1234\",\"mediaType\":\"application/stix+json\",\"type\":\"link\"},\"related\":{\"href\":\"https://example.com/CWE-94/CVE-2022-1234\",\"mediaType\":\"application/stix+json\",\"type\":\"link\"},\"references\":{\"href\":\"https://example.com/CWE-94/CVE-2022-1234\",\"mediaType\":\"application/stix+json\",\"type\":\"link\"}},\" relationships\":{\"marking-definition\":{\"sensitive\":false,\"labels\":{\"type\":\"marking-definition\"},\"notes\":{\"text\":\"A valid STIX 2.1 bundle expressing all the related techniques, risks and defense strategies for this CVE. This should be in proper relation and should visualize properly. This should be a valid JSON STIX 2.1 bundle. This STIX bundle must have the vulnerabiliity as the main object and all other other parts as individual objects with relations added to the main object. There should be no hanging nodes, and all relationships should be meaningful and to the correct entity with the correct label. All courses of action are to be linked properly with the correct technique they mitigate and all the defense points must be added as notes\"},\"cpe\":{\"vulnerable\":true,\"criteria\":{\"0\":{\"id\":\"CVE-2007-5099\",\"description\":\"A remote file inclusion vulnerability in show.php in David Watters Helplink 0.1.0 allows remote attackers to execute arbitrary PHP code via a URL in the file parameter.\"}}}}}}", "technical_analysis": {"Introduction": "The CVE-2007-5099 vulnerability is a remote file inclusion vulnerability in PHP that allows an attacker to execute arbitrary PHP code. This vulnerability is due to a lack of proper input validation in the 'file' parameter of the 'show.php' script.", "Impact and Scope": "The impact of this vulnerability is that an attacker can execute arbitrary PHP code on the vulnerable system. The vulnerability can be exploited remotely and has been assigned a CVSS score of 7.5.", "Related MITRE ATT&CK Techniques": "T1059: Command and Control (C2), T1548: Execute File with Unvalidated Input", "Technical Details": "The vulnerability is due to a lack of proper input validation in the 'file' parameter of the 'show.php' script. This allows an attacker to inject arbitrary PHP code into the script, which is then executed by the system.", "Detection": "Detection can be performed by monitoring network traffic and identifying URLs that contain the 'file' parameter.", "Mitigation": "Mitigation can be performed by restricting the ability to upload and execute files on the system, as well as implementing proper input validation in the 'file' parameter of the 'show.php' script.", "Conclusion": "In conclusion, CVE-2007-5099 is a remote file inclusion vulnerability in PHP that allows an attacker to execute arbitrary PHP code. This vulnerability is significant and should be addressed as soon as possible."}, "executive_analysis": {"Overview": "The CVE-2007-5099 vulnerability is a remote file inclusion vulnerability in PHP that allows an attacker to execute arbitrary PHP code. This vulnerability has been assigned a CVSS score of 7.5 and is considered high-risk.", "Business Impact": "The impact of this vulnerability is significant, as it allows an attacker to execute arbitrary PHP code on the vulnerable system. This could result in data breaches, financial losses, and reputational damage.", "Technical Impact": "The technical impact of this vulnerability is that an attacker can execute arbitrary PHP code on the vulnerable system. This could result in unauthorized access, data breaches, and system compromise.", "Mitigation Strategies": "Mitigation strategies for this vulnerability include restricting the ability to upload and execute files on the system, implementing proper input validation in the 'file' parameter of the 'show.php' script, and monitoring network traffic to detect and respond to attacks.", "Recommendations": "It is recommended that all PHP applications be reviewed and updated to ensure that they are using proper input validation in the 'file' parameter of the 'show.php' script. Additionally, all systems should be monitored for signs of attack and mitigation strategies should be implemented as soon as possible.", "Conclusions": "In conclusion, the CVE-2007-5099 vulnerability is a significant risk that should be addressed as soon as possible. It is important to review and update all PHP applications to ensure that they are using proper input validation in the 'file' parameter of the 'show.php' script, and to implement mitigation strategies to protect against attacks."}}