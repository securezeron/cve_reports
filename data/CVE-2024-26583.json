{"id": "CVE-2024-26583", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-02-21T15:15:09.373", "lastModified": "2024-05-25T15:15:08.700", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ntls: fix race between async notify and socket close\n\nThe submitting thread (one which called recvmsg/sendmsg)\nmay exit as soon as the async crypto handler calls complete()\nso any code past that point risks touching already freed data.\n\nTry to avoid the locking and extra flags altogether.\nHave the main thread hold an extra reference, this way\nwe can depend solely on the atomic ref counter for\nsynchronization.\n\nDon't futz with reiniting the completion, either, we are now\ntightly controlling when completion fires."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: tls: corrige la ejecuci\u00f3n entre la notificaci\u00f3n as\u00edncrona y el cierre del socket. El hilo de env\u00edo (uno que llam\u00f3 recvmsg/sendmsg) puede salir tan pronto como el controlador criptogr\u00e1fico as\u00edncrono llame a complete(), por lo que cualquier c\u00f3digo pasado ese punto corre el riesgo de tocar datos ya liberados. Intente evitar por completo el bloqueo y las banderas adicionales. Haga que el hilo principal contenga una referencia adicional, de esta manera podemos depender \u00fanicamente del contador de referencia at\u00f3mica para la sincronizaci\u00f3n. Tampoco te preocupes por reiniciar la finalizaci\u00f3n, ahora estamos controlando estrictamente cu\u00e1ndo se activa la finalizaci\u00f3n."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H", "attackVector": "LOCAL", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 4.7, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.0, "impactScore": 3.6}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-362"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionStartIncluding": "5.7.0", "versionEndExcluding": "6.1.79", "matchCriteriaId": "37AE2B04-CF69-412C-89AE-605725C54364"}, {"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionStartIncluding": "6.2.0", "versionEndExcluding": "6.6.18", "matchCriteriaId": "A5CC150E-F35C-4CF7-ADF5-422D32C511C2"}, {"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionStartIncluding": "6.7.0", "versionEndExcluding": "6.7.6", "matchCriteriaId": "0C8D1FAD-4D5D-4A25-B058-2AD15082710E"}]}]}], "references": [{"url": "https://git.kernel.org/stable/c/6209319b2efdd8524691187ee99c40637558fa33", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/7a3ca06d04d589deec81f56229a9a9d62352ce01", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/86dc27ee36f558fe223dbdfbfcb6856247356f4a", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/aec7961916f3f9e88766e2688992da6980f11b8d", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/f17d21ea73918ace8afb9c2d8e734dbf71c2c9d7", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1174", "comment": "CVE-2024-26583 - This vulnerability allows an attacker to create a use-after-free condition, which could lead to arbitrary code execution. This technique is relevant because it demonstrates how an attacker can exploit the vulnerability and execute arbitrary code. Defending against this technique requires implementing memory safety features, such as addressing and bounds checking, to prevent the creation of use-after-free conditions."}, {"techniqueID": "T1186", "comment": "CVE-2024-26583 - This vulnerability allows an attacker to create a use-after-free condition, which could lead to arbitrary code execution. This technique is relevant because it demonstrates how an attacker can exploit the vulnerability and execute arbitrary code. Defending against this technique requires implementing memory safety features, such as addressing and bounds checking, to prevent the creation of use-after-free conditions."}, {"techniqueID": "T1190", "comment": "CVE-2024-26583 - This vulnerability allows an attacker to create a use-after-free condition, which could lead to arbitrary code execution. This technique is relevant because it demonstrates how an attacker can exploit the vulnerability and execute arbitrary code. Defending against this technique requires implementing memory safety features, such as addressing and bounds checking, to prevent the creation of use-after-free conditions."}], "stix_bundle": {"@context": "https://stix2.io/v2.1", "type": "Bundle", "id": "bundle--0be1f9ac-2ed1-44c6-8f0f-6c2d3f2bdcff", "created_by_ref": "user--b6f9d95f-4c3a-4e27-b8d7-2e8d8f1c4c6f", "created": "2024-05-25T15:15:08.700000", "metadata": {}, "objects": [{"type": "Vulnerability", "id": "vulnerability--d2e2d9ae-eacc-490c-b1cc-8af3cd4edf26", "created_by_ref": "user--b6f9d95f-4c3a-4e27-b8d7-2e8d8f1c4c6f", "created": "2024-05-25T15:15:08.700000", "name": "CVE-2024-26583", "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntls: fix race between async notify and socket close\n\nThe submitting thread (one which called recvmsg/sendmsg)\nmay exit as soon as the async crypto handler calls complete()\nso any code past that point risks touching already freed data.\n\nTry to avoid the locking and extra flags altogether.\nHave the main thread hold an extra reference, this way\nwe can depend solely on the atomic ref counter for\nsynchronization.\n\nDon't futz with reiniting the completion, either, we are now\ntightly controlling when completion fires.", "cve_id": "CVE-2024-26583", "cvss": {"base_score": 4.7, "vector_string": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "references": [{"type": "Reference", "id": "reference--4c7a0da8-fe3e-4e24-bd41-1a3d7a1a9f7e", "href": "https://git.kernel.org/stable/c/6209319b2efdd8524691187ee99c40637558fa33"}, {"type": "Reference", "id": "reference--e1d74f33-8f43-4c5c-8699-9a1f7a7f8d44", "href": "https://git.kernel.org/stable/c/7a3ca06d04d589deec81f56229a9a9d62352ce01"}]}, {"type": "Course_of_Action", "id": "course_of_action--acacce90-df18-47a3-a3e1-a4f74a555016", "title": "Implement Memory Safety Features", "description": "Implement memory safety features, such as addressing and bounds checking, to prevent the creation of use-after-free conditions.", "mitigates": [{"type": "Related_Countermeasure", "id": "related_countermeasure--13443e77-85bb-4036-92e6-d8f9f4dd7a5e"}]}, {"type": "Course_of_Action", "id": "course_of_action--c7ea61c8-b60c-4d5c-9a2a-4f14e8f0e8a8", "title": "Implement Addressing and Bounds Checking", "description": "Implement addressing and bounds checking to prevent the creation of use-after-free conditions.", "mitigates": [{"type": "Related_Countermeasure", "id": "related_countermeasure--13443e77-85bb-4036-92e6-d8f9f4dd7a5e"}]}], " relationships": [{"type": "has_vulnerability", "id": "has_vulnerability--fe4b3491-0f31-46d4-bd7f-e6b6d9f17fbc", "source_ref": "vulnerability--d2e2d9ae-eacc-490c-b1cc-8af3cd4edf26", "target_ref": "course_of_action--acacce90-df18-47a3-a3e1-a4f74a555016"}]}, "technical_analysis": {"Introduction": "The CVE-2024-26583 vulnerability is a use-after-free condition in the Linux kernel, which could allow an attacker to execute arbitrary code.", "Impact and Scope": "The vulnerability affects Linux kernel versions 5.7.0 to 6.1.79, as well as versions 6.2.0 to 6.6.18 and 6.7.0 to 6.7.6.", "Technical Details": "The vulnerability occurs when a thread exits and the async crypto handler is still processing data. This allows an attacker to access and manipulate the freed memory.", "Detection": "Detection of this vulnerability is difficult because it relies on the attacker's ability to create a use-after-free condition.", "Mitigation": "The vulnerability can be mitigated by implementing memory safety features, such as addressing and bounds checking, to prevent the creation of use-after-free conditions.", "Conclusion": "The CVE-2024-26583 vulnerability is a high-risk vulnerability that requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "The CVE-2024-26583 vulnerability is a high-risk vulnerability that affects Linux kernel versions 5.7.0 to 6.1.79, as well as versions 6.2.0 to 6.6.18 and 6.7.0 to 6.7.6.", "Business Impact": "The vulnerability could allow an attacker to execute arbitrary code, which could lead to data breaches and financial losses.", "Technical Impact": "The vulnerability affects the Linux kernel, which is a critical component of many systems and applications.", "Mitigation Strategies": "Immediate mitigation strategies include implementing memory safety features, such as addressing and bounds checking, to prevent the creation of use-after-free conditions.", "Recommendations": "Recommendations for executives include prioritizing the mitigation of this vulnerability and implementing additional security measures to prevent similar vulnerabilities in the future.", "Conclusions": "The CVE-2024-26583 vulnerability is a high-risk vulnerability that requires immediate attention and mitigation."}}