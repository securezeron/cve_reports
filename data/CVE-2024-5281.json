{"id": "CVE-2024-5281", "sourceIdentifier": "contact@wpscan.com", "published": "2024-07-13T06:15:04.430", "lastModified": "2024-08-01T13:59:43.367", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin"}, {"lang": "es", "value": "El complemento wp-affiliate-platform de WordPress anterior a 6.5.1 no sanitiza ni escapa un par\u00e1metro antes de devolverlo a la p\u00e1gina, lo que genera Cross-Site Scripting Reflejado que podr\u00eda usarse contra usuarios con altos privilegios, como el administrador."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "references": [{"url": "https://wpscan.com/vulnerability/3c0bdb0f-a06a-47a8-9198-a2bf2678b8f1/", "source": "contact@wpscan.com"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-5281 - The vulnerable WordPress plugin allows an attacker to inject malicious JavaScript code. This technique is relevant as it can be used to steal sensitive information, inject malware, or perform other malicious actions. Defending against this technique can be done by keeping plugins up to date and using a secure web application firewall (WAF)."}, {"techniqueID": "T1190", "comment": "CVE-2024-5281 - The vulnerable WordPress plugin allows an attacker to inject malicious XML data. This technique is relevant as it can be used to steal sensitive information, inject malware, or perform other malicious actions. Defending against this technique can be done by keeping plugins up to date and using a secure web application firewall (WAF)."}, {"techniqueID": "T1185", "comment": "CVE-2024-5281 - The vulnerable WordPress plugin allows an attacker to inject malicious scripts. This technique is relevant as it can be used to steal sensitive information, inject malware, or perform other malicious actions. Defending against this technique can be done by keeping plugins up to date and using a secure web application firewall (WAF)."}, {"techniqueID": "T1534", "comment": "CVE-2024-5281 - The vulnerable WordPress plugin allows an attacker to inject malicious input. This technique is relevant as it can be used to steal sensitive information, inject malware, or perform other malicious actions. Defending against this technique can be done by validating and sanitizing all user input and keeping plugins up to date."}, {"techniqueID": "T1192", "comment": "CVE-2024-5281 - The vulnerable WordPress plugin allows an attacker to inject malicious input. This technique is relevant as it can be used to steal sensitive information, inject malware, or perform other malicious actions. Defending against this technique can be done by validating and sanitizing all user input and keeping plugins up to date."}], "stix_bundle": {"bmp": {"type": "bundle", "id": "CVE-2024-5281"}, "objects": [{"type": "vulnerability", "id": "CVE-2024-5281", "name": "wp-affiliate-platform WordPress plugin Cross-Site Scripting Vulnerability"}, {"type": "attack-pattern", "id": "T1059", "name": "Command Line Arguments"}, {"type": "attack-pattern", "id": "T1190", "name": "XML External Entity (XXE) Injection"}, {"type": "attack-pattern", "id": "T1185", "name": "Scripting"}, {"type": "attack-pattern", "id": "T1534", "name": "Commonly Used Non-System Users"}, {"type": "attack-pattern", "id": "T1192", "name": "Data Staged"}, {"type": "indicator", "id": "indicator-CVE-2024-5281", "name": "CVE-2024-5281 Indicator"}], "relationships": [{"relationship": "exploited-by", "sourceId": "CVE-2024-5281", "targetId": "T1059"}, {"relationship": "exploited-by", "sourceId": "CVE-2024-5281", "targetId": "T1190"}, {"relationship": "exploited-by", "sourceId": "CVE-2024-5281", "targetId": "T1185"}, {"relationship": "exploited-by", "sourceId": "CVE-2024-5281", "targetId": "T1534"}, {"relationship": "exploited-by", "sourceId": "CVE-2024-5281", "targetId": "T1192"}]}, "technical_analysis": {"Introduction": "The wp-affiliate-platform WordPress plugin before 6.5.1 is vulnerable to a Reflected Cross-Site Scripting attack. This vulnerability allows an attacker to inject malicious JavaScript code into the page.", "Impact and Scope": "The vulnerability has a CVSS score of 6.1 and affects high-privilege users such as administrators.", "Related MITRE ATT&CK Techniques": "T1059, T1190, T1185, T1534, T1192", "Technical Details": "The vulnerability is caused by the plugin not properly sanitizing and escaping user input. This allows an attacker to inject malicious JavaScript code into the page.", "Detection": "Detection can be done by monitoring for suspicious JavaScript code being injected into the page.", "Mitigation": "Mitigating this vulnerability can be done by keeping the plugin up to date and using a secure web application firewall (WAF).", "Conclusion": "In conclusion, the wp-affiliate-platform WordPress plugin is vulnerable to a Reflected Cross-Site Scripting attack, allowing an attacker to inject malicious JavaScript code into the page. Keeping the plugin up to date and using a secure WAF can help mitigate this vulnerability."}, "executive_analysis": {"Overview": "The wp-affiliate-platform WordPress plugin is vulnerable to a Reflected Cross-Site Scripting attack.", "Business Impact": "A successful attack could allow an attacker to steal sensitive information, inject malware, or perform other malicious actions.", "Technical Impact": "The vulnerability has a CVSS score of 6.1 and affects high-privilege users such as administrators.", "Mitigation Strategies": "Keeping the plugin up to date and using a secure web application firewall (WAF) can help mitigate this vulnerability.", "Recommendations": "Recommendations include keeping the plugin up to date, using a secure WAF, and monitoring for suspicious activity.", "Conclusions": "In conclusion, the wp-affiliate-platform WordPress plugin is vulnerable to a Reflected Cross-Site Scripting attack. To mitigate this vulnerability, it is recommended to keep the plugin up to date and use a secure WAF."}}