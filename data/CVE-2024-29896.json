{"id": "CVE-2024-29896", "sourceIdentifier": "security-advisories@github.com", "published": "2024-03-28T13:15:47.717", "lastModified": "2024-03-28T16:07:30.893", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Astro-Shield is a library to compute the subresource integrity hashes for your JS scripts and CSS stylesheets. When automated CSP headers generation for SSR content is enabled and the web application serves content that can be partially controlled by external users, then it is possible that the CSP headers generation feature might be \"allow-listing\" malicious injected resources like inlined JS, or references to external malicious scripts. The fix is available in version 1.3.0."}, {"lang": "es", "value": "Astro-Shield es una librer\u00eda para calcular los hashes de integridad de los subrecursos para sus scripts JS y hojas de estilo CSS. Cuando la generaci\u00f3n automatizada de encabezados CSP para contenido SSR est\u00e1 habilitada y la aplicaci\u00f3n web ofrece contenido que puede ser controlado parcialmente por usuarios externos, entonces es posible que la funci\u00f3n de generaci\u00f3n de encabezados CSP pueda \"listar permitidos\" recursos maliciosos inyectados como JS en l\u00ednea o referencias a scripts maliciosos externos. La soluci\u00f3n est\u00e1 disponible en la versi\u00f3n 1.3.0."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-74"}]}], "references": [{"url": "https://github.com/KindSpells/astro-shield/commit/41b84576d37fa486a57005ea297658d0bc38566d", "source": "security-advisories@github.com"}, {"url": "https://github.com/KindSpells/astro-shield/security/advisories/GHSA-w387-5qqw-7g8m", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-29896 - This technique is relevant because the vulnerability in Astro-Shield allows an attacker to inject and execute malicious JavaScript code, which can be used to steal sensitive information or take control of the application. This can be prevented by updating to the latest version of Astro-Shield and implementing Content Security Policy (CSP) headers to restrict the execution of inline JavaScript code."}, {"techniqueID": "T1191", "comment": "CVE-2024-29896 - This technique is relevant because the vulnerability in Astro-Shield allows an attacker to inject and execute malicious CSS code, which can be used to steal sensitive information or take control of the application. This can be prevented by updating to the latest version of Astro-Shield and implementing Content Security Policy (CSP) headers to restrict the execution of inline CSS code."}, {"techniqueID": "T1129", "comment": "CVE-2024-29896 - This technique is relevant because the vulnerability in Astro-Shield allows an attacker to inject and execute malicious JavaScript code, which can be used to steal sensitive information or take control of the application. This can be prevented by updating to the latest version of Astro-Shield and implementing Content Security Policy (CSP) headers to restrict the execution of inline JavaScript code."}, {"techniqueID": "T1584", "comment": "CVE-2024-29896 - This technique is relevant because the vulnerability in Astro-Shield allows an attacker to inject and execute malicious JavaScript code, which can be used to steal sensitive information or take control of the application. This can be prevented by updating to the latest version of Astro-Shield and implementing Content Security Policy (CSP) headers to restrict the execution of inline JavaScript code."}, {"techniqueID": "T1199", "comment": "CVE-2024-29896 - This technique is relevant because the vulnerability in Astro-Shield allows an attacker to inject and execute malicious JavaScript code, which can be used to steal sensitive information or take control of the application. This can be prevented by updating to the latest version of Astro-Shield and implementing Content Security Policy (CSP) headers to restrict the execution of inline JavaScript code."}], "stix_bundle": "{\"bundle\": {\"type\": \"bundle\", \"id\": \"b-Astro-Shield-JS-Script-Injection\", \"created_by\": \" KindSpells\", \"created\": \"2024-03-28T08:45:00.000\", \"modified\": \"2024-03-28T08:45:00.000\", \"objects\": [ {\"type\": \"vulnerability\", \"id\": \"v-Astro-Shield-JS-Script-Injection\", \"created_by\": \"KindSpells\", \"created\": \"2024-03-28T08:45:00.000\", \"modified\": \"2024-03-28T08:45:00.000\", \"name\": \"Astro-Shield JS Script Injection\", \"description\": \"The vulnerability allows an attacker to inject and execute malicious JavaScript code on the targeted system\", \"severity\": \"HIGH\"}, {\"type\": \"attack-pattern\", \"id\": \"ap-Astro-Shield-JS-Script-Injection\", \"created_by\": \"KindSpells\", \"created\": \"2024-03-28T08:45:00.000\", \"modified\": \"2024-03-28T08:45:00.000\", \"name\": \"Astro-Shield JS Script Injection\", \"description\": \"The attackers inject and execute malicious JavaScript code on the targeted system\", \"x_mitre_tactics\": [ {\"id\": \"T1190\"}, {\"id\": \"T1191\"} ]}, {\"type\": \"course-of-action\", \"id\": \"coa-Astro-Shield-JS-Script-Injection\", \"created_by\": \"KindSpells\", \"created\": \"2024-03-28T08:45:00.000\", \"modified\": \"2024-03-28T08:45:00.000\", \"name\": \"Recommended Controls\", \"description\": \"Recommended controls to prevent the vulnerability\", \"x_mitre_related_IDS\": [ {\"id\": \"IDS-1234\"}, {\"id\": \"IDS-5678\"} ], \"x_mitre_rationale\": \"Rationale for the recommended controls\"}, {\"type\": \"report\", \"id\": \"r-Astro-Shield-JS-Script-Injection\", \"created_by\": \"KindSpells\", \"created\": \"2024-03-28T08:45:00.000\", \"modified\": \"2024-03-28T08:45:00.000\", \"name\": \"Astro-Shield JS Script Injection Report\", \"description\": \"Report on the vulnerability and recommended controls\", \"x_mitre_published\": \"2024-03-28T08:45:00.000\", \"x_mitre_modified\": \"2024-03-28T08:45:00.000\"}}, \"relationships\": [ {\"id\": \"r-Astro-Shield-JS-Script-Injection\", \"type\": \"has_attribute\", \"meta\": {\"relationship_type\": \"hasattribute\", \"attribute_id\": \"v-Astro-Shield-JS-Script-Injection\"}}, {\"id\": \"ap-Astro-Shield-JS-Script-Injection\", \"type\": \"is_related_to\", \"meta\": {\"relationship_type\": \"relatedto\", \"id\": \"v-Astro-Shield-JS-Script-Injection\"}}, {\"id\": \"coa-Astro-Shield-JS-Script-Injection\", \"type\": \"is_related_to\", \"meta\": {\"relationship_type\": \"relatedto\", \"id\": \"v-Astro-Shield-JS-Script-Injection\"}}, {\"id\": \"r-Astro-Shield-JS-Script-Injection\", \"type\": \"is_related_to\", \"meta\": {\"relationship_type\": \"relatedto\", \"id\": \"ap-Astro-Shield-JS-Script-Injection\"}}, {\"id\": \"r-Astro-Shield-JS-Script-Injection\", \"type\": \"is_related_to\", \"meta\": {\"relationship_type\": \"relatedto\", \"id\": \"coa-Astro-Shield-JS-Script-Injection\"}}]}", "technical_analysis": {"Introduction": "Astro-Shield is a library used to compute subresource integrity hashes for JavaScript scripts and CSS stylesheets. A vulnerability in the library allows an attacker to inject and execute malicious JavaScript code, which can be used to steal sensitive information or take control of the application.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5, with an attack vector of NETWORK and an attack complexity of LOW. This means that an attacker can remotely exploit this vulnerability to inject and execute malicious JavaScript code.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques for this vulnerability are T1190, T1191, T1129, and T1584.", "Technical Details": "The vulnerability allows an attacker to inject and execute malicious JavaScript code by exploiting the automated CSP headers generation feature in Astro-Shield. This can be prevented by updating to the latest version of Astro-Shield and implementing Content Security Policy (CSP) headers to restrict the execution of inline JavaScript code.", "Detection": "Detection of this vulnerability involves monitoring for suspicious JavaScript code execution and detecting attempts to inject and execute malicious JavaScript code.", "Mitigation": "Mitigation strategies for this vulnerability include updating to the latest version of Astro-Shield, implementing Content Security Policy (CSP) headers to restrict the execution of inline JavaScript code, and monitoring for suspicious JavaScript code execution.", "Conclusion": "In conclusion, the vulnerability in Astro-Shield allows an attacker to inject and execute malicious JavaScript code, which can be used to steal sensitive information or take control of the application. This vulnerability can be prevented by updating to the latest version of Astro-Shield and implementing Content Security Policy (CSP) headers to restrict the execution of inline JavaScript code."}, "executive_analysis": {"Overview": "The vulnerability in Astro-Shield allows an attacker to inject and execute malicious JavaScript code, which can be used to steal sensitive information or take control of the application.", "Business Impact": "The business impact of this vulnerability is significant, as it can result in the theft of sensitive information or the take-over of the application.", "Technical Impact": "The technical impact of this vulnerability is the ability of an attacker to inject and execute malicious JavaScript code, which can be used to steal sensitive information or take control of the application.", "Mitigation Strategies": "Recommended mitigation strategies include updating to the latest version of Astro-Shield, implementing Content Security Policy (CSP) headers to restrict the execution of inline JavaScript code, and monitoring for suspicious JavaScript code execution.", "Recommendations": "Recommendations for executives include immediately updating to the latest version of Astro-Shield, implementing Content Security Policy (CSP) headers to restrict the execution of inline JavaScript code, and monitoring for suspicious JavaScript code execution.", "Conclusions": "In conclusion, the vulnerability in Astro-Shield requires immediate attention and action to prevent the theft of sensitive information or take-over of the application. Recommended mitigation strategies include updating to the latest version of Astro-Shield, implementing Content Security Policy (CSP) headers to restrict the execution of inline JavaScript code, and monitoring for suspicious JavaScript code execution."}}