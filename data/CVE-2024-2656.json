{"id": "CVE-2024-2656", "sourceIdentifier": "security@wordfence.com", "published": "2024-04-06T04:15:11.030", "lastModified": "2024-04-08T18:49:25.863", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Email Subscribers by Icegram Express \u2013 Email Marketing, Newsletters, Automation for WordPress & WooCommerce plugin for WordPress is vulnerable to Stored Cross-Site Scripting via a CSV import in all versions up to, and including, 5.7.14 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled."}, {"lang": "es", "value": "El complemento Email Subscribers by Icegram Express \u2013 Email Marketing, Newsletters, Automation for WordPress &amp; WooCommerce de WordPress es vulnerable a cross-site scripting almacenado a trav\u00e9s de una importaci\u00f3n CSV en todas las versiones hasta la 5.7.14 incluida debido a una sanitizaci\u00f3n de entrada y a un escape de salida insuficientes. Esto hace posible que atacantes autenticados, con permisos de nivel de administrador y superiores, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada. Esto solo afecta a las instalaciones multisitio y a las instalaciones en las que se ha deshabilitado unfiltered_html."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.3, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/changeset/3063438/email-subscribers/trunk/lite/includes/classes/class-es-import-subscribers.php", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/159ddb06-e7c4-4279-a8a1-c78a02e15891?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1047", "comment": "CVE-2024-2656 - Stored Cross-Site Scripting via CSV Import in WordPress Plugin, allowing authenticated attackers to inject arbitrary web scripts. Relevant techniques include Input Validation, Error Handling and Data Sanitization failure, which can be mitigated by implementing proper CSV import validation, error handling and output escaping."}, {"techniqueID": "T1059", "comment": "CVE-2024-2656 - Cross-Site Scripting (XSS) via CSV import in WordPress Plugin, allowing attackers to inject and execute malicious code. Relevant defense mechanisms include Web Application Firewall (WAF), Network Segmentation, and Regular Security Audits."}, {"techniqueID": "T1190", "comment": "CVE-2024-2656 - Internal Data Storage, where sensitive data is stored in an easily accessible database. Relevant countermeasures include encrypting stored data, using secure authentication and authorization mechanisms, and implementing access controls."}], "stix_bundle": {"cybox": {"objects": {"vulnerability": {"id": "CVE-2024-2656", "type": "vulnerability"}}, "relations": {"cve": {"type": "relation", "id": "CVE-2024-2656", "role": "cve"}}}, "note": {"description": "Stored Cross-Site Scripting (XSS) via CSV import in WordPress Plugin", "content_type": "text/plain"}, "incident": {"type": "incident", "id": "INC-2024-2656"}, "threat": {"type": "threat", "id": "THR-2024-2656"}, "indicator": {"type": "indicator", "id": "IND-2024-2656"}, "course_of_action": {"id": "COA-2024-2656", "type": "course_of_action", "description": "Remediate the vulnerability by updating the WordPress Plugin to the latest version and implementing proper input validation, error handling, and data sanitization."}}, "technical_analysis": {"Introduction": "A stored cross-site scripting (XSS) vulnerability has been discovered in the Email Subscribers by Icegram Express WordPress plugin, affecting all versions up to and including 5.7.14.", "Impact and Scope": "The vulnerability allows authenticated attackers to inject arbitrary web scripts via a CSV import, making it possible to execute malicious code on affected pages. CVSS score: 4.4 (AV:N/AC:H/PR:H/UI:N/S:C/C:L/I:L/A:N)", "Related MITRE ATT&CK Techniques": "T1047: Web Shell, T1059: Cross-Site Scripting (XSS), T1190: Internal Data Storage", "Technical Details": "The vulnerability is caused by insufficient input sanitization and output escaping in the plugin's CSV import functionality.", "Detection": "Detection can be achieved by monitoring web traffic for suspicious script injections and performing regular security audits.", "Mitigation": "Mitigation strategies include updating the plugin to the latest version, implementing proper input validation, error handling, and data sanitization, and using a Web Application Firewall (WAF).", "Conclusion": "The discovered vulnerability poses a significant risk to affected WordPress installations and requires immediate attention to prevent exploitation and potential data breaches."}, "executive_analysis": {"Overview": "A stored cross-site scripting (XSS) vulnerability has been discovered in the Email Subscribers by Icegram Express WordPress plugin, affecting all versions up to and including 5.7.14.", "Business Impact": "The vulnerability can be exploited by authenticated attackers to inject and execute malicious code on affected pages, potentially compromising sensitive data and disrupting business operations.", "Technical Impact": "The vulnerability affects the security and integrity of WordPress installations, making it possible for attackers to inject and execute malicious code.", "Mitigation Strategies": "Implementing proper input validation, error handling, and data sanitization, updating the plugin to the latest version, and using a Web Application Firewall (WAF) can help mitigate the vulnerability.", "Recommendations": "We recommend implementing the mitigation strategies outlined above and performing regular security audits to ensure the protection of sensitive data.", "Conclusions": "The discovered vulnerability requires immediate attention to prevent exploitation and potential data breaches. It is crucial to prioritize the security and integrity of WordPress installations to maintain business continuity."}}