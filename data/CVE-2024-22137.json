{"id": "CVE-2024-22137", "sourceIdentifier": "audit@patchstack.com", "published": "2024-01-13T00:15:44.187", "lastModified": "2024-01-19T20:02:08.340", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in MailMunch Constant Contact Forms by MailMunch allows Stored XSS.This issue affects Constant Contact Forms by MailMunch: from n/a through 2.0.11.\n\n"}, {"lang": "es", "value": "La vulnerabilidad de neutralizaci\u00f3n incorrecta de la entrada durante la generaci\u00f3n de p\u00e1ginas web ('Scripting entre sitios') en MailMunch Constant Contact Forms de MailMunch permite XSS almacenado. Este problema afecta a Constant Contact Forms de MailMunch: desde n/a hasta 2.0.11."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "audit@patchstack.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 3.7}]}, "weaknesses": [{"source": "audit@patchstack.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:mailmunch:constant_contact_forms:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "2.0.11", "matchCriteriaId": "E6CA2DFE-77FA-440E-A20E-B2FB3BCADE9D"}]}]}], "references": [{"url": "https://patchstack.com/database/vulnerability/constant-contact-forms-by-mailmunch/wordpress-constant-contact-forms-by-mailmunch-plugin-2-0-11-cross-site-scripting-xss-vulnerability?_s_id=cve", "source": "audit@patchstack.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-22137 - Stored XSS vulnerability allows an attacker to inject malicious scripts, reflecting them back to the user, which can lead to unauthorized access, data theft, or other malicious activities. Defend against this by validating user-input data and using secure coding practices."}, {"techniqueID": "T1568", "comment": "CVE-2024-22137 - Cross-site scripting (XSS) vulnerability allows attackers to inject malicious scripts, which can steal user data, take over user accounts, or perform other malicious activities. Implement robust input validation and sanitization to prevent this."}, {"techniqueID": "T1191", "comment": "CVE-2024-22137 - Client-side vulnerability allows attackers to inject malicious scripts, which can lead to unauthorized access, data theft, or other malicious activities. Implement secure coding practices and use third-party tools to identify and fix vulnerabilities."}], "stix_bundle": {"objects": [{"type": "vulnerability", "id": "https://example.com/vulnerability/1", "name": "Stored XSS in MailMunch Constant Contact Forms", "description": "Stored XSS vulnerability in MailMunch Constant Contact Forms", "background": "The vulnerability allows attackers to inject malicious scripts, which can lead to unauthorized access, data theft, or other malicious activities.", "severity": "Medium", "cvss": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "references": [{"url": "https://example.com/advisory/1", "description": "Advisory for CVE-2024-22137"}]}, {"type": "note", "id": "https://example.com/note/1", "content": "Implement robust input validation and sanitization to prevent stored XSS vulnerabilities.", "published": "2024-01-13T00:00:00.000"}], "relationships": [{"relationship": "is vulnerability of", "start": {"id": "https://example.com/vulnerability/1"}, "end": {"id": "https://example.com/note/1"}}]}, "technical_analysis": {"Introduction": "The CVE-2024-22137 represents a stored XSS vulnerability in MailMunch Constant Contact Forms.", "Impact and Scope": "The vulnerability allows attackers to inject malicious scripts, which can lead to unauthorized access, data theft, or other malicious activities.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to T1190, T1568, and T1191.", "Technical Details": "The vulnerability is caused by improper input validation and sanitization, which allows attackers to inject malicious scripts.", "Detection": "This vulnerability can be detected using web application scanners and input validation tools.", "Mitigation": "Implement robust input validation and sanitization to prevent stored XSS vulnerabilities.", "Conclusion": "In conclusion, the CVE-2024-22137 represents a serious vulnerability that can have detrimental effects. Implementing robust input validation and sanitization is the best mitigation strategy."}, "executive_analysis": {"Overview": "The CVE-2024-22137 is a stored XSS vulnerability in MailMunch Constant Contact Forms.", "Business Impact": "This vulnerability can lead to unauthorized access, data theft, or other malicious activities.", "Technical Impact": "This vulnerability allows attackers to inject malicious scripts, which can have detrimental effects.", "Mitigation Strategies": "Implementing robust input validation and sanitization is the best mitigation strategy.", "Recommendations": "Recommend implementing robust input validation and sanitization, and conducting regular security audits and penetration testing.", "Conclusions": "In conclusion, the CVE-2024-22137 is a serious vulnerability that requires immediate attention. Implementing robust input validation and sanitization is the best mitigation strategy."}}