{"id": "CVE-2024-32879", "sourceIdentifier": "security-advisories@github.com", "published": "2024-04-24T20:15:07.867", "lastModified": "2024-04-25T13:18:20.370", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Python Social Auth is a social authentication/registration mechanism. Prior to version 5.4.1, due to default case-insensitive collation in MySQL or MariaDB databases, third-party authentication user IDs are not case-sensitive and could cause different IDs to match. This issue has been addressed by a fix released in version 5.4.1. An immediate workaround would be to change collation of the affected field."}, {"lang": "es", "value": "Python Social Auth es un mecanismo de autenticaci\u00f3n/registro social. Antes de la versi\u00f3n 5.4.1, debido a la intercalaci\u00f3n predeterminada que no distingue entre may\u00fasculas y min\u00fasculas en las bases de datos MySQL o MariaDB, los ID de usuario de autenticaci\u00f3n de terceros no distinguen entre may\u00fasculas y min\u00fasculas y podr\u00edan hacer que coincidan diferentes ID. Este problema se solucion\u00f3 mediante una soluci\u00f3n publicada en la versi\u00f3n 5.4.1. Un workaround inmediata ser\u00eda cambiar la clasificaci\u00f3n del campo afectado."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-178"}, {"lang": "en", "value": "CWE-303"}]}], "references": [{"url": "https://github.com/python-social-auth/social-app-django/commit/31c3e0c7edb187004d8abbde7e9c4f7ef9098138", "source": "security-advisories@github.com"}, {"url": "https://github.com/python-social-auth/social-app-django/pull/566", "source": "security-advisories@github.com"}, {"url": "https://github.com/python-social-auth/social-app-django/security/advisories/GHSA-2gr8-3wc7-xhj3", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1047", "comment": "CVE-2024-32879 - Collation weakness in Python Social Auth allows for case-insensitive matching, allowing an attacker to manipulate user IDs. This can be mitigated by changing the collation of the affected field."}, {"techniqueID": "T1190", "comment": "CVE-2024-32879 - Unvalidated user input in Python Social Auth can lead to unauthorized access and manipulation of user data. This can be mitigated by validating user input and performing proper sanitation and encoding."}, {"techniqueID": "T1030", "comment": "CVE-2024-32879 - The use of default MySQL/MariaDB collation in Python Social Auth inherits the default behavior, allowing case-insensitive matching. This can be mitigated by explicitly setting the collation to a case-sensitive one."}, {"techniqueID": "T1568", "comment": "CVE-2024-32879 - The vulnerability in Python Social Auth can be exploited by an attacker to gain unauthorized access to user data, allowing for malicious activities. This can be mitigated by implementing proper access controls and permissions."}, {"techniqueID": "T1210", "comment": "CVE-2024-32879 - The vulnerability in Python Social Auth can be exploited by an attacker to manipulate user data, allowing for unauthorized changes. This can be mitigated by implementing proper data validation and sanitization."}], "technical_analysis": {"Introduction": "The CVE-2024-32879 vulnerability in Python Social Auth is a serious security flaw that allows for case-insensitive matching of user IDs, enabling unauthorized access and manipulation of user data. This vulnerability can be exploited by an attacker to gain unauthorized access to user data, allowing for malicious activities.", "Impact and Scope": "The impact of this vulnerability is high, with a CVSS score of 4.9. The attack vector is NETWORK, making it a high-risk vulnerability. The attack complexity is HIGH, requiring a high degree of skill and resources. The privileges required are LOW, making it possible for an attacker to exploit the vulnerability without requiring elevated privileges.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques for this vulnerability are T1047, T1190, T1030, T1568, and T1210.", "Technical Details": "The vulnerability is located in the `get_user_by_unique_id` function of the Python Social Auth library, which uses the `mysqlclient` library to connect to a MySQL or MariaDB database. The vulnerability is caused by the default case-insensitive collation in the database, which allows for case-insensitive matching of user IDs.", "Detection": "Detection of this vulnerability can be achieved by monitoring database queries and identifying suspicious patterns of user ID matching.", "Mitigation": "Mitigation of this vulnerability can be achieved by changing the collation of the affected field to a case-sensitive one, validating user input, and implementing proper access controls and permissions.", "Conclusion": "The CVE-2024-32879 vulnerability in Python Social Auth is a serious security flaw that requires immediate attention and mitigation. Proper measures should be taken to prevent unauthorized access and manipulation of user data."}, "executive_analysis": {"Overview": "The CVE-2024-32879 vulnerability in Python Social Auth is a critical security flaw that can have severe consequences for organizations that rely on the library.", "Business Impact": "The impact of this vulnerability on the business is significant, as it can allow unauthorized access and manipulation of user data, leading to reputational and financial damage.", "Technical Impact": "The technical impact of this vulnerability is high, as it can allow unauthorized access to sensitive data and systems, enabling malicious activities.", "Mitigation Strategies": "Mitigation strategies for this vulnerability include changing the collation of the affected field to a case-sensitive one, validating user input, and implementing proper access controls and permissions.", "Recommendations": "Recommendations for executives include implementing a vulnerability management program to address this vulnerability and others like it, performing regular security testing and monitoring, and ensuring that all systems and libraries are up to date with the latest security patches.", "Conclusions": "The CVE-2024-32879 vulnerability in Python Social Auth is a serious security flaw that requires immediate attention and mitigation. It is essential for organizations to prioritize the security and integrity of their systems and data."}}