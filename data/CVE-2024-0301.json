{"id": "CVE-2024-0301", "sourceIdentifier": "cna@vuldb.com", "published": "2024-01-08T07:15:08.767", "lastModified": "2024-05-17T02:34:30.353", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "A vulnerability classified as critical was found in fhs-opensource iparking 1.5.22.RELEASE. This vulnerability affects the function getData of the file src/main/java/com/xhb/pay/action/PayTempOrderAction.java. The manipulation leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-249868."}, {"lang": "es", "value": "Una vulnerabilidad fue encontrada en fhs-opensource iparking 1.5.22.RELEASE y clasificada como cr\u00edtica. Esta vulnerabilidad afecta a la funci\u00f3n getData del archivo src/main/java/com/xhb/pay/action/PayTempOrderAction.java. La manipulaci\u00f3n conduce a la inyecci\u00f3n de SQL. El ataque se puede iniciar de forma remota. La explotaci\u00f3n ha sido divulgada al p\u00fablico y puede utilizarse. El identificador de esta vulnerabilidad es VDB-249868."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:fhs-opensource:iparking:1.5.22:*:*:*:*:*:*:*", "matchCriteriaId": "1D6A2A9B-E632-4DF9-986F-616A1DAD9C3C"}]}]}], "references": [{"url": "https://github.com/laoquanshi/heishou/blob/main/iparking-SQL.pdf", "source": "cna@vuldb.com", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.249868", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.249868", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-0301 - The usage of user-controlled input in a SQL query without proper sanitization allows for SQL injection attacks, demonstrating the importance of validating and sanitizing user input in database queries to prevent exploitation."}, {"techniqueID": "T1027", "comment": "CVE-2024-0301 - The existence of vulnerable web application code allows for potential exploitation by an attacker, highlighting the need for strict access controls, security testing, and ongoing maintenance to prevent similar issues."}, {"techniqueID": "T1110", "comment": "CVE-2024-0301 - The potential for remote code execution and data theft emphasizes the importance of robust authentication and authorization mechanisms, secure network architectures, and regular security audits to detect and prevent potential attacks."}], "stix_bundle": {"type": "bundle", "id": "https://example.com/CVE-2024-0301-STIX-Bundle", "spec_version": "2.1", "objects": [{"id": "https://example.com/CVE-2024-0301-Vulnerability", "type": "vulnerability", "name": "CVE-2024-0301: fhs-opensource iparking 1.5.22.RELEASE SQL Injection Vulnerability", "description": [{"lang": "en", "value": "A vulnerability classified as critical was found in fhs-opensource iparking 1.5.22.RELEASE. This vulnerability affects the function getData of the file src/main/java/com/xhb/pay/action/PayTempOrderAction.java. The manipulation leads to sql injection."}], "cvss": {"vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "references": [{"id": "https://github.com/laoquanshi/heishou/blob/main/iparking-SQL.pdf", "reference": "Exploit"}, {"id": "https://vuldb.com/?ctiid.249868", "reference": "Third Party Advisory"}, {"id": "https://vuldb.com/?id.249868", "reference": "Third Party Advisory"}]}, {"id": "https://example.com/T1190-TTP", "type": "attack-pattern", "name": "SQL Injection", "description": [{"lang": "en", "value": "A technique used to inject malicious SQL code in order to extract or modify data in a database."}]}, {"id": "https://example.com/T1027-TTP", "type": "attack-pattern", "name": "Web Application Exploitation", "description": [{"lang": "en", "value": "A technique used to identify and exploit vulnerabilities in web applications."}]}, {"id": "https://example.com/T1110-TTP", "type": "attack-pattern", "name": "Remote Windows File System Access", "description": [{"lang": "en", "value": "A technique used to access and manipulate files on a remote Windows system."}]}], "relationships": [{"id": "https://example.com/CVE-2024-0301-Vulnerability/T1190-TTP", "type": "related-to", "source": "https://example.com/CVE-2024-0301-Vulnerability", "target": "https://example.com/T1190-TTP"}, {"id": "https://example.com/CVE-2024-0301-Vulnerability/T1027-TTP", "type": "related-to", "source": "https://example.com/CVE-2024-0301-Vulnerability", "target": "https://example.com/T1027-TTP"}, {"id": "https://example.com/CVE-2024-0301-Vulnerability/T1110-TTP", "type": "related-to", "source": "https://example.com/CVE-2024-0301-Vulnerability", "target": "https://example.com/T1110-TTP"}]}, "technical_analysis": {"Introduction": "The CVE-2024-0301 vulnerability in fhs-opensource iparking 1.5.22.RELEASE allows for remote SQL injection attacks, which can compromise sensitive data and disrupt normal system operation.", "Impact and Scope": "The vulnerability has a CVSS score of 9.8, indicating a critical risk, and is exploitable remotely.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to the following MITRE ATT&CK techniques: T1190, T1027, and T1110.", "Technical Details": "The vulnerability is caused by the use of user-controlled input in a SQL query without proper sanitization, making it vulnerable to SQL injection attacks.", "Detection": "Detection methods include monitoring database query logs, monitoring for abnormal database activity, and implementing web application firewalls.", "Mitigation": "Mitigation strategies include validating and sanitizing user input, using prepared statements, and implementing secure coding practices.", "Conclusion": "The CVE-2024-0301 vulnerability highlights the importance of secure coding practices, validation, and sanitization in database queries to prevent SQL injection attacks."}, "executive_analysis": {"Overview": "The CVE-2024-0301 vulnerability in fhs-opensource iparking 1.5.22.RELEASE affects the security and integrity of sensitive data.", "Business Impact": "The vulnerability could compromise sensitive data, disrupt normal system operation, and potentially lead to financial losses.", "Technical Impact": "The vulnerability is remotely exploitable and has a high severity, making it a critical risk.", "Mitigation Strategies": "Implementing secure coding practices, validating and sanitizing user input, and using prepared statements can mitigate the vulnerability.", "Recommendations": "Executives should prioritize remediation, conduct regular security testing, and implement data protection measures to prevent potential attacks.", "Conclusions": "The CVE-2024-0301 vulnerability highlights the importance of proactive security measures to prevent potential attacks and minimize business impact."}}