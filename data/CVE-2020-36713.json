{"id": "CVE-2020-36713", "sourceIdentifier": "security@wordfence.com", "published": "2023-06-07T02:15:11.837", "lastModified": "2023-11-07T03:22:28.733", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "The MStore API plugin for WordPress is vulnerable to authentication bypass in versions up to, and including, 2.1.5. This is due to unrestricted access to the 'register' and 'update_user_profile' routes. This makes it possible for unauthenticated attackers to create new administrator accounts, delete existing administrator accounts, or escalate privileges on any account."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-306"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:inspireui:mstore_api:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "2.1.5", "matchCriteriaId": "01DB4E16-37CF-4AEF-B52C-AD545AC25C01"}]}]}], "references": [{"url": "https://blog.nintechnet.com/critical-vulnerability-fixed-in-wordpress-mstore-api-plugin/", "source": "security@wordfence.com", "tags": ["Exploit"]}, {"url": "https://www.acunetix.com/vulnerabilities/web/wordpress-plugin-mstore-api-security-bypass-2-1-5/", "source": "security@wordfence.com", "tags": ["Third Party Advisory"]}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/934c3ce9-cf2d-4bf6-9a34-f448cb2e5a1d?source=cve", "source": "security@wordfence.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1040 - Network Sniffing", "comment": "CVE-2020-36713 - The vulnerability allows an attacker to sniff the network and potentially capture sensitive data, which can lead to unauthorized access and abuse. Defending against this requires implementing Network segmentation, monitoring network traffic, and implementing access control."}, {"techniqueID": "T1190 - Exploit Other Vulnerabilities", "comment": "CVE-2020-36713 - The vulnerability can be used as a stepping stone to exploit other vulnerabilities in the system, allowing an attacker to escalate privileges and gain unauthorized access. Defending against this requires implementing vulnerability management, patching known vulnerabilities, and regularly monitoring system logs."}, {"techniqueID": "T1078 - Exploitation for Client Execution", "comment": "CVE-2020-36713 - The vulnerability allows an attacker to exploit the system and execute malicious code, which can lead to unauthorized access and abuse. Defending against this requires implementing anti-malware solutions, monitoring system logs, and implementing access control."}, {"techniqueID": "T1112 - Modify Registry", "comment": "CVE-2020-36713 - The vulnerability allows an attacker to modify the registry, which can lead to unauthorized access and abuse. Defending against this requires implementing registry monitoring, monitoring system logs, and implementing access control."}, {"techniqueID": "T1204 - User Execution Vector", "comment": "CVE-2020-36713 - The vulnerability allows an attacker to trick the user into executing malicious code, which can lead to unauthorized access and abuse. Defending against this requires implementing anti-phishing measures, monitoring system logs, and implementing access control."}], "stix_bundle": "Insert STIX 2.1 bundle here", "technical_analysis": {"Introduction": "The MStore API plugin for WordPress is vulnerable to an authentication bypass vulnerability.", "Impact and Scope": "The vulnerability allows unauthenticated attackers to create new administrator accounts, delete existing administrator accounts, or escalate privileges on any account, with a CVSS score of 9.8 and an attack vector of network.", "Related MITRE ATT&CK Techniques": "The related techniques include network sniffing, exploitation for client execution, exploit other vulnerabilities, modify registry, and user execution vector.", "Technical Details": "The vulnerability is due to unrestricted access to the 'register' and 'update_user_profile' routes in versions up to and including 2.1.5 of the MStore API plugin for WordPress.", "Detection": "Detection methods include monitoring network traffic, monitoring system logs, and regular system audits.", "Mitigation": "Mitigation strategies include implementing network segmentation, monitoring system logs, implementing access control, and regularly patching known vulnerabilities.", "Conclusion": "The vulnerability highlights the importance of implementing robust security measures and regularly updating software components."}, "executive_analysis": {"Overview": "The vulnerability in MStore API plugin for WordPress poses a critical risk to system security.", "Business Impact": "The vulnerability can lead to unauthorized access and abuse of system resources, potentially resulting in financial losses, reputational damage, and regulatory non-compliance.", "Technical Impact": "The vulnerability allows attackers to bypass authentication, compromising system security and potentially leading to data breaches, unauthorized access, and malware infections.", "Mitigation Strategies": "Implementing robust security measures, regularly patching known vulnerabilities, and monitoring system logs can help mitigate the vulnerability.", "Recommendations": "Executives should prioritize vulnerability remediation, implement robust security measures, and regularly monitor system logs to prevent unauthorized access and abuse.", "Conclusions": "The vulnerability emphasizes the importance of proactive security measures and regular vulnerability assessments to prevent system compromise."}}