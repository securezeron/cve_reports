{"id": "CVE-2024-29900", "sourceIdentifier": "security-advisories@github.com", "published": "2024-03-29T16:15:08.103", "lastModified": "2024-04-01T01:12:59.077", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Electron Packager bundles Electron-based application source code with a renamed Electron executable and supporting files into folders ready for distribution. A random segment of ~1-10kb of Node.js heap memory allocated either side of a known buffer will be leaked into the final executable. This memory _could_ contain sensitive information such as environment variables, secrets files, etc. This issue is patched in 18.3.1.\n"}, {"lang": "es", "value": "Electron Packager incluye el c\u00f3digo fuente de la aplicaci\u00f3n basada en Electron con un ejecutable de Electron renombrado y archivos de soporte en carpetas listas para su distribuci\u00f3n. Un segmento aleatorio de ~1-10kb de memoria din\u00e1mica de Node.js asignado a cada lado de un b\u00fafer conocido se filtrar\u00e1 al ejecutable final. Esta memoria _podr\u00eda_ contener informaci\u00f3n confidencial como variables de entorno, archivos secretos, etc. Este problema se solucion\u00f3 en 18.3.1."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-402"}]}], "references": [{"url": "https://github.com/electron/packager/commit/d421d4bd3ced889a4143c5c3ab6d95e3be249eee", "source": "security-advisories@github.com"}, {"url": "https://github.com/electron/packager/security/advisories/GHSA-34h3-8mw4-qw57", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1059.001", "comment": "CVE-2024-29900 - Leaking sensitive data through Electron Packager. Defend against by validating input data and ensuring secure coding practices."}, {"techniqueID": "T1078", "comment": "CVE-2024-29900 - Leaking sensitive data through Electron Packager. Defend against by implementing input validation and secure coding practices."}, {"techniqueID": "T1602.002", "comment": "CVE-2024-29900 - Leaking sensitive data through Electron Packager. Defend against by monitoring for heap memory leaks and implementing secure coding practices."}], "stix_bundle": {"objects": [{"type": "relationship", "id": "relationship--cve-something", "created_by_ref": "identity--alice", "created": "2024-03-29T16:15:08.103", "modified": "2024-04-01T01:12:59.077", "relationship_type": "related_to", "start_time": "2024-03-29T16:15:08.103", "end_time": "2024-04-01T01:12:59.077", "target_ref": "vulnerability--cve-2024-29900"}], "vulnerability": {"type": "vulnerability", "id": "vulnerability--cve-2024-29900", "description": "Electron Packager bundles Electron-based application source code with a renamed Electron executable and supporting files into folders ready for distribution. A random segment of ~1-10kb of Node.js heap memory allocated either side of a known buffer will be leaked into the final executable.", "cvss_score": 7.5, "attack_vector": "NETWORK", "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}}, "technical_analysis": {"Introduction": "The vulnerability is a memory leak occurring in the Electron Packager, which could lead to the exposure of sensitive information.", "Impact and Scope": "The impact is high as sensitive information could be compromised. The scope is limited to the Electron Packager vulnerability.", "Related MITRE ATT&CK Techniques": "T1059.001, T1078, and T1602.002 are related to this vulnerability.", "Technical Details": "The leak occurs when a random segment of memory is allocated and then leaked.", "Detection": "The vulnerability can be detected through memory forensics.", "Mitigation": "Mitigate by implementing secure coding practices and validating input data.", "Conclusion": "In conclusion, this vulnerability has a high potential impact and should be addressed as soon as possible."}, "executive_analysis": {"Overview": "The vulnerability is a memory leak in the Electron Packager that could expose sensitive information.", "Business Impact": "The exposure of sensitive information could have significant business implications.", "Technical Impact": "The vulnerability is a technical issue that requires attention to mitigate.", "Mitigation Strategies": "Implement secure coding practices, validate input data.", "Recommendations": "Recommendation is to address the vulnerability as soon as possible.", "Conclusions": "In conclusion, this vulnerability requires immediate attention and mitigation."}}