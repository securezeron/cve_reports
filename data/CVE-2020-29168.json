{"id": "CVE-2020-29168", "sourceIdentifier": "cve@mitre.org", "published": "2023-02-17T15:15:11.970", "lastModified": "2023-11-07T03:21:26.487", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "SQL Injection vulnerability in Projectworlds Online Doctor Appointment Booking System, allows attackers to gain sensitive information via the q parameter to the getuser.php endpoint."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:online_doctor_appointment_booking_system_php_and_mysql_project:online_doctor_appointment_booking_system_php_and_mysql:1.0:*:*:*:*:*:*:*", "matchCriteriaId": "7E45DFE7-07C3-4BE0-A444-3F4C4F4AAF9D"}]}]}], "references": [{"url": "https://projectworlds.in/free-projects/php-projects/online-doctor-appointment-booking-system-php-and-mysql/%2C", "source": "cve@mitre.org"}, {"url": "https://projectworlds.in/wp-content/uploads/2020/05/PHP-Doctor-Appointment-System.zip", "source": "cve@mitre.org", "tags": ["Product"]}, {"url": "https://www.exploit-db.com/exploits/49059", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2020-29168 - SQL Injection vulnerability allows attackers to gain sensitive information via the q parameter to the getuser.php endpoint. This technique is relevant as it allows attackers to bypass authentication and authorization mechanisms."}, {"techniqueID": "T1090", "comment": "CVE-2020-29168 - The vulnerability allows attackers to inject malicious SQL queries, leading to potential data breaches and unauthorized access. Defending against this technique involves implementing Input Validation and Sanitization."}, {"techniqueID": "T1568", "comment": "CVE-2020-29168 - Attackers can leverage the vulnerability to extract sensitive information and inject malicious code to compromise the system. Defending against this technique involves implementing secure coding practices and ensuring proper error handling."}], "stix_bundle": {"bundle": {"type": "bundle", "id": "https://example.com/bundle/CVE-2020-29168", "created_by_ref": "https://example.com/STIX-Pattern/Author", "created": "2023-02-17T15:15:11.970", "modified": "2023-11-07T03:21:26.487", "name": "CVE-2020-29168", "description": "SQL Injection vulnerability in Projectworlds Online Doctor Appointment Booking System, allows attackers to gain sensitive information via the q parameter to the getuser.php endpoint.", "objects": [{"type": "vulnerability", "id": "https://example.com/vuln/CVE-2020-29168", "name": "CVE-2020-29168", "description": "SQL Injection vulnerability in Projectworlds Online Doctor Appointment Booking System, allows attackers to gain sensitive information via the q parameter to the getuser.php endpoint.", "published": "2023-02-17T15:15:11.970", "last_modified": "2023-11-07T03:21:26.487"}, {"type": "technique", "id": "https://example.com/tech/T1059", "name": "Command and Control - File Transfer", "description": " Techniques to transfer files between systems and/or networks."}, {"type": "course-of-action", "id": "https://example.com/coc/COA-1", "name": "COA-1", "description": "Implement Input Validation and Sanitization to prevent SQL Injection attacks", "mitigated_techniques": ["https://example.com/tech/T1059"]}], "relationships": [{"type": "has-course-of-action", "id": "https://example.com/relationship/COA-1", "source_ref": "https://example.com/vuln/CVE-2020-29168", "target_ref": "https://example.com/coc/COA-1"}]}}, "technical_analysis": {"Introduction": "The Projectworlds Online Doctor Appointment Booking System suffers from a SQL Injection vulnerability, allowing attackers to inject malicious SQL queries.", "Impact and Scope": "The vulnerability allows attackers to extract sensitive information and inject malicious code, leading to potential data breaches, unauthorized access, and system compromise.", "Related MITRE ATT&CK Techniques": "T1059, T1090, T1568", "Technical Details": "The vulnerability exists in the getuser.php endpoint, which does not properly validate and sanitize user input", "Detection": "Detecting this vulnerability requires monitoring for suspicious SQL queries and monitoring for signs of unauthorized access", "Mitigation": "Implementing Input Validation and Sanitization, using prepared statements, and restricting access to sensitive data can mitigate this vulnerability", "Conclusion": "The Projectworlds Online Doctor Appointment Booking System contains a SQL Injection vulnerability that allows attackers to exploit sensitive data."}, "executive_analysis": {"Overview": "The Projectworlds Online Doctor Appointment Booking System contains a SQL Injection vulnerability that can compromise sensitive data and system security", "Business Impact": "The vulnerability can lead to Data breaches, Financial loss, and Reputation damage", "Technical Impact": "The vulnerability can lead to System compromise, Access to sensitive data, and Malicious code injection", "Mitigation Strategies": "Implement Input Validation and Sanitization, Use prepared statements, Restrict access to sensitive data", "Recommendations": "Patch the vulnerability, Implement additional security measures, and Conduct regular security testing", "Conclusions": "The Projectworlds Online Doctor Appointment Booking System SQL Injection vulnerability is a significant security risk that requires immediate attention and action."}}