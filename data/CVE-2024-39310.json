{"id": "CVE-2024-39310", "sourceIdentifier": "security-advisories@github.com", "published": "2024-07-01T22:15:03.483", "lastModified": "2024-07-02T12:09:16.907", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Basil recipe theme for WordPress is vulnerable to Persistent Cross-Site Scripting (XSS) via the `post_title` parameter in versions up to, and including, 2.0.4 due to insufficient input sanitization and output escaping. This vulnerability allows authenticated attackers with contributor-level access and above to inject arbitrary web scripts in pages that will execute whenever a user accesses a compromised page. Because the of the default WordPress validation, it is not possible to insert the payload directly but if the Cooked plugin is installed, it is possible to create a recipe post type (cp_recipe) and inject the payload in the title field. Version 2.0.5 contains a patch for the issue."}, {"lang": "es", "value": "El tema Basil recipe para WordPress es vulnerable a Cross-Site Scripting (XSS) a trav\u00e9s del par\u00e1metro `post_title` en versiones hasta la 2.0.4 incluida debido a una sanitizaci\u00f3n de entrada y un escape de salida insuficientes. Esta vulnerabilidad permite a atacantes autenticados con acceso de nivel de colaborador y superior inyectar scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina comprometida. Debido a la validaci\u00f3n predeterminada de WordPress, no es posible insertar la carga \u00fatil directamente, pero si el complemento Cooked est\u00e1 instalado, es posible crear un tipo de publicaci\u00f3n de receta (cp_recipe) e inyectar el payload en el campo del t\u00edtulo. La versi\u00f3n 2.0.5 contiene un parche para el problema."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://github.com/XjSv/Basil/commit/e2b1dbf1637d1ec2663f9aa1a563b02dc76a8146", "source": "security-advisories@github.com"}, {"url": "https://github.com/XjSv/Basil/security/advisories/GHSA-cr7v-8v2h-49vx", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-39310 - This is a Cross-Site Scripting (XSS) vulnerability that allows authenticated attackers with contributor-level access and above to inject arbitrary web scripts in pages that will execute whenever a user accesses a compromised page. This can lead to theft of user data or hijacking of user sessions."}, {"techniqueID": "T1040", "comment": "CVE-2024-39310 - This is a Remote File Inclusion vulnerability that allows attackers to inject arbitrary files on the web server, which can be used to execute malicious scripts or upload web shells."}], "technical_analysis": {"Introduction": "The Basil recipe theme for WordPress is vulnerable to Persistent Cross-Site Scripting (XSS) due to insufficient input sanitization and output escaping.", "Impact and Scope": "The vulnerability allows authenticated attackers with contributor-level access and above to inject arbitrary web scripts in pages that will execute whenever a user accesses a compromised page. The CVSS score is 5.4, with a version of 3.1, and an attack vector of NETWORK.", "Related MITRE ATT&CK Techniques": "T1190: Cross-Site Scripting, T1040: Remote File Inclusion", "Technical Details": "The vulnerability occurs when the `post_title` parameter is not properly sanitized and escaped, allowing attackers to inject arbitrary web scripts. This is due to the lack of proper input validation and output escaping in the Basil recipe theme.", "Detection": "Detection can be done by monitoring for unusual web traffic, such as unusual queries or requests, and by analyzing web application logs for signs of malicious activity.", "Mitigation": "Mitigation can be done by patching the Basil recipe theme to version 2.0.5, which contains a fix for this vulnerability. Additionally, implementing input sanitization and output escaping can help prevent similar vulnerabilities in the future.", "Conclusion": "The Basil recipe theme for WordPress is vulnerable to Persistent Cross-Site Scripting (XSS) and it is essential to patch the theme to version 2.0.5 to prevent attacks."}, "executive_analysis": {"Overview": "The Basil recipe theme for WordPress has been identified as vulnerable to Persistent Cross-Site Scripting (XSS) due to insufficient input sanitization and output escaping.", "Business Impact": "This vulnerability can lead to theft of user data or hijacking of user sessions, which can result in financial losses and damage to the company's reputation.", "Technical Impact": "This vulnerability can allow attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses a compromised page, giving them access to sensitive data and user sessions.", "Mitigation Strategies": "Patching the theme to version 2.0.5, implementing input sanitization and output escaping, and monitoring for unusual web traffic and activity.", "Recommendations": "Recommendations include patching the theme, implementing input sanitization and output escaping, and monitoring for unusual web traffic and activity. It is also recommended to identify and patch all WordPress themes and plugins that are vulnerable to XSS and other web application vulnerabilities.", "Conclusions": "The Basil recipe theme for WordPress is vulnerable to Persistent Cross-Site Scripting (XSS) and it is essential to patch the theme to version 2.0.5 to prevent attacks."}}