{"id": "CVE-2024-29882", "sourceIdentifier": "security-advisories@github.com", "published": "2024-03-28T14:15:14.337", "lastModified": "2024-03-28T16:07:30.893", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "SRS is a simple, high-efficiency, real-time video server. SRS's `/api/v1/vhosts/vid-<id>?callback=<payload>` endpoint didn't filter the callback function name which led to injecting malicious javascript payloads and executing XSS ( Cross-Site Scripting). This vulnerability is fixed in 5.0.210 and 6.0.121."}, {"lang": "es", "value": "SRS es un servidor de v\u00eddeo en tiempo real, sencillo y de alta eficiencia. El endpoint `/api/v1/vhosts/vid-?callback=` de SRS no filtr\u00f3 el nombre de la funci\u00f3n de devoluci\u00f3n de llamada, lo que llev\u00f3 a inyectar payloads de JavaScript maliciosos y ejecutar XSS (Cross-Site Scripting). Esta vulnerabilidad se solucion\u00f3 en 5.0.210 y 6.0.121."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 7.2, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 2.7}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://github.com/ossrs/srs/commit/244ce7bc013a0b805274a65132a2980680ba6b9d", "source": "security-advisories@github.com"}, {"url": "https://github.com/ossrs/srs/security/advisories/GHSA-gv9r-qcjc-5hj7", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-29882 - Example of a Cross-Site Scripting (XSS) vulnerability that can be exploited by injecting malicious JavaScript payloads. Defend against by implementing proper input validation, sanitization, and encoding."}, {"techniqueID": "T1048", "comment": "CVE-2024-29882 - Example of a Web Application Weakness that can be exploited by injecting malicious JavaScript payloads. Defend against by implementing proper input validation, sanitization, and encoding."}, {"techniqueID": "T1033", "comment": "CVE-2024-29882 - Example of a Cross-Site Scripting (XSS) vulnerability that can be exploited by injecting malicious JavaScript payloads. Defend against by implementing proper input validation, sanitization, and encoding."}], "stix_bundle": {"identity": {"type": "vulnerability", "id": "CVE-2024-29882", "name": "CVE-2024-29882"}, "packages": [{"type": " threat-actor", "id": "TA0001", "name": "Unaffiliated Actor"}, {"type": "malware", "id": "MAL0915", "name": "JScript/XSS"}], "relationship": {"has_type": "vulnerability", "relationship_type": "affected_by", "from": "CVE-2024-29882", "to": {"id": "T1190", "type": "mitre-attack-technique"}}, "attack-pattern": {"id": "ap:0002", "name": "Attempted Cross-Site Scripting (XSS)", "description": "An attacker attempts to inject a malicious script into a Web application, often for the purpose of stealing sensitive information or taking control of the user's session."}, "course-of-action": {"id": "coa:0010", "name": "Implement input validation and sanitization", "description": "Implement input validation and sanitization techniques to prevent the injection of malicious code into the Web application."}}, "technical_analysis": {"Introduction": "CVE-2024-29882 is a Cross-Site Scripting (XSS) vulnerability in SRS's `/api/v1/vhosts/vid-<id>?callback=<payload>` endpoint that can be exploited by injecting malicious JavaScript payloads.", "Impact and Scope": "The impact of this vulnerability is a low confidentiality impact, low integrity impact, and no availability impact. The attack vector is NETWORK.", "Related MITRE ATT&CK Techniques": "T1190, T1048, T1033", "Technical Details": "The vulnerability occurs due to the improper filtering of callback function names, allowing attackers to inject malicious JavaScript payloads.", "Detection": "Detecting this vulnerability requires identifying the location of the attack and analyzing the injected JavaScript code.", "Mitigation": "Implementing proper input validation, sanitization, and encoding can prevent this vulnerability.", "Conclusion": "In conclusion, CVE-2024-29882 is a Cross-Site Scripting (XSS) vulnerability that can be exploited by injecting malicious JavaScript payloads."}, "executive_analysis": {"Overview": "CVE-2024-29882 is a Cross-Site Scripting (XSS) vulnerability in SRS's `/api/v1/vhosts/vid-<id>?callback=<payload>` endpoint that can be exploited by injecting malicious JavaScript payloads.", "Business Impact": "The business impact of this vulnerability is a potential loss of sensitive information or control of user sessions.", "Technical Impact": "The technical impact of this vulnerability is a low confidentiality impact, low integrity impact, and no availability impact.", "Mitigation Strategies": "Implementing proper input validation, sanitization, and encoding can prevent this vulnerability.", "Recommendations": "Executive management should prioritize addressing this vulnerability and ensuring that all Web applications have proper input validation, sanitization, and encoding.", "Conclusions": "In conclusion, addressing CVE-2024-29882 is crucial for preventing potential attacks and protecting sensitive information and user sessions."}}