{"id": "CVE-2020-28480", "sourceIdentifier": "report@snyk.io", "published": "2021-01-19T15:15:11.980", "lastModified": "2021-01-22T21:57:44.867", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The package jointjs before 3.3.0 are vulnerable to Prototype Pollution via util.setByPath (https://resources.jointjs.com/docs/jointjs/v3.2/joint.htmlutil.setByPath). The path used the access the object's key and set the value is not properly sanitized, leading to a Prototype Pollution."}, {"lang": "es", "value": "El paquete jointjs versiones anteriores a 3.3.0, es vulnerable a la contaminaci\u00f3n de prototipos por medio de util.setByPath (https://resources.jointjs.com/docs/jointjs/v3.2/joint.htmlutil.setByPath).&#xa0;La ruta usada para acceder a la clave del objeto y establecer el valor no est\u00e1 correctamente saneada, lo que conlleva a una Contaminaci\u00f3n de Prototipo"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "report@snyk.io", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 7.3, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-Other"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jointjs:jointjs:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.3.0", "matchCriteriaId": "4CF946DD-6434-45C1-AA78-CB1201201A75"}]}]}], "references": [{"url": "https://github.com/clientIO/joint/blob/master/src/util/util.mjs%23L150", "source": "report@snyk.io", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/clientIO/joint/pull/1406", "source": "report@snyk.io", "tags": ["Third Party Advisory"]}, {"url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1062037", "source": "report@snyk.io", "tags": ["Third Party Advisory"]}, {"url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1062036", "source": "report@snyk.io", "tags": ["Third Party Advisory"]}, {"url": "https://snyk.io/vuln/SNYK-JS-JOINTJS-1024444", "source": "report@snyk.io", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1090", "comment": "CVE-2020-28480 - JointJS before 3.3.0 allows local code execution via Prototype Pollution, allowing for an attacker to bypass security restrictions by injecting malicious code into vulnerable applications."}, {"techniqueID": "T1134", "comment": " CVE-2020-28480 - An attacker could potentially exploit this vulnerability by sending a malicious HTTP request to a vulnerable JointJS application, leading to code execution and potentially allow for an attacker to inject and steal data."}, {"techniqueID": "T1190", "comment": " CVE-2020-28480 - An attacker could exploit this by sending a specially crafted HTTP request to a vulnerable JointJS application, allowing for arbitrary code execution and potentially leading to system compromise."}, {"techniqueID": "T1508", "comment": " CVE-2020-28480 - This vulnerability can be used by an attacker to conduct data injection attacks, allowing them to manipulate the data that is being processed by the JointJS application."}, {"techniqueID": "T1552", "comment": " CVE-2020-28480 - Possible indicators of compromise for this threat include unauthorized changes to data within affected systems or unauthorized access to sensitive information."}], "stix_bundle": {"id": "cve-2020-28480", "type": "bundle", "spec_version": "2.1", "object_marking_refs": ["marking-definition--marking-1"], "objects": [{"id": "cve-2020-28480", "type": "vulnerability", "name": "JointJS Prototype Pollution Vulnerability", "description": "A prototype pollution vulnerability in JointJS allows an attacker to inject and steal data.", "attributes": {"exploited_by": ["CVE-2020-28480"], "exploited_by_refs": ["attack-pattern--attack-pattern-1"]}}, {"id": "attack-pattern--attack-pattern-1", "type": "attack-pattern", "name": "Data Injection Attack", "description": "An attacker injects malicious code into a JointJS application to manipulate data."}, {"id": "marking-definition--marking-1", "type": "marking-definition", "name": "Internal Network", "description": "Data originating from within the internal network."}, {"id": "course-of-action--course-of-action-1", "type": "course-of-action", "name": "Update JointJS to version 3.3.0 or later", "description": "Patch or update JointJS to the latest version to mitigate the vulnerability."}, {"id": "note--note-1", "type": "note", "content": "Monitor the network for data exfiltration attempts and suspicious activity."}]}, "technical_analysis": {"Introduction": "The JointJS Prototype Pollution Vulnerability (CVE-2020-28480) is a vulnerability that allows an attacker to inject and steal data.", "Impact and Scope": "This vulnerability is rated 9.8 out of 10 in terms of CVSS score and has a high risk of exploitation. The attack vector is network-based.", "Related MITRE ATT&CK Techniques": "T1090, T1134, T1190, T1508, T1552", "Technical Details": "The vulnerability is caused by a lack of proper sanitization in the util.setByPath function in JointJS, allowing attackers to inject and steal data.", "Detection": "Monitor the network for data exfiltration attempts and suspicious activity.", "Mitigation": "Update JointJS to version 3.3.0 or later and restrict access to the application.", "Conclusion": "The JointJS Prototype Pollution Vulnerability is a critical vulnerability that requires immediate attention and patching."}, "executive_analysis": {"Overview": "The JointJS Prototype Pollution Vulnerability is a critical vulnerability that can allow attackers to inject and steal data.", "Business Impact": "This vulnerability can potentially lead to financial losses, reputational damage, and compromised sensitive information.", "Technical Impact": "The vulnerability can allow attackers to execute arbitrary code and potentially compromise the system.", "Mitigation Strategies": "Update JointJS to version 3.3.0 or later and restrict access to the application.", "Recommendations": "Patch or update JointJS, restrict access to the application, and monitor the network for suspicious activity.", "Conclusions": "The JointJS Prototype Pollution Vulnerability is a critical vulnerability that requires immediate attention and patching to prevent potential attacks."}}