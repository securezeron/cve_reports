{"id": "CVE-2024-0691", "sourceIdentifier": "security@wordfence.com", "published": "2024-02-05T22:16:04.037", "lastModified": "2024-02-13T16:57:26.083", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The FileBird plugin for WordPress is vulnerable to Stored Cross-Site Scripting via imported folder titles in all versions up to, and including, 5.5.8.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator access, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. It may also be possible to socially engineer an administrator into uploading a malicious folder import."}, {"lang": "es", "value": "El complemento FileBird para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s de t\u00edtulos de carpetas importados en todas las versiones hasta la 5.5.8.1 incluida, debido a una sanitizaci\u00f3n de entrada y un escape de salida insuficientes. Esto hace posible que atacantes autenticados, con acceso de administrador, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada. Tambi\u00e9n es posible dise\u00f1ar socialmente a un administrador para que cargue una importaci\u00f3n de carpeta maliciosa."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}, {"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:ninjateam:filebird:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "5.5.8.1", "matchCriteriaId": "02AFAB21-063F-4AB7-8034-88DFC58CD16B"}]}]}], "references": [{"url": "https://plugins.trac.wordpress.org/changeset/3023924/filebird", "source": "security@wordfence.com", "tags": ["Patch"]}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/47f04985-dd9b-449f-8b4c-9811fe7e4a96?source=cve", "source": "security@wordfence.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "TA0002", "comment": "CVE-2024-0691 - Cross-site scripting (XSS) is a common web application vulnerability that can potentially allow an attacker to inject malicious HTML or JavaScript code into a web page. This vulnerability can be exploited by an attacker to steal sensitive information or take control of the user's session."}, {"techniqueID": "TA0037", "comment": "CVE-2024-0691 - Authenticated JavaScript code injection allows an attacker to inject JavaScript code into a web site or web application, which can be used to steal sensitive information or take control of the user's session."}, {"techniqueID": "TA0040", "comment": "CVE-2024-0691 - Web Application Attacks allow an attacker to inject malicious code into a web application, which can be used to steal sensitive information or take control of the user's session."}, {"techniqueID": "TA0041", "comment": "CVE-2024-0691 - File Inclusion Vulnerability allows an attacker to inject malicious code into a web application, which can be used to steal sensitive information or take control of the user's session."}, {"techniqueID": "TA0001", "comment": "CVE-2024-0691 - Initial Network Payment is the first step in the web application attack, it allows an attacker to inject malicious code into a web application, which can be used to steal sensitive information or take control of the user's session."}], "stix_bundle": {"type": "stix:Bundl", "id": "https://example.com/cve-2024-0691", "title": "CVE-2024-0691 - FileBird Plugin for WordPress Stored Cross-Site Scripting", "description": "This bundle represents the CVE-2024-0691 vulnerability in the FileBird plugin for WordPress, which allows authenticated attackers to inject malicious JavaScript code into the application.", "objects": [{"type": "stix:Incident", "id": "https://example.com/cve-2024-0691/Incident-1", "title": "CVE-2024-0691 - FileBird Plugin for WordPress Stored Cross-Site Scripting", "description": "This incident represents the CVE-2024-0691 vulnerability in the FileBird plugin for WordPress, which allows authenticated attackers to inject malicious JavaScript code into the application."}, {"type": "stix:Indicator", "id": "https://example.com/cve-2024-0691/Indicator-1", "title": "FileBird Plugin for WordPress Stored Cross-Site Scripting Indicator", "description": "This indicator represents the malicious JavaScript code injected into the FileBird plugin for WordPress, which can be used to steal sensitive information or take control of the user's session."}, {"type": "stix:Course-of-Action", "id": "https://example.com/cve-2024-0691/Course-of-Action-1", "title": "Update the FileBird plugin for WordPress to a version that is not vulnerable to the stored cross-site scripting vulnerability", "description": "This course of action represents the recommended mitigation strategy for the CVE-2024-0691 vulnerability, which is to update the FileBird plugin for WordPress to a version that is not vulnerable to the stored cross-site scripting vulnerability."}], "objects_refs": [{"id": "https://example.com/cve-2024-0691/Incident-1", "type": "stix:Incident", "relationship": "related_to"}, {"id": "https://example.com/cve-2024-0691/Indicator-1", "type": "stix:Indicator", "relationship": "related_to"}, {"id": "https://example.com/cve-2024-0691/Course-of-Action-1", "type": "stix:Course-of-Action", "relationship": "related_to"}]}, "technical_analysis": {"Introduction": "The FileBird plugin for WordPress is vulnerable to stored cross-site scripting (XSS) due to insufficient input sanitization and output escaping. This vulnerability allows authenticated attackers to inject malicious JavaScript code into the application.", "Impact and Scope": "This vulnerability has a CVSS score of 4.8 and is considered to have a medium severity. It can be exploited by an attacker to inject malicious JavaScript code into the application.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques for this vulnerability are TA0002, TA0037, TA0040, TA0041, and TA0001.", "Technical Details": "The vulnerability is caused by the insufficient input sanitization and output escaping in the FileBird plugin for WordPress. This allows an attacker to inject malicious JavaScript code into the application.", "Detection": "The vulnerability can be detected by monitoring for suspicious JavaScript code being injected into the application.", "Mitigation": "The recommended mitigation strategy is to update the FileBird plugin for WordPress to a version that is not vulnerable to the stored cross-site scripting vulnerability.", "Conclusion": "In conclusion, the FileBird plugin for WordPress is vulnerable to stored cross-site scripting due to insufficient input sanitization and output escaping. This vulnerability allows authenticated attackers to inject malicious JavaScript code into the application."}, "executive_analysis": {"Overview": "The FileBird plugin for WordPress is vulnerable to stored cross-site scripting due to insufficient input sanitization and output escaping.", "Business Impact": "This vulnerability can allow attackers to inject malicious JavaScript code into the application, which can be used to steal sensitive information or take control of the user's session.", "Technical Impact": "The vulnerability can be exploited by an attacker to inject malicious JavaScript code into the application.", "Mitigation Strategies": "The recommended mitigation strategy is to update the FileBird plugin for WordPress to a version that is not vulnerable to the stored cross-site scripting vulnerability.", "Recommendations": "Recommendations for executives include updating the FileBird plugin for WordPress, monitoring for suspicious JavaScript code, and implementing additional security measures.", "Conclusions": "In conclusion, the FileBird plugin for WordPress is vulnerable to stored cross-site scripting due to insufficient input sanitization and output escaping. This vulnerability allows authenticated attackers to inject malicious JavaScript code into the application."}}