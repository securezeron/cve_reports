{"id": "CVE-2020-8521", "sourceIdentifier": "larry0@me.com", "published": "2020-07-07T20:15:10.337", "lastModified": "2020-07-09T18:31:19.163", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "SQL injection with start and length parameters in Records.php for phpzag live add edit delete data tables records with ajax php mysql"}, {"lang": "es", "value": "Una inyecci\u00f3n SQL con par\u00e1metros start y length del archivo Records.php para phpzag live agregar editar eliminar registros de tablas de datos con ajax php mysql"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpzag:phpzag:-:*:*:*:*:*:*:*", "matchCriteriaId": "48F1CDD1-16F1-41FF-B4A3-B147EA06000C"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2020/07/09/1", "source": "larry0@me.com", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "http://www.vapidlabs.com/advisory.php?v=213", "source": "larry0@me.com", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://www.phpzag.com/live-add-edit-delete-datatables-records-with-ajax-php-mysql/", "source": "larry0@me.com", "tags": ["Product", "Vendor Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2020-8521 - This vulnerability allows attackers to exploit SQL injection using start and length parameters, which can be mitigated by utilizing prepared statements and input validation."}, {"techniqueID": "T1040", "comment": "CVE-2020-8521 - This vulnerability enables attackers to inject arbitrary SQL queries, which can be prevented by integrating input validation and sanitization into application development."}, {"techniqueID": "T1055", "comment": "CVE-2020-8521 - This vulnerability allows attackers to compromise data confidentiality and integrity, which can be mitigated by implementing robust authentication and access controls."}], "stix_bundle": {"stix_objects": [{"id": "CVE-2020-8521", "type": "vulnerability", "created_by_ref": "identity--1234567890", "created": "2020-07-09T18:31:19.163", "modified": "2020-07-09T18:31:19.163", "name": "CVE-2020-8521: SQL Injection in phpzag Records.php", "description": "A SQL injection vulnerability exists in the Records.php file of phpzag's live add, edit, and delete data tables records with AJAX PHP and MySQL, which allows attackers to inject arbitrary SQL queries.", "severity": "HIGH", "references": [{"id": "http://www.openwall.com/lists/oss-security/2020/07/09/1", "url": "http://www.openwall.com/lists/oss-security/2020/07/09/1", "source": "larry0@me.com", "tags": ["Exploit", "Third Party Advisory"]}, {"id": "http://www.vapidlabs.com/advisory.php?v=213", "url": "http://www.vapidlabs.com/advisory.php?v=213", "source": "larry0@me.com", "tags": ["Exploit", "Third Party Advisory"]}, {"id": "https://www.phpzag.com/live-add-edit-delete-datatables-records-with-ajax-php-mysql/", "url": "https://www.phpzag.com/live-add-edit-delete-datatables-records-with-ajax-php-mysql/", "source": "larry0@me.com", "tags": ["Product", "Vendor Advisory"]}]}]}, "technical_analysis": {"Introduction": "The CVE-2020-8521 is a SQL injection vulnerability found in the Records.php file of phpzag's live add, edit, and delete data tables records with AJAX PHP and MySQL, which allows attackers to inject arbitrary SQL queries.", "Impact and Scope": "The vulnerability exists in the Records.php file of phpzag's live add, edit, and delete data tables records with AJAX PHP and MySQL, allowing attackers to inject arbitrary SQL queries, leading to a high impact and scope.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to the following MITRE ATT&CK techniques: T1059, T1040, and T1055.", "Technical Details": "The vulnerability occurs when user input is not properly sanitized and validated, allowing attackers to inject arbitrary SQL queries and potentially execute malicious code.", "Detection": "The vulnerability can be detected through network traffic analysis and by monitoring for suspicious SQL queries.", "Mitigation": "The vulnerability can be mitigated by integrating input validation and sanitization into application development, and utilizing prepared statements to prevent SQL injection attacks.", "Conclusion": "The CVE-2020-8521 is a high-impact vulnerability that can be exploited by attackers to inject arbitrary SQL queries, and is related to the following MITRE ATT&CK techniques."}, "executive_analysis": {"Overview": "The CVE-2020-8521 is a SQL injection vulnerability found in the Records.php file of phpzag's live add, edit, and delete data tables records with AJAX PHP and MySQL.", "Business Impact": "The vulnerability can have a significant impact on the business, as it could allow attackers to access sensitive data and disrupt business operations.", "Technical Impact": "The vulnerability can have a technical impact on the application, as it could allow attackers to execute malicious code and potentially compromise data confidentiality and integrity.", "Mitigation Strategies": "To mitigate the vulnerability, we recommend integrating input validation and sanitization into application development, and utilizing prepared statements to prevent SQL injection attacks.", "Recommendations": "We recommend that administrators and developers take immediate action to address this vulnerability, and implement robust security measures to prevent future vulnerabilities.", "Conclusions": "In conclusion, the CVE-2020-8521 is a high-impact vulnerability that requires immediate attention and action to mitigate its effects, and it is essential to prioritize security and implement robust security measures to prevent future vulnerabilities."}}