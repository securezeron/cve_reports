{"id": "CVE-2024-41812", "sourceIdentifier": "security-advisories@github.com", "published": "2024-07-26T17:15:12.783", "lastModified": "2024-07-29T14:12:08.783", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "txtdot is an HTTP proxy that parses only text, links, and pictures from pages, removing ads and heavy scripts. Prior to version 1.7.0, a Server-Side Request Forgery (SSRF) vulnerability in the `/get` route of txtdot allows remote attackers to use the server as a proxy to send HTTP GET requests to arbitrary targets and retrieve information in the internal network. Version 1.7.0 prevents displaying the response of forged requests, but the requests can still be sent. For complete mitigation, a firewall between txtdot and other internal network resources should be set."}, {"lang": "es", "value": "txtdot es un proxy HTTP que analiza s\u00f3lo texto, enlaces e im\u00e1genes de las p\u00e1ginas, eliminando anuncios y scripts pesados. Antes de la versi\u00f3n 1.7.0, una vulnerabilidad de Server-Side Request Forgery (SSRF) en la ruta `/get` de txtdot permit\u00eda a atacantes remotos usar el servidor como proxy para enviar solicitudes HTTP GET a objetivos arbitrarios y recuperar informaci\u00f3n en el servidor interno. red. La versi\u00f3n 1.7.0 impide mostrar la respuesta de solicitudes falsificadas, pero las solicitudes a\u00fan se pueden enviar. Para una mitigaci\u00f3n completa, se debe configurar un firewall entre txtdot y otros recursos de la red interna."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-918"}]}], "references": [{"url": "https://github.com/TxtDot/txtdot/blob/a7fdaf80fdf45abefe83b2eb5135ba112142dc74/src/handlers/distributor.ts#L43-L47", "source": "security-advisories@github.com"}, {"url": "https://github.com/TxtDot/txtdot/commit/7c72d985f7a26ec1fd3cf628444717ca54986d2d", "source": "security-advisories@github.com"}, {"url": "https://github.com/TxtDot/txtdot/security/advisories/GHSA-4gj5-xj97-j8fp", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1210", "comment": "CVE-2024-41812 - Potential Server-Side Request Forgery (SSRF) vulnerability in the `/get` route of txtdot, allowing remote attackers to use the server as a proxy to send HTTP GET requests to arbitrary targets and retrieve information in the internal network."}], "stix_bundle": {"objects": [{"id": "CVE-2024-41812", "type": "vulnerability", "created_by_ref": "STIX_Someone", "modified": "2024-07-29T14:12:08.783", "description": {"lang": "en", "value": "txtdot is an HTTP proxy that parses only text, links, and pictures from pages, removing ads and heavy scripts. Prior to version 1.7.0, a Server-Side Request Forgery (SSRF) vulnerability in the `/get` route of txtdot allows remote attackers to use the server as a proxy to send HTTP GET requests to arbitrary targets and retrieve information in the internal network."}, "_ATTACKER": {"relationship_type": "exploited-by", "related_object": {"id": "T1210", "type": "attack-pattern", "_content_type_test": "attack-pattern", "name": "Server-Side Request Forgery"}}, "DEFENDER": {"relationship_type": "mitigated-by", "related_object": {"id": "DEFENSE-MITM-008", "type": "kill-chain-phase", "_content_type_test": "kill-chain-phase", "name": "Mitigation: Implement firewall rules"}}}, {"id": "DEFENSE-MITM-008", "type": "kill-chain-phase", "definition": "Implement firewall rules to block malicious traffic", "description": "Block HTTP GET requests to arbitrary targets to prevent data exfiltration", "courses_of_action": [{"id": "COA-008-001", "type": "course-of-action", "description": "Configure a firewall to block HTTP GET requests to arbitrary targets", "note": "Part of defense-in-depth strategy"}]}, {"id": "T1210", "type": "attack-pattern", "name": "Server-Side Request Forgery", "description": "Server-Side Request Forgery (SSRF) is a type of web-based attack where an attacker can trick the server into making requests to arbitrary targets"}], "bundle": {"_stix_bundle": {"description": "STIX Bundle for CVE-2024-41812", "title": "CVE-2024-41812 - txtdot SSRF Vulnerability"}}}, "technical_analysis": {"Introduction": "txtdot, an HTTP proxy, has a potential Server-Side Request Forgery (SSRF) vulnerability in its `/get` route, allowing attackers to use the server as a proxy to send HTTP GET requests to arbitrary targets and retrieve information in the internal network.", "Impact and Scope": "The impact of this vulnerability is HIGH confidentiality, as attackers can use the server to retrieve sensitive information from arbitrary targets. The scope is NETWORK, as the vulnerability is related to HTTP requests.", "Related MITRE ATT&CK Techniques": "T1210 - Server-Side Request Forgery", "Technical Details": "The vulnerability is due to the way txtdot handles requests, allowing an attacker to trick the server into making requests to arbitrary targets.", "Detection": "Detection can be achieved by monitoring network traffic and looking for suspicious requests to arbitrary targets.", "Mitigation": "Mitigation strategies include implementing firewall rules to block malicious traffic and implementing secure coding practices.", "Conclusion": "In conclusion, this vulnerability highlights the importance of secure coding practices and regular security testing."}, "executive_analysis": {"Overview": "txtdot, an HTTP proxy, has a potential Server-Side Request Forgery (SSRF) vulnerability that enables attackers to retrieve sensitive information from arbitrary targets.", "Business Impact": "The business impact of this vulnerability is HIGH, as it can lead to data exfiltration and compromise of sensitive information.", "Technical Impact": "The technical impact is HIGH, as the vulnerability could allow attackers to retrieve sensitive information from arbitrary targets.", "Mitigation Strategies": "Mitigation strategies include implementing firewall rules and secure coding practices.", "Recommendations": "Recommendations for executives include prioritizing security testing and implementing a defense-in-depth strategy.", "Conclusions": "In conclusion, this vulnerability highlights the importance of prioritizing security and implementing a defense-in-depth strategy to protect against data exfiltration and compromise."}}