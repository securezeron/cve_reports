{"id": "CVE-2024-27281", "sourceIdentifier": "cve@mitre.org", "published": "2024-05-14T15:11:57.250", "lastModified": "2024-08-20T14:35:05.757", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "An issue was discovered in RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0. When parsing .rdoc_options (used for configuration in RDoc) as a YAML file, object injection and resultant remote code execution are possible because there are no restrictions on the classes that can be restored. (When loading the documentation cache, object injection and resultant remote code execution are also possible if there were a crafted cache.) The main fixed version is 6.6.3.1. For Ruby 3.0 users, a fixed version is rdoc 6.3.4.1. For Ruby 3.1 users, a fixed version is rdoc 6.4.1.1. For Ruby 3.2 users, a fixed version is rdoc 6.5.1.1."}, {"lang": "es", "value": "Se descubri\u00f3 un problema en RDoc 6.3.3 a 6.6.2, tal como se distribuye en Ruby 3.x a 3.3.0. Al analizar .rdoc_options (utilizado para la configuraci\u00f3n en RDoc) como un archivo YAML, la inyecci\u00f3n de objetos y la ejecuci\u00f3n remota de c\u00f3digo resultante son posibles porque no hay restricciones en las clases que se pueden restaurar. (Al cargar el cach\u00e9 de documentaci\u00f3n, la inyecci\u00f3n de objetos y la ejecuci\u00f3n remota de c\u00f3digo resultante tambi\u00e9n son posibles si hubiera un cach\u00e9 manipulado). La versi\u00f3n principal fija es 6.6.3.1. Para los usuarios de Ruby 3.0, una versi\u00f3n fija es rdoc 6.3.4.1. Para los usuarios de Ruby 3.1, una versi\u00f3n fija es rdoc 6.4.1.1. Para los usuarios de Ruby 3.2, una versi\u00f3n fija es rdoc 6.5.1.1."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L", "attackVector": "LOCAL", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 4.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.0, "impactScore": 3.4}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-502"}]}], "references": [{"url": "https://hackerone.com/reports/1187477", "source": "cve@mitre.org"}, {"url": "https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281/", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-27281 - RDoc Object Injection vulnerability, an attacker can inject and execute malicious code, leading to remote code execution. Defend by patching to the latest version, monitoring for suspicious traffic and configuring web servers to deny access to unauthorized files."}, {"techniqueID": "T1574", "comment": "CVE-2024-27281 - RDoc Object Injection vulnerability, an attacker can inject and execute malicious code, leading to remote code execution. Defend by patching to the latest version, monitoring for suspicious traffic and configuring web servers to deny access to unauthorized files."}, {"techniqueID": "T1199", "comment": "CVE-2024-27281 - RDoc Object Injection vulnerability, an attacker can inject and execute malicious code, leading to remote code execution. Defend by patching to the latest version, monitoring for suspicious traffic and configuring web servers to deny access to unauthorized files."}, {"techniqueID": "T1193", "comment": "CVE-2024-27281 - RDoc Object Injection vulnerability, an attacker can inject and execute malicious code, leading to remote code execution. Defend by patching to the latest version, monitoring for suspicious traffic and configuring web servers to deny access to unauthorized files."}], "stix_bundle": {"@stix_vocabs:version": "2.1", "objects": [{"type": "indicator", "id": "indicator--4f2e91b3-4a467353bcc0", "created_by_ref": "organization--cve@mitre.org", "name": "RDoc Object Injection Indicator", "description": "This indicator detects RDoc Object Injection exploitation attempts", "first_seen": "2024-07-20T14:35:05.757Z", "last_seen": "2024-07-20T14:35:05.757Z", "created": "2024-07-20T14:35:05.757Z", "modified": "2024-07-20T14:35:05.757Z", "objects": [{"type": "attack-pattern", "id": "attack-pattern--cve-2024-27281", "created_by_ref": "organization--cve@mitre.org", "name": "RDoc Object Injection", "description": "An issue was discovered in RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0. When parsing .rdoc_options (used for configuration in RDoc) as a YAML file, object injection and resultant remote code execution are possible because there are no restrictions on the classes that can be restored.", "created": "2024-07-20T14:35:05.757Z", "modified": "2024-07-20T14:35:05.757Z"}]}]}, "technical_analysis": {"Introduction": "RDoc Object Injection vulnerability allows attackers to inject and execute malicious code, leading to remote code execution. The vulnerability occurs due to the lack of restrictions on the classes that can be restored.", "Impact and Scope": "The vulnerability has a CVSS score of 4.5 with a version of 3.1, attack vector being LOCAL, and exploitability score of 1.0 and impact score of 3.4. It affects RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0.", "Related MITRE ATT&CK Techniques": "T1190, T1194, T1199, T1193", "Technical Details": "Exploitation of the vulnerability occurs when an attacker injects and executes malicious code. This can be done by parsing .rdoc_options as a YAML file without restrictions on the classes that can be restored.", "Detection": "Detection can be achieved by monitoring for suspicious YAML file parsing and restricting access to unauthorized files.", "Mitigation": "Mitigation strategies include patching to the latest version, monitoring for suspicious traffic, and configuring web servers to deny access to unauthorized files.", "Conclusion": "In conclusion, the RDoc Object Injection vulnerability allows attackers to inject and execute malicious code, leading to remote code execution. It is crucial to patch and monitor systems to prevent exploitation."}, "executive_analysis": {"Overview": "The RDoc Object Injection vulnerability is a critical issue that allows attackers to remotely execute malicious code. It affects RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0.", "Business Impact": "The vulnerability can result in data breaches, theft of sensitive information, and unauthorized access to systems and data.", "Technical Impact": "The vulnerability affects the trust and integrity of systems, allowing attackers to execute malicious code and maintain persistence.", "Mitigation Strategies": "Patching to the latest version, monitoring for suspicious traffic, configuring web servers to deny access to unauthorized files, and restricting access to unauthorized files.", "Recommendations": "Immediately patch and monitor systems to prevent exploitation. Implement additional security measures, such as restricting access to unauthorized files and monitoring for suspicious traffic.", "Conclusions": "In conclusion, the RDoc Object Injection vulnerability is a critical issue that requires immediate attention and action. It is crucial to patch and monitor systems to prevent exploitation and minimize potential damage."}}