{"id": "CVE-2020-28473", "sourceIdentifier": "report@snyk.io", "published": "2021-01-18T12:15:12.707", "lastModified": "2021-01-28T15:57:55.260", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The package bottle from 0 and before 0.12.19 are vulnerable to Web Cache Poisoning by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter."}, {"lang": "es", "value": "El paquete bottle desde versiones 0 y anteriores a 0.12.19, es vulnerable al Envenenamiento de Cach\u00e9 Web al usar un vector llamado encubrimiento de par\u00e1metros.&#xa0;Cuando el atacante puede separar los par\u00e1metros de consulta usando un punto y coma (;), pueden causar una diferencia en la interpretaci\u00f3n de la petici\u00f3n entre el proxy (que se ejecuta con la configuraci\u00f3n predeterminada) y el servidor.&#xa0;Esto puede resultar en que las peticiones maliciosas se almacenen en cach\u00e9 como completamente seguras, ya que el proxy normalmente no ver\u00eda el punto y coma como un separador y, por lo tanto, no lo incluir\u00eda en una clave de cach\u00e9 de un par\u00e1metro sin clave"}], "metrics": {"cvssMetricV31": [{"source": "report@snyk.io", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 6.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.6, "impactScore": 5.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-444"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:bottlepy:bottle:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.12.19", "matchCriteriaId": "6C2A48B7-D939-4AB5-A241-4071D99F0033"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*", "matchCriteriaId": "DEECE5FC-CACF-4496-A3E7-164736409252"}]}]}], "references": [{"url": "https://github.com/bottlepy/bottle", "source": "report@snyk.io", "tags": ["Product", "Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2021/01/msg00019.html", "source": "report@snyk.io", "tags": ["Third Party Advisory"]}, {"url": "https://snyk.io/blog/cache-poisoning-in-popular-open-source-packages/", "source": "report@snyk.io", "tags": ["Third Party Advisory"]}, {"url": "https://snyk.io/vuln/SNYK-PYTHON-BOTTLE-1017108", "source": "report@snyk.io", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2020-28473 - This vulnerability can be exploited using Web Cache Poisoning, a technique that can result in malicious requests being cached as completely safe ones. Defending against this involves implementing proper Web Cache Poisoning mitigation techniques, such as validating user input and ensuring that cache keys are properly generated."}, {"techniqueID": "T1598", "comment": "CVE-2020-28473 - This vulnerability can also be exploited using Parameter Cloaking, a technique that can cause a difference in the interpretation of the request between the proxy and the server. Defending against this involves validating user input and ensuring that parameter names are not susceptible to cloaking attacks."}, {"techniqueID": "T1599", "comment": "CVE-2020-28473 - This vulnerability can also be exploited using Cache Poisoning, a technique that can result in malicious requests being cached as completely safe ones. Defending against this involves implementing proper Cache Poisoning mitigation techniques, such as validating user input and ensuring that cache keys are properly generated."}, {"techniqueID": "T1623", "comment": "CVE-2020-28473 - This vulnerability can also be exploited using Content-based Cache Poisoning, a technique that can cause a difference in the interpretation of the request between the proxy and the server. Defending against this involves validating user input and ensuring that content-based cache keys are properly generated."}], "stix_bundle": {"type": "bundle", "id": "https://example.com/bundles/2020-28473", "objects": [{"type": "vulnerability", "id": "https://example.com/vulnerabilities/2020-28473", "name": "CVE-2020-28473", "description": "Web Cache Poisoning vulnerability in Bottle", "published": "2021-01-18T12:15:12.707", "modified": "2021-01-28T15:57:55.260", "cwe": {"id": "CWE-444"}}, {"type": "attack-pattern", "id": "https://example.com/attack-patterns/T1190", "name": "Web Cache Poisoning", "description": "Cache poisoning using web cache mechanisms"}, {"type": "attack-pattern", "id": "https://example.com/attack-patterns/T1598", "name": "Parameter Cloaking", "description": "Cloaking parameter names to bypass cache keys"}, {"type": "attack-pattern", "id": "https://example.com/attack-patterns/T1599", "name": "Cache Poisoning", "description": "Caching malicious requests as safe ones"}, {"type": "attack-pattern", "id": "https://example.com/attack-patterns/T1623", "name": "Content-based Cache Poisoning", "description": "Poisoning cache using content-based cache keys"}, {"type": "course-of-action", "id": "https://example.com/course-of-actions/defend-against-2020-28473", "name": "Defend Against CVE-2020-28473", "description": "Implementing mitigation techniques against CVE-2020-28473", "related_object": {"id": "https://example.com/vulnerabilities/2020-28473", "type": "vulnerability"}}], "relationships": [{"type": "related_to", "id": "https://example.com/relationships/2020-28473-T1190", "from": {"id": "https://example.com/vulnerabilities/2020-28473", "type": "vulnerability"}, "to": {"id": "https://example.com/attack-patterns/T1190", "type": "attack-pattern"}}, {"type": "related_to", "id": "https://example.com/relationships/2020-28473-T1598", "from": {"id": "https://example.com/vulnerabilities/2020-28473", "type": "vulnerability"}, "to": {"id": "https://example.com/attack-patterns/T1598", "type": "attack-pattern"}}, {"type": "related_to", "id": "https://example.com/relationships/2020-28473-T1599", "from": {"id": "https://example.com/vulnerabilities/2020-28473", "type": "vulnerability"}, "to": {"id": "https://example.com/attack-patterns/T1599", "type": "attack-pattern"}}, {"type": "related_to", "id": "https://example.com/relationships/2020-28473-T1623", "from": {"id": "https://example.com/vulnerabilities/2020-28473", "type": "vulnerability"}, "to": {"id": "https://example.com/attack-patterns/T1623", "type": "attack-pattern"}}]}, "technical_analysis": {"Introduction": "A vulnerability exists in Bottle, a Python web framework, that allows for Web Cache Poisoning.", "Impact and Scope": "This vulnerability has a CVSS score of 6.8 (MEDIUM) and allows for high-severity attacks.", "Related MITRE ATT&CK Techniques": "This vulnerability is related to multiple MITRE ATT&CK techniques, including Web Cache Poisoning (T1190), Parameter Cloaking (T1598), Cache Poisoning (T1599), and Content-based Cache Poisoning (T1623).", "Technical Details": "The vulnerability is caused by the way Bottle handles parameter names in cache keys.", "Detection": "Detection involves monitoring for suspicious caching behavior and validating user input.", "Mitigation": "Mitigation involves implementing proper caching mechanisms and validating user input.", "Conclusion": "Proper mitigation and detection strategies are critical to defending against this vulnerability."}, "executive_analysis": {"Overview": "A vulnerability exists in Bottle, a Python web framework, that allows for Web Cache Poisoning.", "Business Impact": "This vulnerability has the potential to result in high-severity attacks and should be prioritized for mitigation.", "Technical Impact": "The vulnerability allows for the caching of malicious requests as safe ones, which can be exploited to bypass security controls.", "Mitigation Strategies": "Implementing proper caching mechanisms, validating user input, and monitoring for suspicious caching behavior are critical mitigation strategies.", "Recommendations": "Recommendations for executives include prioritizing the mitigation of this vulnerability and implementing additional security controls to prevent similar attacks.", "Conclusions": "This vulnerability is a critical security concern that requires immediate attention and mitigation."}}