{"id": "CVE-2015-5081", "sourceIdentifier": "cve@mitre.org", "published": "2017-08-18T18:29:01.063", "lastModified": "2017-08-24T14:19:26.750", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Cross-site request forgery (CSRF) vulnerability in django CMS before 3.0.14, 3.1.x before 3.1.1 allows remote attackers to manipulate privileged users into performing unknown actions via unspecified vectors."}, {"lang": "es", "value": "Una vulnerabilidad Cross-Site Request Forgery (CSRF) en django CMS en versiones anteriores a la 3.0.14 y 3.1.x en versiones anteriores a la 3.1.1 permite que atacantes remotos manipulen usuarios con privilegios para que realicen acciones desconocidas mediante vectores sin especificar."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:django-cms:django_cms:*:*:*:*:*:*:*:*", "versionEndIncluding": "3.0.13", "matchCriteriaId": "F6495EE0-987A-4841-ABF6-1ADCEFCB6228"}, {"vulnerable": true, "criteria": "cpe:2.3:a:django-cms:django_cms:3.1:*:*:*:*:*:*:*", "matchCriteriaId": "348173F3-F9C1-41CA-9249-286B2F1B727F"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2015/06/28/1", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://github.com/divio/django-cms/commit/f77cbc607d6e2a62e63287d37ad320109a2cc78a", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.django-cms.org/en/blog/2015/06/27/311-3014-release/", "source": "cve@mitre.org", "tags": ["Release Notes", "Vendor Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2015-5081 - This technique is related to Cross-site request forgery (CSRF) vulnerability, allow attackers to manipulate privileged users into performing unknown actions. Defending against this technique requires proper validation of user input and secure handling of user sessions."}, {"techniqueID": "T1190", "comment": "CVE-2015-5081 - The exploitation of this vulnerability may involve exploiting the trust relationship between the attacker-controlled website and the victim's browser, by tricking the user into submitting malicious requests. Defensive measures include implementing CSRF protections, such as tokens or double-submit cookies."}], "stix_bundle": {"objects": [{"type": "AttackPattern", "id": "generated-CVE-2015-5081", "title": "CVE-2015-5081 - Cross-site request forgery vulnerability", "description": "A Cross-site request forgery (CSRF) vulnerability in django CMS before 3.0.14, 3.1.x before 3.1.1 allows remote attackers to manipulate privileged users into performing unknown actions via unspecified vectors.", "external_references": [{"source_name": "cve", "external_id": "CVE-2015-5081"}]}, {"type": "TTP", "id": "generated-T1059", "title": "Cross-Site Request Forgery", "description": "The actor crafts a malicious HTML or JavaScript page that tricks the victim into submitting sensitive information.", "attack_pattern_refs": [{"relationship": "uses", "object_ref": "generated-CVE-2015-5081"}]}, {"type": "TTP", "id": "generated-T1190", "title": "Exploit Public-Facing Application", "description": "The actor identifies and exploits a vulnerability in a public-facing application.", "attack_pattern_refs": [{"relationship": "uses", "object_ref": "generated-CVE-2015-5081"}]}, {"type": "Vulnerability", "id": "generated-CVE-2015-5081", "title": "CVE-2015-5081 - Cross-site request forgery vulnerability", "description": "A Cross-site request forgery (CSRF) vulnerability in django CMS before 3.0.14, 3.1.x before 3.1.1 allows remote attackers to manipulate privileged users into performing unknown actions via unspecified vectors."}, {"type": "Course-of-Action", "id": "generated-cope", "title": "Implement CSRF Protection", "description": "Implementing CSRF protection in the application can help prevent this vulnerability from being exploited.", "attack_response_refs": [{"relationship": "mitigates", "object_ref": "generated-T1059"}, {"relationship": "mitigates", "object_ref": "generated-T1190"}]}]}, "technical_analysis": {"Introduction": "This vulnerability is a result of a Cross-site request forgery (CSRF) in django CMS, which can be exploited by manipulating privileged users into performing unknown actions.", "Impact and Scope": "The impact of this vulnerability is high, with a CVSS score of 8.8 and attack vector of NETWORK. The vulnerability allows attackers to manipulate privileged users into performing unknown actions.", "Related MITRE ATT&CK Techniques": "T1059 - Cross-Site Request Forgery, T1190 - Exploit Public-Facing Application", "Technical Details": "The vulnerability is caused by the lack of CSRF protection in the application, which allows attackers to craft malicious HTML or JavaScript pages that trick users into submitting sensitive information.", "Detection": "Detection of this vulnerability can be done by monitoring for suspicious network traffic and unusual user behavior.", "Mitigation": "Mitigation strategies include implementing CSRF protection in the application, validating user input, and securing user sessions.", "Conclusion": "In conclusion, this vulnerability is a serious security risk and should be addressed immediately."}, "executive_analysis": {"Overview": "This vulnerability is a critical security risk that can allow attackers to manipulate privileged users into performing unknown actions.", "Business Impact": "The business impact of this vulnerability is high, as it can result in loss of data, compromise of user credentials, and unauthorized changes to business systems.", "Technical Impact": "The technical impact of this vulnerability is high, as it can allow attackers to gain unauthorized access to sensitive data and systems.", "Mitigation Strategies": "To mitigate this vulnerability, implement CSRF protection in the application, validate user input, and secure user sessions.", "Recommendations": "Recommendations for executives include conducting regular security assessments, implementing robust security measures, and providing regular security training to employees.", "Conclusions": "In conclusion, this vulnerability is a serious security risk and should be addressed immediately to protect business systems and data."}}