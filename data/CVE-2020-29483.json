{"id": "CVE-2020-29483", "sourceIdentifier": "cve@mitre.org", "published": "2020-12-15T18:15:15.287", "lastModified": "2023-11-07T03:21:30.917", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "An issue was discovered in Xen through 4.14.x. Xenstored and guests communicate via a shared memory page using a specific protocol. When a guest violates this protocol, xenstored will drop the connection to that guest. Unfortunately, this is done by just removing the guest from xenstored's internal management, resulting in the same actions as if the guest had been destroyed, including sending an @releaseDomain event. @releaseDomain events do not say that the guest has been removed. All watchers of this event must look at the states of all guests to find the guest that has been removed. When an @releaseDomain is generated due to a domain xenstored protocol violation, because the guest is still running, the watchers will not react. Later, when the guest is actually destroyed, xenstored will no longer have it stored in its internal data base, so no further @releaseDomain event will be sent. This can lead to a zombie domain; memory mappings of that guest's memory will not be removed, due to the missing event. This zombie domain will be cleaned up only after another domain is destroyed, as that will trigger another @releaseDomain event. If the device model of the guest that violated the Xenstore protocol is running in a stub-domain, a use-after-free case could happen in xenstored, after having removed the guest from its internal data base, possibly resulting in a crash of xenstored. A malicious guest can block resources of the host for a period after its own death. Guests with a stub domain device model can eventually crash xenstored, resulting in a more serious denial of service (the prevention of any further domain management operations). Only the C variant of Xenstore is affected; the Ocaml variant is not affected. Only HVM guests with a stubdom device model can cause a serious DoS."}, {"lang": "es", "value": "Se detect\u00f3 un problema en Xen versiones hasta 4.14.x. Xenstored y los invitados se comunican por medio de una p\u00e1gina de memoria compartida usando un protocolo espec\u00edfico. Cuando un invitado viola este protocolo, xenstored interrumpir\u00e1 la conexi\u00f3n con ese invitado. Desafortunadamente, esto se hace simplemente eliminando al invitado de la administraci\u00f3n interna de xenstored, resultando en las mismas acciones como si el invitado hubiera sido destruido, incluyendo el env\u00edo de un evento @releaseDomain. Los eventos de @releaseDomain no dicen que el invitado ha sido eliminado. Todos los observadores de este evento deben mirar los estados de todos los invitados para encontrar al invitado que ha sido eliminado. Cuando @releaseDomain es generada debido a una violaci\u00f3n del protocolo xenstored del dominio, porque el invitado a\u00fan se est\u00e1 ejecutando, los observadores no reaccionar\u00e1n. M\u00e1s tarde, cuando el invitado sea realmente destruido, xenstored ya no lo tendr\u00e1 almacenado en su base de datos interna, por lo que no m\u00e1s eventos @releaseDomain ser\u00e1n enviados. Esto puede conllevar a un dominio zombi; Las asignaciones de la memoria de ese invitado no ser\u00e1n eliminadas debido a una falta de evento. Este dominio zombie ser\u00e1 limpiado solo despu\u00e9s de que otro dominio sea destruido, ya que eso activar\u00e1 otro evento @releaseDomain. Si el modelo de dispositivo del invitado que viol\u00f3 el protocolo de Xenstore se est\u00e1 ejecutando en un dominio stub, un caso de uso de la memoria previamente liberada podr\u00eda ocurrir en xenstored, despu\u00e9s de haber eliminado al invitado de su base de datos interna, resultando posiblemente en un bloqueo de xenstored. Un invitado malicioso puede bloquear los recursos del host durante un per\u00edodo despu\u00e9s de su propia muerte. Los invitados con un modelo de dispositivo de dominio stub pueden eventualmente bloquearse en xenstored, resultando en una denegaci\u00f3n de servicio m\u00e1s grave (la prevenci\u00f3n de cualquier otra operaci\u00f3n de administraci\u00f3n de dominio). Solo la variante C de Xenstore est\u00e1 afectada; la variante Ocaml no est\u00e1 afectada. Solo los invitados de HVM con un modelo de dispositivo falso pueden causar una DoS grave"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.0, "impactScore": 4.0}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 4.9}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.9, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-416"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:xen:xen:*:*:*:*:*:*:*:*", "versionEndIncluding": "4.14.0", "matchCriteriaId": "2D769F4A-98C6-4544-AC04-3D8600C17BBB"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*", "matchCriteriaId": "07B237A9-69A3-4A9C-9DA0-4E06BD37AE73"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:32:*:*:*:*:*:*:*", "matchCriteriaId": "36D96259-24BD-44E2-96D9-78CE1D41F956"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:33:*:*:*:*:*:*:*", "matchCriteriaId": "E460AA51-FCDA-46B9-AE97-E6676AA5E194"}]}]}], "references": [{"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/2C6M6S3CIMEBACH6O7V4H2VDANMO6TVA/", "source": "cve@mitre.org"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OBLV6L6Q24PPQ2CRFXDX4Q76KU776GKI/", "source": "cve@mitre.org"}, {"url": "https://www.debian.org/security/2020/dsa-4812", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://xenbits.xenproject.org/xsa/advisory-325.txt", "source": "cve@mitre.org", "tags": ["Patch", "Vendor Advisory"]}], "techniques": [{"techniqueID": "T1078", "comment": "CVE-2020-29483 - This is an example of an invalid memory access vulnerability. An attacker can exploit it to cause a denial-of-service in xenstored, potentially leading to a crash. This attack is pertinent to an organization's Xen-based infrastructure."}, {"techniqueID": "T1072", "comment": "CVE-2020-29483 - An attacker can exploit this vulnerability to cause a denial-of-service in xenstored, potentially leading to a crash. This attack is pertinent to an organization's Xen-based infrastructure."}], "stix_bundle": {"bundle": {"type": "bundle", "id": " Vulnerability:CVE-2020-29483", "created_by_ref": "sid_3456", "updated_by_ref": "sid_3456", "objects": [{"type": "vulnerability", "id": "Vulnerability:CVE-2020-29483", "created_by_ref": "sid_3456", "updated_by_ref": "sid_3456", "description": "A vulnerability in Xen, a virtualization platform, can allow an attacker to cause a denial-of-service in xenstored, potentially leading to a crash.", "external_ids": ["CVE-2020-29483"], "published": "2020-12-15T18:15:15.287", "modified": "2023-11-07T03:21:30.917", "dependencies": [{"relationship": "exploited-by", "object_ref": "T1078"}, {"relationship": "mitigated-by", "object_ref": "T1167"}]}, {"type": "attack-pattern", "id": "T1078", "created_by_ref": "sid_3456", "updated_by_ref": "sid_3456", "name": "Invalid Memory Access", "description": "An attacker attempts to access memory locations that are not assigned to them.", "goals": ["Destruction of Data"], "subtechniques": ["T1078.001", "T1078.002"], "external_ids": ["MITRE T1078"]}]}}, "technical_analysis": {"Introduction": "The CVE-2020-29483 vulnerability in Xen allows an attacker to cause a denial-of-service in xenstored, potentially leading to a crash.", "Impact and Scope": "This vulnerability has a CVSS score of 6.5 (MEDIUM) with an attack vector of LOCAL. An attacker must have access to the Xen-based infrastructure and can exploit this vulnerability to cause a denial-of-service.", "Related MITRE ATT&CK Techniques": "T1078: Invalid Memory Access", "Technical Details": "The vulnerability occurs when a guest violates the Xenstore protocol and xenstored removes the guest from its internal management. This can lead to a denial-of-service and potentially a crash.", "Detection": "Detection methods include monitoring for unusual network activity, file changes, or operating system errors.", "Mitigation": "Mitigation strategies include disabling the affected device, configuring the device to reject invalid memory access requests, and implementing a memory protection mechanism.", "Conclusion": "This vulnerability highlights the importance of secure coding practices and memory protection mechanisms in virtualization platforms."}, "executive_analysis": {"Overview": "The CVE-2020-29483 vulnerability in Xen can cause a denial-of-service and potentially lead to a crash, compromising the integrity of the Xen-based infrastructure.", "Business Impact": "This vulnerability can have significant business implications, including downtime, loss of data, and reputational damage.", "Technical Impact": "The vulnerability can have technical implications, including the need to patch the affected device, reconfigure the device, and implement additional security measures.", "Mitigation Strategies": "Executives can recommend implementing a robust memory protection mechanism and disabling the affected device until a patch is available.", "Recommendations": "Executives should ensure that their organization's Xen-based infrastructure is up-to-date with the latest patches and follow best practices for secure coding.", "Conclusions": "This vulnerability highlights the importance of a proactive approach to security and the need for executives to stay informed about the latest threats and vulnerabilities."}}