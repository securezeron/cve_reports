{"id": "CVE-2024-37565", "sourceIdentifier": "audit@patchstack.com", "published": "2024-07-20T09:15:03.780", "lastModified": "2024-07-22T13:00:31.330", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in TemeGUM Gum Elementor Addon allows Stored XSS.This issue affects Gum Elementor Addon: from n/a through 1.3.5."}, {"lang": "es", "value": " Vulnerabilidad de neutralizaci\u00f3n incorrecta de la entrada durante la generaci\u00f3n de p\u00e1ginas web (XSS o 'Cross-site Scripting') en TemeGUM Gum Elementor Addon permite XSS almacenado. Este problema afecta a Gum Elementor Addon: desde n/a hasta 1.3.5."}], "metrics": {"cvssMetricV31": [{"source": "audit@patchstack.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 3.7}]}, "weaknesses": [{"source": "audit@patchstack.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://patchstack.com/database/vulnerability/gum-elementor-addon/wordpress-gum-elementor-addon-plugin-1-3-5-cross-site-scripting-xss-vulnerability?_s_id=cve", "source": "audit@patchstack.com"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-37565 - Stored Cross-Site Scripting vulnerabilities allow an attacker to inject malicious scripts that can be stored on a victim's system, potentially allowing the attacker to extract or manipulate sensitive data without the user's knowledge."}, {"techniqueID": "T1036", "comment": "CVE-2024-37565 - Cross-Site Scripting vulnerabilities can be used to steal user session cookies, inject malicious scripts, or perform other malicious activities, allowing an attacker to manipulate the victim's browser or steal sensitive information."}, {"techniqueID": "T1190", "comment": "CVE-2024-37565 - Web Server compromised through Stored Cross-Site Scripting vulnerability can lead to a range of attacks, including data exfiltration, malware distribution, and unauthorized system access."}], "technical_analysis": {"Introduction": "The vulnerability CVE-2024-37565 is a stored cross-site scripting (XSS) vulnerability found in the Gum Elementor Addon plugin for WordPress, affecting versions 1.0 through 1.3.5. This vulnerability allows an attacker to inject malicious scripts that can be stored on a victim's system, potentially allowing the attacker to extract or manipulate sensitive data without the user's knowledge.", "Impact and Scope": "The vulnerability is rated as having a base score of 5.9, with an attack vector of Network, attack complexity of Low, privileges required of High, user interaction required, and resource-based constraint. The impact of this vulnerability includes increased risk of data exfiltration, malware distribution, and unauthorized system access.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques for this vulnerability are T1059, T1036, and T1190, which correspond to Stored Cross-Site Scripting, Cross-Site Scripting, and Web Server compromise, respectively.", "Technical Details": "The vulnerability is caused by an improper neutralization of input during web page generation, which allows an attacker to inject malicious scripts into the victim's system. This vulnerability can be exploited by an attacker by injecting malicious script code into the Gum Elementor Addon plugin.", "Detection": "Detection of this vulnerability involves monitoring web server logs for suspicious requests and monitoring for anomalous browser behavior. Additionally, it requires applying the recommended patches and updates to the compromised system.", "Mitigation": "The mitigation strategy for this vulnerability involves applying the recommended patches and updates to the compromised system, disabling the vulnerable plugin, and implementing web application firewall rules to block malicious requests.", "Conclusion": "In conclusion, the CVE-2024-37565 vulnerability is a serious threat to organizations that use the Gum Elementor Addon plugin for WordPress. It is essential to patch and update the plugin to the latest version, monitor web server logs for suspicious requests, and implement web application firewall rules to block malicious requests."}, "executive_analysis": {"Overview": "The CVE-2024-37565 vulnerability is a stored cross-site scripting vulnerability found in the Gum Elementor Addon plugin for WordPress, affecting versions 1.0 through 1.3.5.", "Business Impact": "The business impact of this vulnerability includes increased risk of data exfiltration, malware distribution, and unauthorized system access, which can lead to financial losses, reputational damage, and compliance issues.", "Technical Impact": "The technical impact of this vulnerability includes the potential for an attacker to inject malicious scripts into the victim's system, potentially allowing the attacker to extract or manipulate sensitive data without the user's knowledge, as well as the potential for data exfiltration, malware distribution, and unauthorized system access.", "Mitigation Strategies": "Mitigation strategies for this vulnerability include patching and updating the plugin, disabling the vulnerable plugin, and implementing web application firewall rules to block malicious requests.", "Recommendations": "Executives are recommended to immediately take action to patch and update the Gum Elementor Addon plugin, disable the vulnerable plugin, and implement web application firewall rules to block malicious requests to prevent exploitation of this vulnerability.", "Conclusions": "In conclusion, the CVE-2024-37565 vulnerability is a serious threat to organizations that use the Gum Elementor Addon plugin for WordPress, and it is essential to take immediate action to patch and update the plugin, disable the vulnerable plugin, and implement web application firewall rules to block malicious requests."}}