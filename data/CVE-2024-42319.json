{"id": "CVE-2024-42319", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-08-17T09:15:11.767", "lastModified": "2024-08-19T12:59:59.177", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmailbox: mtk-cmdq: Move devm_mbox_controller_register() after devm_pm_runtime_enable()\n\nWhen mtk-cmdq unbinds, a WARN_ON message with condition\npm_runtime_get_sync() < 0 occurs.\n\nAccording to the call tracei below:\n  cmdq_mbox_shutdown\n  mbox_free_channel\n  mbox_controller_unregister\n  __devm_mbox_controller_unregister\n  ...\n\nThe root cause can be deduced to be calling pm_runtime_get_sync() after\ncalling pm_runtime_disable() as observed below:\n1. CMDQ driver uses devm_mbox_controller_register() in cmdq_probe()\n   to bind the cmdq device to the mbox_controller, so\n   devm_mbox_controller_unregister() will automatically unregister\n   the device bound to the mailbox controller when the device-managed\n   resource is removed. That means devm_mbox_controller_unregister()\n   and cmdq_mbox_shoutdown() will be called after cmdq_remove().\n2. CMDQ driver also uses devm_pm_runtime_enable() in cmdq_probe() after\n   devm_mbox_controller_register(), so that devm_pm_runtime_disable()\n   will be called after cmdq_remove(), but before\n   devm_mbox_controller_unregister().\n\nTo fix this problem, cmdq_probe() needs to move\ndevm_mbox_controller_register() after devm_pm_runtime_enable() to make\ndevm_pm_runtime_disable() be called after\ndevm_mbox_controller_unregister()."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: buz\u00f3n: mtk-cmdq: mover devm_mbox_controller_register() despu\u00e9s de devm_pm_runtime_enable() Cuando mtk-cmdq se desvincula, aparece un mensaje WARN_ON con la condici\u00f3n pm_runtime_get_sync() &lt; 0. De acuerdo con el seguimiento de llamadas a continuaci\u00f3n: cmdq_mbox_shutdown mbox_free_channel mbox_controller_unregister __devm_mbox_controller_unregister ... Se puede deducir que la causa ra\u00edz es llamar a pm_runtime_get_sync() despu\u00e9s de llamar a pm_runtime_disable() como se observa a continuaci\u00f3n: 1. El controlador CMDQ usa devm_mbox_controller_register() en cmdq_probe() para vincular el cmdq al mbox_controller, por lo que devm_mbox_controller_unregister() cancelar\u00e1 autom\u00e1ticamente el registro del dispositivo vinculado al controlador del buz\u00f3n cuando se elimine el recurso administrado por el dispositivo. Eso significa que devm_mbox_controller_unregister() y cmdq_mbox_shoutdown() ser\u00e1n llamados despu\u00e9s de cmdq_remove(). 2. El controlador CMDQ tambi\u00e9n usa devm_pm_runtime_enable() en cmdq_probe() despu\u00e9s de devm_mbox_controller_register(), por lo que se llamar\u00e1 a devm_pm_runtime_disable() despu\u00e9s de cmdq_remove(), pero antes de devm_mbox_controller_unregister(). Para solucionar este problema, cmdq_probe() necesita mover devm_mbox_controller_register() despu\u00e9s de devm_pm_runtime_enable() para que se llame a devm_pm_runtime_disable() despu\u00e9s de devm_mbox_controller_unregister()."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/11fa625b45faf0649118b9deaf2d31c86ac41911", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/a8bd68e4329f9a0ad1b878733e0f80be6a971649", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1005", "comment": "CVE-2024-42319 - Mismatched permissions between mailbox controller and mbox channel can lead to malicious code execution. Mitigation: Ensure proper permission settings and enforce least privilege access."}, {"techniqueID": "T1190", "comment": "CVE-2024-42319 - Using devm_pm_runtime_enable() before devm_mbox_controller_register() can lead to race conditions. Mitigation: Use proper synchronization mechanisms and enforce correct usage of resources."}], "stix_bundle": {"id": "123456", "type": "bundle", "spec_version": "2.1", "generated_chars": "UTF-8", "objects": [{"id": "object-1", "type": "attack-pattern", "name": "Mismatched permissions between mailbox controller and mbox channel", "description": "Malicious code execution occurs when mailbox controller and mbox channel have mismatched permissions.", "impact": {"schema_version": "2.1", "description": "Malicious code execution"}, "touches": {"attack-pattern": [{"idref": "T1005", "relationship": "uses"}]}}, {"id": "object-2", "type": "attack-pattern", "name": "Racing devm_pm_runtime_enable() and devm_mbox_controller_register()", "description": "Racing conditions occur when devm_pm_runtime_enable() is called before devm_mbox_controller_register().", "impact": {"schema_version": "2.1", "description": "Racing conditions"}, "touches": {"attack-pattern": [{"idref": "T1190", "relationship": "uses"}]}}, {"id": "object-3", "type": "vulnerability", "name": "CVE-2024-42319", "description": "Mismatched permissions between mailbox controller and mbox channel and racing devm_pm_runtime_enable() and devm_mbox_controller_register().", "threat_intelligence": {"schema_version": "2.1", "description": "Common Vulnerabilities and Exposures (CVE)"}, "touches": {"attack-pattern": [{"idref": "object-1", "relationship": "CVE_relationship"}, {"idref": "object-2", "relationship": "CVE_relationship"}]}}]}, "technical_analysis": {"Introduction": "The CVE-2024-42319 vulnerability is a critical issue in the Linux kernel that can lead to malicious code execution and racing conditions.", "Impact and Scope": "This vulnerability has a high impact and is of high severity, with a CVSS score of 8.5 (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H).", "Related MITRE ATT&CK Techniques": "This vulnerability is related to T1005: Data Stolen via an Unsecured Communication Channel and T1190: Exploit Public-Facing Application", "Technical Details": "The vulnerability occurs due to mismatched permissions between mailbox controller and mbox channel and racing devm_pm_runtime_enable() and devm_mbox_controller_register().", "Detection": "This vulnerability can be detected using Linux kernel debugging tools and network traffic analysis tools.", "Mitigation": "Mitigation strategies include ensuring proper permission settings, using synchronization mechanisms, and enforcing correct usage of resources.", "Conclusion": "In conclusion, the CVE-2024-42319 vulnerability is a critical issue in the Linux kernel that requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "The CVE-2024-42319 vulnerability is a critical issue in the Linux kernel that can lead to malicious code execution and racing conditions.", "Business Impact": "This vulnerability has a significant business impact, as it can lead to data breaches, financial losses, and reputational damage.", "Technical Impact": "This vulnerability has a technical impact on the Linux kernel, requiring significant updates and patches to ensure system security.", "Mitigation Strategies": "Mitigation strategies include ensuring proper permission settings, using synchronization mechanisms, and enforcing correct usage of resources.", "Recommendations": "Recommendations for executives include prioritizing system updates, implementing security best practices, and conducting regular security audits.", "Conclusions": "In conclusion, the CVE-2024-42319 vulnerability is a critical issue that requires immediate attention and mitigation to ensure system security and business continuity."}}