{"id": "CVE-2020-13991", "sourceIdentifier": "cve@mitre.org", "published": "2020-09-24T23:15:13.540", "lastModified": "2020-09-30T19:46:46.533", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "vm/opcodes.c in JerryScript 2.2.0 allows attackers to hijack the flow of control by controlling a register."}, {"lang": "es", "value": "vm/opcodes.c en JerryScript versi\u00f3n 2.2.0 permite a los atacantes secuestrar el flujo de control control controlando un registro"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jerryscript:jerryscript:2.2.0:*:*:*:*:*:*:*", "matchCriteriaId": "88EBD351-0E34-480A-906A-603AC3920FBF"}]}]}], "references": [{"url": "https://github.com/googleprojectzero/fuzzilli#JerryScript", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/jerryscript-project/jerryscript/issues/3858", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/jerryscript-project/jerryscript/issues/3859", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/jerryscript-project/jerryscript/issues/3860", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/jerryscript-project/jerryscript/pull/3867", "source": "cve@mitre.org", "tags": ["Exploit", "Patch", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1046", "comment": "CVE-2020-13991 - An attacker may use this vulnerability to execute arbitrary code on a device, potentially enabling further exploitation. Defend against this by implementing additional validation and sanitization of user-supplied data."}, {"techniqueID": "T1190", "comment": "CVE-2020-13991 - The vulnerability in JerryScript's vm/opcodes.c file allows an attacker to hijack the flow of control by controlling a register. Defend against this by implementing memory protection and access control mechanisms."}, {"techniqueID": "T1210", "comment": "CVE-2020-13991 - The vulnerability in JerryScript's vm/opcodes.c file may allow an attacker to execute arbitrary code on a device, potentially enabling further exploitation. Defend against this by implementing additional monitoring and logging to detect suspicious activity."}], "stix_bundle": {"type": "bundle", "id": "CVE-2020-13991-STIX-Bundle", "description": "STIX 2.1 bundle for CVE-2020-13991", "objects": [{"type": "incident", "id": "inc-1", "created_by_ref": "identity-1", "created": "2020-09-24T23:15:13.540", "modified": "2020-09-30T19:46:46.533", "name": "Incident: JerryScript RCE", "description": "Incident related to CVE-2020-13991", "objects": [{"type": "vulnerability", "id": "vuln-1", "description": "CVE-2020-13991 - JerryScript RCE", "description_data": {"lang": "en", "value": "CVE-2020-13991 - JerryScript RCE"}, "exploit_state": " Known"}, {"type": "course_of_action", "id": "coa-1", "description": "Mitigation: Implement additional validation and sanitization of user-supplied data", "description_data": {"lang": "en", "value": "Mitigation: Implement additional validation and sanitization of user-supplied data"}, "course_of_action_type": " Mitigation"}, {"type": "course_of_action", "id": "coa-2", "description": "Mitigation: Implement memory protection and access control mechanisms", "description_data": {"lang": "en", "value": "Mitigation: Implement memory protection and access control mechanisms"}, "course_of_action_type": " Mitigation"}]}]}, "technical_analysis": {"Introduction": "JerryScript is a scripting engine that allows developers to create interactive web applications. A vulnerability in JerryScript's vm/opcodes.c file allows an attacker to hijack the flow of control by controlling a register.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H) and is exploitable over the network.", "Related MITRE ATT&CK Techniques": "T1046, T1190, T1210", "Technical Details": "The vulnerability is caused by a lack of input validation and sanitization in JerryScript's vm/opcodes.c file.", "Detection": "The vulnerability can be detected by monitoring for suspicious network traffic and analyzing application logs for signs of exploitation.", "Mitigation": "Implement additional validation and sanitization of user-supplied data, implement memory protection and access control mechanisms.", "Conclusion": "The vulnerability in JerryScript's vm/opcodes.c file allows an attacker to hijack the flow of control by controlling a register, potentially enabling further exploitation. Defense against this requires implementing additional validation and sanitization of user-supplied data, and memory protection and access control mechanisms."}, "executive_analysis": {"Overview": "CVE-2020-13991 is a remotely exploitable vulnerability in JerryScript's vm/opcodes.c file that allows an attacker to hijack the flow of control by controlling a register.", "Business Impact": "The vulnerability could potentially allow an attacker to execute arbitrary code on a device, resulting in significant business disruption and potential financial loss.", "Technical Impact": "The vulnerability affects JerryScript's vm/opcodes.c file, making it a high-priority issue for organizations that use JerryScript.", "Mitigation Strategies": "Implement additional validation and sanitization of user-supplied data, implement memory protection and access control mechanisms, and monitor for suspicious network traffic and analyze application logs for signs of exploitation.", "Recommendations": "Recommend patching JerryScript, implementing additional security controls, and conducting regular security audits and penetration testing.", "Conclusions": "The vulnerability in JerryScript's vm/opcodes.c file is a critical issue that requires immediate attention and mitigation."}}