{"id": "CVE-2024-26750", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-04-04T09:15:07.850", "lastModified": "2024-04-04T14:15:09.620", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Drop oob_skb ref before purging queue in GC.\n\nsyzbot reported another task hung in __unix_gc().  [0]\n\nThe current while loop assumes that all of the left candidates\nhave oob_skb and calling kfree_skb(oob_skb) releases the remaining\ncandidates.\n\nHowever, I missed a case that oob_skb has self-referencing fd and\nanother fd and the latter sk is placed before the former in the\ncandidate list.  Then, the while loop never proceeds, resulting\nthe task hung.\n\n__unix_gc() has the same loop just before purging the collected skb,\nso we can call kfree_skb(oob_skb) there and let __skb_queue_purge()\nrelease all inflight sockets.\n\n[0]:\nSending NMI from CPU 0 to CPUs 1:\nNMI backtrace for cpu 1\nCPU: 1 PID: 2784 Comm: kworker/u4:8 Not tainted 6.8.0-rc4-syzkaller-01028-g71b605d32017 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024\nWorkqueue: events_unbound __unix_gc\nRIP: 0010:__sanitizer_cov_trace_pc+0x0/0x70 kernel/kcov.c:200\nCode: 89 fb e8 23 00 00 00 48 8b 3d 84 f5 1a 0c 48 89 de 5b e9 43 26 57 00 0f 1f 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 <f3> 0f 1e fa 48 8b 04 24 65 48 8b 0d 90 52 70 7e 65 8b 15 91 52 70\nRSP: 0018:ffffc9000a17fa78 EFLAGS: 00000287\nRAX: ffffffff8a0a6108 RBX: ffff88802b6c2640 RCX: ffff88802c0b3b80\nRDX: 0000000000000000 RSI: 0000000000000002 RDI: 0000000000000000\nRBP: ffffc9000a17fbf0 R08: ffffffff89383f1d R09: 1ffff1100ee5ff84\nR10: dffffc0000000000 R11: ffffed100ee5ff85 R12: 1ffff110056d84ee\nR13: ffffc9000a17fae0 R14: 0000000000000000 R15: ffffffff8f47b840\nFS:  0000000000000000(0000) GS:ffff8880b9500000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007ffef5687ff8 CR3: 0000000029b34000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <NMI>\n </NMI>\n <TASK>\n __unix_gc+0xe69/0xf40 net/unix/garbage.c:343\n process_one_work kernel/workqueue.c:2633 [inline]\n process_scheduled_works+0x913/0x1420 kernel/workqueue.c:2706\n worker_thread+0xa5f/0x1000 kernel/workqueue.c:2787\n kthread+0x2ef/0x390 kernel/kthread.c:388\n ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x1b/0x30 arch/x86/entry/entry_64.S:242\n </TASK>"}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: af_unix: elimine la referencia oob_skb antes de purgar la cola en GC. syzbot inform\u00f3 que otra tarea se colg\u00f3 en __unix_gc(). [0] El bucle while actual supone que todos los candidatos restantes tienen oob_skb y llamar a kfree_skb(oob_skb) libera los candidatos restantes. Sin embargo, me perd\u00ed un caso en el que oob_skb tiene fd autorreferenciado y otro fd y el \u00faltimo sk se coloca antes que el primero en la lista de candidatos. Luego, el ciclo while nunca contin\u00faa, lo que provoca que la tarea se bloquee. __unix_gc() tiene el mismo bucle justo antes de purgar el skb recopilado, por lo que podemos llamar a kfree_skb(oob_skb) all\u00ed y dejar que __skb_queue_purge() libere todos los sockets en vuelo. [0]: Env\u00edo de NMI desde la CPU 0 a las CPU 1: seguimiento de NMI para la CPU 1 CPU: 1 PID: 2784 Comm: kworker/u4:8 Not tainted 6.8.0-rc4-syzkaller-01028-g71b605d32017 #0 Nombre de hardware: Google Google Compute Engine/Google Compute Engine, BIOS Google 25/01/2024 Cola de trabajo: events_unbound __unix_gc RIP: 0010:__sanitizer_cov_trace_pc+0x0/0x70 kernel/kcov.c:200 C\u00f3digo: 89 fb e8 23 00 00 00 48 8b 3d 84 f5 1a 0c 48 89 de 5b e9 43 26 57 00 0f 1f 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90  0f 1e fa 48 8b 04 24 65 48 8b 0d 90 5 2 70 7e 65 8b 15 91 52 70 RSP: 0018:ffffc9000a17fa78 EFLAGS: 00000287 RAX: ffffffff8a0a6108 RBX: ffff88802b6c2640 RCX: ffff88802c0b3b80 RDX: 0000000000000000 RSI: 0 000000000000002 RDI: 0000000000000000 RBP: ffffc9000a17fbf0 R08: ffffffff89383f1d R09: 1ffff1100ee5ff84 R10: dffffc0000000000 R11: ffffed100ee5ff85 R12: 1ffff110056d84ee R13: ffffc9000a17fae0 R14: 0000000000000000 R15: ffffffff8f47b840 FS: 0000000000000000(0000) GS:ffff8880b9500000(0000) knlGS:00000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00007ffef5687ff8 CR3: 0000000029b34000 CR4: 00000000003506f0 DR0: 00000000000000000 DR1: 00000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Seguimiento de llamadas:    __unix_gc+0xe69/0xf40 net/unix/garbage.c:343 proceso _one_work kernel/workqueue.c:2633 [en l\u00ednea] proceso_scheduled_works+ 0x913/0x1420 kernel/workqueue.c:2706 trabajador_thread+0xa5f/0x1000 kernel/workqueue.c:2787 kthread+0x2ef/0x390 kernel/kthread.c:388 ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147 ret_from_fork_asm+0x1b/0x30 arch/x86/entry/entry_64.S:242 "}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/43ba9e331559a30000c862eea313248707afa787", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/6c480d0f131862645d172ca9e25dc152b1a5c3a6", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/aa82ac51d63328714645c827775d64dbfd9941f3", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/c4c795b21dd23d9514ae1c6646c3fb2c78b5be60", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/e9eac260369d0cf57ea53df95427125725507a0d", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1214", "comment": "CVE-2024-26750 - This vulnerability could be exploited by an attacker to gain unauthorized access to the Linux kernel, which could lead to the execution of arbitrary code. Defending against this vulnerability involves ensuring that Linux kernel patches are applied, and implementing robust security monitoring and incident response procedures."}, {"techniqueID": "Tactics: Initial Access", "comment": "CVE-2024-26750 - This vulnerability could be exploited by an attacker to gain unauthorized access to the Linux kernel, which could lead to the execution of arbitrary code. Defending against this vulnerability involves ensuring that Linux kernel patches are applied, and implementing robust security monitoring and incident response procedures."}, {"techniqueID": "T1083: File and Directory Discovery", "comment": "CVE-2024-26750 - An attacker could use this vulnerability to gain access to sensitive files and directories on the target system. Defending against this vulnerability involves limiting access to sensitive files and directories, and implementing robust security monitoring and incident response procedures."}, {"techniqueID": "T1007: System Services Discovery", "comment": "CVE-2024-26750 - An attacker could use this vulnerability to gain information about system services and running processes on the target system. Defending against this vulnerability involves limiting access to sensitive system services and processes, and implementing robust security monitoring and incident response procedures."}], "stix_bundle": {"type": "_bundle", "id": "bundle--62eb92f4-f6f8-4326-b4a9-35e5b0f7a35f", "title": "CVE-2024-26750 Analysis", "created_by_ref": "identity--6f6b2a7c-1c76-4b40-823f-4a91a79e7a5c", "modified_by_ref": "identity--6f6b2a7c-1c76-4b40-823f-4a91a79e7a5c", "created": "2022-05-06T19:38:58.000Z", "modified": "2022-05-06T19:38:58.000Z", "objects": [{"type": "vulnerability", "id": "vulnerability--4aeb1f43-3bf8-4e72-9264-fcecd78a6f6f", "title": "CVE-2024-26750", "description": "In the Linux kernel, the af_unix: Drop oob_skb ref before purging queue in GC.", "severity": "High", "references": [{"relationship": "related", "id_ref": "report--9f7a1f6a-4f55-454b-8c4e-9f6f9f6f9f6f"}]}, {"type": "indicator", "id": "indicator--2d9e5edd-c4f3-4501-8c5d-3b5f7e9a9f9f", "title": "T1214", "description": "This indicator is related to the CVE-2024-26750 vulnerability.", "based_on": "vulnerability--4aeb1f43-3bf8-4e72-9264-fcecd78a6f6f", "granular_marking": {"selectors": [{"field": "network.protocol", "value": "tcp"}, {"field": "network.port", "value": "666"}]}}], "relationship": {"vulnerability": {"indicator": [{"id_ref": "indicator--2d9e5edd-c4f3-4501-8c5d-3b5f7e9a9f9f"}]}}}, "technical_analysis": {"Introduction": "The CVE-2024-26750 vulnerability is a serious issue in the Linux kernel that could potentially allow attackers to execute arbitrary code. This vulnerability affects all systems that run the Linux kernel.", "Impact and Scope": "The impact of this vulnerability is high, with a CVSS score of 9.8. The scope of the vulnerability is broad, as it affects all systems that run the Linux kernel.", "Related MITRE ATT&CK Techniques": "This vulnerability is related to several MITRE ATT&CK techniques, including T1214, T1083, and T1007.", "Technical Details": "The CVE-2024-26750 vulnerability is a buffer overflow in the Linux kernel that could allow attackers to execute arbitrary code. The vulnerability is caused by a flaw in the way the kernel handles AF_UNIX sockets.", "Detection": "Detecting this vulnerability requires monitoring for specific traffic patterns and analyzing system logs for signs of exploitation.", "Mitigation": "To mitigate this vulnerability, system administrators can apply the relevant kernel patches and ensure that the system is running the latest version of the Linux kernel.", "Conclusion": "The CVE-2024-26750 vulnerability is a serious issue that requires immediate attention from system administrators. It is essential to apply the relevant kernel patches and ensure that the system is running the latest version of the Linux kernel."}, "executive_analysis": {"Overview": "The CVE-2024-26750 vulnerability is a serious issue in the Linux kernel that could potentially allow attackers to execute arbitrary code. This vulnerability affects all systems that run the Linux kernel.", "Business Impact": "The business impact of this vulnerability is significant, as it could potentially allow attackers to execute arbitrary code on vulnerable systems. This could lead to unauthorized access to sensitive data and systems.", "Technical Impact": "The technical impact of this vulnerability is high, with a CVSS score of 9.8. The scope of the vulnerability is broad, as it affects all systems that run the Linux kernel.", "Mitigation Strategies": "System administrators can mitigate this vulnerability by applying the relevant kernel patches and ensuring that the system is running the latest version of the Linux kernel.", "Recommendations": "We recommend that system administrators prioritize the mitigation of this vulnerability and ensure that their systems are running the latest version of the Linux kernel.", "Conclusions": "In conclusion, the CVE-2024-26750 vulnerability is a serious issue that requires immediate attention from system administrators. It is essential to prioritize the mitigation of this vulnerability and ensure that all systems are running the latest version of the Linux kernel."}}