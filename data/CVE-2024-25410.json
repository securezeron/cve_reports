{"id": "CVE-2024-25410", "sourceIdentifier": "cve@mitre.org", "published": "2024-02-26T16:27:58.960", "lastModified": "2024-08-16T17:35:06.847", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "flusity-CMS 2.33 is vulnerable to Unrestricted Upload of File with Dangerous Type in update_setting.php."}, {"lang": "es", "value": "flusity-CMS 2.33 es vulnerable a la carga sin restricciones de archivos con tipo peligroso en update_setting.php."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-434"}]}], "references": [{"url": "https://github.com/flusity/flusity-CMS/commit/b99de3bd05677e8b61c04a70235faa6001556b3b", "source": "cve@mitre.org"}, {"url": "https://github.com/flusity/flusity-CMS/issues/9", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059.007", "comment": "CVE-2024-25410 - Insider Threat: Unrestricted File Upload allows an attacker to upload malicious files, which could lead to code execution, data tampering, or escalating privileges. This technique can be mitigated by implementing validation and sanitization of user-uploaded files, as well as restricting file extensions and types."}, {"techniqueID": "T1190", "comment": "CVE-2024-25410 - Web Shell: The vulnerability allows an attacker to upload and execute malicious web shells, enabling remote code execution. This technique can be mitigated by implementing WAF rules to detect and block suspicious traffic, as well as regularly updating and patching web applications."}, {"techniqueID": "T1086", "comment": "CVE-2024-25410 - File and Directory Discovery: The vulnerability allows an attacker to discover and manipulate files and directories on the system, which could lead to data exfiltration or system compromise. This technique can be mitigated by implementing access controls and file system audits, as well as regularly updating and patching systems."}], "technical_analysis": {"Introduction": "CVE-2024-25410 is a remote code execution vulnerability in flusity-CMS 2.33's update_setting.php file, allowing an attacker to upload and execute malicious files.", "Impact and Scope": "The vulnerability has a CVSS score of 6.5 (MEDIUM), with an attack vector of NETWORK and the ability to impact confidentiality, integrity, and availability.", "Related MITRE ATT&CK Techniques": "The following techniques are related to this CVE: T1059.007, T1190, and T1086.", "Technical Details": "The vulnerability is caused by a lack of validation and sanitization of user-uploaded files in the update_setting.php file, allowing an attacker to upload malicious files and execute arbitrary code.", "Detection": "Detection can be done by monitoring file upload and execution patterns, as well as analyzing system logs for suspicious activity.", "Mitigation": "Mitigation strategies include implementing file extension and type restrictions, validating and sanitizing user-uploaded files, and regularly updating and patching affected systems.", "Conclusion": "CVE-2024-25410 is a significant vulnerability that requires immediate attention and action to prevent exploitation."}, "executive_analysis": {"Overview": "CVE-2024-25410 is a high-severity vulnerability in flusity-CMS 2.33 that allows remote code execution, data tampering, and escalating privileges.", "Business Impact": "The impact of this vulnerability is significant, as it could lead to data breaches, system compromise, and reputational damage.", "Technical Impact": "The technical impact of this vulnerability is the potential for remote code execution, which could lead to malware injection, data theft, and system compromise.", "Mitigation Strategies": "The recommended mitigation strategies include implementing file extension and type restrictions, validating and sanitizing user-uploaded files, and regularly updating and patching affected systems.", "Recommendations": "We recommend that executive stakeholders prioritize patching and updating affected systems, as well as implementing additional security measures to prevent exploitation.", "Conclusions": "CVE-2024-25410 is a serious vulnerability that requires immediate attention and action to prevent exploitation and protect against potential threats."}}