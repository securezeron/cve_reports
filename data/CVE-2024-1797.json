{"id": "CVE-2024-1797", "sourceIdentifier": "security@wordfence.com", "published": "2024-05-02T17:15:13.150", "lastModified": "2024-05-02T18:00:37.360", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The WP ULike \u2013 Most Advanced WordPress Marketing Toolkit plugin for WordPress is vulnerable to SQL Injection via the 'status' and 'id' attributes of the 'wp_ulike_counter' and 'wp_ulike' shortcodes in all versions up to, and including, 4.6.9 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."}, {"lang": "es", "value": "El complemento WP ULike \u2013 Most Advanced WordPress Marketing Toolkit para WordPress es vulnerable a la inyecci\u00f3n SQL a trav\u00e9s de los atributos 'status' e 'id' de los c\u00f3digos cortos 'wp_ulike_counter' y 'wp_ulike' en todas las versiones hasta la 4.6.9 incluida, debido a un escape insuficiente en el par\u00e1metro proporcionado por el usuario y a la falta de preparaci\u00f3n suficiente en la consulta SQL existente. Esto hace posible que los atacantes autenticados, con acceso de nivel de colaborador y superior, agreguen consultas SQL adicionales a consultas ya existentes que pueden usarse para extraer informaci\u00f3n confidencial de la base de datos."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}]}, "references": [{"url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3052611%40wp-ulike&new=3052611%40wp-ulike&sfp_email=&sfph_mail=#file43", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d225dee1-305c-4378-bc07-192347a0c838?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1059", "comment": "\"CVE-2024-1797 - This technique is relevant because it allows attackers to inject SQL queries, which can lead to the extraction of sensitive information. Defend against it by implementing strict input validation and sanitization measures.\""}, {"techniqueID": "T1068", "comment": "\"CVE-2024-1797 - This technique is relevant because it demonstrates the use of an Injection attack, which can be used to extract sensitive information. Defend against it by implementing data encryption and secure coding practices.\""}, {"techniqueID": "T1190", "comment": "\"CVE-2024-1797 - This technique is relevant because it shows the use of SQLInjection, which can lead to data breaches. Defend against it by implementing robust input validation, data encryption and secure coding practices.\""}], "stix_bundle": {"@stix_bundle": {"id": "bundle-1", "type": "bundle"}, "objects": [{"type": "vulnerability", "id": "CVE-2024-1797", "created_by": "security@wordfence.com", "created": "2024-05-02T17:15:13.150", "modified": "2024-05-02T18:00:37.360"}, {"type": "indicator", "id": "indicator-1", "created_by": "security@wordfence.com", "created": "2024-05-02T17:15:13.150", "modified": "2024-05-02T18:00:37.360", "description": "Indicator for CVE-2024-1797", "pattern": "SQLInjection", "valid_from": "2024-05-02T17:15:13.150", "valid_until": "2024-12-31T23:59:59.000"}, {"type": "course-of-action", "id": "COA-1", "created_by": "security@wordfence.com", "created": "2024-05-02T17:15:13.150", "modified": "2024-05-02T18:00:37.360", "title": "Mitigate SQL Injection", "description": "Implement strict input validation and sanitization measures", "related_theory": {"id": "T1059", "relationship": "mitigates"}}, {"type": "note", "id": "note-1", "created_by": "security@wordfence.com", "created": "2024-05-02T17:15:13.150", "modified": "2024-05-02T18:00:37.360", "content": "Implement data encryption and secure coding practices"}, {"type": "relationship", "id": "rel-1", "created_by": "security@wordfence.com", "created": "2024-05-02T17:15:13.150", "modified": "2024-05-02T18:00:37.360", "object_id": "indicator-1", "subject_id": "COA-1", "label": "mitigates"}]}, "technical_analysis": {"Introduction": "The CVE-2024-1797 vulnerability allows authenticated attackers with contributor-level access and above to inject SQL queries via the 'status' and 'id' attributes of the 'wp_ulike_counter' and 'wp_ulike' shortcodes.", "Impact and Scope": "The vulnerability has a CVSS score of 8.8, showcasing a high severity impact, and an attack vector of NETWORK.", "Related MITRE ATT&CK Techniques": "T1059, T1068, T1190", "Technical Details": "The vulnerability is due to insufficient escaping on the user-supplied parameter and lack of sufficient preparation on the existing SQL query.", "Detection": "Detection for this vulnerability can be done by monitoring the plugin's functionality and checking for SQL queries being executed.", "Mitigation": "Mitigation measures include implementing strict input validation and sanitization measures, data encryption, and secure coding practices.", "Conclusion": "In conclusion, CVE-2024-1797 is a high-severity vulnerability that requires immediate attention and remediation."}, "executive_analysis": {"Overview": "The CVE-2024-1797 vulnerability poses a significant risk to organizations using the WP ULike plugin.", "Business Impact": "The vulnerability can lead to data breaches, financial losses, and reputational damage.", "Technical Impact": "The vulnerability allows attackers to extract sensitive information, which can be used to gain unauthorized access to systems and data.", "Mitigation Strategies": "Implement robust input validation, data encryption, and secure coding practices.", "Recommendations": "Apply the latest security patches, regularly monitor plugin functionality, and conduct thorough security assessments.", "Conclusions": "In conclusion, it is crucial for organizations to prioritize the remediation of CVE-2024-1797 to prevent potential security breaches."}}