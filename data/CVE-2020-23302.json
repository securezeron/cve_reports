{"id": "CVE-2020-23302", "sourceIdentifier": "cve@mitre.org", "published": "2021-06-10T23:15:07.740", "lastModified": "2021-06-15T17:16:33.817", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "There is a heap-use-after-free at ecma-helpers-string.c:772 in ecma_ref_ecma_string in JerryScript 2.2.0"}, {"lang": "es", "value": "Se presenta un uso de memoria previamente liberada de la pila en el archivo ecma-helpers-string.c:772 en la funci\u00f3n ecma_ref_ecma_string en JerryScript versi\u00f3n 2.2.0"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-416"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jerryscript:jerryscript:2.2.0:*:*:*:*:*:*:*", "matchCriteriaId": "88EBD351-0E34-480A-906A-603AC3920FBF"}]}]}], "references": [{"url": "https://github.com/jerryscript-project/jerryscript/issues/3748", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1203", "comment": "CVE-2020-23302 - Heap-use-after-free vulnerability in JerryScript 2.2.0, leading to potential Remote Code Execution and Code Injection attacks. Defensively, ensure thatJerryScript is regularly updated to prevent exploitation of this vulnerability."}, {"techniqueID": "T1190", "comment": "CVE-2020-23302 - Weakness in JerryScript's memory handling allows an attacker to manipulate and corrupt memory objects, potentially leading to unauthorized code execution. Defensively, implement memory protection mechanisms and monitor for unusual memory access patterns."}], "stix_bundle": {"identity": {"type": "vulnerability", "id": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-23302"}, "vulnerability": {"name": "JerryScript Heap-use-after-free Vulnerability", "description": "A heap-use-after-free vulnerability in JerryScript 2.2.0 may allow an attacker to execute arbitrary code or inject code in a JerryScript application.", "severity": "CRITICAL", "cveid": "CVE-2020-23302", "impact": "HIGH", "attack_vector": "NETWORK", "cvssv2": {"version": "2.0", "score": 7.5}, "cvssv3": {"version": "3.1", "score": 9.8}}, "incidents": [{"type": "indicator", "id": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-23302", "description": "JerryScript Heap-use-after-free Vulnerability Indicator", "criticality": "HIGH", "patternyntax": " JerryScript Heap-use-after-free Vuln"}], "analyses": [{"type": "analysis", "id": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-23302", "name": "JerryScript Heap-use-after-free Vulnerability Analysis", "description": "Analysis of the JerryScript Heap-use-after-free Vulnerability", "threats": [{"type": " malicious code execution", "id": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-23302", "description": "JerryScript Heap-use-after-free Vulnerability Threat", "likelihood": "HIGH", "impact": "HIGH"}], "mitigations": [{"type": "patching", "id": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-23302", "name": "JerryScript Heap-use-after-free Vulnerability Mitigation", "description": "A mitigation strategy for the JerryScript Heap-use-after-free Vulnerability", "risk": "HIGH"}]}]}, "technical_analysis": {"Introduction": "JerryScript Heap-use-after-free Vulnerability is a critical vulnerability in JerryScript 2.2.0 that allows attackers to execute arbitrary code or inject code in a JerryScript application.", "Impact and Scope": "This vulnerability is rated as CRITICAL, with a CVSS score of 9.8 (CVSS 3.1) and 7.5 (CVSS 2.0). It has a high likelihood of exploitation due to its ability to be exploited remotely.", "Related MITRE ATT&CK Techniques": "T1203 and T1190 are the related MITRE ATT&CK Techniques for this vulnerability.", "Technical Details": "The vulnerability is caused by a heap-use-after-free in JerryScript's memory handling, allowing attackers to manipulate and corrupt memory objects.", "Detection": "Defense techniques include detecting anomalous memory access patterns and implementing memory protection mechanisms.", "Mitigation": "The vulnerability can be mitigated by regularly updating JerryScript and implementing memory protection mechanisms.", "Conclusion": "The JerryScript Heap-use-after-free Vulnerability is a critical vulnerability with significant risk of exploitation. Defensively, ensure that JerryScript is regularly updated and implement memory protection mechanisms."}, "executive_analysis": {"Overview": "The JerryScript Heap-use-after-free Vulnerability is a critical vulnerability in JerryScript 2.2.0 that can allow attackers to execute arbitrary code or inject code in a JerryScript application.", "Business Impact": "This vulnerability has significant business implications, as it could allow attackers to compromise sensitive information and disrupt business operations.", "Technical Impact": "The vulnerability has significant technical implications, as it allows attackers to manipulate and corrupt memory objects, potentially leading to unauthorized code execution.", "Mitigation Strategies": "Regularly updating JerryScript and implementing memory protection mechanisms are recommended mitigation strategies.", "Recommendations": "Executives should recommend regularly updating JerryScript and implementing memory protection mechanisms to prevent exploitation of this vulnerability.", "Conclusions": "The JerryScript Heap-use-after-free Vulnerability is a critical vulnerability with significant risk of exploitation. Executives should take immediate action to mitigate this vulnerability."}}