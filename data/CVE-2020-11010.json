{"id": "CVE-2020-11010", "sourceIdentifier": "security-advisories@github.com", "published": "2020-04-20T22:15:13.587", "lastModified": "2020-04-28T17:16:24.837", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "In Tortoise ORM before versions 0.15.23 and 0.16.6, various forms of SQL injection have been found for MySQL and when filtering or doing mass-updates on char/text fields. SQLite & PostgreSQL are only affected when filtering with contains, starts_with, or ends_with filters (and their case-insensitive counterparts)."}, {"lang": "es", "value": "En Tortoise ORM versiones anteriores a la versi\u00f3n  0.15.23 y 0.16.6, varias formas de inyecci\u00f3n SQL han sido encontradas para MySQL y cuando se filtra o realizan actualizaciones masivas en campos char/text. SQLite y PostgreSQL solo est\u00e1n afectados cuando se filtra con los filtros contains, starts_with, o ends_with (y sus hom\u00f3logos que no distinguen entre may\u00fasculas y min\u00fasculas)."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:tortoise_orm_project:tortoise_orm:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.15.23", "matchCriteriaId": "6ECF10D4-736D-4803-8FFC-8E6B029C356C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:tortoise_orm_project:tortoise_orm:*:*:*:*:*:*:*:*", "versionStartIncluding": "0.16.0", "versionEndExcluding": "0.16.6", "matchCriteriaId": "5D762D78-287F-4775-A6A5-8FB114086D62"}]}]}], "references": [{"url": "https://github.com/tortoise/tortoise-orm/commit/91c364053e0ddf77edc5442914c6f049512678b3", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/tortoise/tortoise-orm/security/advisories/GHSA-9j2c-x8qm-qmjq", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2020-11010 - This SQL injection vulnerability allows attackers to inject malicious SQL code, leading to unauthorized data access or modification. Defend against it by implementing input validation and sanitization."}, {"techniqueID": "T1062", "comment": "CVE-2020-11010 - This vulnerability could be exploited using SQL injection attacks, allowing attackers to manipulate data or execute arbitrary SQL code. Defend against it by implementing secure coding practices and validating user input."}, {"techniqueID": "T1190", "comment": "CVE-2020-11010 - This vulnerability could be exploited using social engineering tactics, allowing attackers to trick developers into injecting malicious SQL code. Defend against it by implementing secure coding practices and validating user input."}, {"techniqueID": "T1070", "comment": "CVE-2020-11010 - This vulnerability could be exploited using SQL injection attacks, allowing attackers to execute system commands or access unauthorized data. Defend against it by implementing secure coding practices and validating user input."}], "stix_bundle": {"type": "Bundle", "id": "https://example.com/vulnerability/CVE-2020-11010.stix", "created_by/ref": "https://example.com/vulnerability/CVE-2020-11010", "created": "2020-04-20T22:15:13.587", "modified": "2020-04-28T17:16:24.837", "vulnerability": {"id": "CVE-2020-11010", "name": "CVE-2020-11010 - Tortoise ORM SQL Injection", "description": "In Tortoise ORM before versions 0.15.23 and 0.16.6, various forms of SQL injection have been found for MySQL and when filtering or doing mass-updates on char/text fields. SQLite & PostgreSQL are only affected when filtering with contains, starts_with, or ends_with filters (and their case-insensitive counterparts).", "type": "vulnerability"}, "incidents": [{"type": "indicator", "id": "https://example.com/indicator/CVE-2020-11010", "created_by/ref": "https://example.com/indicator/CVE-2020-11010", "created": "2020-04-20T22:15:13.587", "modified": "2020-04-28T17:16:24.837", "title": "CVE-2020-11010 - Tortoise ORM SQL Injection", "description": "A SQL injection vulnerability in Tortoise ORM allows attackers to inject malicious SQL code.", "category": "Network Attack", "created_by": "https://example.com/user/john_doe", "modified_by": "https://example.com/user/jane_doe"}], "courses_of_action": [{"type": "c2:arbitrary_file-read", "id": "https://example.com/course/CVE-2020-11010-Arbitrary-File-Read", "related_bundle_objects": ["https://example.com/vulnerability/CVE-2020-11010"], "created_by/ref": "https://example.com/course/CVE-2020-11010-Arbitrary-File-Read", "created": "2020-04-20T22:15:13.587", "modified": "2020-04-28T17:16:24.837", "description": "An arbitrary file-read vulnerability in Tortoise ORM allows attackers to read arbitrary files.", "recommendations": ["Implement secure coding practices and validate user input."], "mitigated_by": ["https://example.com/mitigation/CVE-2020-11010-Arbitrary-File-Read"]}], "notes": [{"id": "https://example.com/notes/CVE-2020-11010-Defense-Strategies", "type": "note", "created_by/ref": "https://example.com/notes/CVE-2020-11010-Defense-Strategies", "created": "2020-04-20T22:15:13.587", "modified": "2020-04-28T17:16:24.837", "title": "Defense Strategies", "description": "Implement secure coding practices, validate user input, and use secure frameworks and libraries."}]}, "technical_analysis": {"Introduction": "CVE-2020-11010 is a SQL injection vulnerability in Tortoise ORM that allows attackers to inject malicious SQL code.", "Impact and Scope": "This vulnerability affects Tortoise ORM versions 0.15.23 and 0.16.6, and has a CVSS score of 8.8.", "Related MITRE ATT&CK Techniques": ["T1059", "T1062", "T1190", "T1070"], "Technical Details": "The vulnerability is caused by improper validation of user input, allowing attackers to inject malicious SQL code.", "Detection": "Detect this vulnerability by monitoring for suspicious SQL queries and log entries.", "Mitigation": "Mitigate this vulnerability by implementing secure coding practices, validating user input, and using secure frameworks and libraries.", "Conclusion": "CVE-2020-11010 is a significant vulnerability that requires immediate attention and remediation."}, "executive_analysis": {"Overview": "CVE-2020-11010 is a critical vulnerability that affects Tortoise ORM and allows attackers to inject malicious SQL code.", "Business Impact": "This vulnerability could allow attackers to access sensitive data or compromise business systems.", "Technical Impact": "The vulnerability is caused by improper validation of user input, allowing attackers to inject malicious SQL code.", "Mitigation Strategies": "Implement secure coding practices, validate user input, and use secure frameworks and libraries.", "Recommendations": "Remediate this vulnerability as soon as possible and implement additional security measures to protect against future attacks.", "Conclusions": "CVE-2020-11010 is a critical vulnerability that requires immediate attention and remediation. All stakeholders should be aware of this issue and take action to mitigate its risks."}}