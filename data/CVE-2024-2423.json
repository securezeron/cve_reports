{"id": "CVE-2024-2423", "sourceIdentifier": "security@wordfence.com", "published": "2024-04-09T19:15:33.687", "lastModified": "2024-04-10T13:23:38.787", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The UsersWP \u2013 Front-end login form, User Registration, User Profile & Members Directory plugin for WordPress plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's shortcode(s) in all versions up to, and including, 1.2.6 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El complemento UsersWP \u2013 Front-end login form, User Registration, User Profile &amp; Members Directory para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s de los c\u00f3digos cortos del complemento en todas las versiones hasta la 1.2.6 incluida. debido a una sanitizaci\u00f3n insuficiente de las entradas y a que la salida se escape en los atributos proporcionados por el usuario. Esto hace posible que atacantes autenticados con permisos de nivel de colaborador y superiores inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/browser/userswp/trunk/widgets/user-title.php", "source": "security@wordfence.com"}, {"url": "https://plugins.trac.wordpress.org/changeset?old_path=/userswp/tags/1.2.6&old=3051240&new_path=/userswp/tags/1.2.7&new=3051240&sfp_email=&sfph_mail=", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/2ef53c2c-01fb-41b6-b329-d952ce3424e8?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "TA0001", "comment": "This technique is relevant because it uses unvalidated user input, which is a common vulnerability in web applications. Defending against this technique involves validating user input and ensuring that it meets the required format and constraints."}, {"techniqueID": "TA0002", "comment": "This technique is relevant because it uses a stored cross-site scripting (XSS) vulnerability, which can be used to inject malicious scripts into a web page. Defending against this technique involves identifying and patching stored XSS vulnerabilities and implementing input validation and sanitization."}, {"techniqueID": "TA0004", "comment": "This technique is relevant because it uses a low-privileged user account to exploit the vulnerability. Defending against this technique involves implementing least privilege access controls and monitoring for suspicious activity."}, {"techniqueID": "TA0005", "comment": "This technique is relevant because it uses a network attack vector, which can be used to exploit the vulnerability from a remote location. Defending against this technique involves implementing network segmentation and monitoring for suspicious activity."}, {"techniqueID": "TA0020", "comment": "This technique is relevant because it uses a user interaction to exploit the vulnerability. Defending against this technique involves educating users about the risks of web-based attacks and implementing user authentication and authorization controls."}], "technical_analysis": {"Introduction": "The CVE-2024-2423 vulnerability in the UsersWP plugin for WordPress is a stored cross-site scripting (XSS) vulnerability that can be exploited by an authenticated attacker with contributor-level or above permissions.", "Impact and Scope": "The vulnerability has a CVSS score of 6.4 with a version of 3.1, and an attack vector of NETWORK. It can be exploited to inject arbitrary web scripts into pages, which can be used to steal sensitive information, inject malware, or carry out other malicious activities.", "Related MITRE ATT&CK Techniques": "The following MITRE ATT&CK techniques are related to this CVE: TA0001, TA0002, TA0004, TA0005, and TA0020.", "Technical Details": "The vulnerability is caused by insufficient input sanitization and output escaping on user-supplied attributes in the plugin's shortcode(s). This allows an attacker to inject malicious script code into a page, which can be executed whenever a user accesses that page.", "Detection": "The vulnerability can be detected by monitoring for suspicious activity in the plugin's shortcode(s) and by searching for injected script code in web page source code.", "Mitigation": "The vulnerability can be mitigated by patching the plugin to the latest version, implementing input validation and sanitization, and monitoring for suspicious activity. Users can also use a web application firewall (WAF) to block malicious traffic and prevent exploitation.", "Conclusion": "In conclusion, the CVE-2024-2423 vulnerability in the UsersWP plugin for WordPress is a high-risk vulnerability that can be exploited by an authenticated attacker with contributor-level or above permissions. It is essential to patch the plugin to the latest version and implement input validation and sanitization to prevent exploitation."}, "executive_analysis": {"Overview": "The CVE-2024-2423 vulnerability in the UsersWP plugin for WordPress is a stored cross-site scripting (XSS) vulnerability that can be exploited by an authenticated attacker with contributor-level or above permissions.", "Business Impact": "The vulnerability has a significant business impact, as it can be used to steal sensitive information, inject malware, or carry out other malicious activities. This can lead to significant losses and damage to the company's reputation.", "Technical Impact": "The vulnerability has a significant technical impact, as it can be exploited by an attacker with limited expertise. It is essential to patch the plugin to the latest version and implement input validation and sanitization to prevent exploitation.", "Mitigation Strategies": "The following mitigation strategies can be used to prevent exploitation of the vulnerability: patch the plugin to the latest version, implement input validation and sanitization, and monitor for suspicious activity. Users can also use a web application firewall (WAF) to block malicious traffic and prevent exploitation.", "Recommendations": "We recommend that WordPress plugin developers prioritize patching the vulnerability and implementing input validation and sanitization to prevent exploitation.", "Conclusions": "In conclusion, the CVE-2024-2423 vulnerability in the UsersWP plugin for WordPress is a high-risk vulnerability that requires immediate attention. We recommend that WordPress plugin developers prioritize patching the vulnerability and implementing input validation and sanitization to prevent exploitation."}}