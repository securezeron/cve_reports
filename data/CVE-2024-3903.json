{"id": "CVE-2024-3903", "sourceIdentifier": "contact@wpscan.com", "published": "2024-05-14T15:42:33.087", "lastModified": "2024-08-01T13:56:45.143", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Add Custom CSS and JS WordPress plugin through 1.20 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in as author and above add Stored XSS payloads via a CSRF attack"}, {"lang": "es", "value": "El complemento Add Custom CSS y JS de WordPress hasta la versi\u00f3n 1.20 no tiene verificaci\u00f3n CSRF en algunos lugares y le falta sanitizaci\u00f3n y escape, lo que podr\u00eda permitir a los atacantes iniciar sesi\u00f3n como autor y agregar payloads XSS almacenado a trav\u00e9s de un ataque CSRF."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 7.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 3.7}]}, "references": [{"url": "https://wpscan.com/vulnerability/0a0e7bd4-948d-47c9-9219-380bda9f3034/", "source": "contact@wpscan.com"}], "techniques": [{"techniqueID": "T1059.004", "comment": "Cross-Site Request Forgery (CSRF) - 'Add Custom CSS and JS WordPress plugin' vulnerability, allows attackers to make logged in as author and above add Stored XSS payloads via a CSRF attack. Defend against by implementing CSRF checks, validating and sanitizing user input."}, {"techniqueID": "T1190", "comment": "Web Application Exploitation - 'Add Custom CSS and JS WordPress plugin' vulnerability, allows attackers to inject malicious code. Defend against by implementing input validation and sanitization, restricting file uploads, and auditing application source code."}, {"techniqueID": "T1039.001", "comment": "Other - Web Page/UI Injection - 'Add Custom CSS and JS WordPress plugin' vulnerability, allows attackers to inject malicious scripts. Defend against by validating and sanitizing user input, restricting file uploads, and monitoring for malicious scripts."}], "technical_analysis": {"Introduction": "The Add Custom CSS and JS WordPress plugin is vulnerable to Cross-Site Request Forgery (CSRF) and Web Application Exploitation attacks.", "Impact and Scope": "CVSS 3.1: 7.1, Attack Vector: NETWORK, CVSS 3.1 Severity: HIGH.", "Related MITRE ATT&CK Techniques": "The following MITRE ATT&CK techniques are related to this vulnerability: T1059.004, T1190, T1039.001.", "Technical Details": "The vulnerability allows attackers to inject malicious code and inject stored XSS payloads via a CSRF attack.", "Detection": "Monitor for logs of unauthorized file uploads and modifications, monitor for suspicious web traffic, and monitor for stored XSS payloads.", "Mitigation": "Implement CSRF checks, validate and sanitize user input, restrict file uploads, and audit application source code.", "Conclusion": "The 'Add Custom CSS and JS WordPress plugin' vulnerability is a critical security risk and requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "The 'Add Custom CSS and JS WordPress plugin' vulnerability is a high-risk security issue that requires immediate attention.", "Business Impact": "This vulnerability can result in the unauthorized modification of web pages, leading to reputational damage and financial loss.", "Technical Impact": "This vulnerability can allow attackers to inject malicious code and inject stored XSS payloads via a CSRF attack.", "Mitigation Strategies": "Implement strict input validation and sanitization, restrict file uploads, and monitor for malicious activity.", "Recommendations": "Schedule a security audit and penetration test to identify and remediate the vulnerability, and implement a web application firewall (WAF) to mitigate future attacks.", "Conclusions": "The 'Add Custom CSS and JS WordPress plugin' vulnerability is a critical security issue that requires immediate attention and mitigation."}}