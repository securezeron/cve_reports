{"id": "CVE-2024-32206", "sourceIdentifier": "cve@mitre.org", "published": "2024-04-19T16:15:10.827", "lastModified": "2024-07-03T01:55:51.200", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "A stored cross-site scripting (XSS) vulnerability in the component \\affiche\\admin\\index.php of WUZHICMS v4.1.0 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the $formdata parameter."}, {"lang": "es", "value": "Una vulnerabilidad de Cross Site Scripting (XSS) almacenadas en el componente \\affiche\\admin\\index.php de WUZHICMS v4.1.0 permite a los atacantes ejecutar scripts web o HTML arbitrarios a trav\u00e9s de un payload manipulado inyectado en el par\u00e1metro $formdata."}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.6, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 2.5}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "http://wuzhicms.com", "source": "cve@mitre.org"}, {"url": "https://github.com/majic-banana/vulnerability/blob/main/POC/WUZHICMS4.1.0%20Stored%20Xss%20In%20Affiche%20Model.md", "source": "cve@mitre.org"}, {"url": "https://github.com/wuzhicms/wuzhicms", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-32206 - Potential stored XSS vulnerability in WUZHICMS v4.1.0, allowing attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the $formdata parameter. This technique is relevant to the vulnerability and can be mitigated by implementing a web application firewall (WAF) and validating user input."}, {"techniqueID": "T1190", "comment": "CVE-2024-32206 - Potential stored XSS vulnerability in WUZHICMS v4.1.0, allowing attackers to inject malicious scripts into the application. This technique is relevant to the vulnerability as it enables attackers to manipulate user sessions and inject malicious code without user interaction, making it necessary to implement robust input validation and sanitization."}], "technical_analysis": {"Introduction": "The CVE-2024-32206 vulnerability is a stored cross-site scripting (XSS) vulnerability in the WUZHICMS v4.1.0 component `\\affiche\\admin\\index.php`. This vulnerability allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the `$formdata` parameter.", "Impact and Scope": "The vulnerability has a CVSSv3.1 score of 4.6, with an attack complexity of LOW and a user interaction of REQUIRED.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to T1059: Command and Control and T1190: Exploitation of Remote Services.", "Technical Details": "The vulnerability is caused by a lack of input validation and sanitization, allowing attackers to inject malicious scripts into the application via the `$formdata` parameter.", "Detection": "Detection methods include monitoring for web traffic anomalies and analyzing application logs for suspicious activity.", "Mitigation": "Mitigation strategies include implementing a web application firewall (WAF) and validating user input to prevent malicious payload injection.", "Conclusion": "The CVE-2024-32206 vulnerability is a significant security risk that can be mitigated by implementing robust input validation and sanitization, as well as configuring a WAF to block malicious traffic."}, "executive_analysis": {"Overview": "The CVE-2024-32206 vulnerability is a stored XSS vulnerability in the WUZHICMS v4.1.0 component `\\affiche\\admin\\index.php`, which can enable attackers to execute arbitrary web scripts or HTML.", "Business Impact": "The vulnerability can lead to data breaches, financial losses, and damage to an organization's reputation.", "Technical Impact": "The vulnerability can enable attackers to manipulate user sessions and inject malicious code without user interaction, making it necessary to implement robust input validation and sanitization.", "Mitigation Strategies": "Implementing a WAF and validating user input are recommended mitigation strategies.", "Recommendations": "Executives should prioritize patching the vulnerability and implementing robust security measures to prevent attacks.", "Conclusions": "The CVE-2024-32206 vulnerability is a significant security risk that requires immediate attention and mitigation."}}