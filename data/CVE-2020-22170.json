{"id": "CVE-2020-22170", "sourceIdentifier": "cve@mitre.org", "published": "2021-06-22T15:15:16.187", "lastModified": "2023-11-14T16:21:41.177", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "PHPGurukul Hospital Management System in PHP v4.0 has a SQL injection vulnerability in \\hms\\get_doctor.php. Remote unauthenticated users can exploit the vulnerability to obtain database sensitive information."}, {"lang": "es", "value": "PHPGurukul Hospital Management System en PHP versi\u00f3n v4.0, presenta una vulnerabilidad de inyecci\u00f3n SQL en el archivo \\hms\\get_doctor.php. Los usuarios no autentificados remoto  pueden explotar la vulnerabilidad para obtener informaci\u00f3n confidencial de la base de datos"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpgurukul:hospital_management_system:4.0:*:*:*:*:*:*:*", "matchCriteriaId": "DA36E354-4DBF-4BE4-9BC4-CB00C6771BAF"}]}]}], "references": [{"url": "https://github.com/itodaro/PHPGurukul_Hospital_Management_System4.0_cve", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2020-22170 - This SQL injection vulnerability can be exploited using the 'command Injection' technique, which is a common TTP in attackers' arsenal. This can be mitigated by implementing input validation and sanitization, as well as restricting database access to trusted users only."}, {"techniqueID": "T1068", "comment": "CVE-2020-22170 - This SQL injection vulnerability can also be used to gain unauthorized access to sensitive data and manipulate the database, which is an example of 'Post Exploitation' activity. This can be mitigated by implementing data encryption and access controls, as well as monitoring database activity for unusual patterns."}, {"techniqueID": "T1190", "comment": "CVE-2020-22170 - The vulnerability in the 'get_doctor.php' file can be exploited by an attacker to gain unauthorized access to the database, which is an example of 'Exploitation of Public-Facing Application' activity. This can be mitigated by implementing security patches and configuring web application firewalls (WAFs) to block unauthorized access."}], "stix_bundle": "...", "technical_analysis": {"Introduction": "The PHPGurukul Hospital Management System v4.0 contains a SQL injection vulnerability in the 'get_doctor.php' file, which can be exploited to gain unauthorized access to the database.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5, with a high confidentiality impact and a low attack complexity.", "Related MITRE ATT&CK Techniques": "T1059, T1068, T1190", "Technical Details": "The vulnerability occurs when user input is not properly sanitized, allowing an attacker to inject malicious SQL code.", "Detection": "Detection can be achieved by monitoring database activity for unusual patterns and tracking network traffic for signs of exploitation.", "Mitigation": "Mitigation strategies include implementing input validation and sanitization, restricting database access to trusted users only, and configuring web application firewalls (WAFs) to block unauthorized access.", "Conclusion": "In conclusion, the SQL injection vulnerability in the PHPGurukul Hospital Management System v4.0 can be exploited by an attacker to gain unauthorized access to the database, and mitigation strategies should be implemented to prevent exploitation."}, "executive_analysis": {"Overview": "The PHPGurukul Hospital Management System v4.0 contains a SQL injection vulnerability that can be exploited by an attacker to gain unauthorized access to sensitive data.", "Business Impact": "This vulnerability can result in significant financial and reputational damage to the hospital, as well as compromising patient data.", "Technical Impact": "The vulnerability can be exploited to gain unauthorized access to the database, allowing an attacker to manipulate or steal sensitive data.", "Mitigation Strategies": "Implementing input validation and sanitization, restricting database access to trusted users only, and configuring web application firewalls (WAFs) to block unauthorized access.", "Recommendations": "Executives should ensure that databases are properly configured and maintained, and that all systems are updated with the latest security patches.", "Conclusions": "In conclusion, the SQL injection vulnerability in the PHPGurukul Hospital Management System v4.0 requires immediate attention and mitigation to prevent exploitation and damage to the hospital's reputation."}}