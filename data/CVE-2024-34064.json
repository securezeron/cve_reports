{"id": "CVE-2024-34064", "sourceIdentifier": "security-advisories@github.com", "published": "2024-05-06T15:15:23.803", "lastModified": "2024-06-10T18:15:34.583", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Jinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `>`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe. This vulnerability is fixed in 3.1.4."}, {"lang": "es", "value": "Jinja es un motor de plantillas extensible. El filtro `xmlattr` en las versiones afectadas de Jinja acepta claves que contienen caracteres que no son de atributo. Los atributos XML/HTML no pueden contener espacios, `/`, `&gt;` o `=`, ya que cada uno se interpretar\u00eda como el inicio de un atributo independiente. Si una aplicaci\u00f3n acepta claves (en lugar de solo valores) como entrada del usuario y las muestra en p\u00e1ginas que otros usuarios tambi\u00e9n ven, un atacante podr\u00eda usar esto para inyectar otros atributos y realizar XSS. La soluci\u00f3n para CVE-2024-22195 solo abordaba los espacios, pero no otros caracteres. Aceptar claves como entrada del usuario ahora se considera expl\u00edcitamente un caso de uso no intencionado del filtro `xmlattr`, y el c\u00f3digo que lo hace sin validar la entrada debe marcarse como inseguro, independientemente de la versi\u00f3n de Jinja. Aceptar _valores_ como entrada del usuario sigue siendo seguro. Esta vulnerabilidad se soluciona en 3.1.4."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.5}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://github.com/pallets/jinja/commit/0668239dc6b44ef38e7a6c9f91f312fd4ca581cb", "source": "security-advisories@github.com"}, {"url": "https://github.com/pallets/jinja/security/advisories/GHSA-h75v-3vvj-5mfj", "source": "security-advisories@github.com"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/567XIGSZMABG6TSMYWD7MIYNJSUQQRUC/", "source": "security-advisories@github.com"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GCLF44KY43BSVMTE6S53B4V5WP3FRRSE/", "source": "security-advisories@github.com"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SSCBHIL6BYKR5NRCBXP4XMP2CEEKGFVS/", "source": "security-advisories@github.com"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZALNWE3TXPPHVPSI3AZ5CTMSTAVN5UMS/", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "TA0011", "comment": "Cross-Site Scripting (XSS) - CVE-2024-34064 exposes a vulnerability in Jinja's `xmlattr` filter that can be exploited to inject malicious JavaScript code, which can lead to various attacks including cross-site scripting. This technique is relevant as it highlights the importance of proper input validation and sanitization to prevent XSS attacks."}, {"techniqueID": "TA0057", "comment": "XML Injection - The `xmlattr` filter in Jinja accepts keys containing non-attribute characters, allowing an attacker to inject malicious XML code and conduct XML injection attacks. This technique is relevant as it demonstrates the importance of proper input validation and sanitization to prevent XML injection attacks."}, {"techniqueID": "TA1000", "comment": "Web Application Attacks - The vulnerability in Jinja's `xmlattr` filter can be exploited to conduct web application attacks, such as smuggling, by injecting malicious data and modifying the HTML structure. This technique is relevant as it highlights the importance of secure web application development and input validation."}], "stix_bundle": {"bundles": [{"id": "CVE-2024-34064", "type": "indicator", " created_by_ref": "https://mitre.github.io/cti/cybox/observables/data_sources", "created": "2024-05-06T15:15:23.803Z", "name": "CVE-2024-34064 Jinja XMLAttr Filter Vulnerability", "description": "A remote code execution vulnerability in Jinja's xmlattr filter", "tooling_key": "mitre.attack.data_sources", "tag": ["exploitable"], "confidence": "high", "valid_from": "2024-05-06T15:15:23.803Z", "valid_until": "9999-12-31T23:59:59.999Z", "object_refs": [{"id": "TA0011", "type": "attack_pattern", "contributing_attack_patterns": ["TA0011"], "description": "Cross-Site Scripting (XSS)"}, {"id": "TA0057", "type": "attack_pattern", "contributing_attack_patterns": ["TA0057"], "description": "XML Injection"}, {"id": "TA1000", "type": "attack_pattern", "contributing_attack_patterns": ["TA1000"], "description": "Web Application Attacks"}]}]}, "technical_analysis": {"Introduction": "Jinja's xmlattr filter vulnerability allows for remote code execution and can be exploited by an attacker to inject malicious code.", "Impact and Scope": "This vulnerability has a CVSS score of 5.4 and an attack vector of network. It can be exploited by an attacker to achieve remote code execution.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to TA0011, TA0057, and TA1000.", "Technical Details": "The vulnerability is caused by the xmlattr filter accepting keys containing non-attribute characters, allowing an attacker to inject malicious code.", "Detection": "Detection of this vulnerability can be done by monitoring for suspicious XML data and malicious code injection.", "Mitigation": "Mitigation strategies include validating and sanitizing input data, implementing proper encoding, and restricting access to sensitive systems.", "Conclusion": "In conclusion, the Jinja xmlattr filter vulnerability is a significant threat that can be exploited by an attacker to achieve remote code execution."}, "executive_analysis": {"Overview": "The Jinja xmlattr filter vulnerability is a critical security flaw that can be exploited by an attacker to achieve remote code execution.", "Business Impact": "This vulnerability can have significant business impacts, including data breaches, system compromise, and reputational damage.", "Technical Impact": "The vulnerability can be exploited by an attacker to achieve remote code execution, allowing them to gain unauthorized access to sensitive systems.", "Mitigation Strategies": "The recommended mitigation strategy is to apply the latest security patches and implement robust input validation and sanitization.", "Recommendations": "Executives should ensure that their organization has a robust security posture and that all systems are kept up-to-date with the latest security patches.", "Conclusions": "In conclusion, the Jinja xmlattr filter vulnerability is a critical security threat that requires immediate attention and action."}}