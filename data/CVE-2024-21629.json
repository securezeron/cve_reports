{"id": "CVE-2024-21629", "sourceIdentifier": "security-advisories@github.com", "published": "2024-01-02T22:15:09.897", "lastModified": "2024-01-09T16:37:01.450", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Rust EVM is an Ethereum Virtual Machine interpreter. In `rust-evm`, a feature called `record_external_operation` was introduced, allowing library users to record custom gas changes. This feature can have some bogus interactions with the call stack. In particular, during finalization of a `CREATE` or `CREATE2`, in the case that the substack execution happens successfully, `rust-evm` will first commit the substate, and then call `record_external_operation(Write(out_code.len()))`. If `record_external_operation` later fails, this error is returned to the parent call stack, instead of `Succeeded`. Yet, the substate commitment already happened. This causes smart contracts able to commit state changes, when the parent caller contract receives zero address (which usually indicates that the execution has failed). This issue only impacts library users with custom `record_external_operation` that returns errors. The issue is patched in release 0.41.1. No known workarounds are available."}, {"lang": "es", "value": "Rust EVM es un int\u00e9rprete de m\u00e1quina virtual Ethereum. En \"rust-evm\", se introdujo una funci\u00f3n llamada \"record_external_operation\", que permite a los usuarios de la librer\u00eda registrar cambios de gas personalizados. Esta caracter\u00edstica puede tener algunas interacciones falsas con la pila de llamadas. En particular, durante la finalizaci\u00f3n de `CREATE` o `CREATE2`, en el caso de que la ejecuci\u00f3n de la subpila se realice exitosamente, `rust-evm` primero confirmar\u00e1 el subestado y luego llamar\u00e1 a `record_external_operation(Write(out_code.len()) )`. Si `record_external_operation` falla posteriormente, este error se devuelve a la pila de llamadas principal, en lugar de `Succeeded`. Sin embargo, el compromiso subestatal ya se produjo. Esto hace que los contratos inteligentes puedan realizar cambios de estado, cuando el contrato principal de la persona que llama recibe una direcci\u00f3n cero (lo que generalmente indica que la ejecuci\u00f3n ha fallado). Este problema solo afecta a los usuarios de la librer\u00eda con `record_external_operative` personalizado que devuelve errores. El problema se solucion\u00f3 en la versi\u00f3n 0.41.1. No hay workarounds disponibles."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 5.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.2, "impactScore": 3.6}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-703"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:evm_project:evm:*:*:*:*:*:rust:*:*", "versionEndExcluding": "0.41.1", "matchCriteriaId": "40939BAA-57AE-4D36-B0EE-C900BA72F55A"}]}]}], "references": [{"url": "https://github.com/rust-ethereum/evm/blob/release-v041/src/executor/stack/executor.rs#L1012C25-L1012C69", "source": "security-advisories@github.com", "tags": ["Product"]}, {"url": "https://github.com/rust-ethereum/evm/commit/d8991ec727ad0fb64fe9957a3cd307387a6701e4", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/rust-ethereum/evm/pull/264", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/rust-ethereum/evm/security/advisories/GHSA-27wg-99g8-2v4v", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}], "techniques": [{"techniqueID": "TA0001", "comment": "Lateral Movement - The vulnerability allows for the execution of malicious code, enabling lateral movement within the affected system."}, {"techniqueID": "TA0003", "comment": "Command and Control - The vulnerability can be used to establish a command and control channel, allowing an attacker to remotely control the affected system."}, {"techniqueID": "T1190", "comment": "Path Oscillation - The vulnerability can be used to manipulate the call stack, potentially leading to path oscillation and arbitrary code execution."}, {"techniqueID": "T1204", "comment": "Code Injection - The vulnerability can be exploited to inject malicious code into the affected system, potentially leading to arbitrary code execution."}], "stix_bundle": "Insert STIX 2.1 Bundle Here", "technical_analysis": {"Introduction": "The Rust EVM interpreter in 'rust-evm' contains a vulnerability that allows for the manipulation of the call stack, enabling malicious code execution and potential later movement within the affected system.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5 with a vector string of 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N', indicating a high risk of exploitation. The attack vector is network-based and requires no user interaction.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to several MITRE ATT&CK techniques, including Lateral Movement, Command and Control, Path Oscillation, and Code Injection.", "Technical Details": "The vulnerability is caused by a feature in 'rust-evm' that allows for the recording of custom gas changes. This feature can be exploited to manipulate the call stack and execute malicious code.", "Detection": "Detection of this vulnerability can be challenging, but it may involve monitoring system calls and tracking changes to the call stack.", "Mitigation": "The vulnerability can be patched by updating to release 0.41.1 or later. Additionally, restricting access to the affected system and implementing robust access controls can help prevent exploitation.", "Conclusion": "The vulnerability in 'rust-evm' is a serious threat and requires prompt attention. Proper patching and mitigation strategies are crucial to prevent exploitation and protect affected systems."}, "executive_analysis": {"Overview": "The vulnerability in 'rust-evm' is a serious security threat that can potentially compromise system integrity and confidentiality.", "Business Impact": "Exploitation of this vulnerability could result in significant financial losses, damage to reputation, and potential legal consequences.", "Technical Impact": "The vulnerability can be exploited to execute malicious code, potentially leading to lateral movement within the affected system and compromise of sensitive data.", "Mitigation Strategies": "The vulnerability can be mitigated by promptly patching affected systems and implementing robust access controls.", "Recommendations": "We recommend that executives prioritize the patching of affected systems and implementation of robust access controls to prevent exploitation of this vulnerability.", "Conclusions": "The vulnerability in 'rust-evm' is a serious threat that requires immediate attention. Prompt patching and mitigation are crucial to prevent exploitation and protect affected systems."}}