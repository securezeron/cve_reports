{"id": "CVE-2015-6828", "sourceIdentifier": "cve@mitre.org", "published": "2015-09-16T14:59:04.417", "lastModified": "2019-06-26T19:51:26.043", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The tweet_info function in class/__functions.php in the SecureMoz Security Audit plugin 1.0.5 and earlier for WordPress does not use an HTTPS session for downloading serialized data, which allows man-in-the-middle attackers to conduct PHP object injection attacks and execute arbitrary PHP code by modifying the client-server data stream.  NOTE: some of these details are obtained from third party information."}, {"lang": "es", "value": "Vulnerabilidad en la funci\u00f3n tweet_info en class/__functions.php en el plugin SecureMoz Security Audit 1.0.5 y versiones anteriores para WordPress, no usa una sesi\u00f3n HTTPS para descargar datos serializados, lo que permite a atacantes man-in-the-middle llevar a cabo ataques de inyecci\u00f3n de objetos PHP y ejecutar c\u00f3digo PHP arbitrario mediante la modificaci\u00f3n de la secuencia de datos cliente-servidor. NOTA: algunos de estos detalles han sido obtenidos de informaci\u00f3n de terceros."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:securemoz:security_audit:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "1.0.5", "matchCriteriaId": "69AF5040-8305-4FB2-A583-34FB99913F3A"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2015/09/05/4", "source": "cve@mitre.org", "tags": ["Exploit", "Mailing List", "Third Party Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2015/09/06/3", "source": "cve@mitre.org", "tags": ["Exploit", "Mailing List", "Third Party Advisory"]}, {"url": "https://wpvulndb.com/vulnerabilities/8179", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2015-6828 - A PHP object injection attack is relevant because it allows an attacker to inject arbitrary PHP code. Defend against it by validating and sanitizing user input."}, {"techniqueID": "T1210", "comment": "CVE-2015-6828 - Man-in-the-middle attacks are relevant because they allow an attacker to inject malicious code. Defend against it by using HTTPS and verifying the authenticity of data."}], "stix_bundle": {"id": "CVE-2015-6828.bundle", "type": "bundle", "spec_version": "2.1", "entities": [{"id": "CVE-2015-6828", "type": "vulnerability", "description": {"description_type": "short_description", "description": "The tweet_info function in class/__functions.php in the SecureMoz Security Audit plugin 1.0.5 and earlier for WordPress does not use an HTTPS session for downloading serialized data, which allows man-in-the-middle attackers to conduct PHP object injection attacks and execute arbitrary PHP code by modifying the client-server data stream."}, "cvss": {"v2": {"score": 6.8, "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL"}}, "related_objects": [{"id": "T1190", "type": "attack-pattern", "label": "Exploit Public-Facing Application"}, {"id": "T1210", "type": "attack-pattern", "label": "Sniffing"}]}], "relationship": {"vulnerability_attack_pattern": {"vulnerability": {"id_r_value": "CVE-2015-6828"}, "attack_pattern": {"id_r_value": "T1210"}}}}, "technical_analysis": {"Introduction": "The CVE-2015-6828 is a PHP object injection vulnerability in the SecureMoz Security Audit plugin for WordPress.", "Impact and Scope": "The vulnerability allows an attacker to conduct PHP object injection attacks and execute arbitrary PHP code. The CVSS score is 6.8.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques are T1190 and T1210.", "Technical Details": "The vulnerability is caused by the tweet_info function in class/__functions.php not using an HTTPS session for downloading serialized data.", "Detection": "Detection methods include monitoring for suspicious network traffic and monitoring for PHP code injection.", "Mitigation": "Mitigation strategies include validating and sanitizing user input, using HTTPS, and verifying the authenticity of data.", "Conclusion": "The CVE-2015-6828 is a critical vulnerability that requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "The CVE-2015-6828 is a critical vulnerability in the SecureMoz Security Audit plugin for WordPress that can be exploited to conduct PHP object injection attacks.", "Business Impact": "The vulnerability can allow an attacker to execute arbitrary PHP code, which can compromise sensitive data and lead to financial losses.", "Technical Impact": "The vulnerability affects the security of the WordPress platform and can be exploited using man-in-the-middle attacks.", "Mitigation Strategies": "Mitigation strategies include validating and sanitizing user input, using HTTPS, and verifying the authenticity of data.", "Recommendations": "Recommendations include patching the vulnerability as soon as possible and validating user input.", "Conclusions": "The CVE-2015-6828 is a critical vulnerability that requires immediate attention and mitigation."}}