{"id": "CVE-2023-6708", "sourceIdentifier": "security@wordfence.com", "published": "2024-07-18T03:15:02.373", "lastModified": "2024-07-18T12:28:43.707", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The SVG Support plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the SVG upload feature in all versions up to, and including, 2.5.5 due to insufficient input sanitization and output escaping, even when the 'Sanitize SVG while uploading' feature is enabled. This makes it possible for authenticated attackers, with author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. Note that successful exploitation of this vulnerability requires the administrator to allow author-level users to upload SVG files."}, {"lang": "es", "value": "El complemento SVG Support para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s de la funci\u00f3n de carga de SVG en todas las versiones hasta la 2.5.5 incluida debido a una sanitizaci\u00f3n de entrada y un escape de salida insuficientes, incluso cuando la funci\u00f3n \"Desinfectar SVG durante la carga\" est\u00e1 habilitado. Esto hace posible que atacantes autenticados, con acceso a nivel de autor y superior, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada. Tenga en cuenta que la explotaci\u00f3n exitosa de esta vulnerabilidad requiere que el administrador permita a los usuarios de nivel de autor cargar archivos SVG."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/browser/svg-support/trunk/functions/attachment.php#L235", "source": "security@wordfence.com"}, {"url": "https://plugins.trac.wordpress.org/browser/svg-support/trunk/svg-support.php#L110", "source": "security@wordfence.com"}, {"url": "https://wordpress.org/plugins/svg-support/", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/72bcfd2a-6803-4073-8fa9-62bcf0a10571?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1059.004", "comment": "CVE-2023-6708 - The availability of a Stored Cross-Site Scripting (XSS) vulnerability allows an attacker to inject malicious scripts into WordPress pages, which can be executed by authenticated users with author-level access or above. This can be used to conduct phishing attacks, steal sensitive information, or conduct other malicious activities."}, {"techniqueID": "T1110.003", "comment": "CVE-2023-6708 - The proximity of an attacker to the vulnerable WordPress instance allows for exploitation of the Stored XSS vulnerability, enabling the attacker to inject malicious scripts into the system. This can be used to conduct lateral movement, maintain persistence, or conduct further exploitation."}, {"techniqueID": "T1134.001", "comment": "CVE-2023-6708 - The use of unvalidated user input in the WordPress plugin SVG Support allows an attacker to inject malicious code, enabling further exploitation of the vulnerability. This can be used to conduct post-exploitation activities, such as data exfiltration or command execution."}, {"techniqueID": "T1190.004", "comment": "CVE-2023-6708 - The reliance on administrator privileges to exploit the vulnerability allows an attacker to conduct further exploitation and maintain persistence on the system. This can be used to conduct further attacks or maintain access to the system."}], "stix_bundle": {"$schema": "https://stix-project.github.io/json/schemas/2.1/stix_bundle.json", "type": "https://stix-project.github.io/json/schemas/2.1/stix_bundle#STIXBundle", "id": "https://example.com/stix-bundle/exported/v2.1/mitre-cve-2023-6708", "description": "STIX bundle for CVE-2023-6708", "Created": "2024-07-18T03:15:02.373", "modified": "2024-07-18T12:28:43.707", "objects": [{"$schema": "https://stix-project.github.io/json/schemas/2.1/observable#Observable", "type": "https://stix-project.github.io/json/schemas/2.1/observable#Observable", "id": "https://example.com/stix-observable/exported/v2.1/svg-support-plugin", "name": "SVG Support Plugin", "description": "The SVG Support plugin for WordPress allows the upload of SVG files.", "objects": [], "relations": [{"id": "https://example.com/stix-observable/exported/v2.1/svg-support-plugin/mitre-technique-T1059.004", "relationship": "mitre-technique", "technique": {"id": "https://example.com/stix-observable/exported/v2.1/mitre-technique-T1059.004", "name": "Command And Control"}}]}, {"$schema": "https://stix-project.github.io/json/schemas/2.1/ransom-note#RansomNote", "type": "https://stix-project.github.io/json/schemas/2.1/ransom-note#RansomNote", "id": "https://example.com/stix-ransom-note/exported/v2.1/cve-2023-6708", "name": "CVE-2023-6708", "description": "The SVG Support plugin for WordPress is vulnerable to Stored XSS due to insufficient input sanitization and output escaping.", "objects": [], "relations": [{"id": "https://example.com/stix-ransom-note/exported/v2.1/cve-2023-6708/mitre-technique-T1059.004", "relationship": "mitre-technique", "technique": {"id": "https://example.com/stix-ransom-note/exported/v2.1/mitre-technique-T1059.004", "name": "Command And Control"}}]}]}, "technical_analysis": {"Introduction": "The SVG Support plugin for WordPress provides a mechanism for uploading and displaying SVG files on WordPress websites.", "Impact and Scope": "The vulnerability allows an attacker to inject malicious scripts into WordPress pages, which can be executed by authenticated users with author-level access or above. The attackvector is CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N.", "Related MITRE ATT&CK Techniques": "T1059.004, T1110.003, T1134.001, T1190.004", "Technical Details": "The vulnerability occurs due to insufficient input sanitization and output escaping in the SVG upload feature.", "Detection": "Detection of the vulnerability can be achieved by monitoring for suspicious SVG file uploads and monitoring for injected scripts.", "Mitigation": "Mitigation strategies include disabling author-level access, restricting SVG file uploads, and implementing input validation and sanitization.", "Conclusion": "The SVG Support plugin for WordPress is vulnerable to Stored XSS, and mitigation strategies should be implemented to prevent exploitation."}, "executive_analysis": {"Overview": "The SVG Support plugin for WordPress is vulnerable to Stored XSS, allowing attackers to inject malicious scripts and conduct further exploitation.", "Business Impact": "The vulnerability can result in unauthorized access to sensitive information, financial loss, and reputational damage.", "Technical Impact": "The vulnerability allows attackers to inject malicious scripts, conduct further exploitation, and maintain persistence on the system.", "Mitigation Strategies": "Disable author-level access, restrict SVG file uploads, and implement input validation and sanitization.", "Recommendations": "Implement a web application firewall, monitor for suspicious activity, and conduct regular security audits.", "Conclusions": "The SVG Support plugin for WordPress is vulnerable to Stored XSS, and mitigation strategies should be implemented to prevent exploitation."}}