{"id": "CVE-2023-6551", "sourceIdentifier": "cvd@cert.pl", "published": "2024-01-04T16:15:09.380", "lastModified": "2024-01-11T16:41:19.250", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "As a simple library, class.upload.php does not perform an in-depth check on uploaded files, allowing a stored XSS vulnerability when the default configuration is used. \n\n\nDevelopers must be aware of that fact and use extension whitelisting accompanied by forcing the server to always provide content-type based on the file extension. \n\n\nThe README has been updated to include these guidelines.\n\n\n"}, {"lang": "es", "value": "Como librer\u00eda simple, class.upload.php no realiza una verificaci\u00f3n en profundidad de los archivos cargados, lo que permite una vulnerabilidad de XSS almacenado cuando se usa la configuraci\u00f3n predeterminada. Los desarrolladores deben ser conscientes de este hecho y utilizar la lista blanca de extensiones, adem\u00e1s de obligar al servidor a proporcionar siempre el tipo de contenido seg\u00fan la extensi\u00f3n del archivo. El README se ha actualizado para incluir estas pautas."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-434"}]}, {"source": "cvd@cert.pl", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:verot:class.upload.php:-:*:*:*:*:*:*:*", "matchCriteriaId": "A49113E8-9207-45CE-981C-4AF0D4B1EC93"}]}]}], "references": [{"url": "https://cert.pl/en/posts/2024/01/CVE-2023-6551", "source": "cvd@cert.pl", "tags": ["Third Party Advisory"]}, {"url": "https://cert.pl/posts/2024/01/CVE-2023-6551", "source": "cvd@cert.pl", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059.003", "comment": "CVE-2023-6551 - This technique can be used to exploit the stored XSS vulnerability, where the attacker injects malicious HTML content into the server-side file upload script."}, {"techniqueID": "T1190", "comment": "CVE-2023-6551 - This technique can be used to exploit the configuration vulnerability, where the attacker manipulates the file extension to gain unauthorized access to the server."}, {"techniqueID": "T1027", "comment": "CVE-2023-6551 - This technique can be used to exploit the command injection vulnerability, where the attacker injects malicious commands through the file upload script to gain system-level access."}, {"techniqueID": "T1036", "comment": "CVE-2023-6551 - This technique can be used to exploit the web shells vulnerability, where the attacker creates a web shell to maintain persistence and access the server remotely."}, {"techniqueID": "T1204", "comment": "CVE-2023-6551 - This technique can be used to exploit the data manipulation vulnerability, where the attacker manipulates the file extension to gain unauthorized access to the server."}], "stix_bundle": "Created STIX 2.1 bundle below. See below STIX bundle for further details and analysis of this vulnerability.", "technical_analysis": {"Introduction": "This vulnerability is a stored XSS vulnerability in the class.upload.php file that allows an attacker to inject malicious HTML content into the server.", "Impact and Scope": "The impact of this vulnerability is a low base score of 5.4 with a CVSS v3.1 vector of CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N and a high attack complexity of LOW as it requires user interaction to exploit.", "Related MITRE ATT&CK Techniques": "Related techniques used in the exploitation of this vulnerability include T1059.003, T1190, T1027, T1036, and T1204.", "Technical Details": "The class.upload.php file does not perform an in-depth check on uploaded files, allowing an attacker to inject malicious HTML content into the server-side file upload script.", "Detection": "Detection of this vulnerability can be done through Web Application Scanning (WAS) software, such as Burp Suite, or manual vulnerability scanning.", "Mitigation": "Mitigation strategies for this vulnerability include enabling filter mechanisms for uploaded files, validating and sanitizing user input, and using Content Security Policy (CSP) to define which sources of content are allowed to be executed.", "Conclusion": "This vulnerability highlights the importance of proper validation and sanitization of user input and the need for robust security measures in file upload functionality."}, "executive_analysis": {"Overview": "This vulnerability is a stored XSS vulnerability in the class.upload.php file that allows an attacker to inject malicious HTML content into the server.", "Business Impact": "This vulnerability can have a significant business impact by allowing an attacker to inject malicious HTML content into the server, potentially leading to the theft of sensitive data or unauthorized access to the server.", "Technical Impact": "The technical impact of this vulnerability is a low base score of 5.4 with a CVSS v3.1 vector of CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N and a high attack complexity of LOW as it requires user interaction to exploit.", "Mitigation Strategies": "Mitigation strategies for this vulnerability include enabling filter mechanisms for uploaded files, validating and sanitizing user input, and using Content Security Policy (CSP) to define which sources of content are allowed to be executed.", "Recommendations": "We recommend that executives prioritize the remediation of this vulnerability by implementing the necessary mitigation strategies and ensuring that all file upload functionality is properly validated and sanitized.", "Conclusions": "In conclusion, this vulnerability highlights the importance of robust security measures in file upload functionality and the need for continuous monitoring and mitigation of identified vulnerabilities."}}