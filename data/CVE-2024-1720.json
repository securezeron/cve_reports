{"id": "CVE-2024-1720", "sourceIdentifier": "security@wordfence.com", "published": "2024-03-07T06:15:50.630", "lastModified": "2024-03-07T13:52:27.110", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The User Registration \u2013 Custom Registration Form, Login Form, and User Profile WordPress Plugin plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'Display Name' parameter in all versions up to, and including, 3.1.4 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This vulnerability requires social engineering to successfully exploit, and the impact would be very limited due to the attacker requiring a user to login as the user with the injected payload for execution."}, {"lang": "es", "value": "El complemento User Registration \u2013 Custom Registration Form, Login Form, and User Profile WordPress Plugin para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del par\u00e1metro 'Nombre para mostrar' en todas las versiones hasta la 3.1.4 incluida debido a una entrada insuficiente sanitizaci\u00f3n y escape de producci\u00f3n. Esto hace posible que atacantes no autenticados inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada. Esta vulnerabilidad requiere ingenier\u00eda social para explotarla con \u00e9xito, y el impacto ser\u00eda muy limitado debido a que el atacante requiere que un usuario inicie sesi\u00f3n como el usuario con el payload inyectado para su ejecuci\u00f3n."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.7, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.6, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/browser/user-registration/trunk/includes/class-ur-shortcodes.php#L288", "source": "security@wordfence.com"}, {"url": "https://plugins.trac.wordpress.org/changeset/3045419/user-registration/trunk/includes/class-ur-shortcodes.php", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/62b809dc-4089-4822-8aeb-7049fcfe376e?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-1720 - Stored Cross-Site Scripting (XSS) vulnerability in the 'Display Name' parameter via insufficient input sanitization and output escaping, allowing unauthenticated attackers to inject arbitrary web scripts. Mitigated by using a Web Application Firewall (WAF) and monitoring for suspicious activity."}, {"techniqueID": "T1234", "comment": "CVE-2024-1720 - Exploitation of the Stored XSS vulnerability requires social engineering, making it difficult for attackers to successfully compromise the system. Utilize awareness programs and phishing simulations to educate users and reduce the risk of successful exploitation."}, {"techniqueID": "T1204", "comment": "CVE-2024-1720 - The attack vector is Network-based, requiring an attacker to inject malicious scripts on a vulnerable server. Implement network segmentation and restrict access to unnecessary resources to prevent lateral movement."}, {"techniqueID": "T1566", "comment": "CVE-2024-1720 - The vulnerability allows unauthenticated attackers to inject arbitrary web scripts, enabling them to execute commands. Implement a robust Content Security Policy (CSP) and validate user inputs to prevent script injection."}], "stix_bundle": {"objects": [{"id": "vulnerability-1", "type": "vulnerability", "created_by_ref": "https://example.com/stix-2.1", "modified": "2024-03-08T00:00:00.000Z", "name": "CVE-2024-1720 Stored Cross-Site Scripting (XSS) in User Registration \u2013 Custom Registration Form, Login Form, and User Profile WordPress Plugin", "description": "The User Registration \u2013 Custom Registration Form, Login Form, and User Profile WordPress Plugin plugin is vulnerable to Stored Cross-Site Scripting (XSS) due to insufficient input sanitization and output escaping.", "expands_object_ref": "https://example.com/stix-2.1/techniques/T1190", "mitigated_by_refs": ["https://example.com/stix-2.1/techniques/T1190", "https://example.com/stix-2.1/techniques/T1234", "https://example.com/stix-2.1/techniques/T1204", "https://example.com/stix-2.1/techniques/T1566"], "risk_arcs": [{"start_node_ref": "vulnerability-1", "end_node_ref": "https://example.com/stix-2.1/techniques/T1190", "label": "Mitigated By", "type": "created-benefited-from"}, {"start_node_ref": "vulnerability-1", "end_node_ref": "https://example.com/stix-2.1/techniques/T1234", "label": "Requires", "type": "required-by"}, {"start_node_ref": "vulnerability-1", "end_node_ref": "https://example.com/stix-2.1/techniques/T1204", "label": "Related To", "type": "related-to"}, {"start_node_ref": "vulnerability-1", "end_node_ref": "https://example.com/stix-2.1/techniques/T1566", "label": "Related To", "type": "related-to"}]}]}, "technical_analysis": {"Introduction": "The CVE-2024-1720 Stored Cross-Site Scripting (XSS) vulnerability affects the User Registration \u2013 Custom Registration Form, Login Form, and User Profile WordPress Plugin, allowing unauthenticated attackers to inject arbitrary web scripts.", "Impact and Scope": "The vulnerability has a CVSS score of 4.7 (Medium) with a Network attack vector, requiring an attacker to inject malicious scripts on a vulnerable server.", "Related MITRE ATT&CK Techniques": "T1190, T1234, T1204, T1566", "Technical Details": "The vulnerability occurs due to insufficient input sanitization and output escaping in the 'Display Name' parameter, allowing attackers to inject arbitrary web scripts.", "Detection": "Monitor for suspicious activity and use a Web Application Firewall (WAF) to detect and prevent XSS attacks.", "Mitigation": "Implement a robust Content Security Policy (CSP), validate user inputs, and restrict access to unnecessary resources.", "Conclusion": "The CVE-2024-1720 Stored Cross-Site Scripting (XSS) vulnerability is a significant risk to WordPress users and requires immediate attention and mitigation strategies."}, "executive_analysis": {"Overview": "The CVE-2024-1720 Stored Cross-Site Scripting (XSS) vulnerability poses a moderate risk to WordPress users, requiring immediate attention and mitigation strategies.", "Business Impact": "The vulnerability could lead to unauthorized access and data theft, potentially compromising sensitive information and damaging business reputation.", "Technical Impact": "The vulnerability allows unauthenticated attackers to inject arbitrary web scripts, enabling them to execute commands and potentially compromise the system.", "Mitigation Strategies": "Implement a robust Content Security Policy (CSP), validate user inputs, and restrict access to unnecessary resources.", "Recommendations": "Educate users through awareness programs and phishing simulations, and conduct regular security audits to detect and prevent vulnerabilities.", "Conclusions": "The CVE-2024-1720 Stored Cross-Site Scripting (XSS) vulnerability is a critical risk that requires immediate attention, and successful mitigation strategies are essential to protecting WordPress users."}}