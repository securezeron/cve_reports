{"id": "CVE-2020-28038", "sourceIdentifier": "cve@mitre.org", "published": "2020-11-02T21:15:31.040", "lastModified": "2023-11-07T03:21:06.550", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "WordPress before 5.5.2 allows stored XSS via post slugs."}, {"lang": "es", "value": "WordPress versiones anteriores a 5.5.2, permite un ataque de tipo XSS almacenado por medio de slugs de publicaciones"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*", "versionEndExcluding": "5.5.2", "matchCriteriaId": "1D5D80A5-C662-4540-9D2E-9C3F06D1D8FC"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:31:*:*:*:*:*:*:*", "matchCriteriaId": "80F0FA5D-8D3B-4C0E-81E2-87998286AF33"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:32:*:*:*:*:*:*:*", "matchCriteriaId": "36D96259-24BD-44E2-96D9-78CE1D41F956"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:33:*:*:*:*:*:*:*", "matchCriteriaId": "E460AA51-FCDA-46B9-AE97-E6676AA5E194"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*", "matchCriteriaId": "DEECE5FC-CACF-4496-A3E7-164736409252"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*", "matchCriteriaId": "07B237A9-69A3-4A9C-9DA0-4E06BD37AE73"}]}]}], "references": [{"url": "https://blog.ripstech.com", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2020/11/msg00004.html", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CHHVNK2WYAM3ZTCXTFSEIT56IKLVJHU3/", "source": "cve@mitre.org"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VAVVYJKA2I6CRQUINECDPBGWMQDEG244/", "source": "cve@mitre.org"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VUXVUAKL2HL4QYJEPHBNVQQWRMFMII2Y/", "source": "cve@mitre.org"}, {"url": "https://wordpress.org/news/2020/10/wordpress-5-5-2-security-and-maintenance-release/", "source": "cve@mitre.org", "tags": ["Release Notes", "Vendor Advisory"]}, {"url": "https://www.debian.org/security/2020/dsa-4784", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "Use of stored XSS to inject malicious scripts - A high-severity vulnerability in WordPress allows an attacker to inject malicious scripts into post slugs, potentially leading to arbitrary code execution, data exfiltration, or other malicious activities."}, {"techniqueID": "T1059", "comment": "Command Injection - This vulnerability could be used to inject malicious commands, which would execute with the privileges of the affected WordPress instance, allowing an attacker to manipulate the system, steal sensitive data, or establish a backdoor."}, {"techniqueID": "T1191", "comment": "Cross-Site Scripting (XSS) - A stored XSS vulnerability in WordPress allows an attacker to inject malicious scripts into post slugs, which could be executed by other users who visit the affected page, potentially leading to session hijacking, data theft, or other malicious activities."}, {"techniqueID": "T1022", "comment": "Elevation of Privilege - This vulnerability could be used to escalate privileges, allowing an attacker to gain elevated access to the WordPress instance and potentially exploit other vulnerable components or applications."}], "stix_bundle": {"type": "bundle", "id": "https://example.com/stix_bundle", "spec_version": "2.1", "objects": [{"type": "vulnerability", "id": "https://example.com/cve-2020-28038", "created": "2020-11-02T21:15:31.040Z", "modified": "2023-11-07T03:21:06.550Z", "name": "CVE-2020-28038: WordPress Stored XSS in Post Slugs", "description": "A stored XSS vulnerability in WordPress allows an attacker to inject malicious scripts into post slugs, potentially leading to arbitrary code execution, data exfiltration, or other malicious activities.", "category": "Network Access", "cve": {"id": "CVE-2020-28038", "published": "2020-11-02T21:15:31.040Z", "last_modified": "2023-11-07T03:21:06.550Z", "cvss": {"v2": {"base_score": 4.3, "base_severity": "MEDIUM"}, "v3": {"base_score": 6.1, "base_severity": "MEDIUM"}}}, "related_events": [{"type": "attack_pattern", "id": "https://example.com/T1190", "name": "Use of stored XSS to inject malicious scripts"}, {"type": "attack_pattern", "id": "https://example.com/T1059", "name": "Command Injection"}, {"type": "attack_pattern", "id": "https://example.com/T1191", "name": "Cross-Site Scripting (XSS)"}, {"type": "attack_pattern", "id": "https://example.com/T1022", "name": "Elevation of Privilege"}]}, {"type": "note", "id": "https://example.com/note", "created": "2023-11-07T03:21:06.550Z", "content": "Detection and mitigation strategies: Monitor application logs for suspicious activity, implement input validation and sanitization, and restrict access to sensitive areas of the system. Additional measures may include: configuring web application firewalls (WAFs) to detect and block malicious traffic, implementing role-based access control (RBAC) to limit access to sensitive areas of the system, and monitoring system logs for signs of intrusion."}], "relationship": {"vulnerability": {"related_to": {"attack_pattern": {"https://example.com/T1190": {"type": "uses"}, "https://example.com/T1059": {"type": "uses"}, "https://example.com/T1191": {"type": "uses"}, "https://example.com/T1022": {"type": "uses"}}}}, "note": {"related_to": {"vulnerability": {"https://example.com/cve-2020-28038": {"type": "addresses"}}}}}}, "technical_analysis": {"Introduction": "A stored XSS vulnerability in WordPress allows an attacker to inject malicious scripts into post slugs, potentially leading to arbitrary code execution, data exfiltration, or other malicious activities.", "Impact and Scope": "CVSS 3.1 score: 6.1, Attack vector: Network, Severity: Medium.", "Related MITRE ATT&CK Techniques": ["T1190", "T1059", "T1191", "T1022"], "Technical Details": "The vulnerability occurs when the WordPress core doesn't properly sanitize and validate user input in the post slug field, allowing an attacker to inject malicious scripts.", "Detection": "Monitor application logs for suspicious activity.", "Mitigation": "Implement input validation and sanitization, restrict access to sensitive areas of the system, and configure web application firewalls (WAFs) to detect and block malicious traffic.", "Conclusion": "This vulnerability highlights the importance of proper input validation and sanitization in web applications."}, "executive_analysis": {"Overview": "A stored XSS vulnerability in WordPress allows an attacker to inject malicious scripts into post slugs, potentially leading to arbitrary code execution, data exfiltration, or other malicious activities.", "Business Impact": "This vulnerability could lead to significant financial losses, breach of confidentiality, and damage to reputation.", "Technical Impact": "The vulnerability could be used to exploit other weaknesses in the system, resulting in the attacker gaining unrestricted access to sensitive areas of the system.", "Mitigation Strategies": "Implement input validation and sanitization, restrict access to sensitive areas of the system, and configure web application firewalls (WAFs) to detect and block malicious traffic.", "Recommendations": "Executives should prioritize addressing this vulnerability by allocating necessary resources and implementing mitigation strategies.", "Conclusions": "This vulnerability highlights the importance of prioritizing security in web applications and implementing effective mitigation strategies."}}