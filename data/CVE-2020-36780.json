{"id": "CVE-2020-36780", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-02-28T09:15:36.673", "lastModified": "2024-02-28T14:06:45.783", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: sprd: fix reference leak when pm_runtime_get_sync fails\n\nThe PM reference count is not expected to be incremented on\nreturn in sprd_i2c_master_xfer() and sprd_i2c_remove().\n\nHowever, pm_runtime_get_sync will increment the PM reference\ncount even failed. Forgetting to putting operation will result\nin a reference leak here.\n\nReplace it with pm_runtime_resume_and_get to keep usage\ncounter balanced."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: i2c: sprd: corrige la fuga de referencia cuando falla pm_runtime_get_sync No se espera que el recuento de referencias de PM aumente al regresar en sprd_i2c_master_xfer() y sprd_i2c_remove(). Sin embargo, pm_runtime_get_sync incrementar\u00e1 el recuento de referencias de PM incluso si falla. Olvidarse de poner en funcionamiento resultar\u00e1 en una fuga de referencia aqu\u00ed. Reempl\u00e1celo con pm_runtime_resume_and_get para mantener el contador de uso equilibrado."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/3a4f326463117cee3adcb72999ca34a9aaafda93", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/7e1764312440c5df9dfe6b436035a03673b0c1b9", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/9223505e938ba3db5907e058f4209770cff2f2a7", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/d3406ab52097328a3bc4cbe124bfd8f6d51fb86f", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/e547640cee7981fd751d2c9cde3a61bdb678b755", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1177: Kernel Module Loading", "comment": "CVE-2020-36780 - A kernel module loading vulnerability could be exploited to gain unauthorized access to the system, allowing attackers to execute arbitrary code within the kernel context."}, {"techniqueID": "T1059: Software Deployment", "comment": "CVE-2020-36780 - This vulnerability could be exploited by a malicious actor to deploy a kernel module that compromise the system's security, which could be a part of a larger attack tactic."}, {"techniqueID": "T1074: Hardware Displacement", "comment": "CVE-2020-36780 - By exploiting this vulnerability, attackers could potentially perform hardware displacement techniques such as replacing or modifying kernel modules, allowing them to gain further access or control."}], "technical_analysis": {"Introduction": "This vulnerability is located in the i2c subsystem of the Linux kernel and it allows an attacker to execute arbitrary code with kernel privileges.", "Impact and Scope": "This vulnerability has a base score of 8.8, and it can be exploited using a malicious kernel module. It was fixed by committing the fixes to the kernel's master branch. The CVE is relevant to Linux kernel devices and systems.", "Related MITRE ATT&CK Techniques": "T1177: Kernel Module Loading, T1059: Software Deployment, T1074: Hardware Displacement", "Technical Details": "The vulnerability allows an attacker to load a kernel module that can execute arbitrary code with kernel privileges, which can be used to take control of the system.", "Detection": "Detection of this vulnerability is possible by monitoring system calls and kernel module loading.", "Mitigation": "Mitigation strategies include regularly updating the kernel, disabling kernel module loading, and monitoring system calls.", "Conclusion": "This vulnerability highlights the importance of regular kernel updates and monitoring system calls to detect potential exploitation."}, "executive_analysis": {"Overview": "CVE-2020-36780 is a serious vulnerability in the Linux kernel that allows arbitrary code execution with kernel privileges.", "Business Impact": "This vulnerability has the potential to compromise sensitive data and systems, and it can be exploited in attacks on Linux-based systems.", "Technical Impact": "The vulnerability allows attackers to execute arbitrary code with kernel privileges, giving them complete control over the system.", "Mitigation Strategies": "Regular kernel updates, disabling kernel module loading, and monitoring system calls should be implemented to mitigate this vulnerability.", "Recommendations": "Executives should ensure that their system administrators are aware of this vulnerability and are taking steps to prevent exploitation.", "Conclusions": "This vulnerability emphasizes the importance of regular kernel updates and monitoring system calls to detect potential exploitation."}}