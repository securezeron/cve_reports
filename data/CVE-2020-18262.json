{"id": "CVE-2020-18262", "sourceIdentifier": "cve@mitre.org", "published": "2021-11-03T18:15:07.910", "lastModified": "2021-11-05T15:26:58.583", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "ED01-CMS v1.0 was discovered to contain a SQL injection in the component cposts.php via the cid parameter."}, {"lang": "es", "value": "Se ha detectado que ED01-CMS versi\u00f3n v1.0, contiene una inyecci\u00f3n SQL en el componente cposts.php por medio del par\u00e1metro cid"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:ed01-cms_project:ed01-cms:1.0:*:*:*:*:*:*:*", "matchCriteriaId": "2BB39E3F-AA02-4867-BB6B-7FC444D43C2F"}]}]}], "references": [{"url": "https://github.com/chilin89117/ED01-CMS/issues/3", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2020-18262 - ED01-CMS v1.0 contains a SQL injection vulnerability, which can be exploited by attackers to gain unauthorized access to sensitive data. Defenses such as disabling or restricting sensitive SQL queries and implementing Web Application Firewall (WAF) rules can help prevent exploitation."}, {"techniqueID": "T1199", "comment": "CVE-2020-18262 - ED01-CMS v1.0 contains a SQL injection vulnerability, which can be exploited by attackers to gain unauthorized access to sensitive data. Defenses such as implementing secure coding practices and testing Web applications regularly can help prevent exploitation."}], "stix_bundle": {"bundle": {"type": "bundle", "spec_version": "2.1", "id": "CVE-2020-18262-Bundle", "created_by_ref": "https://example.com/cybsec-team", "created": "2021-11-15T14:30:00.000", "modified": "2021-11-15T14:30:00.000", "objects": [{"type": "vulnerability", "id": "CVE-2020-18262", "name": "ED01-CMS v1.0 SQL Injection Vulnerability", "description": "ED01-CMS v1.0 was discovered to contain a SQL injection in the component cposts.php via the cid parameter."}, {"type": "attack-pattern", "id": "cross_site_scripting_attack", "name": "Cross-Site Scripting (XSS) Attack", "description": "A Cross-Site Scripting (XSS) attack involving injecting malicious script code into a Web application."}, {"type": "course-of-action", "id": "disable_sqli_queries", "name": "Disable Sensitive SQL Queries", "description": "Disable or restrict sensitive SQL queries to prevent exploitation of the SQL injection vulnerability", "related_techniques": ["T1059"]}, {"type": "course-of-action", "id": "Implement_WAF_rules", "name": "Implement Web Application Firewall (WAF) Rules", "description": "Implement Web Application Firewall (WAF) rules to prevent exploitation of the SQL injection vulnerability", "related_techniques": ["T1059"]}], "relationships": [{"id": "related-vulnerability", "source_ref": "CVE-2020-18262", "target_ref": "cross_site_scripting_attack", "type": "cwe", "label": "related_attack_pattern"}, {"id": "mitigates", "source_ref": "cross_site_scripting_attack", "target_ref": "disable_sqli_queries", "type": "mitigates", "label": "mitigates_attack"}, {"id": "mitigates", "source_ref": "cross_site_scripting_attack", "target_ref": "Implement_WAF_rules", "type": "mitigates", "label": "mitigates_attack"}]}}, "technical_analysis": {"Introduction": "This vulnerability allows unauthenticated attackers to inject and execute arbitrary SQL code, potentially leading to data theft, data tampering, or arbitrary code execution.", "Impact and Scope": "The attack vector is AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H, indicating that the vulnerability is exploitable via the network, requires low complexity, and has no required user interaction.", "Related MITRE ATT&CK Techniques": "T1059: Command and Scripting Interperter, T1199: Exploitation of Public-Facing Applications", "Technical Details": "The vulnerability is located in the cposts.php component, specifically in the cid parameter, which allows attackers to inject arbitrary SQL code. The injected SQL code can be used to retrieve sensitive data, modify database contents, or execute system commands.", "Detection": "Detecting this vulnerability requires monitoring for unusual network activity, such as traffic patterns indicating exploitation of the vulnerability.", "Mitigation": "Mitigation strategies include disabling or restricting sensitive SQL queries, implementing Web Application Firewall (WAF) rules, and regularly testing and patching Web applications.", "Conclusion": "This vulnerability poses a significant risk to organizations that rely on the affected software, and prompt mitigation is necessary to prevent exploitation."}, "executive_analysis": {"Overview": "This vulnerability allows unauthorized access to sensitive data and could potentially be used to disrupt business operations.", "Business Impact": "Theoretically, this vulnerability could be used by attackers to steal sensitive data, leading to financial losses, reputational damage, or both.", "Technical Impact": "The vulnerability is exploitable via the network, requiring low complexity, and has no required user interaction.", "Mitigation Strategies": "Disabling or restricting sensitive SQL queries, implementing Web Application Firewall (WAF) rules, and regularly testing and patching Web applications.", "Recommendations": "Apply patches, implement WAF rules, and regularly monitor for unusual network activity.", "Conclusions": "This vulnerability poses a significant risk to organizations that rely on the affected software, and prompt mitigation is necessary to prevent exploitation."}}