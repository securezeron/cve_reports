{"id": "CVE-2024-5503", "sourceIdentifier": "security@wordfence.com", "published": "2024-06-21T02:15:11.260", "lastModified": "2024-07-17T13:53:37.643", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The WP Blog Post Layouts plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 1.1.3. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary PHP files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other \u201csafe\u201d file types can be uploaded and included."}, {"lang": "es", "value": "El complemento WP Blog Post Layouts para WordPress es vulnerable a la inclusi\u00f3n de archivos locales en todas las versiones hasta la 1.1.3 incluida. Esto hace posible que atacantes autenticados, con acceso de nivel Colaborador y superior, incluyan y ejecuten archivos PHP arbitrarios en el servidor, permitiendo la ejecuci\u00f3n de cualquier c\u00f3digo PHP en esos archivos. Esto se puede utilizar para eludir los controles de acceso, obtener datos confidenciales o lograr la ejecuci\u00f3n de c\u00f3digo en los casos en que se puedan cargar e incluir im\u00e1genes y otros tipos de archivos \"seguros\"."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-Other"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:codevibrant:wp_blog_post_layouts:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "1.1.3", "matchCriteriaId": "FD2E38AE-8572-42DD-AF83-EC4870D2326D"}]}]}], "references": [{"url": "https://plugins.trac.wordpress.org/browser/wp-blog-post-layouts/trunk/includes/gutenberg.php#L883", "source": "security@wordfence.com", "tags": ["Product"]}, {"url": "https://plugins.trac.wordpress.org/browser/wp-blog-post-layouts/trunk/includes/gutenberg.php#L900", "source": "security@wordfence.com", "tags": ["Product"]}, {"url": "https://plugins.trac.wordpress.org/browser/wp-blog-post-layouts/trunk/includes/gutenberg.php#L917", "source": "security@wordfence.com", "tags": ["Product"]}, {"url": "https://plugins.trac.wordpress.org/browser/wp-blog-post-layouts/trunk/includes/src/grid/element.php#L1146", "source": "security@wordfence.com", "tags": ["Product"]}, {"url": "https://plugins.trac.wordpress.org/browser/wp-blog-post-layouts/trunk/includes/src/list/element.php#L1136", "source": "security@wordfence.com", "tags": ["Product"]}, {"url": "https://plugins.trac.wordpress.org/browser/wp-blog-post-layouts/trunk/includes/src/masonry/element.php#L1134", "source": "security@wordfence.com", "tags": ["Product"]}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/5205cc95-06d1-4bc6-a9ea-082df9566935?source=cve", "source": "security@wordfence.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-5503 - An authenticated attacker with Contributor-level access and above can exploit a Local File Inclusion vulnerability in WordPress's WP Blog Post Layouts plugin, executing arbitrary PHP code and potentially bypassing access controls."}, {"techniqueID": "T1204", "comment": "CVE-2024-5503 - An attacker can include and execute arbitrary PHP files, allowing the execution of any PHP code in those files, potentially leading to code execution, data theft, and system compromise."}, {"techniqueID": "T1408", "comment": "CVE-2024-5503 - A local file inclusion vulnerability allows an attacker to include and execute arbitrary PHP files, subverting security controls and enabling attacker-controlled code execution."}, {"techniqueID": "T1607", "comment": "CVE-2024-5503 - An attacker can upload and execute arbitrary PHP scripts, potentially leading to privilege escalation and code execution."}], "technical_analysis": {"Introduction": "The WP Blog Post Layouts plugin for WordPress is vulnerable to Local File Inclusion in all versions up to and including 1.1.3.", "Impact and Scope": "The vulnerability allows authenticated attackers with Contributor-level access and above to include and execute arbitrary PHP files, potentially leading to code execution, data theft, and system compromise.", "Related MITRE ATT&CK Techniques": "Related techniques include T1190, T1204, T1408, and T1607.", "Technical Details": "The vulnerability is due to a lack of input validation in the plugin's file inclusion mechanism, allowing an attacker to include and execute arbitrary PHP files.", "Detection": "Detection methods may include monitoring for suspicious file inclusion patterns and monitoring for unauthorized code execution.", "Mitigation": "Mitigation strategies include updating the plugin to a fixed version, disabling the plugin, and implementing input validation and sanitization mechanisms.", "Conclusion": "The vulnerability is significant and exploitable with minimal privileges, emphasizing the importance of patching and implementing robust security controls."}, "executive_analysis": {"Overview": "The WP Blog Post Layouts plugin for WordPress is vulnerable to Local File Inclusion.", "Business Impact": "The vulnerability may result in unauthorized code execution, data theft, and system compromise, potentially leading to business disruption and reputational harm.", "Technical Impact": "The vulnerability allows attackers to execute arbitrary PHP code, potentially leading to privilege escalation and system compromise.", "Mitigation Strategies": "Implementing input validation and sanitization mechanisms, updating the plugin to a fixed version, and disabling the plugin are recommended mitigation strategies.", "Recommendations": "Executives are recommended to take immediate action to address the vulnerability and implement robust security controls.", "Conclusions": "The vulnerability is significant and exploitable with minimal privileges, emphasizing the importance of proactive security measures and regular vulnerability assessments."}}