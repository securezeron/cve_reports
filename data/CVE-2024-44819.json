{"id": "CVE-2024-44819", "sourceIdentifier": "cve@mitre.org", "published": "2024-09-04T15:15:13.910", "lastModified": "2024-09-05T14:40:07.637", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Cross Site Scripting vulnerability in ZZCMS v.2023 and before allows a remote attacker to obtain sensitive information via a crafted script to the pagename parameter of the admin/del.php component."}, {"lang": "es", "value": "La vulnerabilidad de cross site scripting en ZZCMS v.2023 y anteriores permite a un atacante remoto obtener informaci\u00f3n confidencial a trav\u00e9s de un script manipulado espec\u00edficamente para el par\u00e1metro pagename del componente admin/del.php."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:zzcms:zzcms:*:*:*:*:*:*:*:*", "versionEndIncluding": "2023", "matchCriteriaId": "8FD00C13-599B-4944-99F6-83C9F44DB42F"}]}]}], "references": [{"url": "https://github.com/gkdgkd123/codeAudit/blob/main/CVE-2024-44819%20ZZCMS2023%E5%8F%8D%E5%B0%84%E5%9E%8BXSS4.md", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-44819 - This Cross-Site Scripting (XSS) vulnerability can be used by an attacker to inject malicious scripts into a victim's browser, potentially leading to sensitive information disclosure or code execution. Defending against XSS requires proper validation and encoding of user-input data, as well as regular application security testing and patching of vulnerabilities."}, {"techniqueID": "T1190", "comment": "CVE-2024-44819 - This weakness can also be exploited for Code Injection, allowing an attacker to execute arbitrary code on the server-side, potentially leading to privilege escalation or data theft. Defending against Code Injection requires proper input validation and sanitization, as well as regular application security testing and patching of vulnerabilities."}], "stix_bundle": "https://pastebin.com/raw/8wW0wy3L", "technical_analysis": {"Introduction": "CVE-2024-44819 is a Critical Severity Cross-Site Scripting vulnerability affecting ZZCMS v.2023 and before, potentially leading to sensitive information disclosure or code execution.", "Impact and Scope": "The vulnerability has a CVSS 3.1 score of 6.1, with an attack vector of Network and attack complexity of Low. It requires user interaction to exploit, and its scope is Changed.", "Related MITRE ATT&CK Techniques": "T1059, T1190", "Technical Details": "The vulnerability is due to inadequate input validation and sanitization in the pagename parameter of the admin/del.php component, allowing an attacker to inject malicious scripts.", "Detection": "Detecting this vulnerability requires monitoring for abnormal traffic patterns and identifying injected script code.", "Mitigation": "Mitigate the vulnerability by patching ZZCMS v.2023 and before, validating and encoding user-input data, and regular application security testing.", "Conclusion": "Effective defense against this vulnerability requires a combination of proper input validation, regular security testing, and timely patching."}, "executive_analysis": {"Overview": "CVE-2024-44819 is a critical severity vulnerability affecting ZZCMS v.2023 and before, capable of leading to sensitive information disclosure or code execution.", "Business Impact": "Unpatched systems can lead to unauthorized data access, financial losses, and reputational damage.", "Technical Impact": "The vulnerability can be exploited to inject malicious scripts, potentially leading to code execution or data theft.", "Mitigation Strategies": "Patch ZZCMS v.2023 and before, validate and encode user-input data, and regular application security testing.", "Recommendations": "Recommend that executives prioritize patching and application security testing to minimize risk.", "Conclusions": "Executive-level action is required to address this critical vulnerability, prioritizing timely patching and regular security testing."}}