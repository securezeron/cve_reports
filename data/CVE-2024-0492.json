{"id": "CVE-2024-0492", "sourceIdentifier": "cna@vuldb.com", "published": "2024-01-13T15:15:08.770", "lastModified": "2024-05-17T02:34:41.363", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "A vulnerability classified as critical was found in Kashipara Billing Software 1.0. Affected by this vulnerability is an unknown functionality of the file buyer_detail_submit.php of the component HTTP POST Request Handler. The manipulation of the argument gstn_no leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-250597 was assigned to this vulnerability."}, {"lang": "es", "value": "Una vulnerabilidad fue encontrada en Kashipara Billing Software 1.0 y clasificada como cr\u00edtica. Una funci\u00f3n desconocida del archivo buyer_detail_submit.php del componente HTTP POST Request Handler es afectada por esta vulnerabilidad. La manipulaci\u00f3n del argumento gstn_no conduce a la inyecci\u00f3n de SQL. El ataque se puede lanzar de forma remota. La explotaci\u00f3n ha sido divulgada al p\u00fablico y puede utilizarse. A esta vulnerabilidad se le asign\u00f3 el identificador VDB-250597."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:kashipara:billing_software:1.0:*:*:*:*:*:*:*", "matchCriteriaId": "3C0706A5-5DE8-42DF-8980-9DBCF02A2A03"}]}]}], "references": [{"url": "https://github.com/laoquanshi/BILLING-SOFTWARE-SQL-injection-vulnerability/blob/main/BILLING%20SOFTWARE%20sql.docx", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.250597", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.250597", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1059.001", "comment": "CVE-2024-0492 - Unauthenticated Remote SQL Injection is a common technique used to compromise databases, just like in this vulnerability. Defend against it by implementing Input Validation and Sanitization, and using a Web Application Firewall to detect and prevent suspicious requests."}, {"techniqueID": "T1027", "comment": "CVE-2024-0492 - Cross-Site Scripting (XSS) is another way an attacker could take advantage of this vulnerability. Defend against it by validating and encoding user input, and using Content Security Policy to define which sources of content are allowed to be executed."}, {"techniqueID": "T1210", "comment": "CVE-2024-0492 - Injecting malicious SQL code allows attackers to execute arbitrary database commands, which can lead to data breaches and manipulation. Defend against it by using stored procedures instead of ad-hoc queries, and implementing database-level access controls."}], "stix_bundle": "[STIX 2.1 Bundle Structure]", "technical_analysis": {"Introduction": "A vulnerability in Kashipara Billing Software 1.0 allows an unauthenticated remote attacker to execute arbitrary SQL code, leading to data breaches and manipulation.", "Impact and Scope": "CVSS Score 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H) - Attack Vector: NETWORK; Attack Complexity: LOW; Privileges Required: NONE; User Interaction: NONE; Scope: UNCHANGED.", "Related MITRE ATT&CK Techniques": "T1059.001, T1027, T1210", "Technical Details": "The vulnerability occurs due to lack of input validation in the buyer_detail_submit.php file, allowing attackers to inject malicious SQL code and execute arbitrary database commands.", "Detection": "Monitor for unusual database activity, such as sudden spikes in queries or unusual data modifications.", "Mitigation": "Implement Input Validation and Sanitization, use a Web Application Firewall to detect and prevent suspicious requests, and use stored procedures instead of ad-hoc queries.", "Conclusion": "This vulnerability is a critical threat to database security and requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "A vulnerability in Kashipara Billing Software 1.0 allows an unauthenticated remote attacker to execute arbitrary SQL code, leading to data breaches and manipulation.", "Business Impact": "Potential loss of sensitive customer data, damage to brand reputation, and regulatory non-compliance risks.", "Technical Impact": "Unauthorised access to database, data manipulation, and denial-of-service attacks.", "Mitigation Strategies": "Implement Input Validation and Sanitization, use a Web Application Firewall to detect and prevent suspicious requests, and use stored procedures instead of ad-hoc queries.", "Recommendations": "Conduct regular security audits and vulnerability assessments, implement incident response plans, and ensure all software is up-to-date with the latest security patches.", "Conclusions": "This vulnerability is a serious threat to business and technical operations. Immediate action is required to mitigate the risk and prevent potential attacks."}}