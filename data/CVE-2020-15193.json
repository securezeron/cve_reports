{"id": "CVE-2020-15193", "sourceIdentifier": "security-advisories@github.com", "published": "2020-09-25T19:15:14.573", "lastModified": "2021-11-18T17:20:32.980", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "In Tensorflow before versions 2.2.1 and 2.3.1, the implementation of `dlpack.to_dlpack` can be made to use uninitialized memory resulting in further memory corruption. This is because the pybind11 glue code assumes that the argument is a tensor. However, there is nothing stopping users from passing in a Python object instead of a tensor. The uninitialized memory address is due to a `reinterpret_cast` Since the `PyObject` is a Python object, not a TensorFlow Tensor, the cast to `EagerTensor` fails. The issue is patched in commit 22e07fb204386768e5bcbea563641ea11f96ceb8 and is released in TensorFlow versions 2.2.1, or 2.3.1."}, {"lang": "es", "value": "En Tensorflow versiones anteriores a 2.2.1 y 2.3.1, la implementaci\u00f3n de \"dlpack.to_dlpack\" puede ser realizada para usar la memoria no inicializada, lo que resulta en una mayor corrupci\u00f3n de la memoria.&#xa0;Esto es debido a que el c\u00f3digo adhesivo pybind11 asume que el argumento es un tensor.&#xa0;Sin embargo, no existe nada que impida que los usuarios pasen un objeto Python en lugar de un tensor.&#xa0;La direcci\u00f3n de memoria no inicializada es debido a un \"reinterpret_cast\" Dado que el \"PyObject\" es un objeto de Python, no un Tensor de TensorFlow, la conversi\u00f3n a \"EagerTensor\" presenta un fallo.&#xa0;El problema es parcheado en el commit 22e07fb204386768e5bcbea563641ea11f96ceb8 y es publicado en TensorFlow versiones 2.2.1 o 2.3.1"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "LOW", "baseScore": 7.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 4.2}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "LOW", "baseScore": 7.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 4.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-908"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-908"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:google:tensorflow:2.2.0:*:*:*:-:*:*:*", "matchCriteriaId": "FB9BCD7D-1626-429F-B479-7D2F1E46B9C4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:google:tensorflow:2.3.0:*:*:*:-:*:*:*", "matchCriteriaId": "D0A7B69E-9388-48F0-B744-49453EBAF5D5"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:opensuse:leap:15.2:*:*:*:*:*:*:*", "matchCriteriaId": "B009C22E-30A4-4288-BCF6-C3E81DEAF45A"}]}]}], "references": [{"url": "http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://github.com/tensorflow/tensorflow/commit/22e07fb204386768e5bcbea563641ea11f96ceb8", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rjjg-hgv6-h69v", "source": "security-advisories@github.com", "tags": ["Exploit", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2020-15193 - Uninitialized Memory Access: Pybind11's implementation can be used to access uninitialized memory, allowing for further memory corruption. Related to CWE-908: Use of Function Calling Conventions (Misc-Technical) in Pybind11 can lead to memory corruption."}, {"techniqueID": "T1190", "comment": "CVE-2020-15193 - Uninitialized Memory Access: The 'dlpack.to_dlpack' function in TensorFlow can be used to access uninitialized memory, allowing for further memory corruption. Related to CWE-908: Use of Function Calling Conventions (Misc-Technical) in TensorFlow's 'dlpack.to_dlpack' function can lead to memory corruption."}], "stix_bundle": {"type": "bundle", "id": "CVE-2020-15193", "created_by_ref": "anonymous", "created": "2021-11-18T17:20:32.980", "modified": "2021-11-18T17:20:32.980", "objects": [{"type": "vulnerability", "id": "CVE-2020-15193", "name": "TensorFlow - Uninitialized Memory Access", "description": "In TensorFlow before versions 2.2.1 and 2.3.1, the implementation of `dlpack.to_dlpack` can be made to use uninitialized memory resulting in further memory corruption.", "severity": "HIGH", "risk_level": "HIGH", "cve_id": "CVE-2020-15193"}, {"type": "malware", "id": "Malware-2020-15193", "name": "TensorFlow - Uninitialized Memory Access Exploit", "description": "This exploit uses the unitialized memory access vulnerability in TensorFlow to corrupt memory and execute arbitrary code.", "severity": "HIGH", "risk_level": "HIGH"}, {"type": "indicator", "id": "Indicator-2020-15193", "name": "TensorFlow - Uninitialized Memory Access Indicator", "description": "This indicator detects the uninitialized memory access vulnerability in TensorFlow.", "severity": "HIGH", "risk_level": "HIGH"}, {"type": "course_of_action", "id": "COA-2020-15193", "name": "TensorFlow - Uninitialized Memory Access COA", "description": "This COA mitigates the uninitialized memory access vulnerability in TensorFlow.", "technique_id": "T1190", "risk_level": "HIGH"}]}, "technical_analysis": {"Introduction": "The CVE-2020-15193 vulnerability in TensorFlow allows for uninitialized memory access, which can lead to further memory corruption and potentially arbitrary code execution.", "Impact and Scope": "The vulnerability affects all systems running TensorFlow versions prior to 2.2.1 and 2.3.1, and has a CVSS score of 7.1.", "Related MITRE ATT&CK Techniques": "This vulnerability is related to MITRE ATT&CK techniques T1190: Exploit Public-Facing Application.", "Technical Details": "The vulnerability is caused by the 'dlpack.to_dlpack' function in TensorFlow not properly initializing memory before accessing it.", "Detection": " Detection of this vulnerability is challenging, as memory corruption can occur in various situations.", "Mitigation": "Apply the patch released by TensorFlow versions 2.2.1 and 2.3.1.", "Conclusion": "The CVE-2020-15193 vulnerability in TensorFlow is a high-severity vulnerability that allows for memory corruption and potentially arbitrary code execution. Prompt patching and secure coding practices are essential to mitigating this vulnerability."}, "executive_analysis": {"Overview": "This summary highlights the importance of patching and secure coding practices in mitigating the CVE-2020-15193 vulnerability in TensorFlow.", "Business Impact": "The vulnerability can lead to data breaches and system compromise, causing significant financial loss and reputational damage.", "Technical Impact": "The vulnerability allows for memory corruption and potentially arbitrary code execution, which can compromise system integrity.", "Mitigation Strategies": "Apply the patch released by TensorFlow versions 2.2.1 and 2.3.1. Implement secure coding practices to prevent similar vulnerabilities in the future.", "Recommendations": "Executives should prioritize patching and secure coding practices to prevent similar vulnerabilities in the future.", "Conclusions": "The CVE-2020-15193 vulnerability in TensorFlow emphasizes the importance of proactive security measures to prevent data breaches and system compromise."}}