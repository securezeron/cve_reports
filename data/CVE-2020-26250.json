{"id": "CVE-2020-26250", "sourceIdentifier": "security-advisories@github.com", "published": "2020-12-01T21:15:14.317", "lastModified": "2020-12-08T17:50:24.337", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "OAuthenticator is an OAuth login mechanism for JupyterHub. In oauthenticator from version 0.12.0 and before 0.12.2, the deprecated (in jupyterhub 1.2) configuration `Authenticator.whitelist`, which should be transparently mapped to `Authenticator.allowed_users` with a warning, is instead ignored by OAuthenticator classes, resulting in the same behavior as if this configuration has not been set. If this is the only mechanism of authorization restriction (i.e. no group or team restrictions in configuration) then all authenticated users will be allowed. Provider-based restrictions, including deprecated values such as `GitHubOAuthenticator.org_whitelist` are **not** affected. All users of OAuthenticator 0.12.0 and 0.12.1 with JupyterHub 1.2 (JupyterHub Helm chart 0.10.0-0.10.5) who use the `admin.whitelist.users` configuration in the jupyterhub helm chart or the `c.Authenticator.whitelist` configuration directly. Users of other deprecated configuration, e.g. `c.GitHubOAuthenticator.team_whitelist` are **not** affected. If you see a log line like this and expect a specific list of allowed usernames: \"[I 2020-11-27 16:51:54.528 JupyterHub app:1717] Not using allowed_users. Any authenticated user will be allowed.\" you are likely affected. Updating oauthenticator to 0.12.2 is recommended. A workaround is to replace the deprecated `c.Authenticator.whitelist = ...` with `c.Authenticator.allowed_users = ...`. If any users have been authorized during this time who should not have been, they must be deleted via the API or admin interface, per the referenced documentation."}, {"lang": "es", "value": "OAuthenticator es un mecanismo de inicio de sesi\u00f3n de OAuth para JupyterHub.&#xa0;En oauthenticator desde la versi\u00f3n 0.12.0 y versiones anteriores a 0.12.2, la configuraci\u00f3n obsoleta (en jupyterhub versi\u00f3n 1.2) \"Authenticator.whitelist\", que debe asignarse de forma transparente a \"Authenticator.allowed_users\" con una advertencia, es ignorada por las clases OAuthenticator, resultando en el mismo comportamiento como si no se hubiera establecido esta configuraci\u00f3n.&#xa0;Si este es el \u00fanico mecanismo de restricci\u00f3n de autorizaci\u00f3n (es decir, sin restricciones de grupo o equipo en la configuraci\u00f3n), se permitir\u00e1n todos los usuarios autenticados.&#xa0;Las restricciones basadas en el proveedor, incluidos los valores obsoletos como \"GitHubOAuthenticator.org_whitelist\" **no** est\u00e1n afectados.&#xa0;Todos los usuarios de OAuthenticator versiones 0.12.0 y 0.12.1 con JupyterHub versi\u00f3n 1.2 (gr\u00e1fico JupyterHub Helm versiones 0.10.0-0.10.5) que usan la configuraci\u00f3n \"admin.whitelist.users\" en el gr\u00e1fico de helm jupyterhub o directamente la configuraci\u00f3n \"c.Authenticator.whitelist\".&#xa0;Los usuarios de otra configuraci\u00f3n obsoleta, por ejemplo, \"c.GitHubOAuthenticator.team_whitelist\" **no** se est\u00e1n afectados.&#xa0;Si ve una l\u00ednea de registro como esta y espera una lista espec\u00edfica de nombres de usuario permitidos: \"[I 2020-11-27 16: 51:54.528 aplicaci\u00f3n JupyterHub:1717] Sin usar allowed_users. Se permitir\u00e1 cualquier usuario autenticado\"&#xa0;es probable que est\u00e9 afectado.&#xa0;Se recomienda actualizar oauthenticator a la versi\u00f3n 0.12.2.&#xa0;Una soluci\u00f3n alternativa es reemplazar el obsoleto \"c.Authenticator.whitelist = ...\" con \"c.Authenticator.allowed_users = ...\".&#xa0;Si algunos usuarios has sido autorizados durante este tiempo que no deber\u00eda haberlo sido, se debe eliminar por medio de la API o la interfaz de administraci\u00f3n, seg\u00fan la documentaci\u00f3n de referencia"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 4.0}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 4.0}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-863"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-863"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jupyter:oauthenticator:*:*:*:*:*:*:*:*", "versionStartIncluding": "0.12.0", "versionEndExcluding": "0.12.2", "matchCriteriaId": "B843F30F-EB2C-4C27-8CB8-7DEF4FDA3B0A"}]}]}], "references": [{"url": "https://github.com/jupyterhub/oauthenticator/blob/master/docs/source/changelog.md#0122---2020-11-30", "source": "security-advisories@github.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/jupyterhub/oauthenticator/commit/a4aac191c16cf6281f3d346615aefa75702b02d7", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/jupyterhub/oauthenticator/security/advisories/GHSA-384w-5v3f-q499", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://jupyterhub.readthedocs.io/en/1.2.2/getting-started/authenticators-users-basics.html#add-or-remove-users-from-the-hub", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "TA0001: Initial Access - External Remote Services", "comment": "CVE-2020-26250 - OAuthenticator vulnerable to unauthorized access via whitelist configuration. Threat actors may exploit this vulnerability to gain unauthorized access to JupyterHub instances."}, {"techniqueID": "TA0002: Initial Access - Compromise of Authentication Credentials", "comment": "CVE-2020-26250 - OAuthenticator vulnerable to unauthorized access via whitelist configuration. Threat actors may exploit this vulnerability to gain unauthorized access to JupyterHub instances, compromising authentication credentials."}, {"techniqueID": "TA0011: Command and Control - Data Encrypted", "comment": "CVE-2020-26250 - OAuthenticator vulnerable to unauthorized access via whitelist configuration. Threat actors may exploit this vulnerability to gain unauthorized access to JupyterHub instances, sending and receiving data encrypted."}, {"techniqueID": "TA0031: Execution - Secondary Malware", "comment": "CVE-2020-26250 - OAuthenticator vulnerable to unauthorized access via whitelist configuration. Threat actors may exploit this vulnerability to gain unauthorized access to JupyterHub instances, deploying secondary malware."}, {"techniqueID": "TA0034: Persistence - Data Steganography", "comment": "CVE-2020-26250 - OAuthenticator vulnerable to unauthorized access via whitelist configuration. Threat actors may exploit this vulnerability to gain unauthorized access to JupyterHub instances, hiding data in steganographic elements."}], "stix_bundle": {"id": "b07e39b4-2c33-4f3a-91cd-c3fc4fcb10f5", "type": "bundle", "spec_version": "2.1", "objects": [{"id": "vulnerability--9a3f1e18-bb05-4bbb-9edf-e2b7aa1f1b17", "type": "vulnerability", "name": "CVE-2020-26250", "description": "OAuthenticator vulnerable to unauthorized access via whitelist configuration.", "cve": {"id": "CVE-2020-26250", "metadata": {"source": "security-advisories@github.com"}}, "severity": "MEDIUM", "cvss": {"vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED"}}, {"id": "identity--f39f75e8-ce6c-47e9-ba51-c6fff9edd8f8", "type": "identity", "name": "Threat Actor"}, {"id": "malware--544c88cc-9f7c-47c9-9716-38f6daeb3dd2", "type": "malware", "name": "Secondary Malware"}, {"id": "relationship--8f39c515-b0d4-46c7-9da8-21f3ba96cc4f", "type": "relationship", "id_ref": "vulnerability--9a3f1e18-bb05-4bbb-9edf-e2b7aa1f1b17", "from": "identity--f39f75e8-ce6c-47e9-ba51-c6fff9edd8f8", "to": "malware--544c88cc-9f7c-47c9-9716-38f6daeb3dd2", "label": "compromises"}], "notes": [{"id": "note--93a9ce2e-4f2c-4d22-bd48-23db5b2f92f5", "type": "note", "content": "Exploit this vulnerability to gain unauthorized access to JupyterHub instances", "type_ref": "malware--544c88cc-9f7c-47c9-9716-38f6daeb3dd2"}]}, "technical_analysis": {"Introduction": "CVE-2020-26250 is a vulnerability in OAuthenticator, a OAuth login mechanism for JupyterHub, which allows unauthorized access via whitelist configuration.", "Impact and Scope": "The vulnerability has a CVSS score of 6.3 and an attack vector of NETWORK, making it a medium-severity vulnerability.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to TA0001: Initial Access - External Remote Services, TA0002: Initial Access - Compromise of Authentication Credentials, TA0011: Command and Control - Data Encrypted, TA0031: Execution - Secondary Malware, and TA0034: Persistence - Data Steganography.", "Technical Details": "The vulnerability occurs when the deprecated `Authenticator.whitelist` configuration is ignored by OAuthenticator classes, resulting in the same behavior as if this configuration has not been set.", "Detection": "Detection involves monitoring for unusual authentication attempts and monitoring for the deployment of malware.", "Mitigation": "Mitigation involves updating OAuthenticator to a version that addresses this vulnerability and configuring the `Authenticator.allowed_users` configuration to restrict access.", "Conclusion": "In conclusion, CVE-2020-26250 is a vulnerability that can be exploited by threat actors to gain unauthorized access to JupyterHub instances. Detection and mitigation strategies are essential to prevent this vulnerability from being exploited."}, "executive_analysis": {"Overview": "CVE-2020-26250 is a vulnerability in OAuthenticator, a OAuth login mechanism for JupyterHub, which allows unauthorized access via whitelist configuration.", "Business Impact": "The vulnerability has the potential to compromise sensitive business data and disrupt business operations.", "Technical Impact": "The vulnerability is a technical risk to the JupyterHub infrastructure, potentially leading to unauthorized access and data breaches.", "Mitigation Strategies": "Update OAuthenticator to a version that addresses this vulnerability and configure `Authenticator.allowed_users` to restrict access.", "Recommendations": "Recommended mitigation strategies include monitoring for unusual authentication attempts and monitoring for the deployment of malware.", "Conclusions": "In conclusion, CVE-2020-26250 is a vulnerability that requires immediate attention and action to prevent exploitation."}}