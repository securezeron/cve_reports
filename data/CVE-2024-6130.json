{"id": "CVE-2024-6130", "sourceIdentifier": "contact@wpscan.com", "published": "2024-07-01T06:15:23.957", "lastModified": "2024-07-01T12:37:24.220", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Form Maker by 10Web  WordPress plugin before 1.15.26 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"}, {"lang": "es", "value": "El complemento Form Maker by 10Web WordPress anterior a 1.15.26 no sanitiza ni escapa a algunas de sus configuraciones, lo que podr\u00eda permitir a usuarios con privilegios elevados, como el administrador, realizar ataques de Cross-Site Scripting Almacenado incluso cuando la capacidad unfiltered_html no est\u00e1 permitida (por ejemplo, en una configuraci\u00f3n multisitio) "}], "metrics": {}, "references": [{"url": "https://wpscan.com/vulnerability/bbed2968-4bd6-49ae-bd61-8a1f751e7041/", "source": "contact@wpscan.com"}], "techniques": [{"techniqueID": "T1059.001: Command and Scripting Interpreter: PowerShell", "comment": "The Form Maker vulnerability allows attackers to inject malicious code, which could be executed using PowerShell. Defending against this involves monitoring PowerShell usage and restricting access to sensitive files and systems."}, {"techniqueID": "T1059: Command and Scripting Interpreter", "comment": "This technique is relevant as it involves the use of command and scripting interpreters, which could be used to exploit the Form Maker vulnerability."}, {"techniqueID": "T1055: Input Data Manipulation: Injection", "comment": "Attackers could inject malicious data into Form Maker settings, leading to Stored Cross-Site Scripting attacks. Defending against this involves input validation and sanitization."}, {"techniqueID": "T1204: User Execution", "comment": "Attackers may persuade users to execute malicious code, such as a payload injected into a Form Maker setting. Defending against this involves user education and restricting access to sensitive files and systems."}], "stix_bundle": {"objects": [{"id": "bundle:CVE-2024-6130", "type": "vulnerability", "created_by_ref": "organization:wpscan", "created": "2024-07-01T06:15:23.957Z", "modified": "2024-07-01T12:37:24.220Z", "name": "CVE-2024-6130: Form Maker by 10Web WordPress Plugin Vulnerability", "description": "The Form Maker by 10Web WordPress plugin before 1.15.26 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.", "severity": "HIGH", "cvss_score": "8.1", "attack_vector": "NETWORK", "affected_products": ["Form Maker by 10Web WordPress Plugin"], "mitigations": [{"id": "mitigation:T1059.001", "type": "mitigation", "name": "Monitor PowerShell Usage", "description": "Monitor PowerShell usage to detect and prevent malicious code execution."}, {"id": "mitigation:T1055", "type": "mitigation", "name": "Input Validation and Sanitization", "description": "Implement input validation and sanitization to prevent malicious data injection into Form Maker settings."}]}, {"id": "course_of_action:CoA-1", "type": "course_of_action", "name": "Monitor PowerShell Usage", "description": "Monitor PowerShell usage to detect and prevent malicious code execution.", "related_techniques": ["T1059.001"], " defense_points": ["Implement logging and monitoring solutions to detect PowerShell usage."]}, {"id": "course_of_action:CoA-2", "type": "course_of_action", "name": "Input Validation and Sanitization", "description": "Implement input validation and sanitization to prevent malicious data injection into Form Maker settings.", "related_techniques": ["T1055"], "defense_points": ["Implement input validation and sanitization mechanisms in the Form Maker plugin."]}], "relationships": [{"id": "bundle:CVE-2024-6130-Mitigation", "type": "affected_by", "source_ref": "vulnerability:CVE-2024-6130", "sink_ref": "mitigation:T1059.001"}, {"id": "bundle:CVE-2024-6130-Mitigation", "type": "affected_by", "source_ref": "vulnerability:CVE-2024-6130", "sink_ref": "mitigation:T1055"}, {"id": "bundle:CVE-2024-6130-CourseOfAction", "type": "related_to", "source_ref": "vulnerability:CVE-2024-6130", "sink_ref": "course_of_action:CoA-1"}, {"id": "bundle:CVE-2024-6130-CourseOfAction", "type": "related_to", "source_ref": "vulnerability:CVE-2024-6130", "sink_ref": "course_of_action:CoA-2"}], "allow_subtypes": true}, "technical_analysis": {"Introduction": "The Form Maker by 10Web WordPress plugin before 1.15.26 is vulnerable to Stored Cross-Site Scripting attacks due to insufficient input validation and sanitization.", "Impact and Scope": "The vulnerability allows high privilege users to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.", "Related MITRE ATT&CK Techniques": "T1059.001: Command and Scripting Interpreter: PowerShell, T1055: Input Data Manipulation: Injection, T1204: User Execution", "Technical Details": "The vulnerability is due to insufficient input validation and sanitization in the Form Maker plugin, which allows attackers to inject malicious code into plugin settings.", "Detection": "Monitor PowerShell usage, implement logging and monitoring solutions to detect suspicious activity.", "Mitigation": "Implement input validation and sanitization, monitor PowerShell usage, restrict access to sensitive files and systems.", "Conclusion": "The Form Maker by 10Web WordPress plugin vulnerability poses a significant risk to web applications and users. It is essential to patch the plugin to the latest version and implement mitigation strategies to prevent exploitation."}, "executive_analysis": {"Overview": "The Form Maker by 10Web WordPress plugin vulnerability poses a significant risk to web applications and users.", "Business Impact": "The vulnerability could allow attackers to execute malicious code, leading to data breaches and system compromise.", "Technical Impact": "The vulnerability allows high privilege users to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.", "Mitigation Strategies": "Patch the plugin to the latest version, implement input validation and sanitization, monitor PowerShell usage, restrict access to sensitive files and systems.", "Recommendations": "Executive management should prioritize patching the plugin and implementing mitigation strategies to prevent exploitation.", "Conclusions": "The Form Maker by 10Web WordPress plugin vulnerability is a high-priority issue that demands immediate attention and action."}}