{"id": "CVE-2024-34343", "sourceIdentifier": "security-advisories@github.com", "published": "2024-08-05T21:15:38.257", "lastModified": "2024-08-06T16:30:24.547", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Nuxt is a free and open-source framework to create full-stack web applications and websites with Vue.js. The `navigateTo` function attempts to blockthe `javascript:` protocol, but does not correctly use API's provided by `unjs/ufo`. This library also contains parsing discrepancies.  The function first tests to see if the specified URL has a protocol. This uses the unjs/ufo package for URL parsing. This function works effectively, and returns true for a javascript: protocol. After this, the URL is parsed using the parseURL function. This function will refuse to parse poorly formatted URLs. Parsing javascript:alert(1) returns null/\"\" for all values. Next, the protocol of the URL is then checked using the isScriptProtocol function. This function simply checks the input against a list of protocols, and does not perform any parsing. The combination of refusing to parse poorly formatted URLs, and not performing additional parsing means that script checks fail as no protocol can be found. Even if a protocol was identified, whitespace is not stripped in the parseURL implementation, bypassing the isScriptProtocol checks. Certain special protocols are identified at the top of parseURL. Inserting a newline or tab into this sequence will block the special protocol check, and bypass the latter checks. This ONLY has impact after SSR has occured, the `javascript:` protocol within a location header does not trigger XSS. This issue has been addressed in release version 3.12.4 and all users are advised to upgrade. There are no known workarounds for this vulnerability."}, {"lang": "es", "value": "Nuxt es un framework gratuito y de c\u00f3digo abierto para crear sitios web y aplicaciones web completos con Vue.js. La funci\u00f3n `navigateTo` intenta bloquear el protocolo `javascript:`, pero no utiliza correctamente las API proporcionadas por `unjs/ufo`. Esta biblioteca tambi\u00e9n contiene discrepancias en el an\u00e1lisis. La funci\u00f3n primero prueba para ver si la URL especificada tiene un protocolo. Esto utiliza el paquete unjs/ufo para el an\u00e1lisis de URL. Esta funci\u00f3n funciona de manera efectiva y devuelve verdadero para un protocolo javascript:. Despu\u00e9s de esto, la URL se analiza utilizando la funci\u00f3n parseURL. Esta funci\u00f3n se negar\u00e1 a analizar URL mal formateadas. El an\u00e1lisis de javascript:alert(1) devuelve null/\"\" para todos los valores. A continuaci\u00f3n, se verifica el protocolo de la URL utilizando la funci\u00f3n isScriptProtocol. Esta funci\u00f3n simplemente compara la entrada con una lista de protocolos y no realiza ning\u00fan an\u00e1lisis. La combinaci\u00f3n de negarse a analizar URL mal formateadas y no realizar an\u00e1lisis adicionales significa que las comprobaciones de secuencias de comandos fallan porque no se puede encontrar ning\u00fan protocolo. Incluso si se identific\u00f3 un protocolo, los espacios en blanco no se eliminan en la implementaci\u00f3n de parseURL, evitando las comprobaciones de isScriptProtocol. Ciertos protocolos especiales se identifican en la parte superior de parseURL. Insertar una nueva l\u00ednea o una pesta\u00f1a en esta secuencia bloquear\u00e1 la verificaci\u00f3n del protocolo especial y omitir\u00e1 las \u00faltimas comprobaciones. Esto S\u00d3LO tiene impacto despu\u00e9s de que se haya producido SSR, el protocolo `javascript:` dentro de un encabezado de ubicaci\u00f3n no activa XSS. Este problema se solucion\u00f3 en la versi\u00f3n 3.12.4 y se recomienda a todos los usuarios que actualicen. No se conocen workarounds para esta vulnerabilidad."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://github.com/nuxt/nuxt/security/advisories/GHSA-vf6r-87q4-2vjf", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-34343 - This vulnerability allows an attacker to bypass the isScriptProtocol check by inserting a newline or tab into the URL. This is a weak spot in the Nuxt framework and can be exploited to inject malicious code."}, {"techniqueID": "T1036", "comment": "CVE-2024-34343 - Since the isScriptProtocol check is not correctly implemented, it can be bypassed using a specially crafted URL. This can be used to inject malicious code and compromise the application."}, {"techniqueID": "T1086", "comment": "CVE-2024-34343 - The `navigateTo` function in Nuxt framework does not correctly implement the isScriptProtocol check, allowing an attacker to inject malicious code. This can be used to steal sensitive data or take control of the application."}], "stix_bundle": {"id": "stix_bundle:cve-2024-34343", "title": "CVE-2024-34343: Nuxt vulnerable to script injection", "created": "2024-08-05T21:15:38.257", "modified": "2024-08-06T16:30:24.547", "type": "bundle", "objects": [{"type": "vulnerability", "id": "vuln-cve-2024-34343", "created": "2024-08-05T21:15:38.257", "modified": "2024-08-06T16:30:24.547", "name": "Nuxt framework script injection", "description": "Nuxt framework vulnerable to script injection due to incorrect implementation of isScriptProtocol check", "cve": "CVE-2024-34343", "references": [{"url": "https://github.com/nuxt/nuxt/security/advisories/GHSA-vf6r-87q4-2vjf"}], "relationships": [{"relationship": "CVE", "type": "vulnerability", "id": "vuln-cve-2024-34343", "target_id": "cve-2024-34343"}]}, {"type": "course-of-action", "id": "coa-update-nuxt", "created": "2024-08-06T16:30:24.547", "modified": "2024-08-06T16:30:24.547", "name": "Update Nuxt framework to version 3.12.4", "description": "Update Nuxt framework to version 3.12.4 to resolve script injection vulnerability", "associated_threat_actions": [{"type": "technique", "id": "T1190"}]}]}, "technical_analysis": {"Introduction": "The CVE-2024-34343 vulnerability allows an attacker to inject malicious code into a Nuxt framework application by bypassing the isScriptProtocol check.", "Impact and Scope": "The impact of this vulnerability is low, but it can result in unauthorized access to sensitive data or takeover of the affected application.", "Related MITRE ATT&CK Techniques": "T1190, T1036, T1086", "Technical Details": "The `navigateTo` function in Nuxt framework does not correctly implement the isScriptProtocol check, allowing an attacker to inject malicious code.", "Detection": "Detection of this vulnerability involves monitoring for suspicious URL patterns and checking for untrusted code execution.", "Mitigation": "Update Nuxt framework to version 3.12.4 and use a web application firewall to block suspicious traffic.", "Conclusion": "The CVE-2024-34343 vulnerability is a weak spot in the Nuxt framework that can be exploited to inject malicious code. Updating the framework to version 3.12.4 and using a web application firewall are both recommended to mitigate this vulnerability."}, "executive_analysis": {"Overview": "The CVE-2024-34343 vulnerability is a weakness in the Nuxt framework that allows an attacker to inject malicious code.", "Business Impact": "This vulnerability can result in unauthorized access to sensitive data or takeover of the affected application, which can have significant business and reputational impacts.", "Technical Impact": "This vulnerability is classified as low risk, but it is still important to address to prevent potential attacks.", "Mitigation Strategies": "Update Nuxt framework to version 3.12.4, use a web application firewall, and implement strict access controls to prevent unauthorized access.", "Recommendations": "Recommend to executives that immediate action be taken to update Nuxt framework and implement mitigation strategies.", "Conclusions": "The CVE-2024-34343 vulnerability is a significant risk to organizations using the Nuxt framework, but it can be mitigated by updating the framework and implementing proper security controls."}}