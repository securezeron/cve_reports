{"id": "CVE-2024-4363", "sourceIdentifier": "security@wordfence.com", "published": "2024-05-15T00:15:10.403", "lastModified": "2024-05-15T16:40:19.330", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Visual Portfolio, Photo Gallery & Post Grid plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018title_tag\u2019 parameter in all versions up to, and including, 3.3.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El complemento Visual Portfolio, Photo Gallery &amp; Post Grid para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del par\u00e1metro 'title_tag' en todas las versiones hasta la 3.3.2 incluida debido a una sanitizaci\u00f3n de entrada y un escape de salida insuficientes. Esto hace posible que atacantes autenticados, con acceso a nivel de autor y superior, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/browser/visual-portfolio/trunk/templates/items-list/item-parts/title.php#L22", "source": "security@wordfence.com"}, {"url": "https://wordpress.org/plugins/visual-portfolio/#developers", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/ab5e09d8-6fa3-4a5b-bee1-6648df4f4b3b?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1059.007", "comment": "CVE-2024-4363 - Cross-Site Scripting (XSS) vulnerability in Visual Portfolio plugin's 'title_tag' parameter. Attackers with author-level access and above can inject arbitrary web scripts. Defend against by applying input sanitization and output escaping, as well as regular plugin updates."}, {"techniqueID": "T1190", "comment": "CVE-2024-4363 - Insecure Direct Object Reference (IDOR) vulnerability in the plugin. Attackers can access and manipulate arbitrary files. Defend against by implementing proper authorization and access controls."}, {"techniqueID": "T1040", "comment": "CVE-2024-4363 - Web Application Attack via Stored Cross-Site Scripting. Defend against by implementing Input Validation and Sanitization, as well as validating user input."}], "stix_bundle": {"objects": {"$id": "https://example.com/wordfence-plugin-vulnerability", "type": "vulnerability", "id": "CVE-2024-4363", "name": "Visual Portfolio Plugin Stored Cross-Site Scripting Vulnerability", "description": ["The Visual Portfolio plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'title_tag' parameter due to insufficient input sanitization and output escaping."], "created_by_ref": {"type": "user", "id": "https://example.com/security-user"}, "created": "2024-05-15T16:40:19.330Z", "modified": "2024-05-15T16:40:19.330Z", "object_marking_refs": [{"type": "marking-definition", "id": "https://example.com/sensitive-data"}], "objects": {"vulnerability_statement": {"id": "CVE-2024-4363", "type": "vulnerability", "description": "The Visual Portfolio plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'title_tag' parameter due to insufficient input sanitization and output escaping."}, "mitigation_tactics": {"$ref": "https://example.com/MITRE-ATT-CK-T1059.007", "type": "mitigation-tactic", "description": "Implement input sanitization and output escaping to prevent Cross-Site Scripting attacks"}, "recommended_course_of_action": {"$ref": "https://example.com/WordPress-WordPress-CVE-2024-4363-Fix", "type": "recommended-course-of-action", "description": "Update the Visual Portfolio plugin to a fixed version"}, "defense_evasion_tactics": {"$ref": "https://example.com/MITRE-ATT-CK-T1159.005", "type": "defense-evasion-tactic", "description": "Defend against Insecure Direct Object Reference by implementing proper authorization and access controls"}, "incident_response": {"$ref": "https://example.com/Incident-Response-Flowchart", "type": "incident-response", "description": "Follow the incident response workflow for stored Cross-Site Scripting attacks"}}}}, "technical_analysis": {"Introduction": "The Visual Portfolio plugin for WordPress is susceptible to Stored Cross-Site Scripting attacks due to insufficient input sanitization and output escaping.", "Impact and Scope": "The vulnerability allows attackers with author-level access and above to inject arbitrary web scripts. The attack vector is NETWORK and the attack complexity is LOW. The confidentiality impact is LOW, integrity impact is LOW, and availability impact is NONE.", "Related MITRE ATT&CK Techniques": "T1059.007 - Cross-Site Scripting, T1190 - Insecure Direct Object Reference, and T1040 - Web Application Attack.", "Technical Details": "The vulnerability is caused by insufficient input sanitization and output escaping in the 'title_tag' parameter. The attack allows attackers to inject arbitrary web scripts.", "Detection": "Detection can be done by monitoring system logs for suspicious JavaScript injection patterns.", "Mitigation": "Implement input sanitization and output escaping to prevent Cross-Site Scripting attacks."}, "executive_analysis": {"Overview": "The Visual Portfolio plugin for WordPress has a vulnerability that allows for stored Cross-Site Scripting attacks.", "Business Impact": "This vulnerability could result in unauthorized access to user data and potential exploitation of the website.", "Technical Impact": "The vulnerability allows attackers to inject arbitrary web scripts, potentially leading to unauthorized access and exploitation.", "Mitigation Strategies": "Implement input sanitization and output escaping, and update the plugin to a fixed version.", "Recommendations": "Recommend to executives to update the plugin to a fixed version and implement proper authorization and access controls.", "Conclusions": "The vulnerability poses a significant risk to the organization and should be addressed promptly."}}