{"id": "CVE-2024-8303", "sourceIdentifier": "cna@vuldb.com", "published": "2024-08-29T15:15:34.783", "lastModified": "2024-08-30T13:00:05.390", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "A vulnerability classified as critical has been found in dingfanzu CMS up to 29d67d9044f6f93378e6eb6ff92272217ff7225c. This affects an unknown part of the file /ajax/getBasicInfo.php. The manipulation of the argument username leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. This product does not use versioning. This is why information about affected and unaffected releases are unavailable. NOTE: The vendor was contacted early about this disclosure but did not respond in any way."}, {"lang": "es", "value": "Se ha encontrado una vulnerabilidad clasificada como cr\u00edtica en dingfanzu CMS hasta 29d67d9044f6f93378e6eb6ff92272217ff7225c. Afecta a una parte desconocida del archivo /ajax/getBasicInfo.php. La manipulaci\u00f3n del argumento username provoca una inyecci\u00f3n SQL. Es posible iniciar el ataque de forma remota. El exploit se ha divulgado al p\u00fablico y puede utilizarse. Este producto no utiliza control de versiones. Por este motivo, no est\u00e1 disponible la informaci\u00f3n sobre las versiones afectadas y no afectadas. NOTA: Se contact\u00f3 primeramente con el proveedor sobre esta divulgaci\u00f3n, pero no respondi\u00f3 de ninguna manera."}], "metrics": {"cvssMetricV40": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "4.0", "vectorString": "CVSS:4.0/AV:N/AC:L/AT:N/PR:L/UI:N/VC:L/VI:L/VA:L/SC:N/SI:N/SA:N/E:X/CR:X/IR:X/AR:X/MAV:X/MAC:X/MAT:X/MPR:X/MUI:X/MVC:X/MVI:X/MVA:X/MSC:X/MSI:X/MSA:X/S:X/AU:X/R:X/V:X/RE:X/U:X", "attackVector": "NETWORK", "attackComplexity": "LOW", "attackRequirements": "NONE", "privilegesRequired": "LOW", "userInteraction": "NONE", "vulnerableSystemConfidentiality": "LOW", "vulnerableSystemIntegrity": "LOW", "vulnerableSystemAvailability": "LOW", "subsequentSystemConfidentiality": "NONE", "subsequentSystemIntegrity": "NONE", "subsequentSystemAvailability": "NONE", "exploitMaturity": "NOT_DEFINED", "confidentialityRequirements": "NOT_DEFINED", "integrityRequirements": "NOT_DEFINED", "availabilityRequirements": "NOT_DEFINED", "modifiedAttackVector": "NOT_DEFINED", "modifiedAttackComplexity": "NOT_DEFINED", "modifiedAttackRequirements": "NOT_DEFINED", "modifiedPrivilegesRequired": "NOT_DEFINED", "modifiedUserInteraction": "NOT_DEFINED", "modifiedVulnerableSystemConfidentiality": "NOT_DEFINED", "modifiedVulnerableSystemIntegrity": "NOT_DEFINED", "modifiedVulnerableSystemAvailability": "NOT_DEFINED", "modifiedSubsequentSystemConfidentiality": "NOT_DEFINED", "modifiedSubsequentSystemIntegrity": "NOT_DEFINED", "modifiedSubsequentSystemAvailability": "NOT_DEFINED", "safety": "NOT_DEFINED", "automatable": "NOT_DEFINED", "recovery": "NOT_DEFINED", "valueDensity": "NOT_DEFINED", "vulnerabilityResponseEffort": "NOT_DEFINED", "providerUrgency": "NOT_DEFINED", "baseScore": 5.3, "baseSeverity": "MEDIUM"}}], "cvssMetricV31": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-89"}]}], "references": [{"url": "https://github.com/Xor-Gerke/webray.com.cn/blob/main/cve/dingfanzu-CMS/dingfanzu-CMS%20getBasicInfo.php%20username%20SQL-inject.md", "source": "cna@vuldb.com"}, {"url": "https://vuldb.com/?ctiid.276075", "source": "cna@vuldb.com"}, {"url": "https://vuldb.com/?id.276075", "source": "cna@vuldb.com"}, {"url": "https://vuldb.com/?submit.396298", "source": "cna@vuldb.com"}], "techniques": [{"techniqueID": "T1059.001", "comment": "CVE-2024-8303 - Dingfanzu CMS getBasicInfo.php SQL Injection - defense against remote SQL injection attacks using web-based vulnerability scanners and web application firewalls."}, {"techniqueID": "T1190", "comment": "CVE-2024-8303 - Dingfanzu CMS getBasicInfo.php SQL Injection - defense against web application attacks using web-based vulnerability scanners and web application firewalls."}, {"techniqueID": "T1030", "comment": "CVE-2024-8303 - Dingfanzu CMS getBasicInfo.php SQL Injection - defense against common web attacks like SQL injection using web-based vulnerability scanners and web application firewalls."}, {"techniqueID": "T1191", "comment": "CVE-2024-8303 - Dingfanzu CMS getBasicInfo.php SQL Injection - defense against web-based attacks using web-based vulnerability scanners and web application firewalls."}], "stix_bundle": {"bundle": {"id": "bundle-2024-8303", "type": "bundle", "created_by_ref": "user-001", "created": "2024-08-30T13:00:05.390Z", "modified": "2024-08-30T13:00:05.390Z", "object_refs": [{"id": "vulnerability_dingfanzu_cms_getBasicInfo_php_sql_injection", "type": "vulnerability", "idref": "CVE-2024-8303"}], "objects": [{"id": "vulnerability_dingfanzu_cms_getBasicInfo_php_sql_injection", "type": "vulnerability", "idref": "CVE-2024-8303", "description": [{"lang": "en", "value": "A vulnerability classified as critical has been found in dingfanzu CMS up to 29d67d9044f6f93378e6eb6ff92272217ff7225c."}]}, {"id": "technical_controls_web_application_firewall", "type": "course-of-action", "description": [{"lang": "en", "value": "Implement a web application firewall (WAF) to detect and prevent SQL injection attacks."}]}, {"id": "technical_controls_web_based_vulnerability_scanners", "type": "course-of-action", "description": [{"lang": "en", "value": "Use web-based vulnerability scanners to detect SQL injection vulnerabilities in the web application."}]}], "links": [{"id": "link_web_app_firewall_course_of_action", "type": "link", "sourcedidos": "vulnerability_dingfanzu_cms_getBasicInfo_php_sql_injection", "sinkid": "technical_controls_web_application_firewall", "relationship": "mitigated-by"}, {"id": "link_web_based_vulnerability_scanners_course_of_action", "type": "link", "sourcedid": "vulnerability_dingfanzu_cms_getBasicInfo_php_sql_injection", "sinkid": "technical_controls_web_based_vulnerability_scanners", "relationship": "detected-by"}]}}, "technical_analysis": {"Introduction": "Dingfanzu CMS getBasicInfo.php SQL Injection is a critical vulnerability that allows remote attackers to inject SQL code.", "Impact and Scope": "The vulnerability has a CVSS score of 5.3 (MEDIUM) and an attack vector of NETWORK.", "Related MITRE ATT&CK Techniques": "T1059.001, T1190, T1030, and T1191", "Technical Details": "The vulnerability is caused by the lack of proper input validation in the getBasicInfo.php file, which allows attackers to inject arbitrary SQL code.", "Detection": "Detection methods include using web-based vulnerability scanners and web application firewalls.", "Mitigation": "Mitigation strategies include implementing a web application firewall (WAF) and using web-based vulnerability scanners.", "Conclusion": "The Dingfanzu CMS getBasicInfo.php SQL Injection vulnerability is a critical vulnerability that requires immediate attention to prevent exploitation."}, "executive_analysis": {"Overview": "The Dingfanzu CMS getBasicInfo.php SQL Injection vulnerability is a critical vulnerability that requires immediate attention.", "Business Impact": "The vulnerability could potentially allow attackers to inject arbitrary SQL code, resulting in data breaches and loss of confidentiality.", "Technical Impact": "The vulnerability could allow attackers to gain unauthorized access to sensitive data and escalate privileges.", "Mitigation Strategies": "Implementing a web application firewall (WAF) and using web-based vulnerability scanners can help prevent exploitation.", "Recommendations": "Recommendations for executives include prioritizing patching and upgrading affected systems and implementing additional security controls.", "Conclusions": "In conclusion, the Dingfanzu CMS getBasicInfo.php SQL Injection vulnerability is a critical vulnerability that requires immediate attention and mitigation."}}