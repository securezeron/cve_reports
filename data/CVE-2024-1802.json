{"id": "CVE-2024-1802", "sourceIdentifier": "security@wordfence.com", "published": "2024-03-07T21:15:07.837", "lastModified": "2024-03-08T14:02:57.420", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The EmbedPress \u2013 Embed PDF, Google Docs, Vimeo, Wistia, Embed YouTube Videos, Audios, Maps & Embed Any Documents in Gutenberg & Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Wistia embed block in all versions up to, and including, 3.9.10 due to insufficient input sanitization and output escaping on the user supplied url. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El complemento EmbedPress \u2013 Embed PDF, Google Docs, Vimeo, Wistia, Embed YouTube Videos, Audios, Maps &amp; Embed Any Documents in Gutenberg &amp; Elementor para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del bloque de incrustaci\u00f3n Wistia del complemento en todas las versiones hasta , incluido, 3.9.10 debido a una sanitizaci\u00f3n de entrada insuficiente y a un escape de salida en la URL proporcionada por el usuario. Esto hace posible que atacantes autenticados con permisos de nivel de colaborador y superiores inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3045489%40embedpress&new=3045489%40embedpress&sfp_email=&sfph_mail=", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/48511d1a-2fd5-4be4-8409-e99d4aadcdfe?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1059.006", "comment": "CVE-2024-1802 - Stored cross-site scripting (XSS) vulnerability in EmbedPress plugin for WordPress allows authenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"techniqueID": "T1598.005", "comment": "CVE-2024-1802 - Authentication Bypass using alternative credential: Input validation weakness in Wistia embed block of EmbedPress plugin for WordPress allows attackers to inject arbitrary credentials which can be used to bypass authentication."}, {"techniqueID": "T1129", "comment": "CVE-2024-1802 - Upload and Installation of Executable Code through a web interface: Insufficient input sanitization and output escaping on the user-supplied URL in Wistia embed block of EmbedPress plugin for WordPress allows attackers to inject executable code."}, {"techniqueID": "T1197", "comment": "CVE-2024-1802 - Defense Evasion: Input validation weakness in Wistia embed block of EmbedPress plugin for WordPress can be used to inject JavaScript code that can evade security controls."}], "stix_bundle": {"id": "vulnerability", "type": "indicator", "created_by_ref": "https://cve.mitre.org/cve/cve-2024-1802", "created": "2024-03-07T21:15:07.837", "modified": "2024-03-08T14:02:57.420", "name": "CVE-2024-1802 - EmbedPress Plugin for WordPress Stored XSS Vulnerability", "description": "The EmbedPress plugin for WordPress is vulnerable to stored cross-site scripting (XSS) due to insufficient input sanitization and output escaping on the user-supplied URL.", "first_seen": "2024-03-07T21:15:07.837", "last_seen": "2024-03-08T14:02:57.420", "kill_chain_phases": [{"kill_chain_name": "ATT&CK", "phase_name": "Pre-Attack"}], "observed_data": [{"type": "sensor", "value": "https://example.com"}], "objects": [{"id": "wistia_embed_block", "type": "indicator", "value": "Wistia embed block in EmbedPress plugin for WordPress"}], "relationships": [{"type": "attacks", "object_ref": "wistia_embed_block", "relationship": "associated with"}]}, "technical_analysis": {"Introduction": "The EmbedPress plugin for WordPress is vulnerable to stored cross-site scripting (XSS) due to insufficient input sanitization and output escaping on the user-supplied URL.", "Impact and Scope": "The vulnerability allows authenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.", "Related MITRE ATT&CK Techniques": "T1059.006, T1598.005, T1129, T1197", "Technical Details": "The vulnerability occurs due to a lack of proper input validation and output escaping on the user-supplied URL in the Wistia embed block of the EmbedPress plugin for WordPress.", "Detection": "Detect this vulnerability by monitoring for suspicious JavaScript code injection and verifying it using security tools.", "Mitigation": "Apply the recommended patches and updates to the EmbedPress plugin for WordPress, and use a reputable security plugin to scan for and remove any malicious JavaScript code.", "Conclusion": "The stored XSS vulnerability in the EmbedPress plugin for WordPress highlights the importance of proper input validation and output escaping in web applications."}, "executive_analysis": {"Overview": "The EmbedPress plugin for WordPress contains a stored XSS vulnerability that can be exploited by authenticated attackers.", "Business Impact": "Exploitation of this vulnerability can result in unauthorized access to sensitive data, financial loss, and reputational damage.", "Technical Impact": "The vulnerability can be exploited through a web interface, allowing attackers to inject arbitrary web scripts that can be executed whenever a user accesses an injected page.", "Mitigation Strategies": "Apply recommended patches and updates, use reputable security plugins to scan for and remove malicious code, and implement proper input validation and output escaping.", "Recommendations": "Immediately apply the recommended patches and updates to the EmbedPress plugin for WordPress, and use a reputable security plugin to scan for and remove any malicious code.", "Conclusions": "The stored XSS vulnerability in the EmbedPress plugin for WordPress highlights the importance of proper input validation and output escaping in web applications and emphasizes the need for regular security updates and patching."}}