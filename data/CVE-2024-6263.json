{"id": "CVE-2024-6263", "sourceIdentifier": "security@wordfence.com", "published": "2024-07-03T08:15:10.223", "lastModified": "2024-07-03T18:24:27.877", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "The WP Lightbox 2 plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018title\u2019 parameter in all versions up to, and including, 3.0.6.6 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El complemento WP Lightbox 2 para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del par\u00e1metro 'title' en todas las versiones hasta la 3.0.6.6 incluida debido a una sanitizaci\u00f3n de entrada y un escape de salida insuficientes. Esto hace posible que atacantes autenticados, con acceso de nivel de Colaborador y superior, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:syedbalkhi:wp_lightbox_2:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "3.0.6.7", "matchCriteriaId": "8129D294-A5C7-4A6A-9E94-B9F4EDE2C749"}]}]}], "references": [{"url": "https://plugins.trac.wordpress.org/browser/wp-lightbox-2/trunk/wp-lightbox-2.js", "source": "security@wordfence.com", "tags": ["Product"]}, {"url": "https://plugins.trac.wordpress.org/changeset?new=3108386%40wp-lightbox-2&old=3046989%40wp-lightbox-2", "source": "security@wordfence.com", "tags": ["Patch"]}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/fe275351-a547-440d-9e8c-c464ed333aa9?source=cve", "source": "security@wordfence.com", "tags": ["Third Party Advisory"]}], "techniques": [{"techniqueID": "T1082", "comment": "CVE-2024-6263 - This vulnerability exploits Stored Cross-Site Scripting (XSS) and allows authenticated users with Contributor-level access to inject arbitrary web scripts, which could lead to execution of malicious code and compromise of user data. This vulnerability can be prevented by validating and sanitizing user input on the server-side, and using Content Security Policy (CSP) to define allowed sources of content."}, {"techniqueID": "T1497", "comment": "CVE-2024-6263 - This vulnerability can be used to inject arbitrary scripts into WordPress pages, allowing attackers to execute malicious code and inject additional attacks. This vulnerability can be mitigated by monitoring and auditing network traffic for suspicious activity, and implementing web application firewalls (WAFs) to detect and block malicious traffic."}, {"techniqueID": "T1190", "comment": "CVE-2024-6263 - This vulnerability allows attackers to inject arbitrary scripts into WordPress pages, potentially leading to execution of malicious code, data theft, and other attacks. This vulnerability can be prevented by implementing secure coding practices, such as input validation and sanitization, and using security software to detect and block malicious activity."}], "stix_bundle": {"stix_observable": {"type": "vulnerability", "id": "https://example.com/cve-2024-6263", "created": "2024-07-03T08:15:10.223", "modified": "2024-07-03T18:24:27.877", "name": "CVE-2024-6263 - WP Lightbox 2 Stored Cross-Site Scripting", "description": "The WP Lightbox 2 plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'title' parameter in all versions up to, and including, 3.0.6.6 due to insufficient input sanitization and output escaping.", "severity": "MEDIUM", "exploitability": {"type": "exploitable", "level": "HIGH"}, "impact": {"type": "impactable", "level": "MEDIUM"}, "references": [{"reference_id": "https://plugins.trac.wordpress.org/browser/wp-lightbox-2/trunk/wp-lightbox-2.js", "type": "product", "source": "security@wordfence.com"}, {"reference_id": "https://plugins.trac.wordpress.org/changeset", "type": "patch", "source": "security@wordfence.com"}, {"reference_id": "https://www.wordfence.com/threat-intel/vulnerabilities", "type": "third-party advisory", "source": "security@wordfence.com"}], "related_indicators": [{"id": "https://example.com/indicator-1", "label": "WP Lightbox 2 Stored Cross-Site Scripting", "type": "vulnerability", "entity_label": "Vulnerability"}], "incident_response": {"type": "incident_response", "recommended_course_of_action": [{"id": "https://example.com/technique-1", "label": "Validated and sanitized user input on the server-side", "type": "technique", "entity_label": "Technique"}]}, "mitigation": {"type": "mitigation", "recommended_course_of_action": [{"id": "https://example.com/technique-2", "label": "Implementing web application firewalls (WAFs) to detect and block malicious traffic", "type": "technique", "entity_label": "Technique"}]}, "detection": {"type": "detection", "recommended_course_of_action": [{"id": "https://example.com/technique-3", "label": "Monitoring and auditing network traffic for suspicious activity", "type": "technique", "entity_label": "Technique"}]}, "affected_entities": [{"id": "https://example.com/entity-1", "label": "WP Lightbox 2 Plugin", "type": "software", "entity_label": "Software"}]}, "stix_tactic": {"type": "exploitation", "id": "https://example.com/tactic-1", "label": "Exploit", "entity_label": "Tactic"}, "stix_observable_element": {"type": "attack_pattern", "id": "https://example.com/element-1", "label": "Stored Cross-Site Scripting", "entity_label": "Attack Pattern"}}, "technical_analysis": {"Introduction": "The WP Lightbox 2 plugin for WordPress is vulnerable to Stored Cross-Site Scripting due to insufficient input sanitization and output escaping. This vulnerability allows authenticated users with Contributor-level access to inject arbitrary web scripts, which could lead to execution of malicious code and compromise of user data.", "Impact and Scope": "The vulnerability affects all versions of the WP Lightbox 2 plugin up to and including 3.0.6.6, with a CVSS score of 5.4. The attack vector is NETWORK, and the attack complexity is LOW.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to MITRE ATT&CK techniques T1082, T1497, and T1190.", "Technical Details": "The vulnerability occurs due to insufficient input sanitization and output escaping, allowing attackers to inject arbitrary scripts into WordPress pages.", "Detection": "The vulnerability can be detected by monitoring and auditing network traffic for suspicious activity, and implementing web application firewalls (WAFs) to detect and block malicious traffic.", "Mitigation": "The vulnerability can be mitigated by validating and sanitizing user input on the server-side, implementing secure coding practices, and using security software to detect and block malicious activity.", "Conclusion": "In conclusion, the WP Lightbox 2 plugin for WordPress is vulnerable to Stored Cross-Site Scripting due to insufficient input sanitization and output escaping, and can be mitigated by implementing secure coding practices, validating and sanitizing user input on the server-side, and using security software to detect and block malicious activity."}, "executive_analysis": {"Overview": "The WP Lightbox 2 plugin for WordPress is vulnerable to Stored Cross-Site Scripting, which allows attackers to inject arbitrary scripts into WordPress pages and execute malicious code.", "Business Impact": "The vulnerability has a medium severity impact, and could potentially lead to compromise of user data and execution of malicious code.", "Technical Impact": "The vulnerability affects all versions of the WP Lightbox 2 plugin up to and including 3.0.6.6, and could potentially lead to execution of malicious code and compromise of user data.", "Mitigation Strategies": "The vulnerability can be mitigated by implementing secure coding practices, validating and sanitizing user input on the server-side, and using security software to detect and block malicious activity.", "Recommendations": "We recommend that system administrators update the WP Lightbox 2 plugin to the latest version, and implement secure coding practices to prevent similar vulnerabilities in the future.", "Conclusions": "In conclusion, the WP Lightbox 2 plugin for WordPress is vulnerable to Stored Cross-Site Scripting, and can be mitigated by implementing secure coding practices, validating and sanitizing user input on the server-side, and using security software to detect and block malicious activity."}}