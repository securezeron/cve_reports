{"id": "CVE-2024-26924", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-04-25T06:15:57.407", "lastModified": "2024-07-03T01:50:00.957", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_set_pipapo: do not free live element\n\nPablo reports a crash with large batches of elements with a\nback-to-back add/remove pattern.  Quoting Pablo:\n\n  add_elem(\"00000000\") timeout 100 ms\n  ...\n  add_elem(\"0000000X\") timeout 100 ms\n  del_elem(\"0000000X\") <---------------- delete one that was just added\n  ...\n  add_elem(\"00005000\") timeout 100 ms\n\n  1) nft_pipapo_remove() removes element 0000000X\n  Then, KASAN shows a splat.\n\nLooking at the remove function there is a chance that we will drop a\nrule that maps to a non-deactivated element.\n\nRemoval happens in two steps, first we do a lookup for key k and return the\nto-be-removed element and mark it as inactive in the next generation.\nThen, in a second step, the element gets removed from the set/map.\n\nThe _remove function does not work correctly if we have more than one\nelement that share the same key.\n\nThis can happen if we insert an element into a set when the set already\nholds an element with same key, but the element mapping to the existing\nkey has timed out or is not active in the next generation.\n\nIn such case its possible that removal will unmap the wrong element.\nIf this happens, we will leak the non-deactivated element, it becomes\nunreachable.\n\nThe element that got deactivated (and will be freed later) will\nremain reachable in the set data structure, this can result in\na crash when such an element is retrieved during lookup (stale\npointer).\n\nAdd a check that the fully matching key does in fact map to the element\nthat we have marked as inactive in the deactivation step.\nIf not, we need to continue searching.\n\nAdd a bug/warn trap at the end of the function as well, the remove\nfunction must not ever be called with an invisible/unreachable/non-existent\nelement.\n\nv2: avoid uneeded temporary variable (Stefano)"}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: netfilter: nft_set_pipapo: no liberar elemento activo Pablo informa un bloqueo con grandes lotes de elementos con un patr\u00f3n de agregar/eliminar consecutivos. Citando a Pablo: add_elem(\"00000000\") timeout 100 ms ... add_elem(\"0000000X\") timeout 100 ms del_elem(\"0000000X\") &lt;---------------- elimina uno que se acaba de agregar... add_elem(\"00005000\") tiempo de espera 100 ms 1) nft_pipapo_remove() elimina el elemento 0000000X Luego, KASAN muestra un s\u00edmbolo. Al observar la funci\u00f3n de eliminaci\u00f3n, existe la posibilidad de que eliminemos una regla que se asigne a un elemento no desactivado. La eliminaci\u00f3n se realiza en dos pasos: primero buscamos la clave k, devolvemos el elemento que se va a eliminar y lo marcamos como inactivo en la pr\u00f3xima generaci\u00f3n. Luego, en un segundo paso, el elemento se elimina del conjunto/mapa. La funci\u00f3n _remove no funciona correctamente si tenemos m\u00e1s de un elemento que comparte la misma clave. Esto puede suceder si insertamos un elemento en un conjunto cuando el conjunto ya contiene un elemento con la misma clave, pero la asignaci\u00f3n del elemento a la clave existente ha expirado o no est\u00e1 activa en la pr\u00f3xima generaci\u00f3n. En tal caso, es posible que la eliminaci\u00f3n desasigne el elemento incorrecto. Si esto sucede, filtraremos el elemento no desactivado, se vuelve inalcanzable. El elemento que se desactiv\u00f3 (y se liberar\u00e1 m\u00e1s adelante) permanecer\u00e1 accesible en la estructura de datos establecida, lo que puede provocar un bloqueo cuando dicho elemento se recupere durante la b\u00fasqueda (puntero obsoleto). Agregue una verificaci\u00f3n de que la clave que coincide completamente de hecho se asigna al elemento que hemos marcado como inactivo en el paso de desactivaci\u00f3n. Si no, debemos seguir buscando. Agregue tambi\u00e9n una trampa de error/advertencia al final de la funci\u00f3n; la funci\u00f3n de eliminaci\u00f3n nunca debe llamarse con un elemento invisible/inalcanzable/inexistente. v2: evitar variables temporales innecesarias (Stefano)"}], "metrics": {"cvssMetricV31": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 5.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.2, "impactScore": 3.6}]}, "weaknesses": [{"source": "134c704f-9b21-4f2e-91b3-4a467353bcc0", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-476"}]}], "references": [{"url": "https://git.kernel.org/stable/c/14b001ba221136c15f894577253e8db535b99487", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/3cfc9ec039af60dbd8965ae085b2c2ccdcfbe1cc", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/41d8fdf3afaff312e17466e4ab732937738d5644", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/7a1679e2d9bfa3b5f8755c2c7113e54b7d42bd46", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/e3b887a9c11caf8357a821260e095f2a694a34f2", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/ebf7c9746f073035ee26209e38c3a1170f7b349a", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-26924 - This vulnerability allows an attacker to crash the Linux kernel by exploiting a race condition in the nft_set_pipapo module, making it relevant to the 'Exploit Public Facing Application' technique. Defending against this involves implementing proper kernel patching and exploiting detection."}, {"techniqueID": "T1027", "comment": "CVE-2024-26924 - This vulnerability allows an attacker to crash the Linux kernel by exploiting a race condition in the nft_set_pipapo module, making it relevant to the 'WebShell' technique. Defending against this involves implementing proper kernel patching and webshell detection."}], "stix_bundle": {"bundle": {"type": "bundle", "id": "bundle--62d6ca57-7b64-4f07-8a6f-fa2f4a8ed69c", "created_by_ref": "identity--0bc7e7a6-ed64-4bab-a64d-cd4e435c88a7", "created": "2024-07-03T01:50:00.957Z", "modified": "2024-07-03T01:50:00.957Z", "objects": [{"type": "vulnerability", "id": "vulnerability--c5b37b1a-541e-4a91-8c27-45459cede5a4", "created_by_ref": "identity--0bc7e7a6-ed64-4bab-a64d-cd4e435c88a7", "created": "2024-04-25T06:15:57.407Z", "modified": "2024-07-03T01:50:00.957Z", "name": "CVE-2024-26924", "description": "netfilter: nft_set_pipapo: do not free live element", "cve": {"id": "CVE-2024-26924", "source_identifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-04-25T06:15:57.407Z", "last_modified": "2024-07-03T01:50:00.957Z"}, "impact_score": 3.6, "exploitability_score": 2.2, "cvssv3_score": 5.9, "cvssv3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H", "related_threats": [{"type": "attack-pattern", "id": "attack-pattern--62d6ca57-7b64-4f07-8a6f-fa2f4a8ed69c", "created_by_ref": "identity--0bc7e7a6-ed64-4bab-a64d-cd4e435c88a7", "created": "2024-07-03T01:50:00.957Z", "modified": "2024-07-03T01:50:00.957Z", "name": "Exploit Public Facing Application", "description": "Exploit publicly facing applications and services"}], "mitigated_by_ref": [{"type": "course-of-action", "id": "course-of-action--62d6ca57-7b64-4f07-8a6f-fa2f4a8ed69c", "created_by_ref": "identity--0bc7e7a6-ed64-4bab-a64d-cd4e435c88a7", "created": "2024-07-03T01:50:00.957Z", "modified": "2024-07-03T01:50:00.957Z", "name": "Implement proper kernel patching", "description": "Implement proper kernel patching to prevent exploitation"}, {"type": "course-of-action", "id": "course-of-action--62d6ca57-7b64-4f07-8a6f-fa2f4a8ed69c", "created_by_ref": "identity--0bc7e7a6-ed64-4bab-a64d-cd4e435c88a7", "created": "2024-07-03T01:50:00.957Z", "modified": "2024-07-03T01:50:00.957Z", "name": "Implement webshell detection", "description": "Implement webshell detection and monitoring to identify potential exploits"}]}]}}, "technical_analysis": {"Introduction": "The CVE-2024-26924 vulnerability is a race condition in the nft_set_pipapo module of the Linux kernel, which can be exploited to crash the kernel.", "Impact and Scope": "The vulnerability has a CVSS score of 5.9 and can impact the availability of the Linux kernel.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to the 'Exploit Public Facing Application' and 'WebShell' techniques.", "Technical Details": "The vulnerability occurs due to a race condition in the nft_set_pipapo module, which can be exploited by an attacker to crash the kernel.", "Detection": "The vulnerability can be detected by monitoring kernel logs for crashes and implementing webshell detection and monitoring.", "Mitigation": "The vulnerability can be mitigated by implementing proper kernel patching and webshell detection and monitoring.", "Conclusion": "The CVE-2024-26924 vulnerability is a significant risk to Linux kernel availability and should be prioritized for mitigation."}, "executive_analysis": {"Overview": "The CVE-2024-26924 vulnerability is a Linux kernel vulnerability that can be exploited to crash the kernel.", "Business Impact": "The vulnerability has the potential to impact the availability of Linux-based systems and services.", "Technical Impact": "The vulnerability affects the security and stability of Linux-based systems and services.", "Mitigation Strategies": "Implementing proper kernel patching and webshell detection and monitoring can mitigate the vulnerability.", "Recommendations": "CISOs and security teams should prioritize the mitigation of this vulnerability and ensure timely patching and monitoring.", "Conclusions": "The CVE-2024-26924 vulnerability is a critical risk to Linux-based systems and services and should be addressed promptly."}}