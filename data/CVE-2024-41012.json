{"id": "CVE-2024-41012", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-07-23T08:15:01.877", "lastModified": "2024-07-29T07:15:05.083", "vulnStatus": "Undergoing Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nfilelock: Remove locks reliably when fcntl/close race is detected\n\nWhen fcntl_setlk() races with close(), it removes the created lock with\ndo_lock_file_wait().\nHowever, LSMs can allow the first do_lock_file_wait() that created the lock\nwhile denying the second do_lock_file_wait() that tries to remove the lock.\nSeparately, posix_lock_file() could also fail to\nremove a lock due to GFP_KERNEL allocation failure (when splitting a range\nin the middle).\n\nAfter the bug has been triggered, use-after-free reads will occur in\nlock_get_status() when userspace reads /proc/locks. This can likely be used\nto read arbitrary kernel memory, but can't corrupt kernel memory.\n\nFix it by calling locks_remove_posix() instead, which is designed to\nreliably get rid of POSIX locks associated with the given file and\nfiles_struct and is also used by filp_flush()."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: filelock: Elimina bloqueos de manera confiable cuando se detecta fcntl/close race Cuando fcntl_setlk() corre con close(), elimina el bloqueo creado con do_lock_file_wait(). Sin embargo, los LSM pueden permitir el primer do_lock_file_wait() que cre\u00f3 el bloqueo y al mismo tiempo negar el segundo do_lock_file_wait() que intenta eliminar el bloqueo. Por separado, posix_lock_file() tambi\u00e9n podr\u00eda no eliminar un bloqueo debido a un fallo en la asignaci\u00f3n de GFP_KERNEL (al dividir un rango por la mitad). Despu\u00e9s de que se haya activado el error, se producir\u00e1n lecturas de use-after-free en lock_get_status() cuando el espacio de usuario lea /proc/locks. Es probable que esto se pueda usar para leer memoria del kernel arbitraria, pero no puede da\u00f1ar la memoria del kernel. Solucionelo llamando a locks_remove_posix() en su lugar, que est\u00e1 dise\u00f1ado para deshacerse de manera confiable de los bloqueos POSIX asociados con el archivo dado y files_struct y tambi\u00e9n lo usa filp_flush()."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/3cad1bc010416c6dd780643476bc59ed742436b9", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/52c87ab18c76c14d7209646ccb3283b3f5d87b22", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/5661b9c7ec189406c2dde00837aaa4672efb6240", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/5f5d0799eb0a01d550c21b7894e26b2d9db55763", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/b6d223942c34057fdfd8f149e763fa823731b224", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/d30ff33040834c3b9eee29740acd92f9c7ba2250", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/dc2ce1dfceaa0767211a9d963ddb029ab21c4235", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/ef8fc41cd6f95f9a4a3470f085aecf350569a0b3", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-41012 - This technique is relevant as it relates to the exploitation of a use-after-free vulnerability in the Linux kernel, allowing an attacker to read arbitrary kernel memory."}, {"techniqueID": "T1210", "comment": "CVE-2024-41012 - This technique is relevant as it relates to the exploitation of a use-after-free vulnerability in the Linux kernel, allowing an attacker to read arbitrary kernel memory. Detection and identification of such activity can be challenging, making it important to implement effective logging and monitoring mechanisms."}], "stix_bundle": {"stix_header": {"title": "CVE-2024-41012 MITRE ATK&STIX Bundle", "id": "cve-2024-41012"}, "objects": [{"id": "cve-2024-41012", "type": "vulnerability", "vulnerability-name": "CVE-2024-41012", "description": "In the Linux kernel, a use-after-free vulnerability has been resolved. This vulnerability could allow an attacker to read arbitrary kernel memory.", "related-objects": [{"id": "Related_T1190", "type": "attack-pattern", "object-label": "Related MITRE T1190", "description": "T1190: Exploit Public-Facing Application"}, {"id": "Related_T1210", "type": "attack-pattern", "object-label": "Related MITRE T1210", "description": "T1210: Exploit Other Vulnerabilities"}]}, {"id": "T1190", "type": "attack-pattern", "object-label": "Related MITRE T1190", "description": "T1190: Exploit Public-Facing Application"}, {"id": "T1210", "type": "attack-pattern", "object-label": "Related MITRE T1210", "description": "T1210: Exploit Other Vulnerabilities"}], "relationships": [{"type": "related-to", "source-object-id": "cve-2024-41012", "target-object-id": "Related_T1190"}, {"type": "related-to", "source-object-id": "cve-2024-41012", "target-object-id": "Related_T1210"}]}, "technical_analysis": {"Introduction": "The CVE-2024-41012 vulnerability is a use-after-free vulnerability in the Linux kernel that could allow an attacker to read arbitrary kernel memory.", "Impact and Scope": "CVSS Score: 5.5 (AV:N/AC:L/Au:N/C:P/I:N/A:N) - The vulnerability could allow an attacker to read arbitrary kernel memory, potentially leading to unauthorized access to sensitive information.", "Related MITRE ATT&CK Techniques": "T1190: Exploit Public-Facing Application and T1210: Exploit Other Vulnerabilities", "Technical Details": "The vulnerability is caused by a use-after-free condition in the kernel's file lock mechanism, which can be exploited by an attacker to read arbitrary kernel memory.", "Detection": "Detection of this vulnerability can be challenging, but implementing effective logging and monitoring mechanisms can help identify suspicious activity.", "Mitigation": "Mitigation strategies include maintaining up-to-date Linux kernel installations, implementing secure coding practices, and monitoring systems for suspicious activity.", "Conclusion": "In conclusion, the CVE-2024-41012 vulnerability is a significant security risk that requires immediate attention. It is essential to implement effective mitigation strategies to protect against exploitation."}, "executive_analysis": {"Overview": "The CVE-2024-41012 vulnerability is a critical security risk that requires immediate attention.", "Business Impact": "The vulnerability could allow an attacker to read arbitrary kernel memory, potentially leading to unauthorized access to sensitive business information.", "Technical Impact": "The vulnerability is caused by a use-after-free condition in the kernel's file lock mechanism, which can be exploited by an attacker to read arbitrary kernel memory.", "Mitigation Strategies": "MITRE recommends implementing effective mitigation strategies, such as maintaining up-to-date Linux kernel installations, implementing secure coding practices, and monitoring systems for suspicious activity.", "Recommendations": "Recommended action for executives: Ensure immediate attention is given to the CVE-2024-41012 vulnerability and implement effective mitigation strategies.", "Conclusions": "In conclusion, the CVE-2024-41012 vulnerability is a critical security risk that requires immediate attention. It is essential to implement effective mitigation strategies to protect against exploitation."}}