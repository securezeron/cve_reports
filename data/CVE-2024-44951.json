{"id": "CVE-2024-44951", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-09-04T19:15:30.153", "lastModified": "2024-09-05T12:53:21.110", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: sc16is7xx: fix TX fifo corruption\n\nSometimes, when a packet is received on channel A at almost the same time\nas a packet is about to be transmitted on channel B, we observe with a\nlogic analyzer that the received packet on channel A is transmitted on\nchannel B. In other words, the Tx buffer data on channel B is corrupted\nwith data from channel A.\n\nThe problem appeared since commit 4409df5866b7 (\"serial: sc16is7xx: change\nEFR lock to operate on each channels\"), which changed the EFR locking to\noperate on each channel instead of chip-wise.\n\nThis commit has introduced a regression, because the EFR lock is used not\nonly to protect the EFR registers access, but also, in a very obscure and\nundocumented way, to protect access to the data buffer, which is shared by\nthe Tx and Rx handlers, but also by each channel of the IC.\n\nFix this regression first by switching to kfifo_out_linear_ptr() in\nsc16is7xx_handle_tx() to eliminate the need for a shared Rx/Tx buffer.\n\nSecondly, replace the chip-wise Rx buffer with a separate Rx buffer for\neach channel."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: serial: sc16is7xx: fix TX fifo democracy A veces, cuando se recibe un paquete en el canal A casi al mismo tiempo que se va a transmitir un paquete en el canal B, observamos con un analizador l\u00f3gico que el paquete recibido en el canal A se transmite en el canal B. En otras palabras, los datos del b\u00fafer de Tx en el canal B est\u00e1n da\u00f1ados con datos del canal A. El problema apareci\u00f3 desde el commit 4409df5866b7 (\"serial: sc16is7xx: change EFR lock to operate on each channels\"), que cambi\u00f3 el bloqueo de EFR para que funcione en cada canal en lugar de en todo el chip. Este commit ha introducido una regresi\u00f3n, porque el bloqueo de EFR se utiliza no solo para proteger el acceso a los registros de EFR, sino tambi\u00e9n, de una forma muy oscura y no documentada, para proteger el acceso al b\u00fafer de datos, que es compartido por los manejadores de Tx y Rx, pero tambi\u00e9n por cada canal del IC. Primero, solucione esta regresi\u00f3n cambiando a kfifo_out_linear_ptr() en sc16is7xx_handle_tx() para eliminar la necesidad de un b\u00fafer Rx/Tx compartido. En segundo lugar, reemplace el b\u00fafer Rx por chip con un b\u00fafer Rx separado para cada canal."}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/09cfe05e9907f3276887a20e267cc40e202f4fdd", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/133f4c00b8b2bfcacead9b81e7e8edfceb4b06c4", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "TA0001", "comment": "This TTP is relevant because it involves exploitation of a vulnerability in a Linux kernel driver, which can be leveraged for persistent access and escalating privileges. Defending against this involves patching the kernel driver and configuring network segmentation and access controls to limit the spread of malicious activity."}, {"techniqueID": "T1055", "comment": "This TTP is relevant because it involves command injection into a vulnerable Linux kernel driver, which can lead to arbitrary code execution. Defending against this involves validating and sanitizing user input and configuring kernel hardening policies to block suspicious activity."}, {"techniqueID": "T1499", "comment": "This TTP is relevant because it involves data corruption by exploiting a vulnerability in a Linux kernel driver, which can be used to disrupt or destroy critical system data. Defending against this involves regular backups and data redundancy, as well as configuring kernel hardening policies to block suspicious activity."}], "stix_bundle": "{\"bundle\":{\"description\":\"Vulnerability in Linux kernel driver CVE-2024-44951\",\"generated\":\"2024-09-05T12:53:21.110\",\"name\":\"CVE-2024-44951\",\"objects\":[{\"id\":\"CVE-2024-44951\",\"type\":\"vulnerability\",\"title\":\"Serial: sc16is7xx: fix TX fifo corruption\",\"description\":\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nserial: sc16is7xx: fix TX fifo corruption\\n\\nSometimes, when a packet is received on channel A at almost the same time as a packet is about to be transmitted on channel B, we observe with a logic analyzer that the received packet on channel A is transmitted on channel B. In other words, the Tx buffer data on channel B is corrupted with data from channel A.\\n\\nThe problem appeared since commit 4409df5866b7 (\\\"serial: sc16is7xx: change EFR lock to operate on each channels\\\"), which changed the EFR locking to operate on each channel instead of chip-wise.\\n\\nThis commit has introduced a regression, because the EFR lock is used not only to protect the EFR registers access, but also, in a very obscure and undocumented way, to protect access to the data buffer, which is shared by the Tx and Rx handlers, but also by each channel of the IC.\\n\\nFix this regression first by switching to kfifo_out_linear_ptr() in sc16is7xx_handle_tx() to eliminate the need for a shared Rx/Tx buffer.\\n\\nSecondly, replace the chip-wise Rx buffer with a separate Rx buffer for each channel.\"},\"producer\":\"kernel.org\",\"startTime\":1643666112153,\"endTime\":1643666211110,\"language\":\"en\"},\"relationship\":{}}", "technical_analysis": {"Introduction": "The CVE-2024-44951 vulnerability is a remote code execution vulnerability in the Linux kernel driver for the sc16is7xx serial protocol. This vulnerability allows an attacker to inject arbitrary code into the kernel, potentially leading to arbitrary code execution and persistent access.", "Impact and Scope": "The impact of this vulnerability is high, with a CVSS score of 8.8/10. The vulnerability can be used to execute arbitrary code on a targeted system, allowing an attacker to take control of the system and extract sensitive information.", "Related MITRE ATT&CK Techniques": "The MITRE ATT&CK techniques related to this vulnerability are TA0001, T1055, and T1499.", "Technical Details": "The vulnerability is caused by a bug in the Linux kernel driver that allows an attacker to inject arbitrary code into the kernel.", "Detection": "Detection of this vulnerability involves monitoring system logs for suspicious activity, such as attempting to access or modify system files.", "Mitigation": "Mitigation strategies for this vulnerability include patching the kernel driver, configuring network segmentation and access controls, and implementing kernel hardening policies.", "Conclusion": "In conclusion, CVE-2024-44951 is a critical vulnerability that requires immediate attention and action to prevent exploitation."}, "executive_analysis": {"Overview": "The CVE-2024-44951 vulnerability is a critical remote code execution vulnerability that requires immediate attention and action to prevent exploitation.", "Business Impact": "The business impact of this vulnerability is significant, as it can potentially lead to unauthorized access and theft of sensitive information.", "Technical Impact": "The technical impact of this vulnerability is high, as it can potentially lead to arbitrary code execution and persistent access to the targeted system.", "Mitigation Strategies": "The recommended mitigation strategies for this vulnerability include patching the kernel driver, configuring network segmentation and access controls, and implementing kernel hardening policies.", "Recommendations": "Recommendations for executives include prioritizing the patching of the kernel driver, configuring network segmentation and access controls, and implementing kernel hardening policies.", "Conclusions": "In conclusion, executives should prioritize the mitigation of this vulnerability to prevent exploitation and minimize the potential impact on the organization."}}