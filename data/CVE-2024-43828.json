{"id": "CVE-2024-43828", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-08-17T10:15:08.720", "lastModified": "2024-08-22T15:41:50.870", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix infinite loop when replaying fast_commit\n\nWhen doing fast_commit replay an infinite loop may occur due to an\nuninitialized extent_status struct.  ext4_ext_determine_insert_hole() does\nnot detect the replay and calls ext4_es_find_extent_range(), which will\nreturn immediately without initializing the 'es' variable.\n\nBecause 'es' contains garbage, an integer overflow may happen causing an\ninfinite loop in this function, easily reproducible using fstest generic/039.\n\nThis commit fixes this issue by unconditionally initializing the structure\nin function ext4_es_find_extent_range().\n\nThanks to Zhang Yi, for figuring out the real problem!"}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: ext4: corrige el bucle infinito al reproducir fast_commit Al realizar la reproducci\u00f3n fast_commit, puede ocurrir un bucle infinito debido a una estructura extend_status no inicializada. ext4_ext_determine_insert_hole() no detecta la repetici\u00f3n y llama a ext4_es_find_extent_range(), que regresar\u00e1 inmediatamente sin inicializar la variable 'es'. Debido a que 'es' contiene basura, puede ocurrir un desbordamiento de enteros causando un bucle infinito en esta funci\u00f3n, f\u00e1cilmente reproducible usando fstest generic/039. Esta confirmaci\u00f3n soluciona este problema inicializando incondicionalmente la estructura en la funci\u00f3n ext4_es_find_extent_range(). \u00a1Gracias a Zhang Yi por descubrir el verdadero problema!"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 3.6}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-835"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionStartIncluding": "5.10", "versionEndExcluding": "5.10.224", "matchCriteriaId": "3723F85C-99C4-4BA1-A411-426E0591769E"}, {"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionStartIncluding": "5.11", "versionEndExcluding": "5.15.165", "matchCriteriaId": "B4E2B568-3171-41DE-B519-F2B1A3600D94"}, {"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionStartIncluding": "5.16", "versionEndExcluding": "6.1.103", "matchCriteriaId": "E45EAC72-8329-4F99-8276-86AF9BB3496A"}, {"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionStartIncluding": "6.2", "versionEndExcluding": "6.6.44", "matchCriteriaId": "CC912330-6B41-4C6B-99AF-F3857FBACB6A"}, {"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionStartIncluding": "6.7", "versionEndExcluding": "6.10.3", "matchCriteriaId": "92D388F2-1EAF-4CFA-AC06-5B26D762EA7D"}]}]}], "references": [{"url": "https://git.kernel.org/stable/c/0619f7750f2b178a1309808832ab20d85e0ad121", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/181e63cd595c688194e07332f9944b3a63193de2", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/5ed0496e383cb6de120e56991385dce70bbb87c1", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/81f819c537d29932e4b9267f02411cbc8b355178", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/907c3fe532253a6ef4eb9c4d67efb71fab58c706", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/c6e67df64783e99a657ef2b8c834ba2bf54c539c", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "tags": ["Patch"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-43828 - The Linux kernel fast_commit replay vulnerability allows attackers to cause an infinite loop, affecting availability. This can be mitigated by initializing the 'es' variable in ext4_es_find_extent_range()."}, {"techniqueID": "T1068", "comment": "CVE-2024-43828 - The Linux kernel fast_commit replay vulnerability allows attackers to cause an integer overflow, leading to availability impact. This can be mitigated by unconditionally initializing the structure in function ext4_es_find_extent_range()."}], "stix_bundle": {"@stix-extension-version": "2.1", "bundle": {"id": "linux_kernal_fast_commit_replay", "created_by_ref": "nvd@nist.gov", "created": "2024-08-17T10:15:08.720", "modified": "2024-08-22T15:41:50.870", "bundle_type": "threat-actor", "objects": [{"id": "linux_kernel_fast_commit_replay", "type": "vulnerability", "created": "2024-08-17T10:15:08.720", "modified": "2024-08-22T15:41:50.870", "name": "Linux kernel fast_commit replay vulnerability", "description": "The Linux kernel fast_commit replay vulnerability allows attackers to cause an infinite loop, affecting availability.", "cve": "CVE-2024-43828", "cvss": {"vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "relationships": [{"id": "fast_commit_replay_vulnerability_related", "type": "related", "from": "linux_kernel_fast_commit_replay", "to": "T1190", "from_type": "vulnerability", "to_type": "mitre_attack", "label": "related to", "relationship_type": "indicates_attack_pattern"}]}, {"id": "fast_commit_replay_vulnerability_detection", "type": "indicator", "created": "2024-08-17T10:15:08.720", "modified": "2024-08-22T15:41:50.870", "name": "Fast commit replay vulnerability detection", "description": "Detect infinite loop in ext4_es_find_extent_range() function", "pattern": "Detection of infinite loop in ext4_es_find_extent_range() function", "granularity": "file"}, {"id": "fast_commit_replay_vulnerability_mitigation", "type": "tactic", "created": "2024-08-17T10:15:08.720", "modified": "2024-08-22T15:41:50.870", "name": "Fast commit replay vulnerability mitigation", "description": "Implement unconditional initialization of 'es' variable in ext4_es_find_extent_range() function", "category": "network"}]}}, "technical_analysis": {"Introduction": "The Linux kernel fast_commit replay vulnerability allows attackers to cause an infinite loop, affecting availability.", "Impact and Scope": "This vulnerability has a CVSS score of 5.5, with an attack vector of LOCAL and an impact of HIGH on availability.", "Related MITRE ATT&CK Techniques": "This vulnerability is related to T1190 and T1068.", "Technical Details": "The vulnerability occurs in the Linux kernel's ext4_es_find_extent_range() function, where an uninitialized 'es' variable can lead to an infinite loop.", "Detection": "Detect the vulnerability by monitoring system logs for infinite loop occurrences.", "Mitigation": "Mitigate the vulnerability by implementing unconditional initialization of 'es' variable in ext4_es_find_extent_range() function.", "Conclusion": "This vulnerability has significant impact on availability and can be mitigated with proper initialization of 'es' variable."}, "executive_analysis": {"Overview": "The Linux kernel fast_commit replay vulnerability is a highly critical vulnerability that affects availability.", "Business Impact": "This vulnerability can cause significant downtime and data loss, resulting in financial losses and reputational damage.", "Technical Impact": "The vulnerability occurs in the Linux kernel's ext4_es_find_extent_range() function, requiring a patch and software updates.", "Mitigation Strategies": "Implement unconditional initialization of 'es' variable in ext4_es_find_extent_range() function, and monitor system logs for infinite loop occurrences.", "Recommendations": "Apply patches and software updates immediately, and conduct thorough penetration testing to identify and remediate any remaining vulnerabilities.", "Conclusions": "This vulnerability is a high-priority issue that requires immediate attention and mitigation to prevent further exploitation."}}