{"id": "CVE-2024-28867", "sourceIdentifier": "security-advisories@github.com", "published": "2024-03-29T15:15:11.180", "lastModified": "2024-04-01T01:12:59.077", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Swift Prometheus is a Swift client for the Prometheus monitoring system, supporting counters, gauges and histograms. In code which applies _un-sanitized string values into metric names or labels_, an attacker could make use of this and send a `?lang` query parameter containing newlines, `}`  or similar characters which can lead to the attacker taking over the exported format -- including creating unbounded numbers of stored metrics, inflating server memory usage, or causing \"bogus\" metrics. This vulnerability is fixed in2.0.0-alpha.2."}, {"lang": "es", "value": "Swift Prometheus es un cliente Swift para el sistema de monitoreo Prometheus, que admite contadores, medidores e histogramas. En el c\u00f3digo que aplica _valores de cadena no desinfectados en nombres o etiquetas de m\u00e9tricas_, un atacante podr\u00eda hacer uso de esto y enviar un par\u00e1metro de consulta `?lang` que contenga nuevas l\u00edneas, `}` o caracteres similares que pueden llevar al atacante a hacerse cargo del contenido exportado. formato, incluida la creaci\u00f3n de n\u00fameros ilimitados de m\u00e9tricas almacenadas, inflar el uso de la memoria del servidor o generar m\u00e9tricas \"falsas\". Esta vulnerabilidad se solucion\u00f3 en 2.0.0-alpha.2."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 5.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.2, "impactScore": 3.6}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-74"}]}], "references": [{"url": "https://github.com/swift-server/swift-prometheus/commit/bfcd4bbfabe11aae4b035424ee9724582e288501", "source": "security-advisories@github.com"}, {"url": "https://github.com/swift-server/swift-prometheus/security/advisories/GHSA-x768-cvr2-345r", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-28867 - Utilizing un-sanitized input to manipulate metric names and labels, allowing an attacker to take control of the exported format and create arbitrary metrics. This can be mitigated by validating user input and parameter sanitizer."}, {"techniqueID": "T1191", "comment": "CVE-2024-28867 - Sending malformed requests with newline characters, `}` or similar characters to exploit the vulnerability and create unbounded metrics. This can be detected by monitoring for unusual request patterns and validating request data."}, {"techniqueID": "T1060", "comment": "CVE-2024-28867 - Exploiting the vulnerability to create and manipulate metrics, allowing an attacker to gain unauthorized access and manipulate system state. This can be mitigated by implementing robust input validation and sanitization."}], "technical_analysis": {"Introduction": "Swift Prometheus, a popular monitoring system client, was found to contain a vulnerability (CVE-2024-28867) that allows attackers to manipulate metric names and labels by exploiting un-sanitized input.", "Impact and Scope": "The vulnerability has a CVSS score of 5.9 with a high attack complexity and low user interaction, allowing attackers to exploit it remotely without user involvement. The vulnerability affects metrics and can lead to unbounded numbers of stored metrics, inflated server memory usage, or the creation of bogus metrics.", "Related MITRE ATT&CK Techniques": "The techniques T1190, T1191, and T1060 are related to this vulnerability, as they all involve input validation and sanitization, request pattern monitoring, and exploiting vulnerabilities.", "Technical Details": "The vulnerability occurs when the _un-sanitized string values_ are applied to metric names or labels, allowing an attacker to inject arbitrary characters, including newline characters, `}` or similar characters.", "Detection": "Detection involves monitoring for unusual request patterns, validating request data, and analyzing system logs for signs of exploitation.", "Mitigation": "Mitigation strategies include implementing robust input validation and sanitization, validating user input, and parameter sanitizing.", "Conclusion": "In conclusion, the CVE-2024-28867 vulnerability in Swift Prometheus can be exploited to manipulate metric names and labels, allowing unauthorized access and manipulating system state."}, "executive_analysis": {"Overview": "Swift Prometheus, a trusted monitoring system client, was found to contain a vulnerability (CVE-2024-28867) that can be exploited to manipulate metric names and labels.", "Business Impact": "The vulnerability can lead to system downtime, data loss, or unauthorized access, resulting in significant financial losses and reputational damage.", "Technical Impact": "The vulnerability affects metrics, allowing attackers to create and manipulate them, giving them unauthorized access and the ability to manipulate system state.", "Mitigation Strategies": "Implementing robust input validation and sanitization, validating user input, and parameter sanitizing can help mitigate the vulnerability.", "Recommendations": "Executives should prioritize patching and updating their Swift Prometheus installations and monitor system logs for signs of exploitation.", "Conclusions": "In conclusion, the CVE-2024-28867 vulnerability in Swift Prometheus is a significant threat that requires immediate attention and action to prevent exploitation."}}