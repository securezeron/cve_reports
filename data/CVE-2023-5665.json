{"id": "CVE-2023-5665", "sourceIdentifier": "security@wordfence.com", "published": "2024-02-08T04:15:07.527", "lastModified": "2024-08-12T13:38:12.337", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Payment Forms for Paystack plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's shortcodes in all versions up to, and including, 3.4.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. CVE-2024-32130 is likely a duplicate of this issue."}, {"lang": "es", "value": "El complemento Payment Forms for Paystack para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s de los c\u00f3digos cortos del complemento en todas las versiones hasta la 3.4.1 incluida, debido a una sanitizaci\u00f3n de entrada insuficiente y a un escape de salida en los atributos proporcionados por el usuario. Esto hace posible que atacantes autenticados con permisos de nivel de colaborador y superiores inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@wordfence.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:paystack:payment_forms_for_paystack:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "3.4.1", "matchCriteriaId": "544F608E-F613-47AF-B1EF-B9F83C13F4FE"}]}]}], "references": [{"url": "https://plugins.trac.wordpress.org/browser/payment-forms-for-paystack/tags/3.4.1/public/class-paystack-forms-public-for-old-themes.php#L1013", "source": "security@wordfence.com", "tags": ["Product"]}, {"url": "https://plugins.trac.wordpress.org/browser/payment-forms-for-paystack/tags/3.4.1/public/class-paystack-forms-public-for-old-themes.php#L1054", "source": "security@wordfence.com", "tags": ["Product"]}, {"url": "https://plugins.trac.wordpress.org/browser/payment-forms-for-paystack/tags/3.4.1/public/class-paystack-forms-public-for-old-themes.php#L1128", "source": "security@wordfence.com", "tags": ["Product"]}, {"url": "https://plugins.trac.wordpress.org/browser/payment-forms-for-paystack/tags/3.4.1/public/class-paystack-forms-public-for-old-themes.php#L1164", "source": "security@wordfence.com", "tags": ["Product"]}, {"url": "https://plugins.trac.wordpress.org/browser/payment-forms-for-paystack/tags/3.4.1/public/class-paystack-forms-public-for-old-themes.php#L1194", "source": "security@wordfence.com", "tags": ["Product"]}, {"url": "https://plugins.trac.wordpress.org/browser/payment-forms-for-paystack/tags/3.4.1/public/class-paystack-forms-public-for-old-themes.php#L958", "source": "security@wordfence.com", "tags": ["Product"]}, {"url": "https://plugins.trac.wordpress.org/browser/payment-forms-for-paystack/tags/3.4.1/public/class-paystack-forms-public-for-old-themes.php#L986", "source": "security@wordfence.com", "tags": ["Product"]}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/98f80608-f24f-4019-a757-de71cba9902f?source=cve", "source": "security@wordfence.com", "tags": ["Vendor Advisory"]}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2023-5665 - This vulnerability is similar to other stored XSS attacks, where an attacker injects malicious HTML content into a web application. This technique can be used to perform a wide range of attacks, including theft of sensitive information, unauthorized access, and denial-of-service attacks. Defending against this technique requires proper input validation and sanitization, secure code practices, and regular security testing."}, {"techniqueID": "T1082", "comment": "CVE-2023-5665 - This vulnerability can be exploited by an attacker to inject malicious JavaScript code into the web application, which can then be used to steal sensitive information, bypass security controls, or disrupt the normal functioning of the application. Defending against this technique requires secure code practices, regular security testing, and proper input validation and sanitization."}, {"techniqueID": "T1169", "comment": "CVE-2023-5665 - This vulnerability can be exploited by an attacker to inject malicious HTML content into the web application, which can then be used to perform a wide range of attacks, including theft of sensitive information, unauthorized access, and denial-of-service attacks. Defending against this technique requires proper input validation and sanitization, secure code practices, and regular security testing."}], "stix_bundle": {"type": "bundle", "id": "https://example.com/stix/bundle", "spec_version": "2.1", "created_by_ref": "https://example.com/stix/stix", "modified": "2024-08-12T13:38:12.337", "created": "2024-02-08T04:15:07.527", "attachments": [], "objects": [{"type": "stix_basic_object", "id": "https://example.com/stix/basic_object", "spec_version": "2.1", "name": "Payment Forms for Paystack Plugin Vulnerability", "description": "The Payment Forms for Paystack plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's shortcodes in all versions up to, and including, 3.4.1 due to insufficient input sanitization and output escaping on user-supplied attributes.", "created_by_ref": "https://example.com/stix/stix", "modified": "2024-08-12T13:38:12.337", "created": "2024-02-08T04:15:07.527", "custom_properties": [], "objects_relation": {"attacked_by": "https://example.com/stix/stix_attacker"}}, {"type": "stix_attack_pattern", "id": "https://example.com/stix/attack_pattern", "spec_version": "2.1", "name": "Stored Cross-Site Scripting via Plugin Shortcodes", "description": "An attacker injects malicious HTML content into a web application via the plugin's shortcodes, which can then be executed by users who access the injected page.", "created_by_ref": "https://example.com/stix/stix", "modified": "2024-08-12T13:38:12.337", "created": "2024-02-08T04:15:07.527", "custom_properties": [], "objects_relation": {"used_by": "https://example.com/stix/basic_object"}}, {"type": "stix_course_of_action", "id": "https://example.com/stix/course_of_action", "spec_version": "2.1", "name": "Patch and Update to Latest Version", "description": "Patching and updating the plugin to the latest version will eliminate the vulnerability and prevent exploitation.", "created_by_ref": "https://example.com/stix/stix", "modified": "2024-08-12T13:38:12.337", "created": "2024-02-08T04:15:07.527", "custom_properties": [], "objects_relation": {"mitigates": "https://example.com/stix/basic_object"}}]}, "technical_analysis": {"Introduction": "The Payment Forms for Paystack plugin for WordPress is vulnerable to Stored Cross-Site Scripting due to insufficient input sanitization and output escaping on user-supplied attributes. This vulnerability can be exploited by an attacker to inject malicious HTML content into the web application, which can then be executed by users who access the injected page.", "Impact and Scope": "The vulnerability affects all versions of the Payment Forms for Paystack plugin up to and including 3.4.1, and can be exploited by an attacker to steal sensitive information, bypass security controls, or disrupt the normal functioning of the web application.", "Related MITRE ATT&CK Techniques": "The vulnerability relates to the Stored Cross-Site Scripting technique, which is used by attackers to inject malicious HTML content into a web application.", "Technical Details": "The vulnerability occurs due to the plugin's lack of proper input validation and sanitization, which allows an attacker to inject malicious HTML content into the web application.", "Detection": "Detection of this vulnerability can be performed by running automated security testing tools on the web application, such as Burp Suite or ZAP.", "Mitigation": "Mitigation strategies include patching and updating the plugin to the latest version, performing regular security testing, and implementing input validation and sanitization mechanisms.", "Conclusion": "In conclusion, the Payment Forms for Paystack plugin for WordPress is vulnerable to Stored Cross-Site Scripting due to insufficient input sanitization and output escaping on user-supplied attributes. It is essential to patch and update the plugin to the latest version and perform regular security testing to prevent exploitation."}, "executive_analysis": {"Overview": "The Payment Forms for Paystack plugin for WordPress is vulnerable to Stored Cross-Site Scripting, which can compromise the security of the web application and put sensitive information at risk.", "Business Impact": "The vulnerability can result in the theft of sensitive information, unauthorized access, or denial-of-service attacks, which can have significant business and financial implications.", "Technical Impact": "The vulnerability can be exploited by an attacker to inject malicious HTML content into the web application, which can then be executed by users who access the injected page.", "Mitigation Strategies": "To mitigate this vulnerability, it is essential to patch and update the plugin to the latest version, perform regular security testing, and implement input validation and sanitization mechanisms.", "Recommendations": "We recommend that all users immediately patch and update the plugin to the latest version and perform regular security testing to prevent exploitation.", "Conclusions": "In conclusion, the Payment Forms for Paystack plugin for WordPress is vulnerable to Stored Cross-Site Scripting due to insufficient input sanitization and output escaping on user-supplied attributes. It is essential to take immediate action to patch and update the plugin to the latest version and perform regular security testing to prevent exploitation."}}