{"id": "CVE-2024-45311", "sourceIdentifier": "security-advisories@github.com", "published": "2024-09-02T18:15:37.373", "lastModified": "2024-09-03T12:59:02.453", "vulnStatus": "Undergoing Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Quinn is a pure-Rust, async-compatible implementation of the IETF QUIC transport protocol. As of quinn-proto 0.11, it is possible for a server to `accept()`, `retry()`, `refuse()`, or `ignore()` an `Incoming` connection. However, calling `retry()` on an unvalidated connection exposes the server to a likely panic in the following situations:  1. Calling `refuse` or `ignore` on the resulting validated connection, if a duplicate initial packet is received. This issue can go undetected until a server's `refuse()`/`ignore()` code path is exercised, such as to stop a denial of service attack. 2. Accepting when the initial packet for the resulting validated connection fails to decrypt or exhausts connection IDs, if a similar initial packet that successfully decrypts and doesn't exhaust connection IDs is received. This issue can go undetected if clients are well-behaved. The former situation was observed in a real application, while the latter is only theoretical."}, {"lang": "es", "value": "Quinn es una implementaci\u00f3n compatible con async y puramente Rust del protocolo de transporte IETF QUIC. A partir del protocolo quinn 0.11, es posible que un servidor `accept()`, `retry()`, `refuse()` o `ignore()` una conexi\u00f3n `Incoming`. Sin embargo, llamar a `retry()` en una conexi\u00f3n no validada expone al servidor a un posible p\u00e1nico en las siguientes situaciones: 1. Llamar a `refuse` o `ignore` en la conexi\u00f3n validada resultante, si se recibe un paquete inicial duplicado. Este problema puede pasar desapercibido hasta que se ejerza la ruta de c\u00f3digo `refuse()`/`ignore()` de un servidor, como para detener un ataque de denegaci\u00f3n de servicio. 2. Aceptar cuando el paquete inicial para la conexi\u00f3n validada resultante no logra descifrar o agota los ID de conexi\u00f3n, si se recibe un paquete inicial similar que descifra con \u00e9xito y no agota los ID de conexi\u00f3n. Este problema puede pasar desapercibido si los clientes se comportan bien. La primera situaci\u00f3n se observ\u00f3 en una aplicaci\u00f3n real, mientras que la segunda es s\u00f3lo te\u00f3rica."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-670"}]}], "references": [{"url": "https://github.com/quinn-rs/quinn/blob/bb02a12a8435a7732a1d762783eeacbb7e50418e/quinn-proto/src/endpoint.rs#L213", "source": "security-advisories@github.com"}, {"url": "https://github.com/quinn-rs/quinn/commit/e01609ccd8738bd438d86fa7185a0f85598cb58f", "source": "security-advisories@github.com"}, {"url": "https://github.com/quinn-rs/quinn/security/advisories/GHSA-vr26-jcq5-fjj8", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2024-45311 \u2013 Quinn 0.11 allows for server-side request forgery (SSRF) due to the `accept()`, `retry()`, `refuse()`, or `ignore()` functions on an unvalidated connection. This can be used to create a denial-of-service (DoS) attack or to trick the server into processing a malicious connection."}, {"techniqueID": "T1038", "comment": "CVE-2024-45311 \u2013 Quinn 0.11 allows an attacker to consume server resources by repeatedly calling `retry()` on an unvalidated connection, leading to a denial-of-service (DoS) condition."}, {"techniqueID": "T1005", "comment": "CVE-2024-45311 \u2013 Quinn 0.11 allows an attacker to specify a duplicate initial packet, resulting in a panic on the server, which can be used to create a denial-of-service (DoS) attack."}], "technical_analysis": {"Introduction": "CVE-2024-45311 is a vulnerability in Quinn 0.11 that allows for server-side request forgery (SSRF) and denial-of-service (DoS) attacks.", "Impact and Scope": "CVSS score: 7.5, Attack Vector: NETWORK, Attack Complexity: LOW, Privileges Required: NONE, User Interaction: NONE, Scope: UNCHANGED, Confidentiality Impact: NONE, Integrity Impact: NONE, Availability Impact: HIGH.", "Related MITRE ATT&CK Techniques": "T1059, T1038, T1005", "Technical Details": "Quinn 0.11's `accept()`, `retry()`, `refuse()`, or `ignore()` functions on an unvalidated connection can be used to create a denial-of-service (DoS) attack or to trick the server into processing a malicious connection.", "Detection": "Detecting this vulnerability can be challenging due to its complex nature. However, regular security audits and testing can help identify vulnerable systems.", "Mitigation": "Applying proper input validation and sanitization can help prevent this vulnerability.", "Conclusion": "CVE-2024-45311 is a severe vulnerability that can have significant consequences if exploited. It is essential to address this vulnerability promptly and take necessary mitigations to prevent attacks."}, "executive_analysis": {"Overview": "CVE-2024-45311 is a critical vulnerability in Quinn 0.11 that can be used to create denial-of-service (DoS) attacks and server-side request forgery (SSRF).", "Business Impact": "This vulnerability can result in significant downtime, data loss, or reputational damage to businesses and organizations.", "Technical Impact": "This vulnerability can be exploited to gain unauthorized access to systems, steal sensitive data, or cause system crashes.", "Mitigation Strategies": "Implementing proper input validation and sanitization, thorough security audits, and regular testing are crucial to mitigating the effects of this vulnerability.", "Recommendations": "Apply the latest security patches, review system configurations, and conduct regular security audits and testing to detect and prevent attacks.", "Conclusions": "CVE-2024-45311 is a critical vulnerability that requires immediate attention and action. Organizations must prioritize patching, testing, and auditing to prevent attacks and minimize damage."}}