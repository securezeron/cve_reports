{"id": "CVE-2024-35182", "sourceIdentifier": "security-advisories@github.com", "published": "2024-05-27T19:15:08.890", "lastModified": "2024-05-28T12:39:28.377", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.22 may lead to arbitrary file write by using a SQL injection stacked queries payload, and the ATTACH DATABASE command. Additionally, attackers may be able to access and modify any data stored in the database, like performance profiles (which may contain session cookies), Meshery application data, or any Kubernetes configuration added to the system. The Meshery project exposes the function `GetAllEvents` at the API URL `/api/v2/events`. The sort query parameter read in `events_streamer.go` is directly used to build a SQL query in `events_persister.go`. Version 0.7.22 fixes this issue by using the `SanitizeOrderInput` function."}, {"lang": "es", "value": "Meshery es un administrador nativo de la nube de c\u00f3digo abierto que permite el dise\u00f1o y la administraci\u00f3n de infraestructura y aplicaciones basadas en Kubernetes. Una vulnerabilidad de inyecci\u00f3n SQL en Meshery anterior a la versi\u00f3n 0.7.22 puede provocar la escritura arbitraria de archivos mediante un payload de consultas apiladas de inyecci\u00f3n SQL y el comando ATTACH DATABASE. Adem\u00e1s, los atacantes pueden acceder y modificar cualquier dato almacenado en la base de datos, como perfiles de rendimiento (que pueden contener cookies de sesi\u00f3n), datos de la aplicaci\u00f3n Meshery o cualquier configuraci\u00f3n de Kubernetes agregada al sistema. El proyecto Meshery expone la funci\u00f3n `GetAllEvents` en la URL de API `/api/v2/events`. El par\u00e1metro de consulta de clasificaci\u00f3n le\u00eddo en `events_streamer.go` se usa directamente para crear una consulta SQL en `events_persister.go`. La versi\u00f3n 0.7.22 soluciona este problema mediante el uso de la funci\u00f3n `SanitizeOrderInput`."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.6, "impactScore": 4.2}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-89"}]}], "references": [{"url": "https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/handlers/events_streamer.go#L52", "source": "security-advisories@github.com"}, {"url": "https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/models/events_persister.go#L47", "source": "security-advisories@github.com"}, {"url": "https://github.com/meshery/meshery/commit/b55f6064d0c6a965aee38f30281f99da7dc4420c", "source": "security-advisories@github.com"}, {"url": "https://github.com/meshery/meshery/pull/10280", "source": "security-advisories@github.com"}, {"url": "https://securitylab.github.com/advisories/GHSL-2024-013_GHSL-2024-014_Meshery/", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1059.007 - Command and Scripting Interpreter", "comment": "CVE-2024-35182 - An attacker may use a SQL injection payload to exploit this vulnerability, making this technique relevant to defend against the vulnerability."}, {"techniqueID": "T1022 - Process Injection", "comment": "CVE-2024-35182 - An attacker may inject code into a Meshery process to exploit this vulnerability, making this technique relevant to defend against the vulnerability."}, {"techniqueID": "T1078 - Exploitation of Remote Services", "comment": "CVE-2024-35182 - An attacker may exploit this vulnerability remotely, making this technique relevant to defend against the vulnerability."}, {"techniqueID": "T1497 - Resource Hijacking", "comment": "CVE-2024-35182 - An attacker may hijack a Meshery resource to exploit this vulnerability, making this technique relevant to defend against the vulnerability."}], "stix_bundle": {"type": "bundle", "id": "https://example.com/stix_bundle/CVE-2024-35182", "title": "STIX 2.1 Bundle - CVE-2024-35182", "created_by_ref": "https://example.com/stix/stix_instance", "modified": "2024-06-01T14:30:00.000", "objects": [{"type": "incident", "id": "https://example.com/stix/incident/CVE-2024-35182", "created_by_ref": "https://example.com/stix/stix_instance", "modified": "2024-06-01T14:30:00.000", "status": "new", "description": "CVE-2024-35182: Meshery SQL Injection Vulnerability", "first_seen": "2024-05-27T19:15:08.890", "last_seen": "2024-05-28T12:39:28.377", "created": "2024-06-01T14:30:00.000", "modified_by_ref": "https://example.com/stix/stix_instance", "related_object_ref": [{"type": "vulnerability", "id": "https://example.com/stix/vulnerability/CVE-2024-35182", "relation": "affected_by"}]}, {"type": "vulnerability", "id": "https://example.com/stix/vulnerability/CVE-2024-35182", "created_by_ref": "https://example.com/stix/stix_instance", "modified": "2024-06-01T14:30:00.000", "name": "Meshery SQL Injection Vulnerability", "description": "A SQL injection vulnerability in Meshery prior to version 0.7.22 may lead to arbitrary file write by using a SQL injection stacked queries payload, and the ATTACH DATABASE command.", "CVSSv3": {"vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:N", "baseScore": 5.9}, "references": [{"reference_data_group_ref": "https://example.com/stix/reference_data_group/CVE-2024-35182", "relation": "references"}, {"source_name": "GitHub Security Advs", "source_url": "https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/handlers/events_streamer.go#L52", "relation": "references"}, {"source_name": "GitHub Security Advs", "source_url": "https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/models/events_persister.go#L47", "relation": "references"}]}, {"type": "course_of_action", "id": "https://example.com/stix/course_of_action/CVE-2024-35182", "created_by_ref": "https://example.com/stix/stix_instance", "modified": "2024-06-01T14:30:00.000", "name": "Update Meshery to version 0.7.22 or later", "description": "This course of action mitigates the vulnerability by preventing the exploitation of the SQL injection vulnerability in Meshery prior to version 0.7.22.", "related_object_ref": [{"type": "vulnerability", "id": "https://example.com/stix/vulnerability/CVE-2024-35182", "relation": "mitigated_by"}]}]}, "technical_analysis": {"Introduction": "The CVE-2024-35182 vulnerability is a SQL injection vulnerability in Meshery prior to version 0.7.22.", "Impact and Scope": "The vulnerability has a CVSSv3 score of 5.9 and allows an attacker to perform arbitrary file write and gain access to sensitive data.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to the following MITRE ATT&CK techniques: T1059.007, T1022, T1078, and T1497.", "Technical Details": "The vulnerability occurs when a SQL query is constructed using user-input data without proper sanitization, allowing an attacker to inject arbitrary SQL code.", "Detection": "Detection of the vulnerability is challenging, but it can be done by monitoring database queries and identifying suspicious activity.", "Mitigation": "The vulnerability can be mitigated by updating Meshery to version 0.7.22 or later, which includes a fix for the SQL injection vulnerability.", "Conclusion": "The CVE-2024-35182 vulnerability is a serious vulnerability that can be exploited by an attacker to gain unauthorized access to sensitive data. It is essential to update Meshery to the latest version to mitigate the vulnerability."}, "executive_analysis": {"Overview": "The CVE-2024-35182 vulnerability is a critical vulnerability in Meshery that allows an attacker to perform arbitrary file write and gain access to sensitive data.", "Business Impact": "The vulnerability has a significant business impact, as it can result in data breaches, system compromise, and reputational damage to the organization.", "Technical Impact": "The vulnerability has a significant technical impact, as it can allow an attacker to perform arbitrary file write and gain access to sensitive data.", "Mitigation Strategies": "The vulnerability can be mitigated by updating Meshery to version 0.7.22 or later, which includes a fix for the SQL injection vulnerability.", "Recommendations": "We recommend updating Meshery to the latest version to mitigate the vulnerability.", "Conclusions": "The CVE-2024-35182 vulnerability is a critical vulnerability that requires immediate attention and mitigation to prevent potential data breaches and system compromise."}}