{"id": "CVE-2020-36704", "sourceIdentifier": "security@wordfence.com", "published": "2023-06-07T02:15:11.380", "lastModified": "2023-11-07T03:22:27.773", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Fruitful Theme for WordPress is vulnerable to Stored Cross-Site Scripting via several parameters stored via the fruitful_theme_options_action AJAX action in versions up to, and including, 3.8.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with subscriber-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:fruitfulcode:fruitful_theme:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "3.8.1", "matchCriteriaId": "17A66811-5068-4C74-89F5-52E4F40B736D"}]}]}], "references": [{"url": "https://blog.nintechnet.com/authenticated-stored-xss-vulnerability-in-wordpress-fruitful-theme/", "source": "security@wordfence.com", "tags": ["Exploit"]}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/49cf047f-4e8c-4f37-b8c0-d931c02fda7c?source=cve", "source": "security@wordfence.com", "tags": ["Exploit"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2020-36704 - The Fruitful Theme for WordPress is vulnerable to Stored Cross-Site Scripting via several parameters stored via the fruitful_theme_options_action AJAX action in versions up to, and including, 3.8.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. Defence against this technique involves implementing proper input validation and sanitization and testing for cross-site scripting."}, {"techniqueID": "T1190", "comment": "CVE-2020-36704 - The vulnerability can be exploited by attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This technique involves using web shell to execute arbitrary commands and can be used to steal sensitive data, modify system settings, and gain unauthorized access to the system."}, {"techniqueID": "T1194", "comment": "CVE-2020-36704 - The vulnerability can be exploited by attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This technique involves using web shell to execute arbitrary commands and can be used to steal sensitive data, modify system settings, and gain unauthorized access to the system."}], "stix_bundle": {"id": "CVE-2020-36704", "type": "indicator", "spec_version": "2.1", "created_by_ref": "https://example.com", "modified": "2023-06-07T02:15:11.380", "created": "2023-06-07T02:15:11.380", "name": "CVE-2020-36704", "description": "The Fruitful Theme for WordPress is vulnerable to Stored Cross-Site Scripting via several parameters stored via the fruitful_theme_options_action AJAX action in versions up to, and including, 3.8.1 due to insufficient input sanitization and output escaping.", "firstseen": "2020-10-01T00:00:00", "lastseen": "2023-06-07T02:15:11.380", "types": ["indicator"], "objects": [{"id": "HTTP_Fruitable_Theme_Options", "type": "relationship", "relationship_type": "related", "object_ref": "https://example.com/Fruital_Theme_Options"}, {"id": "Stored_XSS_Fruital_Theme_Options", "type": "relationship", "relationship_type": "related", "object_ref": "https://example.com/Stored_XSS_Fruital_Theme_Options"}], "objects relationships": {"HTTP_Fruital_Theme_Options": {"target_ref": "Stored_XSS_Fruital_Theme_Options", "relationship_data": {"role": "indicator-of-compromise"}}}}, "technical_analysis": {"Introduction": "The Fruitful Theme for WordPress is vulnerable to Stored Cross-Site Scripting via several parameters stored via the fruitful_theme_options_action AJAX action in versions up to, and including, 3.8.1 due to insufficient input sanitization and output escaping.", "Impact and Scope": "The vulnerability can be exploited by attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This can be used to steal sensitive data, modify system settings, and gain unauthorized access to the system.", "Related MITRE ATT&CK Techniques": "T1059, T1190, T1194", "Technical Details": "The vulnerability occurs due to insufficient input sanitization and output escaping in the fruitful_theme_options_action AJAX action. This allows attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.", "Detection": "Detection of this vulnerability involves testing for cross-site scripting and identifying injected web scripts.", "Mitigation": "Mitigation strategies include implementing proper input validation and sanitization, testing for cross-site scripting, and applying the latest patches.", "Conclusion": "The Fruitful Theme for WordPress is vulnerable to Stored Cross-Site Scripting via several parameters stored via the fruitful_theme_options_action AJAX action in versions up to, and including, 3.8.1 due to insufficient input sanitization and output escaping."}, "executive_analysis": {"Overview": "The Fruitful Theme for WordPress is vulnerable to Stored Cross-Site Scripting via several parameters stored via the fruitful_theme_options_action AJAX action in versions up to, and including, 3.8.1 due to insufficient input sanitization and output escaping.", "Business Impact": "This vulnerability can be used to steal sensitive data, modify system settings, and gain unauthorized access to the system.", "Technical Impact": "The vulnerability can be exploited by attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.", "Mitigation Strategies": "Implementing proper input validation and sanitization, testing for cross-site scripting, and applying the latest patches.", "Recommendations": "Recommendations for executives include identifying and patching affected systems, implementing proper input validation and sanitization, and monitoring for suspicious activity.", "Conclusions": "The Fruitful Theme for WordPress is vulnerable to Stored Cross-Site Scripting via several parameters stored via the fruitful_theme_options_action AJAX action in versions up to, and including, 3.8.1 due to insufficient input sanitization and output escaping. It is recommended to implement proper input validation and sanitization, test for cross-site scripting, and apply the latest patches."}}