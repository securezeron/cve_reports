{"id": "CVE-2024-45302", "sourceIdentifier": "security-advisories@github.com", "published": "2024-08-29T22:15:05.377", "lastModified": "2024-08-30T13:00:05.390", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "RestSharp is a Simple REST and HTTP API Client for .NET. The second argument to `RestRequest.AddHeader` (the header value) is vulnerable to CRLF injection. The same applies to `RestRequest.AddOrUpdateHeader` and `RestClient.AddDefaultHeader`. The way HTTP headers are added to a request is via the `HttpHeaders.TryAddWithoutValidation` method which does not check for CRLF characters in the header value. This means that any headers from a `RestSharp.RequestHeaders` object are added to the request in such a way that they are vulnerable to CRLF-injection. In general, CRLF-injection into a HTTP header (when using HTTP/1.1) means that one can inject additional HTTP headers or smuggle whole HTTP requests. If an application using the RestSharp library passes a user-controllable value through to a header, then that application becomes vulnerable to CRLF-injection. This is not necessarily a security issue for a command line application like the one above, but if such code were present in a web application then it becomes vulnerable to request splitting (as shown in the PoC) and thus Server Side Request Forgery. Strictly speaking this is a potential vulnerability in applications using RestSharp, not in RestSharp itself, but I would argue that at the very least there needs to be a warning about this behaviour in the RestSharp documentation. RestSharp has addressed this issue in version 112.0.0. All users are advised to upgrade. There are no known workarounds for this vulnerability."}, {"lang": "es", "value": "RestSharp es un cliente de API HTTP y REST simple para .NET. El segundo argumento de `RestRequest.AddHeader` (el valor del encabezado) es vulnerable a la inyecci\u00f3n CRLF. Lo mismo se aplica a `RestRequest.AddOrUpdateHeader` y `RestClient.AddDefaultHeader`. La forma en que se agregan los encabezados HTTP a una solicitud es a trav\u00e9s del m\u00e9todo `HttpHeaders.TryAddWithoutValidation` que no verifica los caracteres CRLF en el valor del encabezado. Esto significa que cualquier encabezado de un objeto `RestSharp.RequestHeaders` se agrega a la solicitud de tal manera que es vulnerable a la inyecci\u00f3n CRLF. En general, la inyecci\u00f3n CRLF en un encabezado HTTP (cuando se usa HTTP/1.1) significa que uno puede inyectar encabezados HTTP adicionales o contrabandear solicitudes HTTP completas. Si una aplicaci\u00f3n que usa la librer\u00eda RestSharp pasa un valor controlable por el usuario a un encabezado, entonces esa aplicaci\u00f3n se vuelve vulnerable a la inyecci\u00f3n CRLF. Esto no es necesariamente un problema de seguridad para una aplicaci\u00f3n de l\u00ednea de comandos como la anterior, pero si dicho c\u00f3digo estuviera presente en una aplicaci\u00f3n web, se volver\u00eda vulnerable a la divisi\u00f3n de solicitudes (como se muestra en la PoC) y, por lo tanto, a la falsificaci\u00f3n de solicitudes del lado del servidor. Estrictamente hablando, esta es una vulnerabilidad potencial en aplicaciones que usan RestSharp, no en RestSharp en s\u00ed, pero yo dir\u00eda que, como m\u00ednimo, deber\u00eda haber una advertencia sobre este comportamiento en la documentaci\u00f3n de RestSharp. RestSharp ha abordado este problema en la versi\u00f3n 112.0.0. Se recomienda a todos los usuarios que actualicen. No existen workarounds para esta vulnerabilidad."}], "metrics": {"cvssMetricV31": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 4.2}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-93"}]}], "references": [{"url": "https://github.com/restsharp/RestSharp/blob/777bf194ec2d14271e7807cc704e73ec18fcaf7e/src/RestSharp/Request/HttpRequestMessageExtensions.cs#L32", "source": "security-advisories@github.com"}, {"url": "https://github.com/restsharp/RestSharp/commit/0fba5e727d241b1867bd71efc912594075c2934b", "source": "security-advisories@github.com"}, {"url": "https://github.com/restsharp/RestSharp/security/advisories/GHSA-4rr6-2v9v-wcpc", "source": "security-advisories@github.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-45302 - CRLF injection into HTTP headers can lead to request splitting and server-side request forgery. This technique can be used to inject additional HTTP headers or smuggle whole HTTP requests, allowing an attacker to impact the confidentiality, integrity, and availability of the system."}, {"techniqueID": "T1090", "comment": "CVE-2024-45302 - CRLF injection into HTTP headers can lead to request splitting and server-side request forgery. This technique can be used to inject additional HTTP headers or smuggle whole HTTP requests, allowing an attacker to impact the confidentiality, integrity, and availability of the system."}, {"techniqueID": "T1504", "comment": "CVE-2024-45302 - CRLF injection into HTTP headers can lead to request splitting and server-side request forgery. This technique can be used to inject additional HTTP headers or smuggle whole HTTP requests, allowing an attacker to impact the confidentiality, integrity, and availability of the system."}, {"techniqueID": "T1191", "comment": "CVE-2024-45302 - CRLF injection into HTTP headers can lead to request splitting and server-side request forgery. This technique can be used to inject additional HTTP headers or smuggle whole HTTP requests, allowing an attacker to impact the confidentiality, integrity, and availability of the system."}], "technical_analysis": {"Introduction": "CVE-2024-45302 is a CRLF injection vulnerability in the RestSharp library, affecting the way HTTP headers are added to requests. This vulnerability can be exploited to inject additional HTTP headers or smuggle whole HTTP requests, leading to request splitting and server-side request forgery.", "Impact and Scope": "The impact of this vulnerability is medium, with a CVSS score of 6.1. The attack vector is local and the user interaction is required.", "Related MITRE ATT&CK Techniques": "T1190, T1090, T1504, and T1191 are related MITRE ATT&CK techniques that can be used to exploit this vulnerability.", "Technical Details": "The vulnerability occurs in the `RestRequest.AddHeader` and `RestRequest.AddOrUpdateHeader` methods, which do not validate the header values for CRLF characters. This allows an attacker to inject malicious headers or requests.", "Detection": "Detection methods include analyzing HTTP requests for suspicious header values and identifying requests with high levels of CRLF injection.", "Mitigation": "Mitigation strategies include validating header values for CRLF characters, using input validation mechanisms, and blocking requests with high levels of CRLF injection. Upgrading to version 112.0.0 of the RestSharp library also mitigates the vulnerability.", "Conclusion": "CVE-2024-45302 is a significant vulnerability that requires immediate attention. It is essential to patch the affected libraries and implement robust input validation mechanisms to prevent CRLF injection attacks."}, "executive_analysis": {"Overview": "CVE-2024-45302 is a CRLF injection vulnerability in the RestSharp library, affecting the way HTTP headers are added to requests. This vulnerability can be exploited to inject additional HTTP headers or smuggle whole HTTP requests, leading to request splitting and server-side request forgery.", "Business Impact": "The business impact of this vulnerability is medium, with potential loss of confidentiality, integrity, and availability of data. Immediate patching and input validation are recommended.", "Technical Impact": "The technical impact of this vulnerability is high, with potential for data breaches, denial-of-service attacks, and server-side request forgery.", "Mitigation Strategies": "Upgrade to version 112.0.0 of the RestSharp library, validate header values for CRLF characters, and use input validation mechanisms.", "Recommendations": "Recommendations include immediate patching, implementing robust input validation mechanisms, and conducting regular vulnerability assessments.", "Conclusions": "CVE-2024-45302 is a critical vulnerability that requires immediate attention. Executive-level management should prioritize patching and input validation to prevent potential security breaches."}}