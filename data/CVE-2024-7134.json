{"id": "CVE-2024-7134", "sourceIdentifier": "security@wordfence.com", "published": "2024-08-21T06:15:11.200", "lastModified": "2024-08-21T12:30:33.697", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The LiquidPoll \u2013 Polls, Surveys, NPS and Feedback Reviews plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018form_data\u2019 parameter in all versions up to, and including, 3.3.78 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El complemento LiquidPoll \u2013 Polls, Surveys, NPS and Feedback Reviews para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del par\u00e1metro 'form_data' en todas las versiones hasta la 3.3.78 incluida debido a una desinfecci\u00f3n de entrada y un escape de salida insuficientes. Esto hace posible que atacantes no autenticados inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 7.2, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 2.7}]}, "weaknesses": [{"source": "security@wordfence.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "references": [{"url": "https://plugins.trac.wordpress.org/browser/wp-poll/trunk/includes/classes/class-hooks.php#L408", "source": "security@wordfence.com"}, {"url": "https://wordpress.org/plugins/wp-poll/#developers", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/3e62eba7-1ac9-4420-8692-58a169aa4330?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "TA0001: Initial Access", "comment": "CVE-2024-7134 - Unauthenticated attackers can inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page, allowing for an initial access vector. Defend against this by identifying and blocking suspicious HTTP requests and validating user input data."}, {"techniqueID": "T1190: Exploit Public-Facing Application", "comment": "CVE-2024-7134 - The vulnerability allows for arbitrary web script injection, making it possible to exploit the plugin directly through a public-facing application. Defend against this by patching the vulnerable plugin, validating user input data, and monitoring application logs for suspicious activity."}, {"techniqueID": "T1059: Command and Control", "comment": "CVE-2024-7134 - Unauthenticated attackers can inject arbitrary web scripts, which can be used for command and control purposes. Defend against this by monitoring network traffic, identifying and blocking suspicious C2 protocols, and validating user input data."}, {"techniqueID": "T1063: Application Layer Protocol", "comment": "CVE-2024-7134 - The vulnerability allows for arbitrary web script injection, which can be used to manipulate application layer protocols. Defend against this by monitoring network traffic, identifying and blocking suspicious protocol activities, and validating user input data."}], "stix_bundle": {"objects": [{"description": "CVE-2024-7134", "type": "vulnerability", "id": "CVE-2024-7134", "created_by_ref": ".security", "modified": "2024-08-21T12:30:33.697", "object_marking_refs": [{"idRef": "custom:marking_definition-1", "label": "Vulnerability"}]}, {"description": "Stored Cross-Site Scripting", "type": "attack_pattern", "id": "Stored Cross-Site Scripting", "created_by_ref": "security@wordfence.com", "modified": "2024-08-21T06:15:11.200", "object_marking_refs": [{"idRef": "custom:marking_definition-1", "label": "Attack Technique"}]}], "relationship": {"cvss_metric_v31": [{"id": "cvss_metric_v31", "baseScore": 7.2, "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N"}], "weaknesses": [{"id": "CWE-79", "description": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"}]}}, "technical_analysis": {"Introduction": "The LiquidPoll \u2013 Polls, Surveys, NPS and Feedback Reviews plugin for WordPress is vulnerable to Stored Cross-Site Scripting (XSS) attacks due to insufficient input sanitization and output escaping.", "Impact and Scope": "This vulnerability has a CVSS score of 7.2 and affects all versions of the plugin up to, and including, 3.3.78.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to the following MITRE ATT&CK techniques: TA0001: Initial Access, T1190: Exploit Public-Facing Application, T1059: Command and Control, and T1063: Application Layer Protocol.", "Technical Details": "The vulnerability occurs when user input data is not properly sanitized and escaped, allowing attackers to inject arbitrary HTML and JavaScript code into the application.", "Detection": "This vulnerability can be detected by monitoring application logs for suspicious activity and identifying and blocking malicious HTTP requests.", "Mitigation": "The vulnerability can be mitigated by patching the vulnerable plugin, validating user input data, and monitoring application logs for suspicious activity.", "Conclusion": "In conclusion, the LiquidPoll \u2013 Polls, Surveys, NPS and Feedback Reviews plugin for WordPress is vulnerable to Stored Cross-Site Scripting attacks, and it is essential to take proactive measures to mitigate this vulnerability."}, "executive_analysis": {"Overview": "The LiquidPoll \u2013 Polls, Surveys, NPS and Feedback Reviews plugin for WordPress has been found to be vulnerable to Stored Cross-Site Scripting attacks.", "Business Impact": "This vulnerability can have significant business impact by allowing attackers to inject malicious code into the application, potentially leading to data theft, financial loss, and reputational damage.", "Technical Impact": "The vulnerability can be exploited by attackers to inject arbitrary HTML and JavaScript code into the application, allowing for command and control, data exfiltration, and other malicious activities.", "Mitigation Strategies": "To mitigate this vulnerability, it is recommended that the vulnerable plugin be patched, user input data be validated, and application logs be monitored for suspicious activity.", "Recommendations": "Executives are recommended to prioritize the remediation of this vulnerability, develop incident response procedures to address potential attacks, and invest in security testing and monitoring to detect and prevent similar vulnerabilities.", "Conclusions": "In conclusion, the vulnerability poses a significant risk to the organization's security, and immediate action is required to mitigate this threat."}}