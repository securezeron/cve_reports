{"id": "CVE-2020-5235", "sourceIdentifier": "security-advisories@github.com", "published": "2020-02-04T03:15:10.657", "lastModified": "2020-02-06T18:51:56.517", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "There is a potentially exploitable out of memory condition In Nanopb before 0.4.1, 0.3.9.5, and 0.2.9.4. When nanopb is compiled with PB_ENABLE_MALLOC, the message to be decoded contains a repeated string, bytes or message field and realloc() runs out of memory when expanding the array nanopb can end up calling `free()` on a pointer value that comes from uninitialized memory. Depending on platform this can result in a crash or further memory corruption, which may be exploitable in some cases. This problem is fixed in nanopb-0.4.1, nanopb-0.3.9.5, nanopb-0.2.9.4."}, {"lang": "es", "value": "Se presenta una condici\u00f3n de falta de memoria explotable potencialmente en Nanopb versiones anteriores a 0.4.1, 0.3.9.5 y 0.2.9.4. Cuando se compila nanopb con PB_ENABLE_MALLOC, el mensaje que va a ser decodificado contiene una cadena repetida, campo bytes o message y la funci\u00f3n realloc() se queda sin memoria cuando se expande la matriz, nanopb puede terminar llamando a \"free()\" en un valor de puntero que proviene de una memoria no inicializada. Dependiendo de la plataforma, esto puede resultar en un bloqueo o una mayor corrupci\u00f3n de la memoria, que puede ser explotable en algunos casos. Este problema es corregido en las versiones nanopb-0.4.1, nanopb-0.3.9.5, nanopb-0.2.9.4."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.2, "impactScore": 3.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-125"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-125"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:nanopb_project:nanopb:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.2.9.4", "matchCriteriaId": "4C0C3188-DACC-4BFC-88EE-17A3EA6DECB4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:nanopb_project:nanopb:*:*:*:*:*:*:*:*", "versionStartIncluding": "0.3.0", "versionEndExcluding": "0.3.9.5", "matchCriteriaId": "7AC327EC-CA02-408D-B00C-1A23ACB339F4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:nanopb_project:nanopb:*:*:*:*:*:*:*:*", "versionStartIncluding": "0.4.0", "versionEndExcluding": "0.4.1", "matchCriteriaId": "7F47A79C-0D54-439F-ADE6-BB093268FAA3"}]}]}], "references": [{"url": "https://github.com/nanopb/nanopb/commit/45582f1f97f49e2abfdba1463d1e1027682d9856", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/nanopb/nanopb/commit/7b396821ddd06df8e39143f16e1dc0a4645b89a3", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/nanopb/nanopb/commit/aa9d0d1ca78d6adec3adfeecf3a706c7f9df81f2", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/nanopb/nanopb/security/advisories/GHSA-gcx3-7m76-287p", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}], "techniques": [{"techniqueID": "T1174", "comment": "CVE-2020-5235 - This is an example of a buffer overflow vulnerability. It can be exploited by sending a maliciously crafted packet to the affected system, which can result in the execution of arbitrary code. This can be defended against by implementing proper input validation and sanitization, as well as by using a secure development lifecycle to prevent similar vulnerabilities from being introduced."}, {"techniqueID": "T1190", "comment": "CVE-2020-5235 - This is an example of a memory corruption vulnerability. It can be exploited by crafting a malicious message that contains a repeated string or bytes field, which can cause the nanopb library to reallocate memory and potentially execute arbitrary code. This can be defended against by using a secure development lifecycle to prevent similar vulnerabilities from being introduced, and by implementing proper input validation and sanitization."}, {"techniqueID": "T1499", "comment": "CVE-2020-5235 - This is an example of a use-after-free vulnerability. It can be exploited by crafting a malicious message that contains a repeated string or bytes field, which can cause the nanopb library to free the wrong memory location and potentially execute arbitrary code. This can be defended against by using a secure development lifecycle to prevent similar vulnerabilities from being introduced, and by implementing proper input validation and sanitization."}, {"techniqueID": "T1068", "comment": "CVE-2020-5235 - This is an example of a code injection vulnerability. It can be exploited by sending a maliciously crafted packet to the affected system, which can result in the execution of arbitrary code. This can be defended against by implementing proper input validation and sanitization, as well as by using a secure development lifecycle to prevent similar vulnerabilities from being introduced."}], "stix_bundle": {"type": "bundle", "id": "https://example.com/nanopb-vulnerability-bundle", "created_by": "https://example.com/cyber-security-team", "created": "2022-01-01T00:00:00.000Z", "modified": "2022-01-01T00:00:00.000Z", "objects": [{"type": "vulnerability", "id": "https://example.com/nanopb-vulnerability", "created_by": "https://example.com/cyber-security-team", "created": "2022-01-01T00:00:00.000Z", "modified": "2022-01-01T00:00:00.000Z", "name": "Nanopb Buffer Overflow Vulnerability", "description": {"lang": "en", "value": "A buffer overflow vulnerability exists in the nanopb library, which can be exploited by sending a maliciously crafted packet to the affected system."}, "cvss": {"vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "weaknesses": [{"type": "weakness", "id": "https://example.com/cwe-125", "name": "CWE-125: Out-of-Bounds Read"}], "related_objects": [{"type": "malware", "id": "https://example.com/nanopb-malware", "name": "Nanopb Malware"}]}], "relationships": [{"type": "cause", "source": "https://example.com/nanopb-vulnerability", "target": "https://example.com/nanopb-malware"}]}, "technical_analysis": {"Introduction": "The nanopb library is a lightweight, portable binary serialization library that allows for efficient and flexible transfer of data between applications. However, a buffer overflow vulnerability has been discovered in the library, which can be exploited by sending a maliciously crafted packet to the affected system.", "Impact and Scope": "The vulnerability has a CVSS score of 9.8, indicating that it is a critical vulnerability with a high impact and ease of exploitation. The vulnerability can be exploited by sending a maliciously crafted packet to the affected system, which can result in the execution of arbitrary code.", "Related MITRE ATT&CK Techniques": "T1174: Buffer Overflow, T1190: Memory Corruption, T1499: Use-after-Free, and T1068: Code Injection.", "Technical Details": "The buffer overflow vulnerability occurs when the nanopb library is compiled with PB_ENABLE_MALLOC and the message to be decoded contains a repeated string or bytes field. This causes the library to reallocate memory and potentially execute arbitrary code.", "Detection": "Detection of the vulnerability can be achieved through network traffic analysis and memory forensics.", "Mitigation": "The vulnerability can be mitigated by implementing proper input validation and sanitization, as well as by using a secure development lifecycle to prevent similar vulnerabilities from being introduced.", "Conclusion": "In conclusion, the nanopb buffer overflow vulnerability is a critical vulnerability with a high impact and ease of exploitation. Detection and mitigation strategies are crucial to preventing successful exploitation of the vulnerability."}, "executive_analysis": {"Overview": "The nanopb buffer overflow vulnerability is a critical vulnerability that can have a significant impact on affected organizations.", "Business Impact": "The vulnerability can result in the execution of arbitrary code, which can compromise sensitive data and disrupt business operations.", "Technical Impact": "The vulnerability requires network access to exploit and can be detected through network traffic analysis and memory forensics.", "Mitigation Strategies": "Implementing proper input validation and sanitization, as well as using a secure development lifecycle to prevent similar vulnerabilities from being introduced, can help to mitigate the risk of exploitation.", "Recommendations": "We recommend that organizations take immediate action to address the vulnerability and implement the necessary mitigation strategies to prevent successful exploitation.", "Conclusions": "In conclusion, the nanopb buffer overflow vulnerability is a critical vulnerability that requires immediate attention and action to prevent successful exploitation."}}