{"id": "CVE-2024-43301", "sourceIdentifier": "audit@patchstack.com", "published": "2024-08-26T21:15:27.707", "lastModified": "2024-08-27T13:01:52.723", "vulnStatus": "Undergoing Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "Cross-Site Request Forgery (CSRF) vulnerability in Fonts Plugin Fonts allows Stored XSS.This issue affects Fonts: from n/a through 3.7.7."}, {"lang": "es", "value": "La vulnerabilidad de Cross-Site Request Forgery (CSRF) en Fonts Plugin Fonts permite XSS Almacenado. Este problema afecta a Fonts: desde n/a hasta 3.7.7."}], "metrics": {"cvssMetricV31": [{"source": "audit@patchstack.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 7.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 3.7}]}, "weaknesses": [{"source": "audit@patchstack.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "references": [{"url": "https://patchstack.com/database/vulnerability/olympus-google-fonts/wordpress-fonts-plugin-3-7-7-cross-site-request-forgery-csrf-to-stored-xssvulnerability?_s_id=cve", "source": "audit@patchstack.com"}], "techniques": [{"techniqueID": "T1130", "comment": "CVE-2024-43301 - A Stored Cross-Site Request Forgery (CSRF) vulnerability allows an attacker to inject malicious JavaScript code, which can be used to steal sensitive information. Defend against it by validating user input, using tamper-evident tokens, and implementing strict Content Security Policy."}, {"techniqueID": "T1190", "comment": "CVE-2024-43301 - A Stored Cross-Site Request Forgery (CSRF) vulnerability allows an attacker to inject malicious JavaScript code, which can be used to steal sensitive information. Defend against it by restricting access to sensitive resources, monitoring User-Agent headers, and using rate limiting."}, {"techniqueID": "T1194", "comment": "CVE-2024-43301 - A Stored Cross-Site Request Forgery (CSRF) vulnerability allows an attacker to inject malicious JavaScript code, which can be used to steal sensitive information. Defend against it by using Content Security Policy (CSP) directives, validating user input, and implementing strict Same-Origin Policy."}], "technical_analysis": {"Introduction": "CVE-2024-43301 is a Stored Cross-Site Request Forgery (CSRF) vulnerability in Fonts Plugin Fonts, affecting versions 3.7.7 and below. This vulnerability allows an attacker to inject malicious JavaScript code, which can be used to steal sensitive information.", "Impact and Scope": "The vulnerability allows an attacker to inject malicious JavaScript code, which can be used to steal sensitive information. The attack vector is NETWORK and the attack complexity is LOW.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques are T1130, T1190, and T1194.", "Technical Details": "The vulnerability occurs when the system fails to properly sanitize user input, allowing attackers to inject malicious JavaScript code. This can be achieved by sending a crafted request to the vulnerable HTTP endpoint.", "Detection": "The vulnerability can be detected by monitoring HTTP traffic for suspicious requests and responses. Additionally, using plugins like Burp Suite can help identify and exploit the vulnerability.", "Mitigation": "The vulnerability can be mitigated by validating user input, using tamper-evident tokens, and implementing strict Content Security Policy. Additionally, restricting access to sensitive resources and monitoring User-Agent headers can help prevent the exploitation.", "Conclusion": "The CVE-2024-43301 vulnerability is a critical risk and requires immediate attention. It is essential to implement the recommended mitigation strategies to prevent the exploitation of this vulnerability."}, "executive_analysis": {"Overview": "The CVE-2024-43301 vulnerability is a critical risk that allows an attacker to inject malicious JavaScript code, which can be used to steal sensitive information.", "Business Impact": "The exploitation of this vulnerability can lead to financial loss, reputational damage, and loss of sensitive information.", "Technical Impact": "The vulnerability allows an attacker to inject malicious JavaScript code, which can be used to steal sensitive information. This can result in data breaches and unauthorized access to sensitive data.", "Mitigation Strategies": "Implementing the recommended mitigation strategies, including validating user input, using tamper-evident tokens, and implementing strict Content Security Policy, can help prevent the exploitation of this vulnerability.", "Recommendations": "Executives should prioritize the mitigation of this vulnerability and ensure that the recommended strategies are implemented as soon as possible.", "Conclusions": "Immediate action is required to mitigate the CVE-2024-43301 vulnerability. It is essential to prioritize this vulnerability and ensure that all recommended mitigation strategies are implemented to prevent the exploitation."}}