{"id": "CVE-2024-26895", "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67", "published": "2024-04-17T11:15:10.677", "lastModified": "2024-06-25T23:15:27.080", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: wilc1000: prevent use-after-free on vif when cleaning up all interfaces\n\nwilc_netdev_cleanup currently triggers a KASAN warning, which can be\nobserved on interface registration error path, or simply by\nremoving the module/unbinding device from driver:\n\necho spi0.1 > /sys/bus/spi/drivers/wilc1000_spi/unbind\n\n==================================================================\nBUG: KASAN: slab-use-after-free in wilc_netdev_cleanup+0x508/0x5cc\nRead of size 4 at addr c54d1ce8 by task sh/86\n\nCPU: 0 PID: 86 Comm: sh Not tainted 6.8.0-rc1+ #117\nHardware name: Atmel SAMA5\n unwind_backtrace from show_stack+0x18/0x1c\n show_stack from dump_stack_lvl+0x34/0x58\n dump_stack_lvl from print_report+0x154/0x500\n print_report from kasan_report+0xac/0xd8\n kasan_report from wilc_netdev_cleanup+0x508/0x5cc\n wilc_netdev_cleanup from wilc_bus_remove+0xc8/0xec\n wilc_bus_remove from spi_remove+0x8c/0xac\n spi_remove from device_release_driver_internal+0x434/0x5f8\n device_release_driver_internal from unbind_store+0xbc/0x108\n unbind_store from kernfs_fop_write_iter+0x398/0x584\n kernfs_fop_write_iter from vfs_write+0x728/0xf88\n vfs_write from ksys_write+0x110/0x1e4\n ksys_write from ret_fast_syscall+0x0/0x1c\n\n[...]\n\nAllocated by task 1:\n kasan_save_track+0x30/0x5c\n __kasan_kmalloc+0x8c/0x94\n __kmalloc_node+0x1cc/0x3e4\n kvmalloc_node+0x48/0x180\n alloc_netdev_mqs+0x68/0x11dc\n alloc_etherdev_mqs+0x28/0x34\n wilc_netdev_ifc_init+0x34/0x8ec\n wilc_cfg80211_init+0x690/0x910\n wilc_bus_probe+0xe0/0x4a0\n spi_probe+0x158/0x1b0\n really_probe+0x270/0xdf4\n __driver_probe_device+0x1dc/0x580\n driver_probe_device+0x60/0x140\n __driver_attach+0x228/0x5d4\n bus_for_each_dev+0x13c/0x1a8\n bus_add_driver+0x2a0/0x608\n driver_register+0x24c/0x578\n do_one_initcall+0x180/0x310\n kernel_init_freeable+0x424/0x484\n kernel_init+0x20/0x148\n ret_from_fork+0x14/0x28\n\nFreed by task 86:\n kasan_save_track+0x30/0x5c\n kasan_save_free_info+0x38/0x58\n __kasan_slab_free+0xe4/0x140\n kfree+0xb0/0x238\n device_release+0xc0/0x2a8\n kobject_put+0x1d4/0x46c\n netdev_run_todo+0x8fc/0x11d0\n wilc_netdev_cleanup+0x1e4/0x5cc\n wilc_bus_remove+0xc8/0xec\n spi_remove+0x8c/0xac\n device_release_driver_internal+0x434/0x5f8\n unbind_store+0xbc/0x108\n kernfs_fop_write_iter+0x398/0x584\n vfs_write+0x728/0xf88\n ksys_write+0x110/0x1e4\n ret_fast_syscall+0x0/0x1c\n [...]\n\nDavid Mosberger-Tan initial investigation [1] showed that this\nuse-after-free is due to netdevice unregistration during vif list\ntraversal. When unregistering a net device, since the needs_free_netdev has\nbeen set to true during registration, the netdevice object is also freed,\nand as a consequence, the corresponding vif object too, since it is\nattached to it as private netdevice data. The next occurrence of the loop\nthen tries to access freed vif pointer to the list to move forward in the\nlist.\n\nFix this use-after-free thanks to two mechanisms:\n- navigate in the list with list_for_each_entry_safe, which allows to\n  safely modify the list as we go through each element. For each element,\n  remove it from the list with list_del_rcu\n- make sure to wait for RCU grace period end after each vif removal to make\n  sure it is safe to free the corresponding vif too (through\n  unregister_netdev)\n\nSince we are in a RCU \"modifier\" path (not a \"reader\" path), and because\nsuch path is expected not to be concurrent to any other modifier (we are\nusing the vif_mutex lock), we do not need to use RCU list API, that's why\nwe can benefit from list_for_each_entry_safe.\n\n[1] https://lore.kernel.org/linux-wireless/ab077dbe58b1ea5de0a3b2ca21f275a07af967d2.camel@egauge.net/"}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: wifi: wilc1000: evita el use-after-free en vif al limpiar todas las interfaces wilc_netdev_cleanup activa actualmente una advertencia KASAN, que se puede observar en la ruta del error de registro de la interfaz, o simplemente eliminando el m\u00f3dulo/dispositivo de desvinculaci\u00f3n del controlador: echo spi0.1 &gt; /sys/bus/spi/drivers/wilc1000_spi/unbind ========================== ========================================= ERROR: KASAN: uso de losa despu\u00e9s -free en wilc_netdev_cleanup+0x508/0x5cc Lectura de tama\u00f1o 4 en addr c54d1ce8 por tarea sh/86 CPU: 0 PID: 86 Comm: sh Not tainted 6.8.0-rc1+ #117 Nombre de hardware: Atmel SAMA5 unwind_backtrace from show_stack+0x18/0x1c show_stack de dump_stack_lvl+0x34/0x58 dump_stack_lvl de print_report+0x154/0x500 print_report de kasan_report+0xac/0xd8 kasan_report de wilc_netdev_cleanup+0x508/0x5cc wilc_netdev_cleanup de wilc_bus_remove+0xc8/0xec wilc_bus_remove de spi_remove+0x8c/0xac spi_remove de dispositivo_release_driver_internal+0x434/0x5f8 dispositivo_release_driver_internal de unbind_store+0xbc/0x108 unbind_store de kernfs_fop_write_iter+0x398/0x584 kernfs_fop_write_iter de vfs_write+0x728/0xf88 vfs_write de ksys_write+0x110/0x1e4 ksys_write de ret_fast_syscall+0x0/0 x1c [...] Asignado por la tarea 1: kasan_save_track+0x30/0x5c __kasan_kmalloc +0x8c/0x94 __kmalloc_node+0x1cc/0x3e4 kvmalloc_node+0x48/0x180 alloc_netdev_mqs+0x68/0x11dc alloc_etherdev_mqs+0x28/0x34 wilc_netdev_ifc_init+0x34/0x8ec wilc_cfg80211 _init+0x690/0x910 wilc_bus_probe+0xe0/0x4a0 spi_probe+0x158/0x1b0 Actually_probe+0x270/0xdf4 __driver_probe_device +0x1dc/0x580 driver_probe_device+0x60/0x140 __driver_attach+0x228/0x5d4 bus_for_each_dev+0x13c/0x1a8 bus_add_driver+0x2a0/0x608 driver_register+0x24c/0x578 do_one_initcall+0x180/0x310 kernel _init_freeable+0x424/0x484 kernel_init+0x20/0x148 ret_from_fork+0x14/0x28 Liberado por tarea 86: kasan_save_track+0x30/0x5c kasan_save_free_info+0x38/0x58 __kasan_slab_free+0xe4/0x140 kfree+0xb0/0x238 device_release+0xc0/0x2a8 kobject_put+0x1d4/0x46c netdev_run_todo+0x8fc/0x11 d0 wilc_netdev_cleanup+0x1e4/0x5cc wilc_bus_remove+0xc8/0xec spi_remove +0x8c/0xac dispositivo_release_driver_internal+0x434/0x5f8 unbind_store+0xbc/0x108 kernfs_fop_write_iter+0x398/0x584 vfs_write+0x728/0xf88 ksys_write+0x110/0x1e4 ret_fast_syscall+0x0/0x1c [...] La investigaci\u00f3n inicial de David Mosberger-Tan [1] mostr\u00f3 que Este use-after-free se debe a la cancelaci\u00f3n del registro del dispositivo de red durante el recorrido de la lista vif. Al cancelar el registro de un dispositivo de red, dado que need_free_netdev se configur\u00f3 en verdadero durante el registro, el objeto netdevice tambi\u00e9n se libera y, como consecuencia, tambi\u00e9n el objeto vif correspondiente, ya que est\u00e1 adjunto a \u00e9l como datos privados del dispositivo de red. La siguiente aparici\u00f3n del bucle intenta acceder al puntero vif liberado a la lista para avanzar en la lista. Solucionar este use-after-free gracias a dos mecanismos: - navegar en la lista con list_for_each_entry_safe, que permite modificar de forma segura la lista a medida que avanzamos por cada elemento. Para cada elemento, elim\u00ednelo de la lista con list_del_rcu; aseg\u00farese de esperar a que finalice el per\u00edodo de gracia de RCU despu\u00e9s de cada eliminaci\u00f3n de vif para asegurarse de que tambi\u00e9n sea seguro liberar el vif correspondiente (a trav\u00e9s de unregister_netdev). Ya que estamos en un \"modificador\" de RCU. ruta (no una ruta de \"lector\"), y debido a que se espera que dicha ruta no sea concurrente con ning\u00fan otro modificador (estamos usando el bloqueo vif_mutex), no necesitamos usar la API de lista RCU, es por eso que podemos beneficiarnos de list_for_each_entry_safe . [1] https://lore.kernel.org/linux-wireless/ab077dbe58b1ea5de0a3b2ca21f275a07af967d2.camel@egauge.net/"}], "metrics": {}, "references": [{"url": "https://git.kernel.org/stable/c/24228dcf1d30c2231caa332be7d3090ac59fbfe9", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/3da9d32b7f4a1a9f7e4bb15bb82f2b2dd6719447", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/5956f4203b6cdd0755bbdd21b45f3933c7026208", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/73a2aa0aef86c2c07be5a2f42c9e6047e1a2f7bb", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/a9545af2a533739ffb64d6c9a6fec6f13e2b505f", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/cb5942b77c05d54310a0420cac12935e9b6aa21c", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://git.kernel.org/stable/c/fe20e3d56bc911408fc3c27a17c59e9d7885f7d1", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, {"url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}], "techniques": [{"techniqueID": "TA0002: Initial Access", "comment": "The CVE-2024-26895 vulnerability can be used as an initial access point for attackers to gain access to the system. The attacker can exploit this vulnerability to execute arbitrary code and can use this as a foothold to further compromise the system."}, {"techniqueID": "TA0003: Execution", "comment": "The CVE-2024-26895 vulnerability can be used to execute arbitrary code on the system. The attacker can use this vulnerability to execute a payload and escalate privileges to further compromise the system."}, {"techniqueID": "TA0025: Lateral Movement", "comment": "The CVE-2024-26895 vulnerability can be used to move laterally within the system by exploiting other vulnerabilities in the system. The attacker can use this vulnerability to move between systems and network segments."}, {"techniqueID": "TA0005: Command and Control", "comment": "The CVE-2024-26895 vulnerability can be used to establish command and control communication with the attacker's system. The attacker can use this vulnerability to send and receive data, and to receive commands from the attacker's system."}, {"techniqueID": "TA0068: Defense Evasion", "comment": "The CVE-2024-26895 vulnerability can be used to evade detection by deleting system logs and disabling security software. The attacker can use this vulnerability to remove evidence of their activities and prevent detection."}, {"techniqueID": "TA0071: Command and Control: Remote File Copy", "comment": "The CVE-2024-26895 vulnerability can be used to remotely copy files to and from the system. The attacker can use this vulnerability to exfiltrate data or to download malware onto the system."}], "stix_bundle": {"type": "bundle", "id": "bundle-2024-26895", "created_by_ref": "http://example.com/stix/bundle-creator", "created": "2024-06-25T23:15:27.080", "modified": "2024-06-25T23:15:27.080", "objects": [{"type": "vulnerability", "id": "vulnerability-2024-26895", "created_by_ref": "http://example.com/stix/bundle-creator", "created": "2024-06-25T23:15:27.080", "modified": "2024-06-25T23:15:27.080", "name": "CVE-2024-26895: Kernel WiFi Driver Use-After-Free", "description": "A vulnerability in the Linux kernel WiFi driver that allows an attacker to execute arbitrary code.", "cvss_score": "8.8", "cvss_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C"}, {"type": "indicator", "id": "indicator-2024-26895-1", "created_by_ref": "http://example.com/stix/bundle-creator", "created": "2024-06-25T23:15:27.080", "modified": "2024-06-25T23:15:27.080", "name": "Indicator for CVE-2024-26895", "description": "An indicator for detecting the CVE-2024-26895 vulnerability.", "pattern": "https://example.com/cve-2024-26895-pattern"}, {"type": "course_of_action", "id": "course_of_action-2024-26895-1", "created_by_ref": "http://example.com/stix/bundle-creator", "created": "2024-06-25T23:15:27.080", "modified": "2024-06-25T23:15:27.080", "name": "Mitigate CVE-2024-26895", "description": "Apply patches to the Linux kernel WiFi driver to mitigate the CVE-2024-26895 vulnerability."}], "relationships": [{"type": "related_to", "id": "related_to-2024-26895-1", "from": "vulnerability-2024-26895", "to": "indicator-2024-26895-1"}, {"type": "mitigates", "id": "mitigates-2024-26895-2", "from": "course_of_action-2024-26895-1", "to": "vulnerability-2024-26895"}]}, "technical_analysis": {"Introduction": "The CVE-2024-26895 vulnerability is a use-after-free vulnerability in the Linux kernel WiFi driver that allows an attacker to execute arbitrary code.", "Impact and Scope": "The CVE-2024-26895 vulnerability affects all systems running the Linux kernel with the WiFi driver installed. The vulnerability can be used to execute arbitrary code and can allow an attacker to escalate privileges to further compromise the system.", "Related MITRE ATT&CK Techniques": "The CVE-2024-26895 vulnerability can be used to execute the TA0002: Initial Access, TA0003: Execution, TA0025: Lateral Movement, and TA0005: Command and Control techniques.", "Technical Details": "The vulnerability is caused by a use-after-free error in the Linux kernel WiFi driver's firmware loading code. The error allows an attacker to execute arbitrary code by using the use-after-free vulnerability to execute the firmware loading code.", "Detection": "The CVE-2024-26895 vulnerability can be detected by looking for network traffic patterns that match the indicators of compromise. Additionally, system firmware can be checked for signs of compromise and suspicious code can be searched for.", "Mitigation": "Apply patches to the Linux kernel WiFi driver to mitigate the CVE-2024-26895 vulnerability.", "Conclusion": "The CVE-2024-26895 vulnerability is a high-severity vulnerability that allows an attacker to execute arbitrary code and can allow an attacker to escalate privileges to further compromise the system. The vulnerability can be detected by using indicators of compromise and can be mitigated by applying patches to the Linux kernel WiFi driver."}, "executive_analysis": {"Overview": "The CVE-2024-26895 vulnerability is a high-severity vulnerability in the Linux kernel WiFi driver that allows an attacker to execute arbitrary code.", "Business Impact": "The CVE-2024-26895 vulnerability can have a significant business impact by compromising sensitive data and allowing an attacker to escalate privileges to further compromise the system.", "Technical Impact": "The CVE-2024-26895 vulnerability can have a significant technical impact by allowing an attacker to execute arbitrary code and by allowing an attacker to escalate privileges to further compromise the system.", "Mitigation Strategies": "Apply patches to the Linux kernel WiFi driver to mitigate the CVE-2024-26895 vulnerability.", "Recommendations": "Recommend that the company apply patches to the Linux kernel WiFi driver as soon as possible to mitigate the CVE-2024-26895 vulnerability.", "Conclusions": "The CVE-2024-26895 vulnerability is a high-severity vulnerability that allows an attacker to execute arbitrary code and can allow an attacker to escalate privileges to further compromise the system. It is recommended that the company take immediate action to apply patches to the Linux kernel WiFi driver to mitigate the vulnerability."}}