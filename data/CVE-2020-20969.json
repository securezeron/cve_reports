{"id": "CVE-2020-20969", "sourceIdentifier": "cve@mitre.org", "published": "2023-06-20T15:15:10.900", "lastModified": "2023-06-27T18:10:46.037", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "File Upload vulnerability in PluckCMS v.4.7.10 allows a remote attacker to execute arbitrary code via the trashcan_restoreitem.php file."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.2, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.2, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-434"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:pluck-cms:pluck:4.7.10:-:*:*:*:*:*:*", "matchCriteriaId": "00EE308A-BD13-4E84-BB56-D890CB35E07A"}]}]}], "references": [{"url": "https://github.com/pluck-cms/pluck/issues/86", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Patch"]}], "techniques": [{"techniqueID": "TA0001", "comment": "This technique is relevant because it addresses the exploitation of a remote code execution vulnerability. PluckCMS v.4.7.10 allows an attacker to execute arbitrary code via the trashcan_restoreitem.php file."}, {"techniqueID": "TA0003", "comment": "This technique is relevant because it addresses the threat of a file upload vulnerability that allows an attacker to upload and execute code. The attacker can use this technique to execute code remotely."}, {"techniqueID": "T1027", "comment": "This technique is relevant because it addresses the use of file manipulation as part of a code execution vulnerability. The attacker can use this technique to manipulate the PHP file to execute malicious code."}, {"techniqueID": "T1078", "comment": "This technique is relevant because it addresses the use of code injection as part of a code execution vulnerability. The attacker can use this technique to inject malicious code into the PHP file."}, {"techniqueID": "T1190", "comment": "This technique is relevant because it addresses the use of abuse of function/feature as part of a code execution vulnerability. The attacker can use this technique to exploit the file upload functionality to execute malicious code."}], "stix_bundle": {"objects": [{"identity": {"id": "cve-2020-20969", "type": "indicator"}, " specification": {"product": "PluckCMS", "version": "4.7.10", "plugin": "trashcan_restoreitem.php"}}, {"identity": {"id": "TA0001", "type": "attack-pattern"}, " specification": {"name": "Initial Access", "description": "Initial Access techniques involve the actions taken to gain access to a victim's system"}}, {"identity": {"id": "T1027", "type": "attack-pattern"}, " specification": {"name": "File or Directory Discovery", "description": "File or Directory Discovery techniques involve the actions taken to identify file or directory paths on a system"}}, {"identity": {"id": "T1078", "type": "attack-pattern"}, " specification": {"name": "Code Injection", "description": "Code Injection techniques involve the actions taken to inject malicious code into a system"}}, {"identity": {"id": "T1190", "type": "attack-pattern"}, " specification": {"name": "Exploit Public-Facing Application", "description": "Exploit Public-Facing Application techniques involve the actions taken to exploit vulnerabilities in public-facing applications"}}, {"identity": {"id": "pluck-cms/pluck", "type": "software"}, " specification": {"name": "PluckCMS", "version": "4.7.10", "description": "PluckCMS is a web application"}}], " relationships": [{"source_ref": "cve-2020-20969", "target_ref": "TA0001", "label": "uses"}, {"source_ref": "cve-2020-20969", "target_ref": "T1027", "label": "uses"}, {"source_ref": "cve-2020-20969", "target_ref": "T1078", "label": "uses"}, {"source_ref": "cve-2020-20969", "target_ref": "T1190", "label": "uses"}, {"source_ref": "cve-2020-20969", "target_ref": "pluck-cms/pluck", "label": "affected_by"}]}, "technical_analysis": {"Introduction": "This section discusses the technical details of the CVE-2020-20969 vulnerability.", "Impact and Scope": "The vulnerability affects PluckCMS v.4.7.10 and allows an attacker to execute arbitrary code via the trashcan_restoreitem.php file.", "Related MITRE ATT&CK Techniques": "The related MITRE ATT&CK techniques are TA0001, T1027, T1078, and T1190.", "Technical Details": "The vulnerability occurs due to the misuse of the file upload functionality.", "Detection": "Detection methods include monitoring for suspicious file uploads and analyzing system logs for evidence of exploitation.", "Mitigation": "Mitigation strategies include applying patches, blocking the file upload functionality, and monitoring for suspicious activity.", "Conclusion": "In conclusion, the CVE-2020-20969 vulnerability is a critical security issue that requires immediate attention and remediation."}, "executive_analysis": {"Overview": "This section provides an executive-level analysis of the CVE-2020-20969 vulnerability.", "Business Impact": "The vulnerability poses a significant business risk due to the potential for remote code execution.", "Technical Impact": "The technical impact is the potential for unauthorized access and data breaches.", "Mitigation Strategies": "The recommended mitigation strategies are prompt patching, blocking the file upload functionality, and monitoring for suspicious activity.", "Recommendations": "Recommendations include conducting a thorough security assessment, implementing enhanced monitoring and logging, and providing employee training on security best practices.", "Conclusions": "In conclusion, the CVE-2020-20969 vulnerability is a critical security issue that requires immediate attention and remediation."}}