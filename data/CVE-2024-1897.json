{"id": "CVE-2024-1897", "sourceIdentifier": "security@wordfence.com", "published": "2024-05-02T17:15:14.350", "lastModified": "2024-05-02T18:00:37.360", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The Grid Gallery \u2013 Photo Image Grid Gallery plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 1.4.3 via deserialization via shortcode of untrusted input from the awl_gg_settings_ meta value. This makes it possible for authenticated attackers, with contributor access and above, to inject a PHP Object. No POP chain is present in the vulnerable plugin. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code."}, {"lang": "es", "value": "El complemento Grid Gallery \u2013 Photo Image Grid Gallery para WordPress es vulnerable a la inyecci\u00f3n de objetos PHP en todas las versiones hasta la 1.4.3 incluida a trav\u00e9s de la deserializaci\u00f3n a trav\u00e9s de un c\u00f3digo corto de entrada no confiable del metavalor awl_gg_settings_. Esto hace posible que atacantes autenticados, con acceso de colaborador y superior, inyecten un objeto PHP. No hay ninguna cadena POP presente en el complemento vulnerable. Si hay una cadena POP presente a trav\u00e9s de un complemento o tema adicional instalado en el sistema de destino, podr\u00eda permitir al atacante eliminar archivos arbitrarios, recuperar datos confidenciales o ejecutar c\u00f3digo."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.6, "impactScore": 5.9}]}, "references": [{"url": "https://plugins.trac.wordpress.org/browser/new-grid-gallery/tags/1.4.0/grid-gallery-shortcode.php", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/39f5777b-38b0-4fc6-909d-61eaa1de6173?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2024-1897 - This technique is relevant as it involves PHP Object Injection, which is used by attackers to inject PHP objects into an application. Defending against this technique can be done by validating user input and sanitizing output."}, {"techniqueID": "T1204", "comment": "CVE-2024-1897 - This technique is relevant as it involves Deserialization of Untrusted Data, which is used by attackers to inject malicious code into an application. Defending against this technique can be done by validating user input and sanitizing output."}, {"techniqueID": "T1196", "comment": "CVE-2024-1897 - This technique is relevant as it involves PHP File Inclusion Vulnerability, which is used by attackers to include malicious files into an application. Defending against this technique can be done by validating user input and sanitizing output."}, {"techniqueID": "T1222", "comment": "CVE-2024-1897 - This technique is relevant as it involves User Execution, which is used by attackers to execute malicious code on an application. Defending against this technique can be done by implementing strong access controls and limiting user privileges."}], "technical_analysis": {"Introduction": "The Grid Gallery \u2013 Photo Image Grid Gallery plugin for WordPress is vulnerable to PHP Object Injection, Deserialization of Untrusted Data, and PHP File Inclusion Vulnerability. This vulnerability allows authenticated attackers to inject PHP objects, execute code, retrieve sensitive data, or delete files.", "Impact and Scope": "The vulnerability has a CVSS 3.1 score of 7.5, with a high severity rating. The attack vector is network-based, and it allows low-privileged users to access and exploit the vulnerability.", "Related MITRE ATT&CK Techniques": "T1190, T1204, T1196, and T1222.", "Technical Details": "The vulnerability is due to the plugin's lack of proper input validation and sanitization. Specifically, the awl_gg_settings_ meta value is prone to deserialization, allowing attackers to inject PHP objects. This vulnerability can be exploited by authenticated users with contributor access and above.", "Detection": "Detection can be done by monitoring the plugin's logs for suspicious activity and implementing intrusion detection systems (IDS) and intrusion prevention systems (IPS).", "Mitigation": "Mitigation strategies include updating the plugin to the latest version, implementing proper input validation and sanitization, and restricting user privileges.", "Conclusion": "In conclusion, this vulnerability highlights the importance of proper input validation and sanitization in web applications. It is crucial for developers to take necessary measures to prevent similar vulnerabilities from occurring in the future."}, "executive_analysis": {"Overview": "The Grid Gallery \u2013 Photo Image Grid Gallery plugin for WordPress is vulnerable to PHP Object Injection, Deserialization of Untrusted Data, and PHP File Inclusion Vulnerability.", "Business Impact": "The vulnerability allows attackers to inject PHP objects, execute code, retrieve sensitive data, or delete files, which can lead to significant financial loss and damage to reputation.", "Technical Impact": "The vulnerability compromises the security of the WordPress plugin, allowing attackers to access and exploit it.", "Mitigation Strategies": "Update the plugin to the latest version, implement proper input validation and sanitization, and restrict user privileges.", "Recommendations": "Developers should prioritize security and take necessary measures to prevent similar vulnerabilities from occurring in the future. Administrators should update the plugin immediately and implement necessary security measures.", "Conclusions": "In conclusion, this vulnerability highlights the importance of prioritizing security in web application development and maintenance. Developers and administrators should take necessary measures to prevent similar vulnerabilities from occurring in the future."}}