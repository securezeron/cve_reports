{"id": "CVE-2015-2213", "sourceIdentifier": "cve@mitre.org", "published": "2015-11-09T11:59:00.117", "lastModified": "2017-11-04T01:29:02.897", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "SQL injection vulnerability in the wp_untrash_post_comments function in wp-includes/post.php in WordPress before 4.2.4 allows remote attackers to execute arbitrary SQL commands via a comment that is mishandled after retrieval from the trash."}, {"lang": "es", "value": "Vulnerabilidad de inyecci\u00f3n SQL en la funci\u00f3n wp_untrash_post_comments en wp-includes/post.php en WordPress en versiones anteriores a 4.2.4 permite a atacantes remotos ejecutar comandos SQL arbitrarios a trav\u00e9s de un comentario que no es manejado correctamente despu\u00e9s de haber sido recuperado de la papelera de reciclaje."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*", "versionEndIncluding": "4.2.3", "matchCriteriaId": "74E4DDE0-15BF-45A1-92A3-38EEAB8CF5D9"}]}]}], "references": [{"url": "http://openwall.com/lists/oss-security/2015/08/04/7", "source": "cve@mitre.org"}, {"url": "http://www.debian.org/security/2015/dsa-3332", "source": "cve@mitre.org"}, {"url": "http://www.debian.org/security/2015/dsa-3383", "source": "cve@mitre.org"}, {"url": "http://www.securityfocus.com/bid/76160", "source": "cve@mitre.org"}, {"url": "http://www.securitytracker.com/id/1033178", "source": "cve@mitre.org"}, {"url": "https://codex.wordpress.org/Version_4.2.4", "source": "cve@mitre.org", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://core.trac.wordpress.org/changeset/33555", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://core.trac.wordpress.org/changeset/33556", "source": "cve@mitre.org"}, {"url": "https://wordpress.org/news/2015/08/wordpress-4-2-4-security-and-maintenance-release/", "source": "cve@mitre.org", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://wpvulndb.com/vulnerabilities/8126", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2015-2213 - A SQL injection vulnerability allows attackers to inject malicious SQL code, potentially leading to unauthorized data access or alteration. Defense against this vulnerability involves implementing robust SQL injection protection mechanisms, such as input validation and sanitization."}, {"techniqueID": "T1068", "comment": "CVE-2015-2213 - The vulnerability can be exploited by an attacker to inject malicious SQL code, which can lead to the execution of unauthorized commands. Defense against this involves implementing network segmentation and limiting access to the vulnerable system."}, {"techniqueID": "T1084", "comment": "CVE-2015-2213 - The vulnerability can be used by an attacker to inject malicious SQL code, potentially leading to data exfiltration or command execution. Defense against this involves implementing intrusion detection systems and monitoring network traffic for suspicious activity."}], "stix_bundle": {"objects": [{"type": "intrusion-set", "id": "intrusion-set--CVE-2015-2213", "created_by_ref": "impl--NVD", "description": "SQL injection vulnerability in WordPress prior to version 4.2.4", "attributed_traffic_flow": {"to_refs": [{"id": "traffic-flow--SQL-Injection", "type": "traffic-flow"}]}, "vulnerable_system": [{"id": "system--WordPress", "type": "system"}]}, {"type": "intrusion-set", "id": "intrusion-set--WordPress-SQL-Injection", "created_by_ref": "impl--NVD", "description": "SQL injection vulnerability in WordPress", "attributed_traffic_flow": {"from_refs": [{"id": "traffic-flow--WordPress", "type": "traffic-flow"}]}}], "stix_objects": [{"type": "indicator", "id": "indicator--CVE-2015-2213", "created_by_ref": "impl--NVD", "description": "Indication of compromise: Unusual SQL injection traffic", "first_seen": "2015-11-09T11:59:00.117", "last_seen": "2017-11-04T01:29:02.897", "definition": "indicator:def:d41d8cd98f00b204e9800998ecf8427e", "value": "indicator:value:Unusual SQL injection traffic"}], "taxonomy": {"vulnerability": "CVE-2015-2213", "mitre_techniques": ["T1059", "T1068", "T1084"]}}, "technical_analysis": {"Introduction": "The vulnerability is a SQL injection flaw in WordPress prior to version 4.2.4.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5, with a high severity rating. Attackers can exploit the vulnerability to inject malicious SQL code.", "Related MITRE ATT&CK Techniques": "The vulnerability is related to T1059, T1068, and T1084.", "Technical Details": "The vulnerability occurs when user-supplied input is not properly sanitized, allowing attackers to inject malicious SQL code. The vulnerability can be exploited to execute arbitrary SQL commands.", "Detection": "Detection involves monitoring network traffic for unusual SQL injection traffic.", "Mitigation": "Mitigation involves upgrading to a patched version of WordPress and implementing robust SQL injection protection mechanisms.", "Conclusion": "The vulnerability poses a significant risk to WordPress systems prior to version 4.2.4."}, "executive_analysis": {"Overview": "The vulnerability is a critical SQL injection flaw in WordPress prior to version 4.2.4.", "Business Impact": "The vulnerability poses a significant risk to business operations, as it can be exploited to inject malicious SQL code.", "Technical Impact": "The vulnerability can lead to unauthorized data access or alteration, potentially causing significant technical impact.", "Mitigation Strategies": "Upgrading to a patched version of WordPress and implementing robust SQL injection protection mechanisms are recommended."}}