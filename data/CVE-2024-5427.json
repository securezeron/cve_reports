{"id": "CVE-2024-5427", "sourceIdentifier": "security@wordfence.com", "published": "2024-05-31T07:15:10.797", "lastModified": "2024-05-31T13:01:46.727", "vulnStatus": "Awaiting Analysis", "cveTags": [], "descriptions": [{"lang": "en", "value": "The WPCafe \u2013 Online Food Ordering, Restaurant Menu, Delivery, and Reservations for WooCommerce plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Reservation Form shortcode in all versions up to, and including, 2.2.24 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}, {"lang": "es", "value": "El complemento WPCafe \u2013 Online Food Ordering, Restaurant Menu, Delivery, and Reservations for WooCommerce para WordPress es vulnerable a Cross-Site Scripting Almacenado a trav\u00e9s del c\u00f3digo abreviado del formulario de reserva del complemento en todas las versiones hasta la 2.2.24 incluida debido a una sanitizaci\u00f3n de entrada insuficiente y la salida se escapa en los atributos proporcionados por el usuario. Esto hace posible que atacantes autenticados, con acceso de nivel de colaborador y superior, inyecten scripts web arbitrarios en p\u00e1ginas que se ejecutar\u00e1n cada vez que un usuario acceda a una p\u00e1gina inyectada."}], "metrics": {"cvssMetricV31": [{"source": "security@wordfence.com", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.1, "impactScore": 2.7}]}, "references": [{"url": "https://plugins.trac.wordpress.org/browser/wp-cafe/trunk/core/shortcodes/views/reservation/reservation-form-template.php#L22", "source": "security@wordfence.com"}, {"url": "https://plugins.trac.wordpress.org/changeset/3095135/#file8", "source": "security@wordfence.com"}, {"url": "https://wordpress.org/plugins/wp-cafe/#description", "source": "security@wordfence.com"}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/336e2429-97ab-4948-9d21-f0121216d2d1?source=cve", "source": "security@wordfence.com"}], "techniques": [{"techniqueID": "T1059.018", "comment": "CVE-2024-5427 - Cross-Site Scripting (XSS) vulnerability allows authenticated attackers to inject arbitrary web scripts. This technique identifies the vulnerability as a potential exploitation point."}, {"techniqueID": "T1048", "comment": "CVE-2024-5427 - The stored XSS vulnerability allows attackers to inject malicious scripts, which can be exploited to perform various actions, such as session hijacking or data theft. This technique identifies the vulnerability as a potential code injection point."}, {"techniqueID": "T1190", "comment": "CVE-2024-5427 - The stored XSS vulnerability allows attackers to inject malicious scripts, which can be exploited to perform various actions, such as session hijacking or data theft. This technique identifies the vulnerability as a potential exploitation of web application vulnerabilities."}], "stix_bundle": {"type": "bundle", "spec_version": "2.1", "id": "https://example.com/cve-2024-5427", "objects": [{"id": "https://example.com/cve-2024-5427", "type": "indicator", "name": "CVE-2024-5427 Stored XSS Vulnerability", "description": "Stored Cross-Site Scripting (XSS) vulnerability in WPCafe \u2013 Online Food Ordering, Restaurant Menu, Delivery, and Reservations for WooCommerce plugin for WordPress.", "first seen": "2024-05-31T07:15:10.797", "last seen": "2024-05-31T13:01:46.727", "title": "CVE-2024-5427"}, {"id": "https://example.com/t1048", "type": "intrusion-set", "name": "Stored XSS Exploit", "description": "Exploitation of stored XSS vulnerability to inject malicious scripts", "relation": "exploits", "target_ref": "https://example.com/cve-2024-5427"}, {"id": "https://example.com/t1190", "type": "intrusion-set", "name": "Web Application Exploitation", "description": "Exploitation of web application vulnerabilities to perform various actions", "relation": "exploits", "target_ref": "https://example.com/cve-2024-5427"}, {"id": "https://example.com/defEND-1", "type": "course-of-action", "name": "Defend against Stored XSS", "description": "Implement input validation and secure output encoding to prevent stored XSS attacks", "relation": "mitigates", "technique_refs": ["https://example.com/t1048", "https://example.com/t1190"]}]}, "technical_analysis": {"Introduction": "The CVE-2024-5427 is a storage-based Cross-Site Scripting (XSS) vulnerability in the WPCafe \u2013 Online Food Ordering, Restaurant Menu, Delivery, and Reservations for WooCommerce plugin for WordPress.", "Impact and Scope": "The vulnerability allows authenticated attackers to inject arbitrary web scripts, which can be exploited to perform various actions, such as session hijacking or data theft.", "Related MITRE ATT&CK Techniques": "This vulnerability is related to the following MITRE ATT&CK techniques: T1059.018, T1048, and T1190.", "Technical Details": "The vulnerability is due to insufficient input sanitization and output escape on user-supplied attributes in the plugin's Reservation Form shortcode.", "Detection": "Detecting this vulnerability requires analyzing plugin custom code and identifying potential injection points.", "Mitigation": "Implement input validation and secure output encoding to prevent stored XSS attacks.", "Conclusion": "In conclusion, the CVE-2024-5427 is a significant vulnerability that requires immediate attention and mitigation."}, "executive_analysis": {"Overview": "The CVE-2024-5427 is a critical vulnerability in the WPCafe \u2013 Online Food Ordering, Restaurant Menu, Delivery, and Reservations for WooCommerce plugin for WordPress.", "Business Impact": "The vulnerability can lead to data theft, session hijacking, and unauthorized access to sensitive information.", "Technical Impact": "The vulnerability is a significant security risk and requires immediate attention and mitigation.", "Mitigation Strategies": "Implement input validation and secure output encoding to prevent stored XSS attacks.", "Recommendations": "Recommendations for executives include prioritizing the mitigation of this vulnerability and implementing additional security measures.", "Conclusions": "In conclusion, the CVE-2024-5427 is a critical vulnerability that requires immediate attention and mitigation to ensure the security of sensitive information."}}