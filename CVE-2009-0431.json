{"id": "CVE-2009-0431", "sourceIdentifier": "cve@mitre.org", "published": "2009-02-05T00:30:00.547", "lastModified": "2009-02-05T05:00:00.000", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "SQL injection vulnerability in Default.asp in LinksPro Standard Edition allows remote attackers to execute arbitrary SQL commands via the OrderDirection parameter."}, {"lang": "es", "value": "Vulnerabilidad de inyecci\u00f3n SQL en Default.asp en LinksPro Standard Edition, permite a atacantes remotos ejecutar comandos SQL de su elecci\u00f3n a trav\u00e9s del par\u00e1metro \"OrderDirection\"."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:codefixer:linkspro:_nil_:_nil_:standard:*:*:*:*:*", "matchCriteriaId": "FB5DB7F7-B9BF-48D2-AEDE-62FF22255F60"}]}]}], "references": [{"url": "http://packetstormsecurity.org/0901-exploits/linkspro-sql.txt", "source": "cve@mitre.org", "tags": ["Exploit"]}, {"url": "http://www.securityfocus.com/bid/33305", "source": "cve@mitre.org", "tags": ["Exploit"]}], "techniques": [{"techniqueID": "TA0010", "comment": "CVE-2009-0431 - SQL Injection vulnerability. This technique allows attackers to inject malicious SQL code to modify or extract data from the application's database. Defending against this involves input validation and sanitization, proper use of parameterized queries, and secure configuration of the database."}, {"techniqueID": "TA0011", "comment": "CVE-2009-0431 - SQL Injection vulnerability. This technique allows attackers to inject malicious SQL code to modify or extract data from the application's database. Defending against this involves input validation and sanitization, proper use of parameterized queries, and secure configuration of the database."}, {"techniqueID": "TA0062", "comment": "CVE-2009-0431 - SQL Injection vulnerability. This technique allows attackers to inject malicious SQL code to modify or extract data from the application's database. Defending against this involves input validation and sanitization, proper use of parameterized queries, and secure configuration of the database."}, {"techniqueID": "TA0080", "comment": "CVE-2009-0431 - SQL Injection vulnerability. This technique allows attackers to inject malicious SQL code to modify or extract data from the application's database. Defending against this involves input validation and sanitization, proper use of parameterized queries, and secure configuration of the database."}], "stix_bundle": {"objects": [{"type": "vulnerability", "id": "CVE-2009-0431", "description": [{"lang": "en", "value": "SQL injection vulnerability in Default.asp in LinksPro Standard Edition allows remote attackers to execute arbitrary SQL commands via the OrderDirection parameter."}], "properties": {"cve_data_model": {"CVE_data_meta": {"ID": "CVE-2009-0431", "ASSIGNER": "cve@mitre.org", "USER_Click": "2009-02-05T00:30:00.547", "LAST_MODIFIED": "2009-02-05T05:00:00.000", "VULN_STATUS": "Analyzed"}, "CVE_data_NumberOfCves": "1", "CVE_data_Version": "2.0", "CVE_data_DatePublished": "2009-02-05T00:30:00.547", "CVE_data_LastModifiedDate": "2009-02-05T05:00:00.000"}}, "reported_by": [{"type": "person", "id": "cve@mitre.org", "properties": {"name": "Mitre CVE"}}]}, {"type": "attack-pattern", "id": "T1019", "name": "SQL Injection", "description": [{"lang": "en", "value": "SQL injection is an attack where an attacker is able to inject and execute arbitrary SQL commands, allowing them to access and manipulate data, and potentially take control of the database."}]}, {"type": "intrusion-set", "id": "IS0014", "name": "Hacktivist Group", "description": [{"lang": "en", "value": "Hacktivist Group is a group of attackers that targets organizations in various sectors, using a variety of tactics, techniques, and procedures to exfiltrate data and disrupt operations."}]}, {"type": "course-of-action", "id": "COA101", "name": "Input Validation and Sanitization", "description": [{"lang": "en", "value": "Input validation and sanitization is a course of action that involves validating and sanitizing user-input data to prevent SQL injection attacks."}]}, {"type": "course-of-action", "id": "COA102", "name": "Parameterized Queries", "description": [{"lang": "en", "value": "Parameterized queries is a course of action that involves using parameterized queries to prevent SQL injection attacks."}]}], "relationship": [{"type": "related_to", "id": "1", "source": "CVE-2009-0431", "target": "T1019"}, {"type": "related_to", "id": "2", "source": "T1019", "target": "IS0014"}, {"type": "related_to", "id": "3", "source": "IS0014", "target": "COA101"}, {"type": "related_to", "id": "4", "source": "IS0014", "target": "COA102"}]}, "technical_analysis": {"Introduction": "SQL injection is a common web application vulnerability that occurs when an application does not properly validate and sanitize user input data.", "Impact and Scope": "SQL injection allows attackers to execute arbitrary SQL commands, which can lead to unauthorized access and modification of data.", "Related MITRE ATT&CK Techniques": "TA0010, TA0011, TA0062, TA0080", "Technical Details": "SQL injection occurs when an attacker is able to inject malicious SQL code into an application's database.", "Detection": "Detection methods include examining application logs for suspicious SQL activity and monitoring for unusual database queries.", "Mitigation": "Mitigation strategies involve input validation and sanitization, parameterized queries, and secure configuration of the database.", "Conclusion": "SQL injection is a significant threat to web applications and requires proper mitigation techniques to prevent unauthorized access and data manipulation."}, "executive_analysis": {"Overview": "SQL injection is a common web application vulnerability that can lead to significant data breaches and financial losses.", "Business Impact": "SQL injection can impact an organization's reputation, customer trust, and financial performance.", "Technical Impact": "SQL injection allows attackers to execute arbitrary SQL commands, leading to unauthorized access and modification of data.", "Mitigation Strategies": "Input validation and sanitization, parameterized queries, and secure configuration of the database are effective mitigation strategies.", "Recommendations": "Recommendations include conducting regular vulnerability assessments, implementing input validation and sanitization, and prioritizing secure database configuration.", "Conclusions": "SQL injection is a significant threat to web applications and requires executive-level attention and mitigation strategies to prevent unauthorized access and data manipulation."}}