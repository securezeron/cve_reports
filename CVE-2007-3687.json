{"id": "CVE-2007-3687", "sourceIdentifier": "cve@mitre.org", "published": "2007-07-11T17:30:00.000", "lastModified": "2017-09-29T01:29:05.437", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "SQL injection vulnerability in inferno.php in the Inferno Technologies RPG Inferno 2.4 and earlier, a vBulletin module, allows remote authenticated attackers to execute arbitrary SQL commands via the id parameter in a ScanMember do action."}, {"lang": "es", "value": "Una vulnerabilidad de inyecci\u00f3n SQL en el archivo inferno.php en el Inferno Technologies RPG Inferno versi\u00f3n 2.4 y anteriores, un m\u00f3dulo vBulletin, permite a atacantes autenticados remotos ejecutar comandos SQL arbitrarios por medio del par\u00e1metro id en una acci\u00f3n ScanMember do."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:infernotechnologies:rpg_inferno:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.4", "matchCriteriaId": "241D1E19-A5F1-4F4B-90D3-484BC2552FA3"}]}]}], "references": [{"url": "http://infernotechnologies.net/", "source": "cve@mitre.org"}, {"url": "http://osvdb.org/35965", "source": "cve@mitre.org", "tags": ["Exploit"]}, {"url": "http://secunia.com/advisories/25986", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "http://www.securityfocus.com/bid/24839", "source": "cve@mitre.org", "tags": ["Exploit"]}, {"url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/35319", "source": "cve@mitre.org"}, {"url": "https://www.exploit-db.com/exploits/4166", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059.001", "comment": "SQL Injection - Validating user input, limiting database access, and using prepared statements can prevent this attack."}, {"techniqueID": "T1040.002", "comment": "Web Application Discovery - Identifying vulnerabilities in web applications, such as SQL injection, is crucial to prevent attacks like this."}, {"techniqueID": "T1204.001", "comment": "Injection - Validating user input, limiting database access, and using prepared statements can prevent this attack."}], "stix_bundle": {"type": "bundle", "spec_version": "2.1", "id": "https://example.com/cve-2007-3687", "created_by_ref": "https://example.com/analyst", "created": "2023-02-20T14:30:00.000Z", "modified": "2023-02-20T14:30:00.000Z", "objects": [{"type": "vulnerability", "id": "https://example.com/cve-2007-3687", "generated_alerts": [{"type": "alert", "id": "https://example.com/alert-1"}]}, {"type": "attack-pattern", "id": "https://example.com/t1059.001", "name": "SQL Injection"}, {"type": "attack-pattern", "id": "https://example.com/t1040.002", "name": "Web Application Discovery"}, {"type": "attack-pattern", "id": "https://example.com/t1204.001", "name": "Injection"}, {"type": "indicator", "id": "https://example.com/indicator-1", "name": "Inferno Technologies RPG Inferno 2.4", "pattern": "Pattern for identifying the affected application"}, {"type": "course-of-action", "id": "https://example.com/coa-1", "name": "Validate User Input", "description": "Validate user input to prevent SQL injection attacks"}, {"type": "course-of-action", "id": "https://example.com/coa-2", "name": "Use Prepared Statements", "description": "Use prepared statements to prevent SQL injection attacks"}], " relations": [{"type": "associated-with", "from": "https://example.com/cve-2007-3687", "to": "https://example.com/t1059.001"}, {"type": "associated-with", "from": "https://example.com/cve-2007-3687", "to": "https://example.com/t1040.002"}, {"type": "associated-with", "from": "https://example.com/cve-2007-3687", "to": "https://example.com/t1204.001"}, {"type": "precedes", "from": "https://example.com/coa-1", "to": "https://example.com/coa-2"}]}, "technical_analysis": {"Introduction": "The CGI script in Inferno Technologies RPG Inferno 2.4 is vulnerable to SQL injection attacks due to insufficient input validation.", "Impact and Scope": "The vulnerability allows remote authenticated attackers to execute arbitrary SQL commands, which can be used to extract sensitive data, perform unauthorized actions, or disrupt the application.", "Related MITRE ATT&CK Techniques": "T1059.001, T1040.002, T1204.001", "Technical Details": "The CGI script uses user-input data without proper validation, allowing attackers to inject malicious SQL queries.", "Detection": "Detecting this vulnerability requires monitoring for suspicious database queries and identifying unusual database activity.", "Mitigation": "Implementing input validation, using prepared statements, and limiting database access can prevent this attack.", "Conclusion": "Effective mitigation of this vulnerability requires a combination of technical controls and defensive tactics."}, "executive_analysis": {"Overview": "The Inferno Technologies RPG Inferno 2.4 vulnerability allows remote authenticated attackers to execute arbitrary SQL commands, which poses a significant risk to the organization.", "Business Impact": "The vulnerability can lead to data breaches, unauthorized actions, or disruption of critical applications, resulting in financial losses and damage to reputation.", "Technical Impact": "The vulnerability exposes sensitive data, compromising the confidentiality, integrity, and availability of the affected application.", "Mitigation Strategies": "Implement defensive tactics, such as input validation, prepared statements, and access control, to prevent SQL injection attacks.", "Recommendations": "Implement a vulnerability management program, conduct regular security audits, and provide training for developers to ensure secure coding practices.", "Conclusions": "The vulnerability can be effectively mitigated with a combination of technical controls and defensive tactics, requiring a proactive and collaborative approach."}}