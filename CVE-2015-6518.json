{"id": "CVE-2015-6518", "sourceIdentifier": "cve@mitre.org", "published": "2015-08-18T18:00:24.037", "lastModified": "2019-03-12T17:21:31.343", "vulnStatus": "Analyzed", "cveTags": [], "descriptions": [{"lang": "en", "value": "Multiple cross-site scripting (XSS) vulnerabilities in phpLiteAdmin 1.1 allow remote attackers to inject arbitrary web script or HTML via the (1) PATH_INFO, (2) droptable parameter, or (3) table parameter to phpliteadmin.php."}, {"lang": "es", "value": "M\u00faltiples vulnerabilidades de XSS en phpLiteAdmin 1.1, permite a atacantes remotos inyectar secuencias de comandos web o HTML arbitrarios a trav\u00e9s de (1) PATH_INFO, (2) el par\u00e1metro droptable o (3) el par\u00e1metro table a phpliteadmin.php."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpliteadmin:phpliteadmin:1.1:*:*:*:*:*:*:*", "matchCriteriaId": "DED86CF7-D2E9-4638-8F22-8C7F8D4A7B8F"}]}]}], "references": [{"url": "http://packetstormsecurity.com/files/132580/phpLiteAdmin-1.1-Cross-Site-Request-Forgery-Cross-Site-Scripting.html", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}, {"url": "http://www.securityfocus.com/archive/1/535936/100/0/threaded", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2015-6518 is potentially exploited via T1059 to perform Cross-Site Scripting (XSS) attacks, which can lead to data theft, session hijacking, and unauthorized actions on a website. To defend against this, implement input validation and sanitization, use a Content Security Policy (CSP), and keep software up-to-date."}, {"techniqueID": "T1190", "comment": "The vulnerability can also be exploited using T1190 to steal sensitive information or perform unauthorized actions on a website. Detection involves monitoring for suspicious traffic and identifying malicious scripts. Mitigation involves implementing strict input validation and sanitization, and using a web application firewall (WAF) to block malicious traffic."}], "stix_bundle": "Begin STIX Bundle\nBundle:\n  type: report\n  id: CVE-2015-6518-Bundle\n  created_by_ref: https://github.com/StixProject/SplunkAddOn\n  published: 2020-01-01T00:00:00.000Z\n\nObject:\n  type: vulnerability\n  id: CVE-2015-6518\n  created_by_ref: https://github.com/StixProject/SplunkAddOn\n  published: 2015-08-18T18:00:24.037Z\n  modified: 2019-03-12T17:21:31.343Z\n\nAttribute:\n  type: description\n  value: Multiple cross-site scripting (XSS) vulnerabilities in phpLiteAdmin 1.1 allow remote attackers to inject arbitrary web script or HTML via the (1) PATH_INFO, (2) droptable parameter, or (3) table parameter to phpliteadmin.php.\n  language: en\n\nAttribute:\n  type: description\n  value: M\u00faltiples vulnerabilidades de XSS en phpLiteAdmin 1.1, permite a atacantes remotos inyectar secuencias de comandos web o HTML arbitrarios a trav\u00e9s de (1) PATH_INFO, (2) el par\u00e1metro droptable o (3) el par\u00e1metro table a phpliteadmin.php.\n  language: es\n\nAttribute:\n  type: cvss\n  version: 2.0\n  vector_string: AV:N/AC:M/Au:N/C:N/I:P/A:N\n  base_severity: MEDIUM\n  exploitability_score: 8.6\n  impact_score: 2.9\n\nNote:\n  type: detection\n  description: Monitor for suspicious traffic and identify malicious scripts.\n\nNote:\n  type: detection\n  description: Implement strict input validation and sanitization, and use a web application firewall (WAF) to block malicious traffic.\n\nRelationship:\n  type: related\n  id_ref: T1059\n\nRelationship:\n  type: related\n  id_ref: T1190\n\nEnd STIX Bundle", "technical_analysis": {"Introduction": "Cross-Site Scripting (XSS) vulnerabilities in phpLiteAdmin 1.1 allow remote attackers to inject arbitrary web script or HTML. This vulnerability can be exploited to steal sensitive information or perform unauthorized actions on a website.", "Impact and Scope": "The vulnerability has a CVSS score of 4.3, with a medium severity rating and a potential impact on confidentiality, integrity, and availability. The vector string is AV:N/AC:M/Au:N/C:N/I:P/A:N, indicating a network-based attack with medium complexity and no authentication required.", "Related MITRE ATT&CK Techniques": "T1059: Command and Control-Other, T1190: Exploit Public-Facing Application", "Technical Details": "The vulnerability exists in the PATH_INFO, droptable, and table parameters of phpliteadmin.php in phpLiteAdmin 1.1. An attacker can inject arbitrary web script or HTML via these parameters to perform XSS attacks.", "Detection": "Detection involves monitoring for suspicious traffic and identifying malicious scripts.", "Mitigation": "Mitigation involves implementing strict input validation and sanitization, and using a web application firewall (WAF) to block malicious traffic.", "Conclusion": "In conclusion, the CVE-2015-6518 vulnerability is a significant threat to web applications and should be addressed promptly."}, "executive_analysis": {"Overview": "The CVE-2015-6518 vulnerability is a critical flaw in phpLiteAdmin 1.1 that allows remote attackers to steal sensitive information or perform unauthorized actions on a website.", "Business Impact": "The vulnerability has the potential to impact business continuity, compromise sensitive information, and damage reputation.", "Technical Impact": "The vulnerability allows attackers to inject arbitrary web script or HTML, which can lead to data theft, session hijacking, and unauthorized actions on a website.", "Mitigation Strategies": "Mitigation involves implementing strict input validation and sanitization, and using a web application firewall (WAF) to block malicious traffic.", "Recommendations": "We recommend implementing a comprehensive security strategy to address this vulnerability, including input validation, sanitization, and WAF deployment.", "Conclusions": "In conclusion, the vulnerability is a significant threat that requires prompt attention and mitigation."}}