{"id": "CVE-2009-3148", "sourceIdentifier": "cve@mitre.org", "published": "2009-09-10T18:30:00.297", "lastModified": "2017-09-19T01:29:28.937", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "Multiple SQL injection vulnerabilities in PortalXP Teacher Edition 1.2 allow remote attackers to execute arbitrary SQL commands via the id parameter to (1) calendar.php, (2) news.php, and (3) links.php; and the (4) assignment_id parameter to assignments.php."}, {"lang": "es", "value": "M\u00faltiples vulnerabilidades de inyecci\u00f3n SQL en PortalXP Teacher Edition v1.2 permite a atacantes remotos ejecutar comandos SQL arbitrarios a trav\u00e9s del par\u00e1metro \"id\" a (1) calendar.php, (2) news.php, y (3) links.php; (4) y el par\u00e1metro assignment_id  a assignments.php."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:portalxp:portalxp:1.2:*:teacher:*:*:*:*:*", "matchCriteriaId": "FB31A994-1773-49FA-9279-1282F511E0F4"}]}]}], "references": [{"url": "http://www.exploit-db.com/exploits/9325", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059", "comment": "CVE-2009-3148 - This technique is relevant because it demonstrates SQL injection vulnerability through a web application, allowing an attacker to execute arbitrary SQL commands. To defend against this, implement input validation and sanitization, ensure proper parameterization of database queries, and restrict database privileges."}, {"techniqueID": "T1068", "comment": "CVE-2009-3148 - This technique is relevant because it involves exploiting a web application vulnerability to gain unauthorized access to sensitive data. To defend against this, implement web application firewalls, monitor web traffic for suspicious activity, and conduct regular penetration testing and code reviews."}, {"techniqueID": "T1190", "comment": "CVE-2009-3148 - This technique is relevant because it involves exploiting a vulnerability in a web application to inject malicious code. To defend against this, implement secure coding practices, keep software up-to-date, and conduct regular security testing and training."}], "stix_bundle": {"type": "bundle", "spec_version": "2.1", "objects": [{"id": "vulnerability-1", "type": "vulnerability", "created_by_ref": "org.cyb3r.jak1r", "created": "2022-01-01T12:00:00.000", "modified": "2022-01-01T12:00:00.000", "name": "CVE-2009-3148", "description": {"lang": "en", "value": "PortalXP Teacher Edition 1.2 multiple SQL injection vulnerabilities"}, "references": [{"href": "http://www.exploit-db.com/exploits/9325", "name": "Exploit-DB"}], "impact": {"confidentiality": {"impact": "PARTIAL"}, "integrity": {"impact": "PARTIAL"}, "availability": {"impact": "PARTIAL"}}, "severity": "HIGH", "cvss_v2": {"vector_string": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "score": 7.5}, "attack_vector": {"type": "NETWORK"}}, {"id": "t1059", "type": "attack-pattern", "created_by_ref": "org.cyb3r.jak1r", "created": "2022-01-01T12:00:00.000", "modified": "2022-01-01T12:00:00.000", "name": "T1059: SQL Injection", "description": {"lang": "en", "value": "An attack where the attacker injects SQL code into a database to extract or manipulate data"}, "kill_chain_phases": [{"id": " reconnaissance", "name": "Reconnaissance", "phase_order": 1}, {"id": "initial-compromise", "name": "Initial Compromise", "phase_order": 2}]}, {"id": "t1068", "type": "attack-pattern", "created_by_ref": "org.cyb3r.jak1r", "created": "2022-01-01T12:00:00.000", "modified": "2022-01-01T12:00:00.000", "name": "T1068: Exploitation of Web Application Vulnerability", "description": {"lang": "en", "value": "An attack where an attacker exploits a vulnerability in a web application to gain unauthorized access"}, "kill_chain_phases": [{"id": "initial-compromise", "name": "Initial Compromise", "phase_order": 1}]}, {"id": "t1190", "type": "attack-pattern", "created_by_ref": "org.cyb3r.jak1r", "created": "2022-01-01T12:00:00.000", "modified": "2022-01-01T12:00:00.000", "name": "T1190: Exploitation of Command Injection Vulnerability", "description": {"lang": "en", "value": "An attack where an attacker exploits a command injection vulnerability to execute arbitrary system commands"}, "kill_chain_phases": [{"id": "initial-compromise", "name": "Initial Compromise", "phase_order": 1}]}], "relationship": [{"id": "vulnerability-1", "related_object_id": "t1059", "type": "exploited_by_attack_pattern"}, {"id": "vulnerability-1", "related_object_id": "t1068", "type": "exploited_by_attack_pattern"}, {"id": "vulnerability-1", "related_object_id": "t1190", "type": "exploited_by_attack_pattern"}]}, "technical_analysis": {"Introduction": "This vulnerability is a classic example of a SQL injection attack, where an attacker injects malicious SQL code into a database query through a web application.", "Impact and Scope": "The vulnerability allows an attacker to execute arbitrary SQL commands, which can result in the retrieval of sensitive data or the modification of data in the database.", "Related MITRE ATT&CK Techniques": "T1059, T1068, T1190", "Technical Details": "The vulnerability is caused by a lack of input validation and sanitization in the web application, allowing an attacker to inject malicious SQL code.", "Detection": "The vulnerability can be detected by monitoring web traffic for suspicious activity and conducting regular penetration testing.", "Mitigation": "The vulnerability can be mitigated by implementing input validation and sanitization, ensuring proper parameterization of database queries, and restricting database privileges.", "Conclusion": "In conclusion, this vulnerability is a critical finding that highlights the importance of secure coding practices and the need for regular security testing and training."}, "executive_analysis": {"Overview": "This vulnerability is a high-risk finding that poses a significant threat to the confidentiality, integrity, and availability of sensitive data.", "Business Impact": "The vulnerability could allow an attacker to steal sensitive data or disrupt business operations, resulting in significant financial losses and reputational damage.", "Technical Impact": "The vulnerability could allow an attacker to gain unauthorized access to sensitive data or systems, resulting in technical consequences such as data breaches or system downtime.", "Mitigation Strategies": "Implementing secure coding practices, conducting regular penetration testing, and restricting database privileges are effective mitigation strategies.", "Recommendations": "Executives should prioritize the identification and remediation of this vulnerability and ensure that all employees are trained on secure coding practices and data handling procedures.", "Conclusions": "In conclusion, this vulnerability is a critical finding that warrants immediate attention and action to mitigate its risks."}}