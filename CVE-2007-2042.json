{"id": "CVE-2007-2042", "sourceIdentifier": "cve@mitre.org", "published": "2007-04-16T22:19:00.000", "lastModified": "2011-03-08T02:53:25.313", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "Multiple PHP remote file inclusion vulnerabilities in the Avant-Garde Solutions MOSMedia Lite 1.0.6 and earlier module for Mambo allow remote attackers to execute arbitrary PHP code via a URL in the mosConfig_absolute_path parameter to (1) support.html.php or (2) info.html.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information."}, {"lang": "es", "value": "M\u00faltiples vulnerabilidades de inclusi\u00f3n remota de archivo en PHP en el m\u00f3dulo Avant-Garde Solutions MOSMedia Lite 1.0.6 y anteriores para Mambo permiten a atacantes remotos ejecutar c\u00f3digo PHP de su elecci\u00f3n mediante un URL en el par\u00e1metro mosConfig_absolute_path de (1) support.html.php o (2) info.html.php. NOTA: la procedencia de esta informaci\u00f3n es desconocida; los detalles se han obtenido exclusivamente de informaci\u00f3n de terceros."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-Other"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:avant-garde_solutions:mosmedia:1.0.6:*:lite:*:*:*:*:*", "matchCriteriaId": "6E6C77B4-5EE9-40A6-A1B8-3A2FCA66ED4F"}]}]}], "references": [{"url": "http://osvdb.org/37430", "source": "cve@mitre.org"}, {"url": "http://osvdb.org/37431", "source": "cve@mitre.org"}, {"url": "http://www.vupen.com/english/advisories/2007/1357", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2007-2042 - MOSMedia Lite's vulnerable code allows remote attackers to execute arbitrary PHP code in the context of the web server, which can lead to arbitrary file inclusion vulnerabilities. This technique can be used to execute arbitrary code on the target server."}, {"techniqueID": "T1191", "comment": "CVE-2007-2042 - The vulnerable PHP code in MOSMedia Lite can be used to execute arbitrary PHP code, allowing attackers to gather sensitive information or escalate privileges."}], "stix_bundle": {"bundle": {"id": "CVE-2007-2042-STIX-Bundle", "type": "bundle", "spec_version": "2.1", "bundle_type": "vulnerability_bundle", "objects": [{"id": "CVE-2007-2042", "type": "vulnerability", "name": "MOSMedia Lite Remote PHP File Inclusion Vulnerability", "description": [{"lang": "en", "value": "Multiple PHP remote file inclusion vulnerabilities in the Avant-Garde Solutions MOSMedia Lite 1.0.6 and earlier module for Mambo allow remote attackers to execute arbitrary PHP code via a URL in the mosConfig_absolute_path parameter to (1) support.html.php or (2) info.html.php."}], "severity": "medium", "cvssV2": {"vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "score": 6.8}, "malware": [], "network_traffic": [], "required_kill_chains": [{"id": "Required_Kill_Chain_1", "type": "kill_chain", "name": "Customer Kill Chain"}], "referred_by": [{"id": "Related_Indicator_1", "type": "indicator", "name": "Indicating the vulnerability"}]}, {"id": "T1190", "type": "attack-pattern", "name": "PHP Remote File Inclusion", "description": [{"lang": "en", "value": "An attack pattern in which an attacker injects malicious code into a PHP script by manipulating the include_path directive or a similar feature."}]}, {"id": "T1191", "type": "attack-pattern", "name": "PHP Code Injection", "description": [{"lang": "en", "value": "An attack pattern in which an attacker injects malicious PHP code into a web application, allowing the attacker to execute arbitrary code or gather sensitive information."}]}]}}, "technical_analysis": {"Introduction": "The MOSMedia Lite vulnerability allows remote attackers to execute arbitrary PHP code, leading to arbitrary file inclusion vulnerabilities.", "Impact and Scope": "The vulnerability can lead to unauthorized access, data theft, or system compromise.", "Related MITRE ATT&CK Techniques": "T1190: PHP Remote File Inclusion, T1191: PHP Code Injection", "Technical Details": "The vulnerability exists in the MOSMedia Lite module for Mambo, specifically in the mosConfig_absolute_path parameter.", "Detection": "Detect this vulnerability by monitoring network traffic for suspicious PHP code injection attempts.", "Mitigation": "Mitigate this vulnerability by implementing proper input validation and sanitization, as well as restricting access to sensitive areas.", "Conclusion": "This analysis highlights the importance of securing PHP applications and implementing robust security controls to prevent code injection attacks."}, "executive_analysis": {"Overview": "A vulnerability in MOSMedia Lite allows remote attackers to execute arbitrary PHP code, leading to unauthorized access and system compromise.", "Business Impact": "This vulnerability can lead to significant financial losses and damage to reputation.", "Technical Impact": "The vulnerability can allow attackers to gain unauthorized access, steal sensitive data, or compromise the system.", "Mitigation Strategies": "Implement proper input validation and sanitization, restrict access to sensitive areas, and monitor network traffic for suspicious activity.", "Recommendations": "Executives should prioritize securing PHP applications and implementing robust security controls to prevent code injection attacks.", "Conclusions": "This analysis highlights the importance of prioritizing security and implementing measures to prevent code injection attacks."}}