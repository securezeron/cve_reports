{"id": "CVE-2007-3544", "sourceIdentifier": "cve@mitre.org", "published": "2007-07-03T20:30:00.000", "lastModified": "2013-09-08T05:21:56.707", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "Unrestricted file upload vulnerability in (1) wp-app.php and (2) app.php in WordPress 2.2.1 and WordPress MU 1.2.3 allows remote authenticated users to upload and execute arbitrary PHP code via unspecified vectors, possibly related to the wp_postmeta table and the use of custom fields in normal (non-attachment) posts.  NOTE: this issue reportedly exists because of an incomplete fix for CVE-2007-3543."}, {"lang": "es", "value": "Vulnerabilidad e env\u00edo de archivo no restringido en (1) wp-app.php y (2) app.php de WordPresss 2.2.1 y WordPresss MU 1.2.3 permite a usuarios autenticados remotamente enviar y ejecutar c\u00f3digo PHP de su elecci\u00f3n a trav\u00e9s de vectores no especificados, posiblemente relacionados con la tabla wp_postmeta y el uso de campos personalizados en anotaciones (posts) normales (sin adjuntos)."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-Other"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.2.0", "matchCriteriaId": "3C80C0E7-DDB3-4BA4-866C-1C2ED8F4B012"}, {"vulnerable": true, "criteria": "cpe:2.3:a:wordpress:wordpress_mu:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.2.2", "matchCriteriaId": "8F1117E2-98ED-4215-BEAD-643BC6370C8F"}]}]}], "references": [{"url": "http://osvdb.org/37294", "source": "cve@mitre.org"}, {"url": "http://www.buayacorp.com/files/wordpress/wordpress-advisory.html", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1055", "comment": "Argument injection - Untrusted input validation vulnerability in (1) wp-app.php and (2) app.php in WordPress 2.2.1 and WordPress MU 1.2.3 allows remote authenticated users to upload and execute arbitrary PHP code via unspecified vectors, possibly related to the wp_postmeta table and the use of custom fields in normal (non-attachment) posts."}, {"techniqueID": "T1190", "comment": "Exploit publicly known vulnerabilities - The vulnerability can be exploited using a proof-of-concept (PoC) exploit to demonstrate the attack vector and demonstrate the vulnerability in action."}, {"techniqueID": "T1210", "comment": "Map current administrator credentials - The vulnerability allows remote authenticated users to upload and execute arbitrary PHP code, which can be used to map current administrator credentials and other sensitive information."}, {"techniqueID": "T1218", "comment": "File and path discovery - Unrestricted file upload vulnerability allows remote authenticated users to upload and execute arbitrary PHP code, which can be used to discover file and path information."}, {"techniqueID": "T1457", "comment": "Privileged account management - The vulnerability allows remote authenticated users to upload and execute arbitrary PHP code, which can be used to manage privileged accounts and gain elevated privileges."}, {"techniqueID": "T1547", "comment": "Command and Control: Standard/Tunnels - The vulnerability allows remote authenticated users to upload and execute arbitrary PHP code, which can be used to establish a command and control channel and tunnel traffic."}], "technical_analysis": {"Introduction": "The unauthenticated file upload vulnerability in WordPress 2.2.1 and WordPress MU 1.2.3 allows remote authenticated users to upload and execute arbitrary PHP code, which can be used to compromise the system and steal sensitive information.", "Impact and Scope": "The vulnerability affects WordPress 2.2.1 and WordPress MU 1.2.3, which are vulnerable to an unauthenticated file upload vulnerability allowing remote authenticated users to upload and execute arbitrary PHP code.", "Related MITRE ATT&CK Techniques": "T1055, T1190, T1210, T1218, T1457, T1547", "Technical Details": "The vulnerability exists due to untrusted input validation in (1) wp-app.php and (2) app.php, allowing remote authenticated users to upload and execute arbitrary PHP code.", "Detection": "Methods for detecting this vulnerability include searching for uploaded files with unknown or suspicious files, monitoring PHP code execution, and inspecting system logs for suspicious activity.", "Mitigation": "Mitigation strategies include keeping software up to date, scanning for and removing malicious files, and monitoring system logs and PHP code execution.", "Conclusion": "The unauthenticated file upload vulnerability in WordPress 2.2.1 and WordPress MU 1.2.3 is a serious threat to system security, and prompt action is required to ensure system integrity and prevent exploitation."}, "executive_analysis": {"Overview": "The unauthenticated file upload vulnerability in WordPress 2.2.1 and WordPress MU 1.2.3 poses a significant risk to system security, as it allows remote authenticated users to upload and execute arbitrary PHP code.", "Business Impact": "The vulnerability has business implications, as it can compromise sensitive data and financial information, and potentially disrupt system operations.", "Technical Impact": "The vulnerability can have technical implications, as it can compromise system integrity, compromise sensitive data, and potentially disrupt system operations.", "Mitigation Strategies": "Mitigation strategies include keeping software up to date, scanning for and removing malicious files, and monitoring system logs and PHP code execution.", "Recommendations": "Recommendations for executives include conducting regular security audits, implementing and enforcing strict security policies, and ensuring software is up to date and patched.", "Conclusions": "The unauthenticated file upload vulnerability in WordPress 2.2.1 and WordPress MU 1.2.3 requires immediate attention, as it poses a significant risk to system security, and prompt action is required to ensure system integrity and prevent exploitation."}}