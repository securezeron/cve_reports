{"id": "CVE-2007-0370", "sourceIdentifier": "cve@mitre.org", "published": "2007-01-19T23:28:00.000", "lastModified": "2017-10-19T01:29:59.427", "vulnStatus": "Modified", "cveTags": [], "descriptions": [{"lang": "en", "value": "Unrestricted file upload vulnerability in index.php in phpBP RC3 (2.204) and earlier allows remote administrators to inject arbitrary PHP code into an upload/banners/ file via a banners add operation that uploads the PHP code through an image_form parameter specifying a multiple-extension filename such as .jpg.vil.gif.php, which is stored in upload/banners/ under a different name, and executable via a direct request.  NOTE: a separate SQL injection issue could be leveraged to make this vulnerability reachable by remote unauthenticated attackers."}, {"lang": "es", "value": "Vulnerabilidad de actualizaci\u00f3n de fichero no restrictiva en index.php en phpBP RC3 (2.204) y anteriores permiten a administradores remotos inyectar c\u00f3digo PHP de su elecci\u00f3n dentro del archivo upload/banners/ a trav\u00e9s de la operaci\u00f3n de a\u00f1adido de banners que actualizan el c\u00f3digo PHP a trav\u00e9s del par\u00e1metro image_form especificando un nombre de archivo de m\u00faltiples extensiones tales como .jpg.vil.gif.php, el cual es almacenado en upload/banners/ bajo un nombre diferente, y ejecutable a trav\u00e9s de una respuesta directa. NOTA: el asunto de inyecci\u00f3n SQL separado podr\u00eda estar apalancado hace esta vulnerabilidad accesible a trav\u00e9s de atacantes remotos no validados."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-Other"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpbp:phpbp:rc3_2.204:*:*:*:*:*:*:*", "matchCriteriaId": "84F85867-77D4-4CC5-92BA-D85CDA3CDF5B"}]}]}], "references": [{"url": "http://osvdb.org/34762", "source": "cve@mitre.org"}, {"url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/31619", "source": "cve@mitre.org"}, {"url": "https://www.exploit-db.com/exploits/3153", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1059.005 - Command and Scripting Interpreter: PHP", "comment": "CVE-2007-0370: Unrestricted file upload vulnerability in phpBP, allowing remote administrators to inject arbitrary PHP code, which is stored in upload/banners/ and executable via a direct request. This technique is relevant as it exploits the vulnerability to inject malicious code."}, {"techniqueID": "T1210 - Exploitation of Remotely Accessible Interfaces: Web Interface", "comment": "CVE-2007-0370: phpBP's web interface allows remote attackers to upload files with arbitrary extensions, leading to a PHP code injection vulnerability. This technique is relevant as it exploits the vulnerability to inject malicious code."}, {"techniqueID": "T1062 - PowerShell/SHELL_CMD: Command Execution", "comment": "CVE-2007-0370: Successfully exploited, the injected PHP code can execute OS commands via shell_exec() function, allowing attackers to execute arbitrary commands. This technique is relevant as it demonstrates the potential use of the vulnerability for command execution."}], "stix_bundle": {"bundle": {"type": "bundle", "id": "CVE-2007-0370 Bundle", "created_by_ref": " https://stix \u0399\u03c9\u03b1\u03bd\u03bd\u03af\u03bd\u03c9\u03bd/idents/identity-VIEW", "created": "2023-02-16T14:30:00.000Z", "modified": "2023-02-16T14:30:00.000Z", "description": "Bundle created for CVE-2007-0370, containing relevant techniques, risks, and defense strategies.", "objects": [{"type": "vulnerability", "id": "CVE-2007-0370", "description": "Unrestricted file upload vulnerability in phpBP's index.php file, leading to PHP code injection.", "cvssv2": "7.5/AV:N/AC:L/Au:N/C:P/I:P/A:P"}, {"type": "attack-pattern", "id": "PHP Code Injection", "description": "An attack pattern exploiting the file upload vulnerability in phpBP's index.php file to inject PHP code.", "kill_chain_phase": "Delivery"}, {"type": "tactics", "id": " Phishing", "description": "A tactics used to deliver malicious files with arbitrary extensions."}, {"type": "indicator", "id": "Suspicious File Upload", "description": "An indicator detecting suspicious file uploads with arbitrary extensions."}], "relationships": [{"type": "used-by", "target_ref": "https://stix \u0399\u03c9\u03b1\u03bd\u03bd\u03af\u03bd\u03c9\u03bd/idents/identity-VIEW"}]}}, "technical_analysis": {"Introduction": "The vulnerability in phpBP's index.php file allows remote administrators to inject arbitrary PHP code, stored in upload/banners/ and executable via a direct request.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5, with an attack vector of Network, and it allows for partial confidentiality, integrity, and availability impact.", "Related MITRE ATT&CK Techniques": "T1059.005, T1210, and T1062 are relevant techniques related to the CVE.", "Technical Details": "The vulnerability is exploited by sending a request with a filename having a extension that is not valid for the server. The uploaded file is stored in upload/banners/ with a different name and executable via a direct request.", "Detection": "Detection of this vulnerability involves monitoring file uploads and checking for suspicious patterns, such as arbitrary extensions.", "Mitigation": "Mitigation involves restricting file uploads and validating file extensions, as well as implementing proper validation and sanitization of user input.", "Conclusion": "In conclusion, the vulnerability in phpBP's index.php file is a significant risk, and it is essential to implement proper safeguards to prevent exploitation."}, "executive_analysis": {"Overview": "The vulnerability in phpBP's index.php file allows remote administrators to inject arbitrary PHP code, stored in upload/banners/ and executable via a direct request.", "Business Impact": "The vulnerability has the potential to cause significant business disruption, loss of data, and damage to reputation.", "Technical Impact": "The vulnerability allows for partial confidentiality, integrity, and availability impact, and it can be exploited for command execution and other malicious activities.", "Mitigation Strategies": "Restricting file uploads, validating file extensions, and implementing proper validation and sanitization of user input are essential mitigation strategies.", "Recommendations": "Recommendations include patching vulnerable systems, implementing proper security configurations, and conducting regular security audits.", "Conclusions": "In conclusion, the vulnerability in phpBP's index.php file is a high-risk vulnerability, and it is essential to implement proper safeguards to prevent exploitation."}}