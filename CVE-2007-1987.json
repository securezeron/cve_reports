{"id": "CVE-2007-1987", "sourceIdentifier": "cve@mitre.org", "published": "2007-04-12T01:19:00.000", "lastModified": "2024-08-07T13:15:59.043", "vulnStatus": "Modified", "cveTags": [{"sourceIdentifier": "cve@mitre.org", "tags": ["disputed"]}], "descriptions": [{"lang": "en", "value": "Multiple PHP remote file inclusion vulnerabilities in PHPEcho CMS 2.0 allow remote attackers to execute arbitrary PHP code via a URL in the (1) _plugin_file parameter to smarty/internals/core.load_pulgins.php or the (2) root_path parameter to index.php.  NOTE: CVE disputes (1) because the inclusion occurs within a function that is not called during a direct request. CVE disputes (2) because root_path is defined in config.php before use"}, {"lang": "es", "value": "** IMPUGNADA ** M\u00faltiples vulnerabilidades de inclusi\u00f3n remota de archivo en PHP en PHPEcho CMS 2.0 permite a atacantes remotos ejecutar c\u00f3digo PHP de su elecci\u00f3n mediante una URL en el par\u00e1metro (1) _plugin_file a smarty/internals/core.load_pulgins.php o el par\u00e1metro (2) root_path a index.php. NOTA: CVE impugna (1) porque la inclusi\u00f3n ocurre dentro de una funci\u00f3n que no es llamada en una petici\u00f3n directa. CVE disputa (2) porque root_path es definida en config.php antes de usarse."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-Other"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpecho_cms:phpecho_cms:2.0:*:*:*:*:*:*:*", "matchCriteriaId": "92487C99-3E6C-47D4-9F2F-5F3BA0712074"}]}]}], "references": [{"url": "http://osvdb.org/34117", "source": "cve@mitre.org"}, {"url": "http://securityreason.com/securityalert/2551", "source": "cve@mitre.org"}, {"url": "http://www.securityfocus.com/archive/1/464709/100/0/threaded", "source": "cve@mitre.org"}], "techniques": [{"techniqueID": "T1190", "comment": "CVE-2007-1987 - This vulnerability allows remote attackers to execute arbitrary PHP code, which can lead to code injection attacks, making it a significant threat. Defending against this includes implementing secure coding practices, input validation, and sanitization, and regularly updating software to the latest version."}, {"techniqueID": "T1039", "comment": "CVE-2007-1987 - This vulnerability also allows remote attackers to include arbitrary PHP files, which can lead to remote code execution. This highlights the importance of secure coding practices, input validation, and sanitization, and regularly updating software to the latest version."}, {"techniqueID": "T1047", "comment": "CVE-2007-1987 - This vulnerability allows remote attackers to include arbitrary PHP files, which can lead to remote code execution. This highlights the importance of secure coding practices, input validation, and sanitization, and regularly updating software to the latest version."}], "stix_bundle": {"objects": [{"type": "vulnerability", "id": "CVE-2007-1987", "name": "PHPEcho CMS 2.0 Remote File Inclusion Vulnerability", "description": "Multiple PHP remote file inclusion vulnerabilities in PHPEcho CMS 2.0 allow remote attackers to execute arbitrary PHP code.", "vulnerability_types": ["Remote File Inclusion"], "cvss": {"v2": {"score": 7.5, "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"}}}, {"type": "technique", "id": "T1190", "name": "Exploit Public-Facing Application", "description": "exploit publicly-facing application layer vulnerabilities to access local resources", "related_to": {"type": "vulnerability", "id": "CVE-2007-1987", "relationship": "CVE"}}, {"type": "technique", "id": "T1039", "name": "Other Eligible Code Search", "description": "search for other code that is eligible for execution by the vulnerability", "related_to": {"type": "vulnerability", "id": "CVE-2007-1987", "relationship": "CVE"}}, {"type": "technique", "id": "T1047", "name": "Web Shell", "description": "use a web shell to interact with the victim's system", "related_to": {"type": "vulnerability", "id": "CVE-2007-1987", "relationship": "CVE"}}]}, "technical_analysis": {"Introduction": "PHPEcho CMS 2.0 suffers from multiple remote file inclusion vulnerabilities, which can lead to remote code execution.", "Impact and Scope": "The vulnerability has a CVSS score of 7.5, making it a high-risk vulnerability. The attack vector is network, and it requires no authentication.", "Related MITRE ATT&CK Techniques": "T1190, T1039, T1047", "Technical Details": "The vulnerability resides in the _plugin_file and root_path parameters in the PHP code.", "Detection": "Detection of this vulnerability can be done by monitoring for unusual network traffic, and by conducting regular vulnerability scans.", "Mitigation": "Mitigating this vulnerability requires implementing secure coding practices, input validation, and sanitization, and regularly updating software to the latest version.", "Conclusion": "This vulnerability highlights the importance of secure coding practices, input validation, and sanitization, and regularly updating software to the latest version."}, "executive_analysis": {"Overview": "PHPEcho CMS 2.0 suffers from multiple remote file inclusion vulnerabilities, which can lead to remote code execution.", "Business Impact": "This vulnerability can lead to data breaches, unauthorized access, and financial loss.", "Technical Impact": "This vulnerability can lead to remote code execution, which can result in data breaches, unauthorized access, and financial loss.", "Mitigation Strategies": "Implementing secure coding practices, input validation, and sanitization, and regularly updating software to the latest version.", "Recommendations": "Regularly updating software to the latest version, conducting regular vulnerability scans, and monitoring for unusual network traffic.", "Conclusions": "This vulnerability highlights the importance of implementing secure coding practices, input validation, and sanitization, and regularly updating software to the latest version."}}